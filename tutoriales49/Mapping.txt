ClassDiagram.Class>> Comment =>=>=> RelationalSchema.Table>> comment;
ClassDiagram.Class>> Post =>=>=> RelationalSchema.Table>> post;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> Company =>=>=> RelationalSchema.Table>> company;
ClassDiagram.Class>> Fruit =>=>=> RelationalSchema.Table>> fruit;
ClassDiagram.Class>> Passenger =>=>=> RelationalSchema.Table>> passenger;
ClassDiagram.Class>> Song =>=>=> RelationalSchema.Table>> song;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Car =>=>=> RelationalSchema.Table>> car;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Phone =>=>=> RelationalSchema.Table>> phone;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Characteristic =>=>=> RelationalSchema.Table>> characteristic;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Attribut>> Comment.id:Integer =>=>=> RelationalSchema.Column>> comment.id PRIMARY KEY;
ClassDiagram.Attribut>> Comment.year:Integer =>=>=> RelationalSchema.Column>> comment.year;
ClassDiagram.Attribut>> Comment.approved:boolean =>=>=> RelationalSchema.Column>> comment.approved;
ClassDiagram.Attribut>> Comment.content:String =>=>=> RelationalSchema.Column>> comment.content;
ClassDiagram.Attribut>> Post.id:Integer =>=>=> RelationalSchema.Column>> post.id PRIMARY KEY;
ClassDiagram.Attribut>> Post.title:String =>=>=> RelationalSchema.Column>> post.title;
ClassDiagram.Attribut>> Post.content:String =>=>=> RelationalSchema.Column>> post.content;
ClassDiagram.Attribut>> Address.id:Long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.street:String =>=>=> RelationalSchema.Column>> address.street;
ClassDiagram.Attribut>> Address.zipcode:String =>=>=> RelationalSchema.Column>> address.zipcode;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Category.id:Long =>=>=> RelationalSchema.Column>> category.id PRIMARY KEY;
ClassDiagram.Attribut>> Category.name:String =>=>=> RelationalSchema.Column>> category.name;
ClassDiagram.Attribut>> Book.id:Long =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.title:String =>=>=> RelationalSchema.Column>> book.title;
ClassDiagram.Attribut>> Company.id:Integer =>=>=> RelationalSchema.Column>> company.id PRIMARY KEY;
ClassDiagram.Attribut>> Company.name:String =>=>=> RelationalSchema.Column>> company.name;
ClassDiagram.Attribut>> Company.address:String =>=>=> RelationalSchema.Column>> company.address;
ClassDiagram.Attribut>> Company.phone:String =>=>=> RelationalSchema.Column>> company.phone;
ClassDiagram.Attribut>> Company.GeneratedName:ContactPerson =>=>=> RelationalSchema.Column>> company.GeneratedName;
ClassDiagram.Attribut>> Fruit.id:long =>=>=> RelationalSchema.Column>> fruit.id PRIMARY KEY;
ClassDiagram.Attribut>> Fruit.name:String =>=>=> RelationalSchema.Column>> fruit.name;
ClassDiagram.Attribut>> Fruit.color:String =>=>=> RelationalSchema.Column>> fruit.color;
ClassDiagram.Attribut>> Passenger.id:Long =>=>=> RelationalSchema.Column>> passenger.id PRIMARY KEY;
ClassDiagram.Attribut>> Passenger.firstname:String =>=>=> RelationalSchema.Column>> passenger.firstname;
ClassDiagram.Attribut>> Passenger.lastname:String =>=>=> RelationalSchema.Column>> passenger.lastname;
ClassDiagram.Attribut>> Song.id:long =>=>=> RelationalSchema.Column>> song.id PRIMARY KEY;
ClassDiagram.Attribut>> Song.name:String =>=>=> RelationalSchema.Column>> song.name;
ClassDiagram.Attribut>> Song.lengthinseconds:int =>=>=> RelationalSchema.Column>> song.lengthinseconds;
ClassDiagram.Attribut>> Song.compositor:String =>=>=> RelationalSchema.Column>> song.compositor;
ClassDiagram.Attribut>> Song.singer:String =>=>=> RelationalSchema.Column>> song.singer;
ClassDiagram.Attribut>> Song.released:LocalDateTime =>=>=> RelationalSchema.Column>> song.released;
ClassDiagram.Attribut>> Song.genre:String =>=>=> RelationalSchema.Column>> song.genre;
ClassDiagram.Attribut>> Customer.id:long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.email:String =>=>=> RelationalSchema.Column>> customer.email;
ClassDiagram.Attribut>> Car.id:int =>=>=> RelationalSchema.Column>> car.id PRIMARY KEY;
ClassDiagram.Attribut>> Car.power:Integer =>=>=> RelationalSchema.Column>> car.power;
ClassDiagram.Attribut>> Car.model:String =>=>=> RelationalSchema.Column>> car.model;
ClassDiagram.Attribut>> Employee.id:long =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.age:int =>=>=> RelationalSchema.Column>> employee.age;
ClassDiagram.Attribut>> Phone.id:long =>=>=> RelationalSchema.Column>> phone.id PRIMARY KEY;
ClassDiagram.Attribut>> Phone.number:String =>=>=> RelationalSchema.Column>> phone.number;
ClassDiagram.Attribut>> Department.id:long =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> Characteristic.id:Long =>=>=> RelationalSchema.Column>> characteristic.id PRIMARY KEY;
ClassDiagram.Attribut>> Characteristic.type:String =>=>=> RelationalSchema.Column>> characteristic.type;
ClassDiagram.Attribut>> Item.id:Long =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.name:String =>=>=> RelationalSchema.Column>> item.name;
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>Post represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Post  to ClassDiagram.Class>>List<Comment>;
One-To-One relationship between ClassDiagram.Class>>Address  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>Address represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>List<Book>;
Many-To-One relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>department represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>List<Phone>;
Many-To-One relationship from ClassDiagram.Class>>Phone  to ClassDiagram.Class>>employee represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>List<Employee>;
Many-To-One relationship from ClassDiagram.Class>>Characteristic  to ClassDiagram.Class>>item represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Item  to ClassDiagram.Class>>List<Characteristic>;
