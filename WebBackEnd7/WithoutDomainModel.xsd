<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="firstlevelcache" >
      <xs:sequence>
        <xs:element name="log" type="enversmessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="cache" type="xs:anyType" />
        <xs:element name="entitynamecache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditreaderimplementor" >
      <xs:complexContent>
       <xs:extension base="auditreader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crosstyperevisionchangesreaderimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="auditreaderimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="enversservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditreaderimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="enversservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="firstlevelcache" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="crosstyperevisionchangesreader" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertydata" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="/***nameofthepropertyinthebean.*/beanname" type="xs:string" />
        <xs:element name="accesstype" type="xs:string" />
        <xs:element name="store" type="modificationstore" nillable="true" minOccurs="0" />
        <xs:element name="usingmodifiedflag" type="xs:anyType" />
        <xs:element name="modifiedflagname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitiesconfigurations" >
      <xs:sequence>
        <xs:element name="entitiesconfigurations" type="xs:anyType" />
        <xs:element name="notauditedentitiesconfigurations" type="xs:anyType" />
        <xs:element name="entitynamesforversionsentitynames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationdescription" >
      <xs:sequence>
        <xs:element name="frompropertyname" type="xs:string" />
        <xs:element name="GeneratedName" type="relationtype" nillable="true" minOccurs="0" />
        <xs:element name="toentityname" type="xs:string" />
        <xs:element name="mappedbypropertyname" type="xs:string" />
        <xs:element name="ignorenotfound" type="xs:anyType" />
        <xs:element name="GeneratedName" type="idmapper" nillable="true" minOccurs="0" />
        <xs:element name="fakebidirectionalrelationmapper" type="propertymapper" nillable="true" minOccurs="0" />
        <xs:element name="fakebidirectionalrelationindexmapper" type="propertymapper" nillable="true" minOccurs="0" />
        <xs:element name="insertable" type="xs:anyType" />
        <xs:element name="bidirectional" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisiontypetype" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="sql_types" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idmappingdata" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="idmapper" nillable="true" minOccurs="0" />
        <xs:element name="//mappingwhichwillbeusedtogeneratetheentityxmlmapping" type="xs:anyType" />
        <xs:element name="//mappingwhichwillbeusedtogeneratereferencestotheentityinrelatedentitiesxmlrelationmapping" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityconfiguration" >
      <xs:sequence>
        <xs:element name="versionsentityname" type="xs:string" />
        <xs:element name="/***holdstheclassnameforinstantiationtheconfiguredentity*/entityclassname" type="xs:string" />
        <xs:element name="GeneratedName" type="idmappingdata" nillable="true" minOccurs="0" />
        <xs:element name="propertymapper" type="extendedpropertymapper" nillable="true" minOccurs="0" />
        <xs:element name="relations" type="xs:anyType" />
        <xs:element name="parententityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentpropertymapper" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="delegate" type="multipropertymapper" nillable="true" minOccurs="0" />
        <xs:element name="component" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipropertymapper" >
      <xs:sequence>
        <xs:element name="properties" type="xs:anyType" />
        <xs:element name="propertydatas" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singlepropertymapper" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertydata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclasspropertymapper" >
      <xs:sequence>
        <xs:element name="main" type="extendedpropertymapper" nillable="true" minOccurs="0" />
        <xs:element name="parentmapper" type="extendedpropertymapper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositemapperbuilder" >
      <xs:complexContent>
       <xs:extension base="simplemapperbuilder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplemapperbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedidmapper" >
      <xs:complexContent>
       <xs:extension base="abstractcompositeidmapper">
         <xs:sequence>
          <xs:element name="id" type="propertydata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singleidmapper" >
      <xs:complexContent>
       <xs:extension base="abstractidmapper">
         <xs:sequence>
          <xs:element name="" type="propertydata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleidmapperbuilder" >
      <xs:complexContent>
       <xs:extension base="idmapper,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryparameterdata" >
      <xs:sequence>
        <xs:element name="flatentitypropertyname" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcompositeidmapper" >
      <xs:complexContent>
       <xs:extension base="abstractidmapper">
         <xs:sequence>
          <xs:element name="compositeid" type="xs:anyType" />
          <xs:element name="ids" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractidmapper" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipleidmapper" >
      <xs:complexContent>
       <xs:extension base="abstractcompositeidmapper">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="extendedpropertymapper" >
      <xs:complexContent>
       <xs:extension base="propertymapper,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentcollectionchangedata" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="data" type="xs:anyType" />
        <xs:element name="changedelement" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortedsetcollectionmapper" >
      <xs:complexContent>
       <xs:extension base="basiccollectionmapper<sortedset>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonenotowningmapper" >
      <xs:complexContent>
       <xs:extension base="abstractonetoonemapper">
         <xs:sequence>
          <xs:element name="owningreferencepropertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapcollectionmapper" >
      <xs:complexContent>
       <xs:extension base="map>">
         <xs:sequence>
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
          <xs:element name="indexcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="toonedelegatesessionimplementor" >
      <xs:complexContent>
       <xs:extension base="abstractdelegatesessionimplementor">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="versionsreader" type="auditreaderimplementor" nillable="true" minOccurs="0" />
          <xs:element name="entityclass" type="xs:anyType" />
          <xs:element name="entityid" type="xs:anyType" />
          <xs:element name="revision" type="xs:anyType" />
          <xs:element name="removed" type="xs:anyType" />
          <xs:element name="" type="enversservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listcollectioninitializor" >
      <xs:complexContent>
       <xs:extension base="abstractcollectioninitializor<list>">
         <xs:sequence>
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
          <xs:element name="indexcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapcollectioninitializor" >
      <xs:complexContent>
       <xs:extension base="map>">
         <xs:sequence>
          <xs:element name="collectionclass" type="xs:anyType" />
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
          <xs:element name="indexcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="initializor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortedmapcollectioninitializor" >
      <xs:complexContent>
       <xs:extension base="mapcollectioninitializor<sortedmap>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcollectioninitializor" >
      <xs:sequence>
        <xs:element name="versionsreader" type="auditreaderimplementor" nillable="true" minOccurs="0" />
        <xs:element name="querygenerator" type="relationquerygenerator" nillable="true" minOccurs="0" />
        <xs:element name="primarykey" type="xs:anyType" />
        <xs:element name="revision" type="xs:anyType" />
        <xs:element name="removed" type="xs:anyType" />
        <xs:element name="GeneratedName" type="entityinstantiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortedsetcollectioninitializor" >
      <xs:complexContent>
       <xs:extension base="basiccollectioninitializor<sortedset>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiccollectioninitializor" >
      <xs:complexContent>
       <xs:extension base="collection>">
         <xs:sequence>
          <xs:element name="collectionclass" type="xs:anyType" />
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraycollectioninitializor" >
      <xs:complexContent>
       <xs:extension base="abstractcollectioninitializor<object[]>">
         <xs:sequence>
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
          <xs:element name="indexcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractdelegatesessionimplementor" >
      <xs:complexContent>
       <xs:extension base="sessiondelegatorbaseimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionproxy" >
      <xs:complexContent>
       <xs:extension base="collection<u>>">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="transientinitializor" type="xs:anyType" />
          <xs:element name="delegae" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortedmapproxy" >
      <xs:complexContent>
       <xs:extension base="k,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="initializor" type="xs:anyType" />
          <xs:element name="delegate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapproxy" >
      <xs:complexContent>
       <xs:extension base="k,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="initializor" type="xs:anyType" />
          <xs:element name="delegate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortedsetproxy" >
      <xs:complexContent>
       <xs:extension base="collectionproxy<u,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setproxy" >
      <xs:complexContent>
       <xs:extension base="collectionproxy<u,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listproxy" >
      <xs:complexContent>
       <xs:extension base="collectionproxy<u,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="middlecomponentdata" >
      <xs:sequence>
        <xs:element name="componentmapper" type="middlecomponentmapper" nillable="true" minOccurs="0" />
        <xs:element name="componentindex" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listcollectionmapper" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionmapper<list>">
         <xs:sequence>
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
          <xs:element name="indexcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tooneentityloader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortedmapcollectionmapper" >
      <xs:complexContent>
       <xs:extension base="mapcollectionmapper<sortedmap>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttoonemapper" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="propertydata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcollectionmapper" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
          <xs:element name="" type="commoncollectionmapperdata" nillable="true" minOccurs="0" />
          <xs:element name="collectionclass" type="xs:anyType" />
          <xs:element name="ordinalinid" type="xs:anyType" />
          <xs:element name="revisiontypeinid" type="xs:anyType" />
          <xs:element name="proxyconstructor" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="middlecomponentmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middlestraightcomponentmapper" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middleembeddablecomponentmapper" >
      <xs:sequence>
        <xs:element name="delegate" type="multipropertymapper" nillable="true" minOccurs="0" />
        <xs:element name="component" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middlemapkeypropertycomponentmapper" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="accesstype" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middlemapkeyidcomponentmapper" >
      <xs:sequence>
        <xs:element name="verentcfg" type="auditentitiesconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="related" type="idmapper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middledummycomponentmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middlerelatedcomponentmapper" >
      <xs:sequence>
        <xs:element name="relatediddata" type="middleiddata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middlesimplecomponentmapper" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="verentcfg" type="auditentitiesconfiguration" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basiccollectionmapper" >
      <xs:complexContent>
       <xs:extension base="collection>">
         <xs:sequence>
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tooneidmapper" >
      <xs:complexContent>
       <xs:extension base="abstracttoonemapper">
         <xs:sequence>
          <xs:element name="delegate" type="idmapper" nillable="true" minOccurs="0" />
          <xs:element name="referencedentityname" type="xs:string" />
          <xs:element name="noninsertablefake" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="middleiddata" >
      <xs:sequence>
        <xs:element name="originalmapper" type="idmapper" nillable="true" minOccurs="0" />
        <xs:element name="prefixedmapper" type="idmapper" nillable="true" minOccurs="0" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="auditentityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commoncollectionmapperdata" >
      <xs:sequence>
        <xs:element name="verentcfg" type="auditentitiesconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="versionsmiddleentityname" type="xs:string" />
        <xs:element name="collectionreferencing" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="referencingiddata" type="middleiddata" nillable="true" minOccurs="0" />
        <xs:element name="querygenerator" type="relationquerygenerator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractonetoonemapper" >
      <xs:complexContent>
       <xs:extension base="abstracttoonemapper">
         <xs:sequence>
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="referencedentityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryconstants" >
      <xs:sequence>
        <xs:element name="referenced_entity_alias" type="xs:string" />
        <xs:element name="referenced_entity_alias_def_aud_str" type="xs:string" />
        <xs:element name="index_entity_alias" type="xs:string" />
        <xs:element name="index_entity_alias_def_aud_str" type="xs:string" />
        <xs:element name="middle_entity_alias" type="xs:string" />
        <xs:element name="middle_entity_alias_def_aud_str" type="xs:string" />
        <xs:element name="revision_parameter" type="xs:string" />
        <xs:element name="del_revision_type_parameter" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="twoentityoneauditedquerygenerator" >
      <xs:complexContent>
       <xs:extension base="abstractrelationquerygenerator">
         <xs:sequence>
          <xs:element name="query" type="xs:string" />
          <xs:element name="queryremoved" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="twoentityquerygenerator" >
      <xs:complexContent>
       <xs:extension base="abstractrelationquerygenerator">
         <xs:sequence>
          <xs:element name="query" type="xs:string" />
          <xs:element name="queryremoved" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractrelationquerygenerator" >
      <xs:sequence>
        <xs:element name="verentcfg" type="auditentitiesconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="referencingiddata" type="middleiddata" nillable="true" minOccurs="0" />
        <xs:element name="revisiontypeinid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oneentityquerygenerator" >
      <xs:complexContent>
       <xs:extension base="abstractrelationquerygenerator">
         <xs:sequence>
          <xs:element name="query" type="xs:string" />
          <xs:element name="queryremoved" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threeentityquerygenerator" >
      <xs:complexContent>
       <xs:extension base="abstractrelationquerygenerator">
         <xs:sequence>
          <xs:element name="query" type="xs:string" />
          <xs:element name="queryremoved" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationquerygenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oneauditentityquerygenerator" >
      <xs:complexContent>
       <xs:extension base="abstractrelationquerygenerator">
         <xs:sequence>
          <xs:element name="query" type="xs:string" />
          <xs:element name="queryremoved" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetooneprimarykeyjoincolumnmapper" >
      <xs:complexContent>
       <xs:extension base="abstractonetoonemapper">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multidynamiccomponentmapper" >
      <xs:complexContent>
       <xs:extension base="multipropertymapper">
         <xs:sequence>
          <xs:element name="dynamiccomponentdata" type="propertydata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityinstantiator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="enversservice" nillable="true" minOccurs="0" />
        <xs:element name="versionsreader" type="auditreaderimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enverslogging" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingtools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitytools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameters" >
      <xs:sequence>
        <xs:element name="and" type="xs:string" />
        <xs:element name="or" type="xs:string" />
        <xs:element name="/***mainaliasoftheentity.*/alias" type="xs:string" />
        <xs:element name="/***connectivebetweentheseparameters-"and"or"or".*/connective" type="xs:string" />
        <xs:element name="/***forusebytheparametergenerator.mustbethesameinall"child"(andparent)parameters.*/queryparamcounter" type="mutableinteger" nillable="true" minOccurs="0" />
        <xs:element name="/***alistofsub-parameters(parameterswithadifferentconnective).*/subparameters" type="parameters" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***alistofnegatedparameters.*/negatedparameters" type="parameters" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***alistofcompletewhere-expressions.*/expressions" type="xs:anyType" />
        <xs:element name="localqueryparamvalues" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatebuilder" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="paramcounter" type="mutableinteger" nillable="true" minOccurs="0" />
        <xs:element name="root" type="parameters" nillable="true" minOccurs="0" />
        <xs:element name="updates" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querybuilder" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="/***forusebyaliasgenerator(incaseanaliasisnotprovidedbytheuser).*/aliascounter" type="mutableinteger" nillable="true" minOccurs="0" />
        <xs:element name="/***forusebyparametergenerator,in{@linkparameters}.thiscountermustbe*thesameinallparametersandsub-queriesofthisquery.*/paramcounter" type="mutableinteger" nillable="true" minOccurs="0" />
        <xs:element name="/***main"where"forthisquery.*/root" type="parameters" nillable="true" minOccurs="0" />
        <xs:element name="froms" type="xs:anyType" />
        <xs:element name="orders" type="xs:anyType" />
        <xs:element name="/***alistofcompleteprojectiondefinitions:eitherasolepropertyname,orafunction(propertyname).*/projections" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapproxytool" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="triple" >
      <xs:sequence>
        <xs:element name="obj1" type="xs:anyType" />
        <xs:element name="obj2" type="xs:anyType" />
        <xs:element name="obj3" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="graphtopologicalsort" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vertex" >
      <xs:sequence>
        <xs:element name="epesentation" type="xs:anyType" />
        <xs:element name="neighbours" type="xs:anyType" />
        <xs:element name="starttime" type="xs:long" />
        <xs:element name="endtime" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="graphdefiner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="topologicalsort" >
      <xs:sequence>
        <xs:element name="sorted" type="xs:anyType" />
        <xs:element name="time" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflectiontools" >
      <xs:sequence>
        <xs:element name="getter_cache" type="xs:anyType" />
        <xs:element name="setter_cache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringtools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="argumentstools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutableboolean" >
      <xs:sequence>
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutableinteger" >
      <xs:sequence>
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arraystools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisioninfogenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modifiedentitynamesreader" >
      <xs:sequence>
        <xs:element name="modifiedentitynames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaulttrackingmodifiedentitiesrevisioninfogenerator" >
      <xs:complexContent>
       <xs:extension base="defaultrevisioninfogenerator">
         <xs:sequence>
          <xs:element name="modifiedentitynames" type="xs:anyType" />
          <xs:element name="modifiedentitynames" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="revisioninfoquerycreator" >
      <xs:sequence>
        <xs:element name="revisioninfoentityname" type="xs:string" />
        <xs:element name="revisioninfoidname" type="xs:string" />
        <xs:element name="revisioninfotimestampname" type="xs:string" />
        <xs:element name="timestampasdate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisioninfonumberreader" >
      <xs:sequence>
        <xs:element name="revisionid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultrevisioninfogenerator" >
      <xs:complexContent>
       <xs:extension base="revisionlistener>">
         <xs:sequence>
          <xs:element name="revisioninfoentityname" type="xs:string" />
          <xs:element name="listener" type="revisionlistener" nillable="true" minOccurs="0" />
          <xs:element name="revisiontimestamp" type="xs:anyType" />
          <xs:element name="timestampasdate" type="xs:anyType" />
          <xs:element name="revisioninfoclass" type="xs:anyType" />
          <xs:element name="" type="sessioncachecleaner" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessioncachecleaner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitychangenotifier" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="revisioninfogenerator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditprocessmanager" >
      <xs:sequence>
        <xs:element name="auditprocesses" type="xs:anyType" />
        <xs:element name="GeneratedName" type="revisioninfogenerator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditprocess" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="GeneratedName" type="revisioninfogenerator" nillable="true" minOccurs="0" />
        <xs:element name="session" type="xs:anyType" />
        <xs:element name="workunits" type="auditworkunit" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="undoqueue" type="auditworkunit" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="usedids" type="xs:anyType" />
        <xs:element name="GeneratedName" type="entitychangenotifier" nillable="true" minOccurs="0" />
        <xs:element name="revisiondata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workunitmergedispatcher" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentcollectionchangeworkunit" >
      <xs:complexContent>
       <xs:extension base="abstractauditworkunit">
         <xs:sequence>
          <xs:element name="collectionchanges" type="persistentcollectionchangedata" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="referencingpropertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="workunitmergevisitor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addworkunit" >
      <xs:complexContent>
       <xs:extension base="abstractauditworkunit">
         <xs:sequence>
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="data" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionchangeworkunit" >
      <xs:complexContent>
       <xs:extension base="abstractauditworkunit">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="collectionpropertyname" type="xs:string" />
          <xs:element name="data" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="modworkunit" >
      <xs:complexContent>
       <xs:extension base="abstractauditworkunit">
         <xs:sequence>
          <xs:element name="data" type="xs:anyType" />
          <xs:element name="changes" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="oldstate" type="xs:anyType" />
          <xs:element name="newstate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractauditworkunit" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="enversservice" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="GeneratedName" type="auditstrategy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="revisiontype" nillable="true" minOccurs="0" />
        <xs:element name="performeddata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fakebidirectionalrelationworkunit" >
      <xs:complexContent>
       <xs:extension base="abstractauditworkunit">
         <xs:sequence>
          <xs:element name="fakerelationchanges" type="xs:anyType" />
          <xs:element name="/*	*theworkunitresponsibleforgeneratingthe"raw"entitydatatobesaved.	*/nestedworkunit" type="auditworkunit" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="delworkunit" >
      <xs:complexContent>
       <xs:extension base="abstractauditworkunit">
         <xs:sequence>
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="propertynames" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditworkunit" >
      <xs:complexContent>
       <xs:extension base="workunitmergevisitor,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enversmessagelogger" >
      <xs:complexContent>
       <xs:extension base="basiclogger">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="revisionnumber" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditmappedby" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceidtrackingmodifiedentitiesrevisionentity" >
      <xs:complexContent>
       <xs:extension base="sequenceidrevisionentity">
         <xs:sequence>
          <xs:element name="modifiedentitynames" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderedsequencegenerator" >
      <xs:complexContent>
       <xs:extension base="sequencestylegenerator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequenceidrevisionentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notaudited" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultrevisionentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisiontimestamp" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modifiedentitynames" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="audited" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pair" >
      <xs:sequence>
        <xs:element name="obj1" type="xs:anyType" />
        <xs:element name="obj2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="audittable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditoverride" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitiesatrevisionquery" >
      <xs:complexContent>
       <xs:extension base="abstractauditquery">
         <xs:sequence>
          <xs:element name="revision" type="xs:anyType" />
          <xs:element name="includedeletions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractauditquery" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="entityinstantiator" nillable="true" minOccurs="0" />
        <xs:element name="criterions" type="auditcriterion" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="entityclassname" type="xs:string" />
        <xs:element name="versionsentityname" type="xs:string" />
        <xs:element name="qb" type="querybuilder" nillable="true" minOccurs="0" />
        <xs:element name="hasprojection" type="xs:anyType" />
        <xs:element name="hasorder" type="xs:anyType" />
        <xs:element name="GeneratedName" type="enversservice" nillable="true" minOccurs="0" />
        <xs:element name="versionsreader" type="auditreaderimplementor" nillable="true" minOccurs="0" />
        <xs:element name="//querypropertiesmaxresults" type="xs:anyType" />
        <xs:element name="firstresult" type="xs:anyType" />
        <xs:element name="cacheable" type="xs:anyType" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="timeout" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitiesmodifiedatrevisionquery" >
      <xs:complexContent>
       <xs:extension base="abstractauditquery">
         <xs:sequence>
          <xs:element name="revision" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="revisionsofentityquery" >
      <xs:complexContent>
       <xs:extension base="abstractauditquery">
         <xs:sequence>
          <xs:element name="selectentitiesonly" type="xs:anyType" />
          <xs:element name="selectdeletedentities" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitypropertyname" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisionpropertypropertyname" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertynamegetter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modifiedflagpropertyname" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisionnumberpropertyname" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisiontypepropertyname" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="originalidpropertyname" >
      <xs:sequence>
        <xs:element name="idpropertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyauditprojection" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="function" type="xs:string" />
        <xs:element name="distinct" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditquerycreator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="enversservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="auditreaderimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditquery" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyauditorder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="asc" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditorder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extendablecriterion" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditcriterion" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditconjunction" >
      <xs:sequence>
        <xs:element name="criterions" type="auditcriterion" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditdisjunction" >
      <xs:sequence>
        <xs:element name="criterions" type="auditcriterion" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregatedauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="//correlatesubquerywithouterquerybyentityid.correlate" type="xs:anyType" />
        <xs:element name="criterions" type="auditcriterion" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditrelatedid" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditproperty" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="logicalauditexpression" >
      <xs:sequence>
        <xs:element name="lhs" type="auditcriterion" nillable="true" minOccurs="0" />
        <xs:element name="rhs" type="auditcriterion" nillable="true" minOccurs="0" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relatedauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="equals" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notnullauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="values" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ilikeauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="otherpropertyname" type="xs:string" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiereqauditexpression" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="equals" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriatools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="betweenauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="lo" type="xs:anyType" />
        <xs:element name="hi" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notauditexpression" >
      <xs:sequence>
        <xs:element name="criterion" type="auditcriterion" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisiontypeauditexpression" >
      <xs:sequence>
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditid" >
      <xs:complexContent>
       <xs:extension base="auditproperty<t>">
         <xs:sequence>
          <xs:element name="identifier_placeholder" type="xs:string" />
          <xs:element name="identifier_property_getter" type="propertynamegetter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="revisionlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitytrackingrevisionlistener" >
      <xs:complexContent>
       <xs:extension base="revisionlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditjointable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modificationstore" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enversserviceimpl" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="legacy_auto_register" type="xs:string" />
        <xs:element name="integrationenabled" type="xs:anyType" />
        <xs:element name="initialized" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="//todo:notatallafanofallthese...//1),auditentitiesconfigurationandauditstrategyare//all"configuration"objects.theyseemunnecessarilysplitapartfrom//eachother.why3?whynotjustone?//2)auditprocessmanagerisaglorifiedmapofauditprocessinstances(beforetransactioncompletionprocess)//keyedbytransaction(session)//3)makesurethattheinfokepthereisallreallyneededatruntime,andnotjustat//"mappingtime"" type="globalconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="auditentitiesconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="auditprocessmanager" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="auditstrategy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitiesconfigurations" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="revisioninfoquerycreator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="revisioninfonumberreader" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="modifiedentitynamesreader" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enversservicecontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="additionaljaxbmappingproducerimpl" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enversserviceinitiator" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="enversserviceinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typecontributorimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enversservice" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
          <xs:element name="/***thenameoftheconfigurationsettingusedtocontrolwhethertheenversintegration*isenabled.defaultistrue*/integration_enabled" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enversintegrator" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="auto_register" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingcollector" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicmetadatagenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditmetadatagenerator" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="log" type="enversmessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="globalcfg" type="globalconfiguration" nillable="true" minOccurs="0" />
          <xs:element name="verentcfg" type="auditentitiesconfiguration" nillable="true" minOccurs="0" />
          <xs:element name="" type="auditstrategy" nillable="true" minOccurs="0" />
          <xs:element name="revisioninforelationmapping" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="/*	*generatorsfordifferentkindsofpropertyvalues/types.	*/" type="basicmetadatagenerator" nillable="true" minOccurs="0" />
          <xs:element name="" type="componentmetadatagenerator" nillable="true" minOccurs="0" />
          <xs:element name="" type="idmetadatagenerator" nillable="true" minOccurs="0" />
          <xs:element name="" type="toonerelationmetadatagenerator" nillable="true" minOccurs="0" />
          <xs:element name="entitiesconfigurations" type="xs:anyType" />
          <xs:element name="notauditedentitiesconfigurations" type="xs:anyType" />
          <xs:element name="" type="auditentitynameregister" nillable="true" minOccurs="0" />
          <xs:element name="entitiesjoins" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="toonerelationmetadatagenerator" >
      <xs:sequence>
        <xs:element name="maingenerator" type="auditmetadatagenerator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idmetadatagenerator" >
      <xs:sequence>
        <xs:element name="maingenerator" type="auditmetadatagenerator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentmetadatagenerator" >
      <xs:sequence>
        <xs:element name="maingenerator" type="auditmetadatagenerator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityxmlmappingdata" >
      <xs:sequence>
        <xs:element name="mainxmlmapping" type="xs:anyType" />
        <xs:element name="additionalxmlmappings" type="xs:anyType" />
        <xs:element name="/***thexmlthatmapstheclass.therootcanbeoneofthefolowings:*class,subclass,union-subclass,joined-subclass*/classmapping" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatatools" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritancetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentpropertiessource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationsmetadatareader" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="globalcfg" type="globalconfiguration" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="pc" type="xs:anyType" />
          <xs:element name="*method.*/auditdata" type="classauditingdata" nillable="true" minOccurs="0" />
          <xs:element name="default" type="audittable" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentauditingdata" >
      <xs:complexContent>
       <xs:extension base="propertyauditingdata">
         <xs:sequence>
          <xs:element name="properties" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicproperty" >
      <xs:complexContent>
       <xs:extension base="collection>">
         <xs:sequence>
          <xs:element name="source" type="xs:anyType" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditedpropertiesreader" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="defaultstore" type="modificationstore" nillable="true" minOccurs="0" />
          <xs:element name="" type="persistentpropertiessource" nillable="true" minOccurs="0" />
          <xs:element name="" type="auditedpropertiesholder" nillable="true" minOccurs="0" />
          <xs:element name="globalcfg" type="globalconfiguration" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="propertynameprefix" type="xs:string" />
          <xs:element name="propertyaccessedpersistentproperties" type="xs:anyType" />
          <xs:element name="fieldaccessedpersistentproperties" type="xs:anyType" />
          <xs:element name="propertiesgroupmapping" type="xs:anyType" />
          <xs:element name="overriddenauditedproperties" type="xs:anyType" />
          <xs:element name="overriddennotauditedproperties" type="xs:anyType" />
          <xs:element name="overriddenauditedclasses" type="xs:anyType" />
          <xs:element name="overriddennotauditedclasses" type="xs:anyType" />
          <xs:element name="default_" type="audited" nillable="true" minOccurs="0" />
          <xs:element name="default_audit_join_table" type="auditjointable" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classauditingdata" >
      <xs:sequence>
        <xs:element name="properties" type="xs:anyType" />
        <xs:element name="secondarytabledictionary" type="xs:anyType" />
        <xs:element name="GeneratedName" type="audittable" nillable="true" minOccurs="0" />
        <xs:element name="/***trueiftheclassisauditedglobally(thishelpstocoverthecaseswhentherearenofieldsintheclass,*butit'sstillaudited).*/defaultaudited" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentauditedpropertiesreader" >
      <xs:complexContent>
       <xs:extension base="auditedpropertiesreader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyauditingdata" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="beanname" type="xs:string" />
        <xs:element name="store" type="modificationstore" nillable="true" minOccurs="0" />
        <xs:element name="mapkey" type="xs:string" />
        <xs:element name="jointable" type="auditjointable" nillable="true" minOccurs="0" />
        <xs:element name="accesstype" type="xs:string" />
        <xs:element name="auditjointableoverrides" type="auditoverride" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="relationtargetauditmode" nillable="true" minOccurs="0" />
        <xs:element name="auditmappedby" type="xs:string" />
        <xs:element name="relationmappedby" type="xs:string" />
        <xs:element name="positionmappedby" type="xs:string" />
        <xs:element name="forceinsertable" type="xs:anyType" />
        <xs:element name="usingmodifiedflag" type="xs:anyType" />
        <xs:element name="modifiedflagname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditedpropertiesholder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formulanotsupportedexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="msg" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionmetadatagenerator" >
      <xs:sequence>
        <xs:element name="log" type="enversmessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="maingenerator" type="auditmetadatagenerator" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="propertyvalue" type="xs:anyType" />
        <xs:element name="currentmapper" type="compositemapperbuilder" nillable="true" minOccurs="0" />
        <xs:element name="referencingentityname" type="xs:string" />
        <xs:element name="xmlmappingdata" type="entityxmlmappingdata" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="propertyauditingdata" nillable="true" minOccurs="0" />
        <xs:element name="referencing" type="entityconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="/***nullifthiscollectionisn'tarelationtoanotherentity.*/referencedentityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditentitynameregister" >
      <xs:sequence>
        <xs:element name="auditentitynames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="audittabledata" >
      <xs:sequence>
        <xs:element name="auditentityname" type="xs:string" />
        <xs:element name="audittablename" type="xs:string" />
        <xs:element name="schema" type="xs:string" />
        <xs:element name="catalog" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querygeneratorbuilder" >
      <xs:sequence>
        <xs:element name="globalcfg" type="globalconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="verentcfg" type="auditentitiesconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="auditstrategy" nillable="true" minOccurs="0" />
        <xs:element name="referencingiddata" type="middleiddata" nillable="true" minOccurs="0" />
        <xs:element name="auditmiddleentityname" type="xs:string" />
        <xs:element name="iddatas" type="middleiddata" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="revisiontypeinid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classesauditingdata" >
      <xs:sequence>
        <xs:element name="log" type="enversmessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="entitynametoauditingdata" type="xs:anyType" />
        <xs:element name="persistentclasstoauditingdata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisioninfoconfiguration" >
      <xs:complexContent>
       <xs:extension base="revisionlistener>">
         <xs:sequence>
          <xs:element name="revisioninfoentityname" type="xs:string" />
          <xs:element name="revisioninfoiddata" type="propertydata" nillable="true" minOccurs="0" />
          <xs:element name="revisioninfotimestampdata" type="propertydata" nillable="true" minOccurs="0" />
          <xs:element name="modifiedentitynamesdata" type="propertydata" nillable="true" minOccurs="0" />
          <xs:element name="revisioninfotimestamp" type="xs:anyType" />
          <xs:element name="globalcfg" type="globalconfiguration" nillable="true" minOccurs="0" />
          <xs:element name="revisionproptype" type="xs:string" />
          <xs:element name="revisionpropsqltype" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="revisioninfoconfigurationresult" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="revisioninfogenerator" nillable="true" minOccurs="0" />
        <xs:element name="revisioninfoxmlmapping" type="xs:anyType" />
        <xs:element name="GeneratedName" type="revisioninfoquerycreator" nillable="true" minOccurs="0" />
        <xs:element name="revisioninforelationmapping" type="xs:anyType" />
        <xs:element name="GeneratedName" type="revisioninfonumberreader" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="modifiedentitynamesreader" nillable="true" minOccurs="0" />
        <xs:element name="revisioninfoentityname" type="xs:string" />
        <xs:element name="revisioninfoclass" type="xs:anyType" />
        <xs:element name="revisioninfotimestampdata" type="propertydata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="globalconfiguration" >
      <xs:complexContent>
       <xs:extension base="revisionlistener>">
         <xs:sequence>
          <xs:element name="" type="enversservice" nillable="true" minOccurs="0" />
          <xs:element name="//shouldarevisionbegeneratedwhenanot-ownedrelationfieldchangesgeneraterevisionsforcollections" type="xs:anyType" />
          <xs:element name="//shouldtheoptimisticlockingpropertyofanentitybeconsideredunversioneddonotauditoptimisticlockingfield" type="xs:anyType" />
          <xs:element name="//shouldentitydatabestoredwhenitisdeletedstoredataatdelete" type="xs:anyType" />
          <xs:element name="//thedefaultnameoftheschemaofaudittables.defaultschemaname" type="xs:string" />
          <xs:element name="//thedefaultnameofthecatalogoftheaudittables.defaultcatalogname" type="xs:string" />
          <xs:element name="//shouldenverstrack(persist)entitynamesthathavebeenchangedduringeachrevision.trackentitieschangedinrevision" type="xs:anyType" />
          <xs:element name="//revisionlistenerclassname.revisionlistenerclass" type="xs:anyType" />
          <xs:element name="//shouldenversusemodifiedpropertyflagsbydefaultglobalwithmodifiedflag" type="xs:anyType" />
          <xs:element name="//indicatesthatuserdefinedglobalbehaviorformodifiedflagsfeaturehasglobalsettingforwithmodifiedflag" type="xs:anyType" />
          <xs:element name="//suffixtobeusedformodifiedflagscolumnsmodifiedflagsuffix" type="xs:string" />
          <xs:element name="//userevisionentitywithnativeidgeneratoruserevisionentitywithnativeid" type="xs:anyType" />
          <xs:element name="//whiledeletingrevisionentry,removedataofassociatedauditedentitiescascadedeleterevision" type="xs:anyType" />
          <xs:element name="//supportreusedidentifiersofpreviouslydeletedentitiesallowidentifierreuse" type="xs:anyType" />
          <xs:element name="(selectmax(e2.p)wheree2.p2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentclassgraphdefiner" >
      <xs:sequence>
        <xs:element name="metadata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditentitiesconfiguration" >
      <xs:sequence>
        <xs:element name="audittableprefix" type="xs:string" />
        <xs:element name="audittablesuffix" type="xs:string" />
        <xs:element name="auditstrategyname" type="xs:string" />
        <xs:element name="originalidpropname" type="xs:string" />
        <xs:element name="revisionfieldname" type="xs:string" />
        <xs:element name="revisionnumberpath" type="xs:string" />
        <xs:element name="revisionpropbasepath" type="xs:string" />
        <xs:element name="revisiontypepropname" type="xs:string" />
        <xs:element name="revisiontypeproptype" type="xs:string" />
        <xs:element name="revisioninfoentityname" type="xs:string" />
        <xs:element name="customaudittablesnames" type="xs:anyType" />
        <xs:element name="revisionendfieldname" type="xs:string" />
        <xs:element name="revisionendtimestampenabled" type="xs:anyType" />
        <xs:element name="revisionendtimestampfieldname" type="xs:string" />
        <xs:element name="embeddablesetordinalpropertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitiesconfigurator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enverssettings" >
      <xs:sequence>
        <xs:element name="/***triggersrevisiongenerationwhennot-ownedrelationfieldchanges.defaultsto{@codetrue}.*/revision_on_collection_change" type="xs:string" />
        <xs:element name="/***treatsoptimisticlockingpropertiesasunversioned.defaultsto{@codetrue}.*/do_not_audit_optimistic_locking_field" type="xs:string" />
        <xs:element name="/***indicateswhetherentitydatashouldbestoredduringremoval.defaultsto{@codefalse}.*/store_data_at_delete" type="xs:string" />
        <xs:element name="/***defaultnameoftheschemacontainingaudittables.*/default_schema" type="xs:string" />
        <xs:element name="/***defaultnameofthecatalogcontainingaudittables.*/default_catalog" type="xs:string" />
        <xs:element name="/***trackentitynamesthathavebeenchangedduringeachrevision.defaultsto{@codefalse}.*/track_entities_changed_in_revision" type="xs:string" />
        <xs:element name="/***userevisionentitywithnativeidentifiergenerator.defaultsto{@codetrue}forbackwardcompatibility.*/use_revision_entity_with_native_id" type="xs:string" />
        <xs:element name="/***globallyactivatesmodifiedpropertiesflagfeature.defaultsto{@codefalse}.*/global_with_modified_flag" type="xs:string" />
        <xs:element name="/***suffixofmodifiedflagcolumns.defaultsto{@literal_mod}.*/modified_flag_suffix" type="xs:string" />
        <xs:element name="/***fullyqualifiedclassnameofuserdefinedrevisionlistener.*/revision_listener" type="xs:string" />
        <xs:element name="/***audittableprefix.emptybydefault.*/audit_table_prefix" type="xs:string" />
        <xs:element name="/***audittablesuffix.defaultsto{@literal_aud}.*/audit_table_suffix" type="xs:string" />
        <xs:element name="/***auditstrategy.defaultsto{@linkorg.hibernate.envers.strategy.defaultauditstrategy}.*/audit_strategy" type="xs:string" />
        <xs:element name="/***revisionfieldname.defaultsto{@literalrev}.*/revision_field_name" type="xs:string" />
        <xs:element name="/***revisiontypefieldname.defaultsto{@literalrevtype}.*/revision_type_field_name" type="xs:string" />
        <xs:element name="/***columnnamethatwillholdtheendrevisionnumberinauditentities.defaultsto{@literalrevend}.*/audit_strategy_validity_end_rev_field_name" type="xs:string" />
        <xs:element name="/***storethetimestampoftheendrevision,untilwhichthedatawasvalid,*inadditiontotheendrevisionitself.defaultsto{@codefalse}.*/audit_strategy_validity_store_revend_timestamp" type="xs:string" />
        <xs:element name="/***columnnameofthetimestampoftheendrevisionuntilwhichthedatawasvalid.*defaultsto{@literalrevend_tstmp}.*/audit_strategy_validity_revend_timestamp_field_name" type="xs:string" />
        <xs:element name="/***nameofcolumnusedforstoringordinalofthechangeinsetsofembeddableelements.defaultsto{@literalsetordinal}.*/embeddable_set_ordinal_field_name" type="xs:string" />
        <xs:element name="/***guaranteespropervalidityauditstrategybehaviorwhenapplicationreusesidentifiersofdeletedentities.*exactlyonerowwith{@codenull}enddateexistsforeachidentifier.*/allow_identifier_reuse" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="crosstyperevisionchangesreader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="revisiondoesnotexistexception" >
      <xs:complexContent>
       <xs:extension base="auditexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="revision" type="xs:anyType" />
          <xs:element name="" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notauditedexception" >
      <xs:complexContent>
       <xs:extension base="auditexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditoverrides" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditreader" >
      <xs:complexContent>
       <xs:extension base="{@link">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationtargetauditmode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaulttrackingmodifiedentitiesrevisionentity" >
      <xs:complexContent>
       <xs:extension base="defaultrevisionentity">
         <xs:sequence>
          <xs:element name="modifiedentitynames" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondaryaudittable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditreaderfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validityauditstrategy" >
      <xs:sequence>
        <xs:element name="/***fortherevisionentityfieldannotatedwith@revisiontimestamp*/revisiontimestamp" type="xs:anyType" />
        <xs:element name="GeneratedName" type="sessioncachecleaner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validtimeauditstrategy" >
      <xs:complexContent>
       <xs:extension base="validityauditstrategy">
         <xs:sequence>
          <xs:element name="log" type="enversmessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultauditstrategy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="sessioncachecleaner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondaryaudittables" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisionentity" >
      <xs:complexContent>
       <xs:extension base="revisionlistener>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="revisiontype" >
      <xs:sequence>
        <xs:element name="representation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baseenverscollectioneventlistener" >
      <xs:complexContent>
       <xs:extension base="baseenverseventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enversprecollectionupdateeventlistenerimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enversprecollectionremoveeventlistenerimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enverslistenerduplicationstrategy" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="enverslistenerduplicationstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enverspostupdateeventlistenerimpl" >
      <xs:complexContent>
       <xs:extension base="baseenverseventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enverspostdeleteeventlistenerimpl" >
      <xs:complexContent>
       <xs:extension base="baseenverseventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enverslistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enverspostinserteventlistenerimpl" >
      <xs:complexContent>
       <xs:extension base="baseenverseventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enverspostcollectionrecreateeventlistenerimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseenverseventlistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="enversservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testconsole" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapproxytest" >
      <xs:sequence>
        <xs:element name="serviceregistry" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hsqltest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="priority" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baseenversfunctionaltestcase" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="auditstrategy" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parametrizedtestusertype" >
      <xs:sequence>
        <xs:element name="types" type="xs:long" />
        <xs:element name="param1" type="xs:string" />
        <xs:element name="param2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositetestusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unspecifiedenumtypeentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="enum1" type="xs:anyType" />
        <xs:element name="enum2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
        <xs:element name="prop1" type="xs:string" />
        <xs:element name="prop2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extendedrevisionlistener" >
      <xs:sequence>
        <xs:element name="comment_value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customtrackingrevisionlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strtestentitycomparator" >
      <xs:sequence>
        <xs:element name="instance" type="strtestentitycomparator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sex" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicmodelingtest" >
      <xs:complexContent>
       <xs:extension base="abstractenverstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sexconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidirectionaleagerhbmrefedpk" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="referencing" type="bidirectionaleagerhbmrefingpk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidirectionaleagerhbmrefingpk" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="bidirectionaleagerhbmrefedpk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytooneeagercomponent" >
      <xs:sequence>
        <xs:element name="entity" type="strtestnoproxyentity" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notauditedmanytoonecomponent" >
      <xs:sequence>
        <xs:element name="entity" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonecomponent" >
      <xs:sequence>
        <xs:element name="entity" type="strtestentity" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanycomponent" >
      <xs:sequence>
        <xs:element name="entities" type="strtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component4" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component1" >
      <xs:sequence>
        <xs:element name="str1" type="xs:string" />
        <xs:element name="str2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uniquepropsentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data1" type="xs:string" />
        <xs:element name="data2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultvaluecomponent1" >
      <xs:sequence>
        <xs:element name="str1" type="xs:string" />
        <xs:element name="comp2" type="defaultvaluecomponent2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uniquepropsnotauditedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data1" type="xs:string" />
        <xs:element name="data2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component3" >
      <xs:sequence>
        <xs:element name="str1" type="xs:string" />
        <xs:element name="auditedcomponent" type="component4" nillable="true" minOccurs="0" />
        <xs:element name="nonauditedcomponent" type="component4" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultvaluecomponent2" >
      <xs:sequence>
        <xs:element name="str1" type="xs:string" />
        <xs:element name="str2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component2" >
      <xs:sequence>
        <xs:element name="str5" type="xs:string" />
        <xs:element name="str6" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embid" >
      <xs:sequence>
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customenum" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customenumusertype" >
      <xs:sequence>
        <xs:element name="sql_types" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonenotauditedembid" >
      <xs:sequence>
        <xs:element name="id" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embidwithcustomtype" >
      <xs:sequence>
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="GeneratedName" type="customenum" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mulid" >
      <xs:sequence>
        <xs:element name="id1" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dateembid" >
      <xs:sequence>
        <xs:element name="x" type="xs:dateTime" />
        <xs:element name="y" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemaexporttest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtaexceptionlistener" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtatransaction" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumtypetest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parametrizedcustom" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="pcte_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositecustom" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ccte_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unspecifiedenumtypetest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectusertype" >
      <xs:sequence>
        <xs:element name="types" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectusertypetest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicmodeltest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditedallmappedsuperclass" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
        <xs:element name="otherstr" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notauditedbaseentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str1" type="xs:string" />
        <xs:element name="number1" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extendedbaseentity" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="str2" type="xs:string" />
          <xs:element name="number2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditedbaseentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str1" type="xs:string" />
        <xs:element name="number1" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditclassoverridetest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="classauditedentityid" type="xs:anyType" />
          <xs:element name="classnotauditedentityid" type="xs:anyType" />
          <xs:element name="classaudited" type="xs:anyType" />
          <xs:element name="classnotaudited" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mixedoverridetest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="mixedentityid" type="xs:anyType" />
          <xs:element name="mixed" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str1" type="xs:string" />
        <xs:element name="number1" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditpropertyoverridetest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="propertyentityid" type="xs:anyType" />
          <xs:element name="transitiveentityid" type="xs:anyType" />
          <xs:element name="auditedentityid" type="xs:anyType" />
          <xs:element name="property" type="xs:anyType" />
          <xs:element name="transitive" type="xs:anyType" />
          <xs:element name="audited" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singleauditparentstest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="childsingleid" type="xs:long" />
          <xs:element name="sitesingleid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transitiveparententity" >
      <xs:complexContent>
       <xs:extension base="mappedgrandparententity">
         <xs:sequence>
          <xs:element name="parent" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedparententity" >
      <xs:complexContent>
       <xs:extension base="mappedgrandparententity">
         <xs:sequence>
          <xs:element name="parent" type="xs:string" />
          <xs:element name="relation" type="strinttestentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="totalauditparentstest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="babycompleteid" type="xs:long" />
          <xs:element name="sitecompleteid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipleauditparentstest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="childmultipleid" type="xs:long" />
          <xs:element name="sitemultipleid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childcompleteentity" >
      <xs:complexContent>
       <xs:extension base="mappedparententity">
         <xs:sequence>
          <xs:element name="child" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transitiveauditparentstest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="childimptransid" type="xs:long" />
          <xs:element name="childexptransid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedgrandparententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="grandparent" type="xs:string" />
        <xs:element name="notaudited" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditedmethodmappedsuperclass" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
        <xs:element name="otherstr" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicsametable" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="p1_id" type="xs:anyType" />
          <xs:element name="p2_id" type="xs:anyType" />
          <xs:element name="c1_1_id" type="xs:anyType" />
          <xs:element name="c1_2_id" type="xs:anyType" />
          <xs:element name="c2_1_id" type="xs:anyType" />
          <xs:element name="c2_2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicuniset" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="m2mindexedlistnotauditedtarget" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="itnae1_id" type="xs:anyType" />
          <xs:element name="itnae2_id" type="xs:anyType" />
          <xs:element name="uste1" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
          <xs:element name="uste2" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="m2mrelationnotauditedtarget" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="tnae1_id" type="xs:anyType" />
          <xs:element name="tnae2_id" type="xs:anyType" />
          <xs:element name="uste1_id" type="xs:anyType" />
          <xs:element name="uste2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jointabledetachedtest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="collectionentityid" type="xs:long" />
          <xs:element name="element1id" type="xs:anyType" />
          <xs:element name="element2id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicunimap" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="coll1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicunilist" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicmap" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detailsubclass" >
      <xs:complexContent>
       <xs:extension base="detailsuperclass">
         <xs:sequence>
          <xs:element name="str2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanyinversetosuperclasstest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="m1_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="master" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="str" type="xs:string" />
        <xs:element name="items" type="detailsubclass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detailsubclass2" >
      <xs:complexContent>
       <xs:extension base="detailsubclass">
         <xs:sequence>
          <xs:element name="str3" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detailsuperclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="masters" type="master" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basiclist" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ternarymap" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="int1_id" type="xs:anyType" />
          <xs:element name="int2_id" type="xs:anyType" />
          <xs:element name="map1_id" type="xs:anyType" />
          <xs:element name="map2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ternarymapflush" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="int1_id" type="xs:anyType" />
          <xs:element name="int2_id" type="xs:anyType" />
          <xs:element name="map1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicbiowned" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="o1_1_id" type="xs:anyType" />
          <xs:element name="o1_2_id" type="xs:anyType" />
          <xs:element name="o2_1_id" type="xs:anyType" />
          <xs:element name="o2_2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicset" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customcomparatorentitytest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
          <xs:element name="id4" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicwherejointable" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ite1_1_id" type="xs:anyType" />
          <xs:element name="ite1_2_id" type="xs:anyType" />
          <xs:element name="ite2_1_id" type="xs:anyType" />
          <xs:element name="ite2_2_id" type="xs:anyType" />
          <xs:element name="wjte1_id" type="xs:anyType" />
          <xs:element name="wjte2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="adddeltest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedchildreferencing" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="re_id1" type="xs:anyType" />
          <xs:element name="re_id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangednullproperties" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedcomponentcollection" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="ele1_id" type="xs:anyType" />
          <xs:element name="c4_1" type="component4" nillable="true" minOccurs="0" />
          <xs:element name="c4_2" type="component4" nillable="true" minOccurs="0" />
          <xs:element name="c3_1" type="component3" nillable="true" minOccurs="0" />
          <xs:element name="c3_2" type="component3" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedbidirectional2" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangeddetachedmultiplecollection" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="mce1id" type="xs:long" />
          <xs:element name="mce2id" type="xs:long" />
          <xs:element name="mcre1id" type="xs:long" />
          <xs:element name="mcre2id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedauditedmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsonesessiontest">
         <xs:sequence>
          <xs:element name="id_car1" type="xs:long" />
          <xs:element name="id_pers1" type="xs:long" />
          <xs:element name="id_pers2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractmodifiedflagsonesessiontest" >
      <xs:complexContent>
       <xs:extension base="														">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedunversionedproperties" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangednotownedbidirectional" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="pc_id" type="xs:long" />
          <xs:element name="a1_id" type="xs:long" />
          <xs:element name="a2_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedstringset" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="sse1_id" type="xs:anyType" />
          <xs:element name="sse2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedcomponents" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
          <xs:element name="id4" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedenumset" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="sse1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedidmapkey" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="imke_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedmanytooneincomponent" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="mtocte_id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedstringmap" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="sme1_id" type="xs:anyType" />
          <xs:element name="sme2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedmergetest" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="parent1id" type="xs:anyType" />
          <xs:element name="child1id" type="xs:anyType" />
          <xs:element name="parent2id" type="xs:anyType" />
          <xs:element name="child2id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedonetomanyincomponent" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="otmcte_id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedfordefaultnotusing" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="entityid" type="xs:long" />
          <xs:element name="refentityid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedcomponentmapkey" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="cmke_id" type="xs:anyType" />
          <xs:element name="cte1_id" type="xs:anyType" />
          <xs:element name="cte2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedapitest" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangeddoublejoincolumnbidirectionallist" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="ed1_1_id" type="xs:anyType" />
          <xs:element name="ed2_1_id" type="xs:anyType" />
          <xs:element name="ed1_2_id" type="xs:anyType" />
          <xs:element name="ed2_2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedchildauditing" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="modifiedflagsuffix" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedmanualflush" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractmodifiedflagsentitytest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haschangedcompositecustom" >
      <xs:complexContent>
       <xs:extension base="abstractmodifiedflagsentitytest">
         <xs:sequence>
          <xs:element name="ccte_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longreventityinheritancechildauditing" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removedefaultrevisionentity" >
      <xs:complexContent>
       <xs:extension base="abstractrevisionentityremovaltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removetrackingrevisionentity" >
      <xs:complexContent>
       <xs:extension base="abstractrevisionentityremovaltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractrevisionentityremovaltest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="monotonicrevisionnumbertest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="exceptionlistener" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customdate" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="differentdbschematest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="schema_name" type="xs:string" />
          <xs:element name="steid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listener" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="globallyconfiguredrevlistenertest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customboxed" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="custom" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longrevnumber" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inherited" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="custompropertyaccess" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="overridedefaultrevlistenertest" >
      <xs:complexContent>
       <xs:extension base="globallyconfiguredrevlistenertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testexceptionrevisionlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customcolumnmapping" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customnolistener" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitynamestest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="trackingentitiesmultiplechangestest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="steid1" type="xs:anyType" />
          <xs:element name="steid2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotatedtrackingentitiestest" >
      <xs:complexContent>
       <xs:extension base="defaulttrackingentitiestest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customtrackingentitiestest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="steid" type="xs:anyType" />
          <xs:element name="siteid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="extendedrevisionentitytest" >
      <xs:complexContent>
       <xs:extension base="{@link">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaulttrackingentitiestest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="steid" type="xs:anyType" />
          <xs:element name="siteid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="countingrevisionlistener" >
      <xs:sequence>
        <xs:element name="revisioncount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="overridecustomrevlistenertest" >
      <xs:complexContent>
       <xs:extension base="globallyconfiguredrevlistenertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testrevisionlistener" >
      <xs:sequence>
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enums" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobs" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobserializables" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dates" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializables" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serobject" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sameids" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonenotinsertable" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="mto_id1" type="xs:anyType" />
          <xs:element name="type_id1" type="xs:anyType" />
          <xs:element name="type_id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notinsertable" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubleflushadddel" >
      <xs:complexContent>
       <xs:extension base="abstractflushtest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manualflushautocommitdisabled" >
      <xs:complexContent>
       <xs:extension base="manualflush">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manualflush" >
      <xs:complexContent>
       <xs:extension base="abstractflushtest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubleflushmodmod" >
      <xs:complexContent>
       <xs:extension base="abstractflushtest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubleflushaddmod" >
      <xs:complexContent>
       <xs:extension base="abstractflushtest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubleflushmoddel" >
      <xs:complexContent>
       <xs:extension base="abstractflushtest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commitflush" >
      <xs:complexContent>
       <xs:extension base="abstractflushtest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractflushtest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="isetrefedentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interfacesrelation" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditedimplementor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="auditedimplementordata" type="xs:string" />
        <xs:element name="numerito" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpropertiesaudited2test" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ai_id" type="xs:long" />
          <xs:element name="nai_id" type="xs:long" />
          <xs:element name="numerito" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonauditedimplementor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="nonauditedimplementordata" type="xs:string" />
        <xs:element name="numerito" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedpropertiesaudited2test" >
      <xs:complexContent>
       <xs:extension base="abstractpropertiesaudited2test">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unionpropertiesaudited2test" >
      <xs:complexContent>
       <xs:extension base="abstractpropertiesaudited2test">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclasspropertiesaudited2test" >
      <xs:complexContent>
       <xs:extension base="abstractpropertiesaudited2test">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unionpropertiesauditedtest" >
      <xs:complexContent>
       <xs:extension base="abstractpropertiesauditedtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclasspropertiesauditedtest" >
      <xs:complexContent>
       <xs:extension base="abstractpropertiesauditedtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedpropertiesauditedtest" >
      <xs:complexContent>
       <xs:extension base="abstractpropertiesauditedtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditedimplementor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="auditedimplementordata" type="xs:string" />
        <xs:element name="numerito" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpropertiesauditedtest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ai_id" type="xs:long" />
          <xs:element name="nai_id" type="xs:long" />
          <xs:element name="numerito" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonauditedimplementor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="nonauditedimplementordata" type="xs:string" />
        <xs:element name="numerito" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unionallauditedtest" >
      <xs:complexContent>
       <xs:extension base="abstractallauditedtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclassallauditedtest" >
      <xs:complexContent>
       <xs:extension base="abstractallauditedtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedallauditedtest" >
      <xs:complexContent>
       <xs:extension base="abstractallauditedtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonauditedimplementor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="nonauditedimplementordata" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditedimplementor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="auditedimplementordata" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractallauditedtest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ai_id" type="xs:long" />
          <xs:element name="nai_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interfacescomponents" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="icomponent" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component1" >
      <xs:sequence>
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicnaming" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditcolumnnametest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="estoniantablealias" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="parentid" type="xs:long" />
          <xs:element name="childid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionsjointablerangecomponent" >
      <xs:complexContent>
       <xs:extension base="versionsjointablerangetestentitysuperclass>">
         <xs:sequence>
          <xs:element name="range" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinembidnaming" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed_id1" type="embidnaming" nillable="true" minOccurs="0" />
          <xs:element name="ed_id2" type="embidnaming" nillable="true" minOccurs="0" />
          <xs:element name="ing_id1" type="embidnaming" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embidnaming" >
      <xs:sequence>
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mulidnaming" >
      <xs:sequence>
        <xs:element name="id1" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinmulidnaming" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed_id1" type="mulidnaming" nillable="true" minOccurs="0" />
          <xs:element name="ed_id2" type="mulidnaming" nillable="true" minOccurs="0" />
          <xs:element name="ing_id1" type="mulidnaming" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyunidirectionalnaming" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="uni1_id" type="xs:anyType" />
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="middle_versions_entity_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionsjointablerangetestentitysuperclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="genericvalue" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quotedfieldstest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="qfeid1" type="xs:long" />
          <xs:element name="qfeid2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinnaming" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed_id1" type="xs:anyType" />
          <xs:element name="ed_id2" type="xs:anyType" />
          <xs:element name="ing_id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionsjointablerangecomponentnamingtest" >
      <xs:complexContent>
       <xs:extension base="													">
         <xs:sequence>
          <xs:element name="vjrcte_id" type="xs:anyType" />
          <xs:element name="vjtrte_id" type="xs:anyType" />
          <xs:element name="vjtrtae_id1" type="xs:anyType" />
          <xs:element name="/*theauditjointablesweexpect*/component_1_audit_join_table_name" type="xs:string" />
          <xs:element name="component_2_audit_join_table_name" type="xs:string" />
          <xs:element name="/*theauditjointablesthatshouldnotbethere*/unmodified_component_1_audit_join_table_name" type="xs:string" />
          <xs:element name="unmodified_component_2_audit_join_table_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionsjointablenaming" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="uni1_id" type="xs:anyType" />
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="middle_versions_entity_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializingcollection" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitiveadddelete" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertynotupdatabletest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readwriteexpressionchange" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="height_inches" type="xs:double" />
          <xs:element name="height_centimeters" type="xs:double" />
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validityauditstrategyrevendtestcustomrevent" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="revendtimestampcolumname" type="xs:string" />
          <xs:element name="p1_id" type="xs:anyType" />
          <xs:element name="p2_id" type="xs:anyType" />
          <xs:element name="c1_1_id" type="xs:anyType" />
          <xs:element name="c1_2_id" type="xs:anyType" />
          <xs:element name="c2_1_id" type="xs:anyType" />
          <xs:element name="c2_2_id" type="xs:anyType" />
          <xs:element name="revisions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifierreusetest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validityauditstrategymanytomanytest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ing_id" type="xs:anyType" />
          <xs:element name="ed_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validityauditstrategyrevendtstest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="revendtimestampcolumname" type="xs:string" />
          <xs:element name="p1_id" type="xs:anyType" />
          <xs:element name="p2_id" type="xs:anyType" />
          <xs:element name="c1_1_id" type="xs:anyType" />
          <xs:element name="c1_2_id" type="xs:anyType" />
          <xs:element name="c2_1_id" type="xs:anyType" />
          <xs:element name="c2_2_id" type="xs:anyType" />
          <xs:element name="revisions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="revisionconstraintquery" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullpropertyquery" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="idsimplepropertynull" type="xs:anyType" />
          <xs:element name="idsimplepropertynotnull" type="xs:anyType" />
          <xs:element name="idmulticolumnreferencetoparentnull" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="idreferencetoparentnotnull" type="xs:anyType" />
          <xs:element name="idparent" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbylimitquery" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
          <xs:element name="id4" type="xs:anyType" />
          <xs:element name="id5" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplequery" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
          <xs:element name="1" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="1" type="embid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aggregatequery" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mulidonetomanyquery" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="id2" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="id3" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="id4" type="mulid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embidonetomanyquery" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="id2" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="id3" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="id4" type="embid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="storedeleteddata" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deletedentities" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customreventityquery" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="timestamp" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="maximalizepropertyquery" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
          <xs:element name="id4" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionsproperties" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unversionedoptimisticlockingfield" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="revisionfordate" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
          <xs:element name="timestamp4" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="registrationnumber" type="xs:long" />
        <xs:element name="owners" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="cars" type="car" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readentitywithauditedmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractonesessiontest">
         <xs:sequence>
          <xs:element name="id_car1" type="xs:long" />
          <xs:element name="id_car2" type="xs:long" />
          <xs:element name="id_pers1" type="xs:long" />
          <xs:element name="1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="1_1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="1_2" type="car" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singledomainobjecttomultipletablestest" >
      <xs:complexContent>
       <xs:extension base="abstractonesessiontest">
         <xs:sequence>
          <xs:element name="carid" type="xs:long" />
          <xs:element name="ownerid" type="xs:long" />
          <xs:element name="driverid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readentityassociatedauditedtest" >
      <xs:complexContent>
       <xs:extension base="abstractonesessiontest">
         <xs:sequence>
          <xs:element name="id_car1" type="xs:long" />
          <xs:element name="id_car2" type="xs:long" />
          <xs:element name="current1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="id_pers1" type="xs:long" />
          <xs:element name="id_pers2" type="xs:long" />
          <xs:element name="current1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="1" type="person" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="owner" type="person" nillable="true" minOccurs="0" />
        <xs:element name="driver" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readentitywhitentitynametest" >
      <xs:complexContent>
       <xs:extension base="abstractonesessiontest">
         <xs:sequence>
          <xs:element name="id_pers1" type="xs:long" />
          <xs:element name="id_pers2" type="xs:long" />
          <xs:element name="id_pers3" type="xs:long" />
          <xs:element name="1_1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="1_2" type="person" nillable="true" minOccurs="0" />
          <xs:element name="1_3" type="person" nillable="true" minOccurs="0" />
          <xs:element name="currentpers1" type="person" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="owners" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readentitywithauditedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractonesessiontest">
         <xs:sequence>
          <xs:element name="id_car1" type="xs:long" />
          <xs:element name="id_car2" type="xs:long" />
          <xs:element name="current1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="current1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="id_pers1" type="xs:long" />
          <xs:element name="1_1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="1_1" type="person" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="owners" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readentitywithauditedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractonesessiontest">
         <xs:sequence>
          <xs:element name="id_car1" type="xs:long" />
          <xs:element name="id_car2" type="xs:long" />
          <xs:element name="current1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="current1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="id_pers1" type="xs:long" />
          <xs:element name="1_1" type="car" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="owner" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readentityassociatednotauditedtest" >
      <xs:complexContent>
       <xs:extension base="abstractonesessiontest">
         <xs:sequence>
          <xs:element name="id_car1" type="xs:long" />
          <xs:element name="id_car2" type="xs:long" />
          <xs:element name="id_pers1" type="xs:long" />
          <xs:element name="id_pers2" type="xs:long" />
          <xs:element name="1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="2" type="car" nillable="true" minOccurs="0" />
          <xs:element name="1_1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="2" type="person" nillable="true" minOccurs="0" />
          <xs:element name="current1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="current1" type="car" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectional" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonewithprimarykeyjointest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="personid" type="xs:long" />
          <xs:element name="accountid" type="xs:long" />
          <xs:element name="proxypersonid" type="xs:long" />
          <xs:element name="noproxypersonid" type="xs:long" />
          <xs:element name="accountnotauditedownersid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionaleagerannotationtest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="refingid1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mulidbidirectional" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="ed2_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="ing1_id" type="mulid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embidbidirectional" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="ed2_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="ing1_id" type="embid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalnonulls" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionaleagerhbmtest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="refingid1" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectional2" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalwithnulls" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalmulidwithnulls" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ei" type="embid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectional" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ed3_id" type="xs:anyType" />
          <xs:element name="ed4_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditreaderapitest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalreference" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="set1_id" type="xs:long" />
          <xs:element name="set2_id" type="xs:long" />
          <xs:element name="g1_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonecache" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querycache" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanycache" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationnotauditedtarget" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="tnae1_id" type="xs:anyType" />
          <xs:element name="tnae2_id" type="xs:anyType" />
          <xs:element name="uste1_id" type="xs:anyType" />
          <xs:element name="uste2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitmappedbytest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ownedid" type="xs:long" />
          <xs:element name="owning1id" type="xs:long" />
          <xs:element name="owning2id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="immutableclassaccesstype" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="country" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mixedaccesstype" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyaccesstype" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldaccesstype" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnbidirectionallistwithinheritance" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexedjoincolumnbidirectionallist" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ed3_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicdetachedsetwithembid" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="str1_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="str2_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="coll1_id" type="embid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritanceindexedjoincolumnbidirectionallist" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ed3_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicjoincolumnset" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="coll1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicdetachedsetwithmulid" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="str1_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="str2_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="coll1_id" type="mulid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicdetachedlist" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="coll1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doublejoincolumnbidirectionallist" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_1_id" type="xs:anyType" />
          <xs:element name="ed2_1_id" type="xs:anyType" />
          <xs:element name="ed1_2_id" type="xs:anyType" />
          <xs:element name="ed2_2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detachedtest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
          <xs:element name="parentid" type="xs:anyType" />
          <xs:element name="childid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnbidirectionallist" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datachangesdetachedset" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="coll1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicdetachedset" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="coll1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubledetachedset" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="coll1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicset" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicsetwithmulid" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="ed2_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="ing1_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="ing2_id" type="mulid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hierarchytest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="parentid" type="xs:long" />
          <xs:element name="child1id" type="xs:long" />
          <xs:element name="child2id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmapkey" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiclist" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicsetwithnullsdelete" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
          <xs:element name="ing3_id" type="xs:anyType" />
          <xs:element name="ing4_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapsidtest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="tuple1ver1" type="persontuple" nillable="true" minOccurs="0" />
          <xs:element name="tuple2ver1" type="persontuple" nillable="true" minOccurs="0" />
          <xs:element name="tuple2ver2" type="persontuple" nillable="true" minOccurs="0" />
          <xs:element name="cver1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="cver2" type="person" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detailsuperclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parent" type="master" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detailsubclass2" >
      <xs:complexContent>
       <xs:extension base="detailsubclass">
         <xs:sequence>
          <xs:element name="str3" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detailsubclass" >
      <xs:complexContent>
       <xs:extension base="detailsuperclass">
         <xs:sequence>
          <xs:element name="str2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyinversetosuperclasstest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="m1_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="master" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="str" type="xs:string" />
        <xs:element name="items" type="detailsubclass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inversesidechanges" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiccollection" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicsetwithembid" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed1_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="ed2_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="ing1_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="ing2_id" type="embid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removedobjectquerytest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="stringsetid" type="xs:anyType" />
          <xs:element name="ternarymapid" type="xs:anyType" />
          <xs:element name="unversionedentity1" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
          <xs:element name="unversionedentity2" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
          <xs:element name="stringentity1" type="strtestprivseqentity" nillable="true" minOccurs="0" />
          <xs:element name="stringentity2" type="strtestprivseqentity" nillable="true" minOccurs="0" />
          <xs:element name="intentity1" type="inttestprivseqentity" nillable="true" minOccurs="0" />
          <xs:element name="intentity2" type="inttestprivseqentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxyidentifier" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="tnae1" type="targetnotauditedentity" nillable="true" minOccurs="0" />
          <xs:element name="mtonane1" type="manytoonenotauditednullentity" nillable="true" minOccurs="0" />
          <xs:element name="emtonane1" type="extmanytoonenotauditednullentity" nillable="true" minOccurs="0" />
          <xs:element name="mtmnane1" type="manytomanynotauditednullentity" nillable="true" minOccurs="0" />
          <xs:element name="otmnane1" type="onetomanynotauditednullentity" nillable="true" minOccurs="0" />
          <xs:element name="uste1" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
          <xs:element name="uste2" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditedcollectionproxytest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id_listrefedentity1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryingwithproxyobjecttest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idmapkey" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="imke_id" type="xs:anyType" />
          <xs:element name="ste1_id" type="xs:anyType" />
          <xs:element name="ste2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentmapkey" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="cmke_id" type="xs:anyType" />
          <xs:element name="cte1_id" type="xs:anyType" />
          <xs:element name="cte2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringmap" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="sme1_id" type="xs:anyType" />
          <xs:element name="sme2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringlist" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="sle1_id" type="xs:anyType" />
          <xs:element name="sle2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcollectionchangetest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
          <xs:element name="personid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionchangenorevisiontest" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionchangetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionchangerevisiontest" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionchangetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detachedmultiplecollectionchangetest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="tm" type="xs:anyType" />
          <xs:element name="mceid1" type="xs:long" />
          <xs:element name="re1id1" type="xs:long" />
          <xs:element name="re1id2" type="xs:long" />
          <xs:element name="re1id3" type="xs:long" />
          <xs:element name="re2id1" type="xs:long" />
          <xs:element name="re2id2" type="xs:long" />
          <xs:element name="re2id3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumset" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="sse1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringset" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="sse1_id" type="xs:anyType" />
          <xs:element name="sse2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablemap" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="eme1_id" type="xs:anyType" />
          <xs:element name="eme2_id" type="xs:anyType" />
          <xs:element name="c4_1" type="component4" nillable="true" minOccurs="0" />
          <xs:element name="c4_2" type="component4" nillable="true" minOccurs="0" />
          <xs:element name="c3_1" type="component3" nillable="true" minOccurs="0" />
          <xs:element name="c3_2" type="component3" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablelist2" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ele_id1" type="xs:anyType" />
          <xs:element name="entity1" type="strtestnoproxyentity" nillable="true" minOccurs="0" />
          <xs:element name="entity2" type="strtestnoproxyentity" nillable="true" minOccurs="0" />
          <xs:element name="entity3" type="strtestnoproxyentity" nillable="true" minOccurs="0" />
          <xs:element name="entity4" type="strtestnoproxyentity" nillable="true" minOccurs="0" />
          <xs:element name="entity4copy" type="strtestnoproxyentity" nillable="true" minOccurs="0" />
          <xs:element name="manytoonecomponent1" type="manytooneeagercomponent" nillable="true" minOccurs="0" />
          <xs:element name="manytoonecomponent2" type="manytooneeagercomponent" nillable="true" minOccurs="0" />
          <xs:element name="manytoonecomponent4" type="manytooneeagercomponent" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicembeddablecollection" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="name" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablelist1" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ele1_id" type="xs:anyType" />
          <xs:element name="c4_1" type="component4" nillable="true" minOccurs="0" />
          <xs:element name="c4_2" type="component4" nillable="true" minOccurs="0" />
          <xs:element name="c3_1" type="component3" nillable="true" minOccurs="0" />
          <xs:element name="c3_2" type="component3" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddableset" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ese1_id" type="xs:anyType" />
          <xs:element name="c4_1" type="component4" nillable="true" minOccurs="0" />
          <xs:element name="c4_2" type="component4" nillable="true" minOccurs="0" />
          <xs:element name="c3_1" type="component3" nillable="true" minOccurs="0" />
          <xs:element name="c3_2" type="component3" nillable="true" minOccurs="0" />
          <xs:element name="c3_3" type="component3" nillable="true" minOccurs="0" />
          <xs:element name="c3_4" type="component3" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicsecondary" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namingsecondary" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mulidsecondary" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="mulid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embidsecondary" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="embid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositedateid" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="dateembid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytooneidnotaudited" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="manytoonenotauditedembid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationinsideembeddabletest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="orderid" type="xs:anyType" />
          <xs:element name="" type="itemid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="itemid" >
      <xs:sequence>
        <xs:element name="model" type="xs:string" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="GeneratedName" type="producer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dateid" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeids" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="id2" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="id3" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="id4" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="id5" type="embidwithcustomtype" nillable="true" minOccurs="0" />
          <xs:element name="id6" type="embidwithcustomtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idclasswithrelationtest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="entityid" type="relationalclassid" nillable="true" minOccurs="0" />
          <xs:element name="typeid" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationalclassid" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="type" type="classtype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="protectedconstructortest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="testentity" type="protectedconstructorentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrappedstringid" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="changinghashcode" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="pageid" type="xs:long" />
          <xs:element name="imageid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipleassociationstest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="lukaszid" type="xs:long" />
          <xs:element name="kingaid" type="xs:long" />
          <xs:element name="warsawid" type="xs:long" />
          <xs:element name="cracowid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionofcomponents" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="code" >
      <xs:complexContent>
       <xs:extension base="abstractcode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcode" >
      <xs:sequence>
        <xs:element name="/***initialvalue*/undefined" type="xs:long" />
        <xs:element name="code" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablewithdeclareddatatest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablewithnodeclareddata" >
      <xs:complexContent>
       <xs:extension base="abstractembeddable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablewithnodeclareddatatest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractembeddable" >
      <xs:sequence>
        <xs:element name="/***initialvalue*/undefined" type="xs:long" />
        <xs:element name="code" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablewithdeclareddata" >
      <xs:complexContent>
       <xs:extension base="abstractembeddable">
         <xs:sequence>
          <xs:element name="codeart" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultvaluecomponents" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="id0" type="xs:anyType" />
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
          <xs:element name="id4" type="xs:anyType" />
          <xs:element name="id5" type="xs:anyType" />
          <xs:element name="id6" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="components" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
          <xs:element name="id4" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="plainentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="note" type="xs:string" />
        <xs:element name="component" type="plaincomponent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sanitychecktest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notauditeddynamiccomponenttest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="age" >
      <xs:sequence>
        <xs:element name="ageinyears" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="note" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytooneentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="note" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plaincomponent" >
      <xs:sequence>
        <xs:element name="componentnote" type="xs:string" />
        <xs:element name="manytomanylist" type="manytomanyentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="onetooneentity" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="manytooneentity" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="internalcomponent" nillable="true" minOccurs="0" />
        <xs:element name="internalcomponents" type="internalcomponent" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditeddynamiccomponentsadvancedcasestest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
          <xs:element name="prop_boolean" type="xs:string" />
          <xs:element name="prop_int" type="xs:string" />
          <xs:element name="prop_float" type="xs:string" />
          <xs:element name="prop_many_to_one" type="xs:string" />
          <xs:element name="prop_one_to_one" type="xs:string" />
          <xs:element name="internal_component" type="xs:string" />
          <xs:element name="internal_list" type="xs:string" />
          <xs:element name="internal_map" type="xs:string" />
          <xs:element name="internal_map_with_many_to_many" type="xs:string" />
          <xs:element name="internal_set" type="xs:string" />
          <xs:element name="internal_set_of_components" type="xs:string" />
          <xs:element name="age_user_type" type="xs:string" />
          <xs:element name="internal_list_of_user_types" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="advancedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="note" type="xs:string" />
        <xs:element name="dynamicconfiguration" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="internalcomponent" >
      <xs:sequence>
        <xs:element name="property" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditeddynamiccomponententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="note" type="xs:string" />
        <xs:element name="customfields" type="xs:anyType" />
        <xs:element name="GeneratedName" type="simpleentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notauditeddynamicmapcomponent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="note" type="xs:string" />
        <xs:element name="customfields" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="simpleproperty" type="xs:string" />
        <xs:element name="parent" type="advancedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditeddynamiccomponenttest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="agetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetooneentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="note" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertiesgrouptest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
          <xs:element name="uniquepropsaudit" type="xs:anyType" />
          <xs:element name="uniquepropsnotauditedaudit" type="xs:anyType" />
          <xs:element name="entityrev1" type="uniquepropsentity" nillable="true" minOccurs="0" />
          <xs:element name="entitynotauditedrev2" type="uniquepropsnotauditedentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notauditedmanytooneincomponent" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="mtocte_id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytooneincomponent" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="mtocte_id1" type="xs:anyType" />
          <xs:element name="ste_id1" type="xs:anyType" />
          <xs:element name="ste_id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyincomponent" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="otmcte_id1" type="xs:anyType" />
          <xs:element name="ste_id1" type="xs:anyType" />
          <xs:element name="ste_id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullproperties" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="outsidetransactiontest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="noneaudited" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manyoperationsintransaction" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="globalversioned" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singleoperationintransaction" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simple" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="delete" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnscaleprecisiontest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="audit" type="xs:anyType" />
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionrollbackbehaviour" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="emptystringtest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="emptyid" type="xs:anyType" />
          <xs:element name="nullid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classicquerytranslatorfactorytest" >
      <xs:complexContent>
       <xs:extension base="simple">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unversionedproperty" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="registerusereventlistenerstest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unversionedpropertieschange" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notversioned" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="polymorphiccollection" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed_id1" type="xs:anyType" />
          <xs:element name="c_id" type="xs:anyType" />
          <xs:element name="p_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentauditing" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditedabstractparenttest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notownedbidirectional" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="pc_id" type="xs:long" />
          <xs:element name="a1_id" type="xs:long" />
          <xs:element name="a2_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childauditing" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childreferencing" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="re_id1" type="xs:anyType" />
          <xs:element name="re_id2" type="xs:anyType" />
          <xs:element name="c_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mixedinheritancestrategiesentitytest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id2" type="activityid" nillable="true" minOccurs="0" />
          <xs:element name="id1" type="activityid" nillable="true" minOccurs="0" />
          <xs:element name="id3" type="activityid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activity" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activityid" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notownedbidirectional" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="pc_id" type="xs:long" />
          <xs:element name="a1_id" type="xs:long" />
          <xs:element name="a2_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionaldoubleabstract" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="cce1_id" type="xs:long" />
          <xs:element name="cse1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentreferencingchildtest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="explukaszrev1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="expadminrev1" type="role" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="polymorphiccollection" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed_id1" type="xs:anyType" />
          <xs:element name="c_id" type="xs:anyType" />
          <xs:element name="p_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childauditing" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentauditing" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="emptychildauditing" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childnullauditing" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childreferencing" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="re_id1" type="xs:anyType" />
          <xs:element name="re_id2" type="xs:anyType" />
          <xs:element name="c_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childprimarykeyjoinauditing" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childauditing" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notownedbidirectional" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="pc_id" type="xs:long" />
          <xs:element name="a1_id" type="xs:long" />
          <xs:element name="a2_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discriminatorformulatest" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="parentaudit" type="xs:anyType" />
          <xs:element name="childver1" type="childentity" nillable="true" minOccurs="0" />
          <xs:element name="childver2" type="childentity" nillable="true" minOccurs="0" />
          <xs:element name="parentver1" type="parententity" nillable="true" minOccurs="0" />
          <xs:element name="parentver2" type="parententity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentauditing" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childreferencing" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="re_id1" type="xs:anyType" />
          <xs:element name="re_id2" type="xs:anyType" />
          <xs:element name="c_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="polymorphiccollection" >
      <xs:complexContent>
       <xs:extension base="baseenversjpafunctionaltestcase">
         <xs:sequence>
          <xs:element name="ed_id1" type="xs:anyType" />
          <xs:element name="c_id" type="xs:anyType" />
          <xs:element name="p_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpastaticmetamodeltest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseenversjpafunctionaltestcase" >
      <xs:complexContent>
       <xs:extension base="abstractenverstest">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="entitymanagerfactorybuilder" type="xs:anyType" />
          <xs:element name="serviceregistry" type="xs:anyType" />
          <xs:element name="entitymanagerfactory" type="xs:anyType" />
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="" type="auditreader" nillable="true" minOccurs="0" />
          <xs:element name="isolatedems" type="xs:anyType" />
          <xs:element name="no_mappings" type="xs:string" />
          <xs:element name="no_classes" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractenverstest" >
      <xs:sequence>
        <xs:element name="auditstrategy" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractonesessiontest" >
      <xs:complexContent>
       <xs:extension base="abstractenverstest">
         <xs:sequence>
          <xs:element name="config" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="auditreader" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testtools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enversrunner" >
      <xs:complexContent>
       <xs:extension base="suite">
         <xs:sequence>
          <xs:element name="runners" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="complexinsertperformance" >
      <xs:complexContent>
       <xs:extension base="abstractperformancetest">
         <xs:sequence>
          <xs:element name="number_inserts" type="xs:long" />
          <xs:element name="idcounter" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertsperformance" >
      <xs:complexContent>
       <xs:extension base="abstractperformancetest">
         <xs:sequence>
          <xs:element name="number_inserts" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="allperformance" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="insertsonetransactionperformance" >
      <xs:complexContent>
       <xs:extension base="abstractperformancetest">
         <xs:sequence>
          <xs:element name="number_inserts" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="evictauditdataaftercommittest" >
      <xs:complexContent>
       <xs:extension base="baseenversfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstractentitymanagertest">
         <xs:sequence>
          <xs:element name="starttime" type="xs:long" />
          <xs:element name="runtotal" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentitymanagertest" >
      <xs:complexContent>
       <xs:extension base="abstractenverstest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="entitymanagerfactorybuilder" type="xs:anyType" />
          <xs:element name="serviceregistry" type="xs:anyType" />
          <xs:element name="emf" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="auditreader" nillable="true" minOccurs="0" />
          <xs:element name="audited" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updatesperformance" >
      <xs:complexContent>
       <xs:extension base="abstractperformancetest">
         <xs:sequence>
          <xs:element name="number_updates" type="xs:long" />
          <xs:element name="number_entities" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="ids" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
</xs:schema> 