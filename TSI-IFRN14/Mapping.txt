ClassDiagram.Class>> Privilege =>=>=> RelationalSchema.Table>> privilege;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> VerificationToken =>=>=> RelationalSchema.Table>> verificationtoken;
ClassDiagram.Class>> PasswordResetToken =>=>=> RelationalSchema.Table>> passwordresettoken;
ClassDiagram.Class>> DeviceMetadata =>=>=> RelationalSchema.Table>> devicemetadata;
ClassDiagram.Attribut>> Privilege.id:Long =>=>=> RelationalSchema.Column>> privilege.id PRIMARY KEY;
ClassDiagram.Attribut>> Privilege.name:String =>=>=> RelationalSchema.Column>> privilege.name;
ClassDiagram.Attribut>> Role.id:Long =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.enabled:boolean =>=>=> RelationalSchema.Column>> user.enabled;
ClassDiagram.Attribut>> User.isusing2fa:boolean =>=>=> RelationalSchema.Column>> user.isusing2fa;
ClassDiagram.Attribut>> User.secret:String =>=>=> RelationalSchema.Column>> user.secret;
ClassDiagram.Attribut>> VerificationToken.expiration:int =>=>=> RelationalSchema.Column>> verificationtoken.expiration;
ClassDiagram.Attribut>> VerificationToken.id:Long =>=>=> RelationalSchema.Column>> verificationtoken.id PRIMARY KEY;
ClassDiagram.Attribut>> VerificationToken.token:String =>=>=> RelationalSchema.Column>> verificationtoken.token;
ClassDiagram.Attribut>> VerificationToken.expiry:Date =>=>=> RelationalSchema.Column>> verificationtoken.expiry;
ClassDiagram.Attribut>> PasswordResetToken.expiration:int =>=>=> RelationalSchema.Column>> passwordresettoken.expiration;
ClassDiagram.Attribut>> PasswordResetToken.id:Long =>=>=> RelationalSchema.Column>> passwordresettoken.id PRIMARY KEY;
ClassDiagram.Attribut>> PasswordResetToken.token:String =>=>=> RelationalSchema.Column>> passwordresettoken.token;
ClassDiagram.Attribut>> PasswordResetToken.expiry:Date =>=>=> RelationalSchema.Column>> passwordresettoken.expiry;
ClassDiagram.Attribut>> DeviceMetadata.id:Long =>=>=> RelationalSchema.Column>> devicemetadata.id PRIMARY KEY;
ClassDiagram.Attribut>> DeviceMetadata.userid:Long =>=>=> RelationalSchema.Column>> devicemetadata.userid;
ClassDiagram.Attribut>> DeviceMetadata.devicedetails:String =>=>=> RelationalSchema.Column>> devicemetadata.devicedetails;
ClassDiagram.Attribut>> DeviceMetadata.location:String =>=>=> RelationalSchema.Column>> devicemetadata.location;
ClassDiagram.Attribut>> DeviceMetadata.lastloggedin:Date =>=>=> RelationalSchema.Column>> devicemetadata.lastloggedin;
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>collection<privilege>: roles_privileges(role_id:Role [PK] #FK to Role,privilege_id:collection<privilege> [PK] #FK to collection<privilege>);
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>collection<role>: users_roles(user_id:User [PK] #FK to User,role_id:collection<role> [PK] #FK to collection<role>);
One-To-One relationship between ClassDiagram.Class>>VerificationToken  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>PasswordResetToken  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
