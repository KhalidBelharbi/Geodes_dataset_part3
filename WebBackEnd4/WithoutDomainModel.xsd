<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="bigdecimalholdertest" >
      <xs:complexContent>
       <xs:extension base="abstractholdertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencestyleconfigunittest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimizerunittest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigintegerholdertest" >
      <xs:complexContent>
       <xs:extension base="abstractholdertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencehilogeneratornoincrementtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="test_sequence" type="xs:string" />
          <xs:element name="serviceregistry" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="generator" type="sequencestylegenerator" nillable="true" minOccurs="0" />
          <xs:element name="sessionimpl" type="sessionimplementor" nillable="true" minOccurs="0" />
          <xs:element name="" type="sequencevalueextractor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractholdertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customversiononestrategytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longholdertest" >
      <xs:complexContent>
       <xs:extension base="abstractholdertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushidgentest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rootentity" >
      <xs:sequence>
        <xs:element name="uid" type="xs:long" />
        <xs:element name="linkedentities" type="relatedentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencevalueextractor" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="query" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencehilogeneratortest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="test_sequence" type="xs:string" />
          <xs:element name="serviceregistry" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="generator" type="sequencehilogenerator" nillable="true" minOccurs="0" />
          <xs:element name="sessionimpl" type="sessionimplementor" nillable="true" minOccurs="0" />
          <xs:element name="" type="sequencevalueextractor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relatedentity" >
      <xs:sequence>
        <xs:element name="uid" type="xs:long" />
        <xs:element name="linkedroot" type="rootentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="bio" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="biolength" type="xs:long" />
        <xs:element name="position" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeelementtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="dob" type="xs:dateTime" />
        <xs:element name="currentaddress" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lastmodified" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestamptest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="synchronizationerrorimpl" >
      <xs:sequence>
        <xs:element name="erroronbefore" type="xs:anyType" />
        <xs:element name="erroronafter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="databaseconnectioninfo" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="databaseconnectioninfo" nillable="true" minOccurs="0" />
        <xs:element name="driver" type="xs:string" />
        <xs:element name="url" type="xs:string" />
        <xs:element name="user" type="xs:string" />
        <xs:element name="pass" type="xs:string" />
        <xs:element name="GeneratedName" type="driver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronizationcollectorimpl" >
      <xs:sequence>
        <xs:element name="beforecompletioncount" type="xs:long" />
        <xs:element name="successfulcompletioncount" type="xs:long" />
        <xs:element name="failedcompletioncount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactioncoordinatorownertestingimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="logicalconnection" type="logicalconnectiontestingimpl" nillable="true" minOccurs="0" />
        <xs:element name="active" type="xs:anyType" />
        <xs:element name="begincount" type="xs:long" />
        <xs:element name="beforecompletioncount" type="xs:long" />
        <xs:element name="successfulcompletioncount" type="xs:long" />
        <xs:element name="failedcompletioncount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="logicalconnectiontestingimpl" >
      <xs:complexContent>
       <xs:extension base="logicalconnectionprovidedimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicjdbctransactiontests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="legacysettinginitiatortest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="bsr" type="bootstrapserviceregistryimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="synchronizationregistrystandardimpltests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactioncoordinatorownertestingimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="active" type="xs:anyType" />
        <xs:element name="begincount" type="xs:long" />
        <xs:element name="beforecompletioncount" type="xs:long" />
        <xs:element name="successfulcompletioncount" type="xs:long" />
        <xs:element name="failedcompletioncount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicjtausertransactiontests" >
      <xs:complexContent>
       <xs:extension base="abstractbasicjtatestscenarios">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbasicjtatestscenarios" >
      <xs:sequence>
        <xs:element name="owner" type="transactioncoordinatorownertestingimpl" nillable="true" minOccurs="0" />
        <xs:element name="transactioncoordinatorbuilder" type="jtatransactioncoordinatorbuilderimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicjtatransactionmanagertests" >
      <xs:complexContent>
       <xs:extension base="abstractbasicjtatestscenarios">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtaplatforminaccessibleimpl" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="preferexceptions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtaplatformstandardtestingimpl" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="instance" type="jtaplatformstandardtestingimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="synchronizationregistry" type="xs:anyType" />
          <xs:element name="synchronizationstrategy" type="jtasynchronizationstrategy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inaccessiblejtaplatformtests" >
      <xs:sequence>
        <xs:element name="owner" type="transactioncoordinatorownertestingimpl" nillable="true" minOccurs="0" />
        <xs:element name="transactioncoordinatorbuilder" type="jtatransactioncoordinatorbuilderimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integerpropertyvalue" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lines" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="data" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anytypetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyvalue" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringpropertyvalue" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyset" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="somespecificproperty" type="propertyvalue" nillable="true" minOccurs="0" />
        <xs:element name="generalproperties" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="complexpropertyvalue" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="subproperties" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="purchasedetail" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="purchaserecord" nillable="true" minOccurs="0" />
        <xs:element name="productid" type="xs:string" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="purchaserecord" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="timestamp" type="xs:dateTime" />
        <xs:element name="details" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="purchaserecordidgenerator" >
      <xs:complexContent>
       <xs:extension base="identitygenerator">
         <xs:sequence>
          <xs:element name="nextpurchasenumber" type="xs:long" />
          <xs:element name="nextpurchasesequence" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeidwithgeneratortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="df" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="orderdate" type="xs:anyType" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="lineitems" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="total" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="customerid" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="orders" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="productid" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="price" type="xs:anyType" />
        <xs:element name="numberavailable" type="xs:long" />
        <xs:element name="numberordered" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="amount" type="xs:double" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="timestamp" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="comment" >
      <xs:sequence>
        <xs:element name="text" type="xs:string" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="timestamp" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="description" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="category" nillable="true" minOccurs="0" />
        <xs:element name="bids" type="set" nillable="true" minOccurs="0" />
        <xs:element name="comments" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinfetchtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="groups" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standaloneschematoolsnamingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="backrefpropertyreftest" >
      <xs:complexContent>
       <xs:extension base="backreftest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="ssn" type="xs:long" />
        <xs:element name="children" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="backreftest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionaliastest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reorderedmappingscollectionaliastest" >
      <xs:complexContent>
       <xs:extension base="collectionaliastest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablebid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="//fieldsfirstid" type="xs:anyType" />
        <xs:element name="secondid" type="xs:string" />
        <xs:element name="thirdid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bytetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="test_value" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="charinnativequerytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sillystringconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterizedattributeconverterparametertypetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attributeconverteronsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringclobconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="colortype" >
      <xs:sequence>
        <xs:element name="blue" type="colortype" nillable="true" minOccurs="0" />
        <xs:element name="red" type="colortype" nillable="true" minOccurs="0" />
        <xs:element name="yellow" type="colortype" nillable="true" minOccurs="0" />
        <xs:element name="color" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="colortypeconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classloaderserviceimpltest" >
      <xs:complexContent>
       <xs:extension base="classloader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testintegrator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="servicebootstrappingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentjoinstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="name" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personalinfo" >
      <xs:sequence>
        <xs:element name="home" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="street1" type="xs:string" />
        <xs:element name="street2" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zipcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="location" type="xs:string" />
        <xs:element name="owner" type="user" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="personalinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetocomponentassociationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="value" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="definition" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="localizedstrings" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="definition" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="values" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localizedstrings" >
      <xs:sequence>
        <xs:element name="strings" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetocomponentcollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lastmodified" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optionalcomponent" >
      <xs:sequence>
        <xs:element name="value1" type="xs:string" />
        <xs:element name="value2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="dob" type="xs:dateTime" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="currentaddress" type="xs:string" />
        <xs:element name="previousaddress" type="xs:string" />
        <xs:element name="yob" type="xs:long" />
        <xs:element name="heightinches" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componenttest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="hire" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="optionalcomponent" nillable="true" minOccurs="0" />
        <xs:element name="directreports" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedvalueserializationtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typefactoryserializationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="continent" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="countries" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="province" >
      <xs:complexContent>
       <xs:extension base="locality">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionstatstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:complexContent>
       <xs:extension base="locality">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statstest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="locality" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="model" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="productline" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="idpart1" type="xs:anyType" />
        <xs:element name="idpart2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicbatchfetchtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="currentid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchfetchtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="productline" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="models" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storedproceduretest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlservercustomsqltest" >
      <xs:complexContent>
       <xs:extension base="customstoredproctestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derbycustomsqltest" >
      <xs:complexContent>
       <xs:extension base="customstoredproctestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derbystoreprocedures" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sybasecustomsqltest" >
      <xs:complexContent>
       <xs:extension base="customstoredproctestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlcustomsqltest" >
      <xs:complexContent>
       <xs:extension base="customstoredproctestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datadirectoraclecustomsqltest" >
      <xs:complexContent>
       <xs:extension base="customstoredproctestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclecustomsqltest" >
      <xs:complexContent>
       <xs:extension base="customstoredproctestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2customsqltest" >
      <xs:complexContent>
       <xs:extension base="customstoredproctestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customsqltestsupport" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customstoredproctestsupport" >
      <xs:complexContent>
       <xs:extension base="customsqltestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employment" >
      <xs:sequence>
        <xs:element name="employmentid" type="xs:long" />
        <xs:element name="employee" type="person" nillable="true" minOccurs="0" />
        <xs:element name="employer" type="organization" nillable="true" minOccurs="0" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="regioncode" type="xs:string" />
        <xs:element name="salary" type="monetaryamount" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetaryamountusertype" >
      <xs:sequence>
        <xs:element name="sql_types" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetaryamount" >
      <xs:sequence>
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="GeneratedName" type="currency" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="imageholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="photo" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="speech" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="length" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custominsertsqlwithidentitycolumntest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dimension" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="width" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlandquotedidentifierstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="spaceship" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="speed" type="xs:double" />
        <xs:element name="s" type="dimension" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="orders" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="orderid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlqueriestest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="persons" type="list" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="organization" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="employments" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="textholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cursorfromcallabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultcheckstyletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="paramcheckingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oraclecheckstyletest" >
      <xs:complexContent>
       <xs:extension base="resultcheckstyletest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="exceptioncheckingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autodiscoverytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="query_" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="callbacktest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="observer" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommitlistenertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="postcommitinserteventlistener" type="postinserteventlistener" nillable="true" minOccurs="0" />
          <xs:element name="postcommitdeleteeventlistener" type="postdeleteeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="postcommitupdateeventlistener" type="postupdateeventlistener" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cleareventlistenertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="listener" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacypostcommitlistenertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="postcommitinserteventlistener" type="postinserteventlistener" nillable="true" minOccurs="0" />
          <xs:element name="postcommitdeleteeventlistener" type="postdeleteeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="postcommitupdateeventlistener" type="postupdateeventlistener" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="field.somedatabases(sybase,etc.)//requireidentifiercolumnsinordertosupportscrollableresults.id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="field.somedatabases(sybase,etc.)//requireidentifiercolumnsinordertosupportscrollableresults.id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hqlscrollfetchtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="query" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeygenerationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crossschemaforeignkeygenerationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="org" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="users" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="org" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="groups" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemaexporttest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaexportsuppliedconnectiontest" >
      <xs:complexContent>
       <xs:extension base="schemaexporttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="payment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="amount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manager" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritanceschemaupdatetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreignkeynametest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="creditcardpayment" >
      <xs:complexContent>
       <xs:extension base="payment{">
         <xs:sequence>
          <xs:element name="creditcardtype" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="quotedtablenamewithforeignkeysschemaupdatetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifierhelpertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="groups" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreignkeynametest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdatetablebackedsequencetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaexportmanagedconnectiontest" >
      <xs:complexContent>
       <xs:extension base="schemaexporttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detail" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="master" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="details" type="xs:string" />
        <xs:element name="currentversion" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formulajointest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="master" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="detail" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotatedformwithbeanvalidationnotnulltest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="addressid" type="xs:long" />
        <xs:element name="addresstext" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedrecord" >
      <xs:sequence>
        <xs:element name="recordversion" type="xs:long" />
        <xs:element name="isdeleted" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testobject" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaquerytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="coursemeeting" >
      <xs:sequence>
        <xs:element name="id" type="coursemeetingid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractfoo" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderaddress" >
      <xs:sequence>
        <xs:element name="orderaddressid" type="xs:long" />
        <xs:element name="delivery" type="address" nillable="true" minOccurs="0" />
        <xs:element name="notifiedaddresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criterialockingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="outerjoincriteriatest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="1" type="order" nillable="true" minOccurs="0" />
          <xs:element name="2" type="order" nillable="true" minOccurs="0" />
          <xs:element name="3" type="order" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="studentdto" >
      <xs:sequence>
        <xs:element name="studentname" type="xs:string" />
        <xs:element name="coursedescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="complexjoinaliastest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderline" >
      <xs:sequence>
        <xs:element name="lineid" type="xs:long" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="articleid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="states" type="usstate" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="countries" type="country" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="limitexpressiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usstate" >
      <xs:sequence>
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="orderid" type="xs:long" />
        <xs:element name="orderlines" type="orderline" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="ordercontacts" type="ordercontact" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="orderaddress" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ordercontact" >
      <xs:sequence>
        <xs:element name="contactid" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="contact" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="citystate" >
      <xs:sequence>
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="studentaddress" >
      <xs:sequence>
        <xs:element name="line1" type="xs:string" />
        <xs:element name="line2" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="weight" type="xs:anyType" />
        <xs:element name="height" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringexpression" >
      <xs:complexContent>
       <xs:extension base="likeexpression">
         <xs:sequence>
          <xs:element name="escape_code" type="character" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="man" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="code" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="code" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="greatfoo" >
      <xs:complexContent>
       <xs:extension base="abstractfoo">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="liketest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enrolment" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="student" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
        <xs:element name="studentnumber" type="xs:long" />
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="year" type="xs:long" />
        <xs:element name="semester" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="woman" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriaorderbytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longinelementstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="elements_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="coursemeetingid" >
      <xs:sequence>
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="day" type="xs:string" />
        <xs:element name="period" type="xs:long" />
        <xs:element name="location" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="myfoo" type="abstractfoo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="coursemeetings" type="set" nillable="true" minOccurs="0" />
        <xs:element name="crosslistedas" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="studyabroad" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="studentnumber" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="citystate" nillable="true" minOccurs="0" />
        <xs:element name="preferred" type="course" nillable="true" minOccurs="0" />
        <xs:element name="enrolments" type="set" nillable="true" minOccurs="0" />
        <xs:element name="addresses" type="map" nillable="true" minOccurs="0" />
        <xs:element name="studyabroads" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="myuserid" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="email" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutablenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="immutableentitynaturalidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutableentitynaturalidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullablenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutablenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachedmutablenaturalidnonstrictreadwritetest" >
      <xs:complexContent>
       <xs:extension base="		cachedmutablenaturalidtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachedmutablenaturalidstrictreadwritetest" >
      <xs:complexContent>
       <xs:extension base="		cachedmutablenaturalidtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachedmutablenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="org" type="xs:string" />
        <xs:element name="password" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="accountid" nillable="true" minOccurs="0" />
        <xs:element name="shortcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidandnaturalidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accountid" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spreadnaturalidtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritednaturalidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxyreattachmenttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionreattachmenttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="comments" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="extendstest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="serviceregistry" type="standardserviceregistryimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="sex" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mathentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mathtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="firstname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extralazytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="session" type="map" nillable="true" minOccurs="0" />
        <xs:element name="documents" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="title" type="xs:string" />
        <xs:element name="content" type="xs:string" />
        <xs:element name="owner" type="user" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionattribute" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="objectdata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanreflectionhelper" >
      <xs:sequence>
        <xs:element name="test_values" type="xs:anyType" />
        <xs:element name="getternames" type="xs:string" />
        <xs:element name="setternames" type="xs:string" />
        <xs:element name="types" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxybean" >
      <xs:sequence>
        <xs:element name="some" type="xs:string" />
        <xs:element name="some" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invocationtargetexceptiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reflectionoptimizertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bean" >
      <xs:sequence>
        <xs:element name="some" type="xs:string" />
        <xs:element name="some" type="xs:long" />
        <xs:element name="some" type="xs:anyType" />
        <xs:element name="some" type="xs:dateTime" />
        <xs:element name="some" type="xs:long" />
        <xs:element name="some" type="xs:long" />
        <xs:element name="some" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enhancertesttask" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street1" type="xs:string" />
        <xs:element name="street2" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="phone" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtytrackingtesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazycollectionwithclearedsessiontesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazycollectionwithclosedsessiontesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyentityloadingwithclosedsessiontesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enhancertestcontext" >
      <xs:complexContent>
       <xs:extension base="defaultenhancementcontext">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enhancertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicenhancementtesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectattributemarkerinterceptor" >
      <xs:sequence>
        <xs:element name="read_marker" type="xs:anyType" />
        <xs:element name="write_marker" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicinsessiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="workorderpk" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="location" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedpktesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
          <xs:element name="entityid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeownertrackertest" >
      <xs:sequence>
        <xs:element name="counter" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtytrackertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetooneassociationtesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyassociationtesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanyassociationtesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hhh3949testtask3" >
      <xs:complexContent>
       <xs:extension base="abstracthhh3949testtask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracthhh3949testtask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hhh3949testtask2" >
      <xs:complexContent>
       <xs:extension base="abstracthhh3949testtask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hhh3949testtask4" >
      <xs:complexContent>
       <xs:extension base="abstracthhh3949testtask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hhh3949testtask1" >
      <xs:complexContent>
       <xs:extension base="abstracthhh3949testtask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enhancertestutils" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="" type="enhancementcontext" nillable="true" minOccurs="0" />
          <xs:element name="workingdir" type="xs:string" />
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazybasicfieldnotinitializedtesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
          <xs:element name="entityid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazycollectionloadingtesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
          <xs:element name="children_size" type="xs:long" />
          <xs:element name="parentid" type="xs:long" />
          <xs:element name="lastchildid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazybasicfieldaccesstesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
          <xs:element name="entityid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazybasicpropertyaccesstesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
          <xs:element name="entityid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyloadingtesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
          <xs:element name="children_size" type="xs:long" />
          <xs:element name="parentid" type="xs:long" />
          <xs:element name="lastchildid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyloadingintegrationtesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
          <xs:element name="children_size" type="xs:long" />
          <xs:element name="parentid" type="xs:long" />
          <xs:element name="lastchildid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadedeletetesttask" >
      <xs:complexContent>
       <xs:extension base="abstractenhancertesttask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractenhancertesttask" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="decompileutils" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testsharedpkonetooneexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlazybasicpropertyaccessexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlazypropertycustomtypeexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlazyexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlazybasicfieldaccessexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfetchinglazytooneexecutable" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testlazymanytooneexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmanytooneproxyexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testinjectfieldinterceptorexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testfetchallexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcustomcolumnreadandwrite" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdirtycheckexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="executable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testispropertyinitializedexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractexecutable" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instrumenttest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="javassistinstrumentationtest" >
      <xs:complexContent>
       <xs:extension base="abstracttransformingclassloaderinstrumenttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttransformingclassloaderinstrumenttestcase" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="isolater" type="xs:anyType" />
          <xs:element name="sig" type="xs:anyType" />
          <xs:element name="args" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="passport" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="issuingcountry" type="xs:string" />
        <xs:element name="issue" type="xs:dateTime" />
        <xs:element name="expiration" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonenoproxy" >
      <xs:sequence>
        <xs:element name="entityid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entity" type="entitywithonetoones" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
        <xs:element name="subfolders" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="documents" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="namewasread" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="child" type="entity" nillable="true" minOccurs="0" />
        <xs:element name="sibling" type="entity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="uppercasename" type="xs:string" />
        <xs:element name="summary" type="xs:string" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="GeneratedName" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="folder" nillable="true" minOccurs="0" />
        <xs:element name="sizekb" type="xs:double" />
        <xs:element name="lasttextmodification" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="passport" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithonetoones" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="onetoonenoproxy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="onetooneproxy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customblobtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetooneproxy" >
      <xs:sequence>
        <xs:element name="entityid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entity" type="entitywithonetoones" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="problematic" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="s" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="password" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapelementformulatest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readonlytest" >
      <xs:complexContent>
       <xs:extension base="abstractreadonlytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="container" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="noproxy" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="proxy" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="nonlazy" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="noproxy" type="info" nillable="true" minOccurs="0" />
        <xs:element name="proxy" type="info" nillable="true" minOccurs="0" />
        <xs:element name="nonlazy" type="info" nillable="true" minOccurs="0" />
        <xs:element name="lazydatapoints" type="set" nillable="true" minOccurs="0" />
        <xs:element name="nonlazyjoindatapoints" type="set" nillable="true" minOccurs="0" />
        <xs:element name="nonlazyselectdatapoints" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enrolment" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="student" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
        <xs:element name="studentnumber" type="xs:long" />
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="year" type="xs:long" />
        <xs:element name="semester" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readonlysessiontest" >
      <xs:complexContent>
       <xs:extension base="abstractreadonlytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readonlysessionlazynonlazytest" >
      <xs:complexContent>
       <xs:extension base="abstractreadonlytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="studentdto" >
      <xs:sequence>
        <xs:element name="studentname" type="xs:string" />
        <xs:element name="coursedescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractreadonlytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="studentnumber" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="preferred" type="course" nillable="true" minOccurs="0" />
        <xs:element name="enrolments" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readonlyproxytest" >
      <xs:complexContent>
       <xs:extension base="abstractreadonlytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readonlycriteriaquerytest" >
      <xs:complexContent>
       <xs:extension base="abstractreadonlytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readonlyversionednodestest" >
      <xs:complexContent>
       <xs:extension base="abstractreadonlytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="info" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="details" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="textholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="thetext" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionednode" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="parent" type="versionednode" nillable="true" minOccurs="0" />
        <xs:element name="children" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentityinstantiator" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentitytuplizer" >
      <xs:complexContent>
       <xs:extension base="pojoentitytuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tuplizerdynamicentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitynameinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptordynamicentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxyinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentitytuplizer" >
      <xs:complexContent>
       <xs:extension base="pojoentitytuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="improvedtuplizerdynamicentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentityinstantiator" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dataproxyhandler" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="data" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositepropertyreftest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="accountid" type="xs:string" />
        <xs:element name="user" type="person" nillable="true" minOccurs="0" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="userid" type="xs:string" />
        <xs:element name="deleted" type="xs:anyType" />
        <xs:element name="accounts" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="list" nillable="true" minOccurs="0" />
        <xs:element name="morechildren" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="friends" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselectfetchwithformulatransactsqltest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="value" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="name" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselectfetchtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="name" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="namelength" type="xs:long" />
        <xs:element name="values" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselectfetchwithformulatest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="studentnumber" type="xs:long" />
        <xs:element name="name" type="personname" nillable="true" minOccurs="0" />
        <xs:element name="preferred" type="course" nillable="true" minOccurs="0" />
        <xs:element name="enrolments" type="set" nillable="true" minOccurs="0" />
        <xs:element name="addresses" type="map" nillable="true" minOccurs="0" />
        <xs:element name="secretcodes" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querycachetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="pk" type="compositekey" nillable="true" minOccurs="0" />
          <xs:element name="executor" type="xs:anyType" />
          <xs:element name="query" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="studentdto" >
      <xs:sequence>
        <xs:element name="studentname" type="personname" nillable="true" minOccurs="0" />
        <xs:element name="coursedescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personname" >
      <xs:sequence>
        <xs:element name="first" type="xs:string" />
        <xs:element name="middle" type="xs:string" />
        <xs:element name="last" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositekey" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="a" type="xs:long" />
        <xs:element name="b" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="coursemeeting" >
      <xs:sequence>
        <xs:element name="id" type="coursemeetingid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractquerycacheresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="yogiexpected" type="student" nillable="true" minOccurs="0" />
          <xs:element name="shermanexpected" type="student" nillable="true" minOccurs="0" />
          <xs:element name="expected1" type="coursemeeting" nillable="true" minOccurs="0" />
          <xs:element name="expected2" type="coursemeeting" nillable="true" minOccurs="0" />
          <xs:element name="expected" type="course" nillable="true" minOccurs="0" />
          <xs:element name="yogiexpected" type="enrolment" nillable="true" minOccurs="0" />
          <xs:element name="shermanexpected" type="enrolment" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriaquerycacheputresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="criteriaquerycacheignoreresulttransformertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriaquerycachenormalresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="criteriaquerycacheputresulttransformertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqlquerycacheputresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="hqlquerycacheignoreresulttransformertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriaquerycacheignoreresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="abstractquerycacheresulttransformertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqlquerycachenormalresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="hqlquerycacheputresulttransformertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enrolment" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="student" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
        <xs:element name="studentnumber" type="xs:long" />
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="year" type="xs:long" />
        <xs:element name="semester" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="coursemeetings" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringcompositekey" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="substation" type="xs:string" />
        <xs:element name="devicetype" type="xs:string" />
        <xs:element name="device" type="xs:string" />
        <xs:element name="analog" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="addresstype" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="stateprovince" type="xs:string" />
        <xs:element name="postalcode" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="GeneratedName" type="student" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hqlquerycacheignoreresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="abstractquerycacheresulttransformertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="coursemeetingid" >
      <xs:sequence>
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="day" type="xs:string" />
        <xs:element name="period" type="xs:long" />
        <xs:element name="location" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instantiateinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
          <xs:element name="injected" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectioninterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="image" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="log" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="entityid" type="xs:string" />
        <xs:element name="action" type="xs:string" />
        <xs:element name="time" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statefulinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
          <xs:element name="" type="session" nillable="true" minOccurs="0" />
          <xs:element name="" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interceptortransactioneventtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interceptortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="actions" type="set" nillable="true" minOccurs="0" />
        <xs:element name="lastupdated" type="xs:anyType" />
        <xs:element name="created" type="xs:anyType" />
        <xs:element name="injected" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cloblocatortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="clob_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longbytearrayholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="longarray" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobmergetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="lob_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="materializedclobtest" >
      <xs:complexContent>
       <xs:extension base="longstringtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializabletypetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="texttest" >
      <xs:complexContent>
       <xs:extension base="longstringtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="imagetest" >
      <xs:complexContent>
       <xs:extension base="longbytearraytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpalargeblobtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializabledata" >
      <xs:sequence>
        <xs:element name="payload" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longstringtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="long_string_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializableholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="serialdata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longstringholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="long" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bloblocatortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="blob_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longbytearraytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="array_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="locator" type="xs:anyType" />
        <xs:element name="locator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="materializedblobtest" >
      <xs:complexContent>
       <xs:extension base="longbytearraytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testenumtypeserialization" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unspecifiedenumtypetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="haircolor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unspecifiedenumtypeentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="enum1" type="xs:anyType" />
        <xs:element name="enum2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumtypetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gender" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="gender" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="haircolor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockmodetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pagingandlockingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="invalidmapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="username" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingexceptiontest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="courseoffering" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
        <xs:element name="semester" type="xs:long" />
        <xs:element name="year" type="xs:long" />
        <xs:element name="enrollments" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enrollment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="offering" type="courseoffering" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="student" nillable="true" minOccurs="0" />
        <xs:element name="grade" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="code" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinselfreferentialfetchprofiletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinfetchprofiletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysql57timestamppropertytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="timestampformat" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysql57timestampfspfunctiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestamppropertytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="timestampformat" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timepropertytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="timeformat" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idbagowner" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentidbagtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="email" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="permissions" type="list" nillable="true" minOccurs="0" />
        <xs:element name="emailaddresses" type="list" nillable="true" minOccurs="0" />
        <xs:element name="sessiondata" type="map" nillable="true" minOccurs="0" />
        <xs:element name="sessionattributenames" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mammal" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="mammalname" type="xs:string" />
          <xs:element name="mammalname2" type="xs:string" />
          <xs:element name="mammalname3" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="boolvar" type="xs:anyType" />
        <xs:element name="GeneratedName" type="zoo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zoo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="animals" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permission" >
      <xs:sequence>
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emailaddress" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="email" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinfetchelementcollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bagowner" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="bagowner" nillable="true" minOccurs="0" />
        <xs:element name="children" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentbagtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parts" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkey" >
      <xs:sequence>
        <xs:element name="role" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="part" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="backrefcompositemapkeytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="container" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="contents" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentsetnonlazytest" >
      <xs:complexContent>
       <xs:extension base="persistentsettest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentsettest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listowner" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="listowner" nillable="true" minOccurs="0" />
        <xs:element name="children" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentlisttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="lineitems" type="lineitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="productcode" type="xs:string" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyassociationnocascadetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:complexContent>
       <xs:extension base="basechild">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="//linkedhashsetusedforthereasontoforcethespecificorderofelementsincollectionchildren" type="basechild" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basechild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="dependency" type="basechild" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unversionedcascadedereferencedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractdereferencedcollectiontest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionedcascadedereferencedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractdereferencedcollectiontest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionednocascadedereferencedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractdereferencedcollectiontest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unversionednocascadedereferencedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractdereferencedcollectiontest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractdereferencedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultablelistimpl" >
      <xs:complexContent>
       <xs:extension base="arraylist">
         <xs:sequence>
          <xs:element name="defaultvalue" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentdefaultablelist" >
      <xs:complexContent>
       <xs:extension base="persistentlist">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultablelist" >
      <xs:complexContent>
       <xs:extension base="list">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="values" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterizedusercollectiontypeannotationsvarianttest" >
      <xs:complexContent>
       <xs:extension base="parameterizedusercollectiontypetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterizedusercollectiontypetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterizedusercollectiontypehbmvarianttest" >
      <xs:complexContent>
       <xs:extension base="parameterizedusercollectiontypetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultablelisttype" >
      <xs:sequence>
        <xs:element name="defaultvalue" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentmylist" >
      <xs:complexContent>
       <xs:extension base="persistentlist">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usercollectiontypeannotationsvarianttest" >
      <xs:complexContent>
       <xs:extension base="usercollectiontypetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mylist" >
      <xs:complexContent>
       <xs:extension base="arraylist<x>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usercollectiontypehbmvarianttest" >
      <xs:complexContent>
       <xs:extension base="usercollectiontypetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="imylist" >
      <xs:complexContent>
       <xs:extension base="list<x>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mylisttype" >
      <xs:sequence>
        <xs:element name="lastinstantiationrequest" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usercollectiontypetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ordercollectionofjoinedhierarchytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymaptest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="placed" type="xs:dateTime" />
        <xs:element name="orderee" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lineitems" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="pk" type="lineitempk" nillable="true" minOccurs="0" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifierpropertyreferencestest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lineitempk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="productcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="file" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="file" nillable="true" minOccurs="0" />
        <xs:element name="deleted" type="xs:anyType" />
        <xs:element name="children" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wheretest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="qualifiednameparsertest" >
      <xs:sequence>
        <xs:element name="default_schema" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="default_catalog" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="parser" type="qualifiednameparser" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheablehbmxmltest" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="hbm_resource_name" type="xs:string" />
        <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="binder" type="mappingbinder" nillable="true" minOccurs="0" />
        <xs:element name="hbmxml" type="file" nillable="true" minOccurs="0" />
        <xs:element name="hbmxmlbin" type="file" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcmocks" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cfgxmlparsingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cfgxmlresourcenameclosingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="classloaderservice" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="partnera" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resulttransformertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contract" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="a" type="partnera" nillable="true" minOccurs="0" />
        <xs:element name="b" type="partnerb" nillable="true" minOccurs="0" />
        <xs:element name="custom1" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partnerb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generalworktest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testkeywordrecognition" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="serviceregistry" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="boat" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="tag" type="xs:string" />
        <xs:element name="driver" type="person" nillable="true" minOccurs="0" />
        <xs:element name="boarder" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggressivereleasetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="services" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicconnectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringhelpertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="base_package" type="xs:string" />
          <xs:element name="_helper_fqn" type="xs:string" />
          <xs:element name="_helper_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializablething" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinediterabletest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertieshelpertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="props" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializationhelpertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="custom" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="children" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityresolvertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemautil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securedocumentimpl" >
      <xs:complexContent>
       <xs:extension base="documentimpl">
         <xs:sequence>
          <xs:element name="permissionbits" type="xs:anyType" />
          <xs:element name="owner" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:complexContent>
       <xs:extension base="item">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="securedocument" >
      <xs:complexContent>
       <xs:extension base="document">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="folderimpl" >
      <xs:complexContent>
       <xs:extension base="itemimpl">
         <xs:sequence>
          <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="itemimpl" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interfaceproxytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:complexContent>
       <xs:extension base="item">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="documentinterceptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="documentimpl" >
      <xs:complexContent>
       <xs:extension base="itemimpl">
         <xs:sequence>
          <xs:element name="content" type="xs:anyType" />
          <xs:element name="modified" type="xs:anyType" />
          <xs:element name="created" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="cars" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitynamefromsubclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vehicle" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="vin" type="xs:string" />
        <xs:element name="owner" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:complexContent>
       <xs:extension base="vehicle">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="insertorderingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="memberships" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="membership" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="user" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="group" nillable="true" minOccurs="0" />
        <xs:element name="activation" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testenum" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumusertype" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
        <xs:element name="sql_types" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="testenum" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usertypemappingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase{">
         <xs:sequence>
          <xs:element name="cfg" type="configuration" nillable="true" minOccurs="0" />
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentclasstest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="serviceregistry" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="userconfid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="user" type="xs:long" />
        <xs:element name="conf" type="confid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="confid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="confkey" type="xs:string" />
        <xs:element name="confvalue" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aliastest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuevisitortest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="serviceregistry" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappingreorderedaliastest" >
      <xs:complexContent>
       <xs:extension base="aliastest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentclassvisitortest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="serviceregistry" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="savingsaccountbase" >
      <xs:complexContent>
       <xs:extension base="account">
         <xs:sequence>
          <xs:element name="withdrawallimit" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="intermediatemappedsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accountbase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="accountnumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetaryamount" >
      <xs:sequence>
        <xs:element name="amount" type="xs:anyType" />
        <xs:element name="GeneratedName" type="currency" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="length" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="overseasphonenumber" >
      <xs:complexContent>
       <xs:extension base="phonenumber">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="widget" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="java5featurestest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phonenumbertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newcustomentitymappingannotationstest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="" type="metadata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="firstname" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basichibernateannotationstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertydefaultmappingstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="casterstringtype" >
      <xs:sequence>
        <xs:element name="cast" type="xs:string" />
        <xs:element name="parameters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tool" >
      <xs:complexContent>
       <xs:extension base="widget">
         <xs:sequence>
          <xs:element name="category" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateannotationmappingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="monetaryamountusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="starred" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lastname" >
      <xs:sequence>
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unidircollectionwithmultipleownertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="brand" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="surname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="character" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testbasicops" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="toy" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="brand" nillable="true" minOccurs="0" />
        <xs:element name="serial" type="xs:string" />
        <xs:element name="owner" type="boy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bug" >
      <xs:sequence>
        <xs:element name="description" type="xs:string" />
        <xs:element name="reportedby" type="person" nillable="true" minOccurs="0" />
        <xs:element name="summary" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="countryattitude" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="boy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="likes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localizedstring" >
      <xs:sequence>
        <xs:element name="default_" type="xs:anyType" />
        <xs:element name="variations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//@collectionofelementslistofc" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deepcollectionelementtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexedcollectionofelementstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elementcollectionsortingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="firstname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="favoritefood" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="poiarrival" >
      <xs:sequence>
        <xs:element name="expectedtime" type="xs:dateTime" />
        <xs:element name="arrivetime" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="recreatecollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetooneerrortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serialnumberpk" >
      <xs:sequence>
        <xs:element name="brand" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="computerpk" >
      <xs:sequence>
        <xs:element name="brand" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baseentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hhh4851test" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullableprimarykeytest" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optionalonetoonemappedbytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="son" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="father" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optionalonetoonepkjctest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="father" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonejointabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="shipmentstate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="property" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderlinepk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primarykey" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="card" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="key" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eagerkeymanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="card_id" type="xs:string" />
          <xs:element name="key_id" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childpk" >
      <xs:sequence>
        <xs:element name="nthchild" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aid" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="b" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="c" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="someentityid" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="parent" type="someentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tvmagazinpk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="channel" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="presenter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="df" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="otherloglistener" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlcontexttest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="socialsecuritynumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="countrycode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="availability" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loglistener" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competition" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bustrippk" >
      <xs:sequence>
        <xs:element name="busnumber" type="xs:string" />
        <xs:element name="busdriver" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="organization" >
      <xs:sequence>
        <xs:element name="organizationid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlockannotationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columntransformertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestamptest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generatedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indextest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fixedleg" >
      <xs:complexContent>
       <xs:extension base="leg">
         <xs:sequence>
          <xs:element name="/***fixedrate.*/rate" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="floatleg" >
      <xs:complexContent>
       <xs:extension base="leg">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="/***spreadovertheselectedrateindex(inbasispoints).*/ratespread" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nestedembeddableattributeoverridetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legalstructure" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="corporationtype" type="corptype" nillable="true" minOccurs="0" />
        <xs:element name="origin" type="nationality" nillable="true" minOccurs="0" />
        <xs:element name="topmanagement" type="manager" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablea" >
      <xs:sequence>
        <xs:element name="embedb" type="embeddableb" nillable="true" minOccurs="0" />
        <xs:element name="embedattra" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="iso2" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notonialdeal" >
      <xs:complexContent>
       <xs:extension base="deal">
         <xs:sequence>
          <xs:element name="/***notionalamountofbothirss.*/notional" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="leg" >
      <xs:sequence>
        <xs:element name="/***showshowfrequentpaymentsaccordingtothislegshouldbemade.*/payment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deal" >
      <xs:sequence>
        <xs:element name="/***dealid.*/id" type="xs:string" />
        <xs:element name="/***withthetenor.*/" type="swap" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="summary" >
      <xs:sequence>
        <xs:element name="size" type="xs:long" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="summarized" type="book" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personname" >
      <xs:complexContent>
       <xs:extension base="name">
         <xs:sequence>
          <xs:element name="aliases" type="alias" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablewithone2manytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="name" >
      <xs:sequence>
        <xs:element name="first" type="xs:string" />
        <xs:element name="last" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="urlfavorite" >
      <xs:sequence>
        <xs:element name="url" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablewithmany2onetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="line1" type="xs:string" />
        <xs:element name="line2" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="postalcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="regionalarticlepk" >
      <xs:sequence>
        <xs:element name="/***countryiso2code*/iso2" type="xs:string" />
        <xs:element name="localuniquekey" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="swap" >
      <xs:sequence>
        <xs:element name="/***tenor(duration)oftheswap(inyears).*/tenor" type="xs:long" />
        <xs:element name="/***fixedleg(cashflowswiththefixedrate).*/" type="fixedleg" nillable="true" minOccurs="0" />
        <xs:element name="/***floatingleg(cashflowsboundtoafinancialindex).*/" type="floatleg" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddableb" >
      <xs:sequence>
        <xs:element name="embedattrb" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="address1" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="type" type="addresstype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="internetfavorites" >
      <xs:sequence>
        <xs:element name="links" type="urlfavorite" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="ideas" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flyingobject" >
      <xs:complexContent>
       <xs:extension base="thing">
         <xs:sequence>
          <xs:element name="serial" type="xs:string" />
          <xs:element name="altitude" type="xs:long" />
          <xs:element name="metricaltitude" type="xs:long" />
          <xs:element name="color" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stuff" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="value" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedgenericstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pricedstuff" >
      <xs:complexContent>
       <xs:extension base="stuff<price>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:complexContent>
       <xs:extension base="pricedstuff">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="" type="type" nillable="true" minOccurs="0" />
          <xs:element name="" type="owner" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unresolvedtypetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ticketcomparator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arraytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivecharacterarraytexttype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<char[]>">
         <xs:sequence>
          <xs:element name="instance" type="primitivecharacterarraytexttype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitserializabletype" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobtest" >
      <xs:complexContent>
       <xs:extension base="abstractlobtest<book,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="editor" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="imagetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="array_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loblocatortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="texttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="long_string_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcompiledcode" >
      <xs:sequence>
        <xs:element name="header" type="xs:anyType" />
        <xs:element name="fullcode" type="xs:anyType" />
        <xs:element name="metadata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="characterarraytexttype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<character[]>">
         <xs:sequence>
          <xs:element name="instance" type="characterarraytexttype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbook" >
      <xs:sequence>
        <xs:element name="shortdescription" type="xs:string" />
        <xs:element name="fulltext" type="xs:string" />
        <xs:element name="code" type="character" nillable="true" minOccurs="0" />
        <xs:element name="code2" type="xs:anyType" />
        <xs:element name="GeneratedName" type="editor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobwithsequenceidentitygeneratortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="materializedblobtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitserializable" >
      <xs:sequence>
        <xs:element name="defaultvalue" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractlobtest" >
      <xs:complexContent>
       <xs:extension base="abstractbook,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitserializabletype" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitserializable" >
      <xs:sequence>
        <xs:element name="defaultvalue" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializabletoimagetype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<serializable>">
         <xs:sequence>
          <xs:element name="instance" type="primitivecharacterarraytexttype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionedlobtest" >
      <xs:complexContent>
       <xs:extension base="abstractlobtest<versionedbook,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracleseqidgendialect" >
      <xs:complexContent>
       <xs:extension base="oracle10gdialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrappedimagetype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="wrappedimagetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializabletoblobtypetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="d_pk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="c" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fkcircularitytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a_pk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="d" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalidonsinglemanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="immutablenaturalkeylookuptest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedandnaturalidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aid" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basketitemspk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="GeneratedName" type="shoppingbaskets" nillable="true" minOccurs="0" />
        <xs:element name="cost" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shoppingbasketspk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="owner" type="customers" nillable="true" minOccurs="0" />
        <xs:element name="basketdatetime" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storecustomerpk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="store" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alphabeticalidmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="parent" type="c" nillable="true" minOccurs="0" />
        <xs:element name="sequencenumber" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alphabeticalmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cid" >
      <xs:sequence>
        <xs:element name="prent" type="a" nillable="true" minOccurs="0" />
        <xs:element name="sequencenumber" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="knive" >
      <xs:sequence>
        <xs:element name="brand" type="xs:string" />
        <xs:element name="bladelength" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlaccesstest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crew" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accessmappingtest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="thingy" >
      <xs:sequence>
        <xs:element name="god" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="position" >
      <xs:sequence>
        <xs:element name="x" type="xs:long" />
        <xs:element name="y" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="color" >
      <xs:sequence>
        <xs:element name="r" type="xs:long" />
        <xs:element name="g" type="xs:long" />
        <xs:element name="b" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="woody" >
      <xs:complexContent>
       <xs:extension base="thingy">
         <xs:sequence>
          <xs:element name="color" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="//shouldn'tbepersistentisalive" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="woody" >
      <xs:complexContent>
       <xs:extension base="thingy">
         <xs:sequence>
          <xs:element name="color" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="//shouldn'tbepersistentisalive" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accesstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="thingy" >
      <xs:sequence>
        <xs:element name="god" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="closet" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="numberofdoors" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addressentry" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummynamingstrategy" >
      <xs:complexContent>
       <xs:extension base="physicalnamingstrategystandardimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namingstrategytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vegetablepk" >
      <xs:sequence>
        <xs:element name="farmer" type="xs:string" />
        <xs:element name="harvestdate" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discriminatoroptionstest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legalentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedsubclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclassandsecondarytable" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pooladdress" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicoperationstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="some_entity_table_name" type="xs:string" />
          <xs:element name="some_other_entity_table_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="grade" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionpersister" >
      <xs:complexContent>
       <xs:extension base="onetomanypersister">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitypersister" >
      <xs:complexContent>
       <xs:extension base="singletableentitypersister">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="duplicatetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tree" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="latitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="militarybuilding" >
      <xs:sequence>
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="latitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="footballerpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planet" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newgeneratormappingstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uuidgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uuidgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatesequencetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="schema_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnoverridetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="expectedsqlpointytooth" type="xs:string" />
          <xs:element name="expectedsqltwinkletoes" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tree" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="militarybuilding" >
      <xs:sequence>
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="latitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="latitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planet" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="footballerpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnoverridetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="expectedsqlpointytooth" type="xs:string" />
          <xs:element name="expectedsqltwinkletoes" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alternativenamingstrategy" >
      <xs:complexContent>
       <xs:extension base="ejb3namingstrategy">
         <xs:sequence>
          <xs:element name="instance" type="namingstrategy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dimensions" >
      <xs:sequence>
        <xs:element name="length" type="xs:long" />
        <xs:element name="width" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identity" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryandsqltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="darkness" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityembeddedidparentembeddediddeptest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emppk" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="policyid" >
      <xs:sequence>
        <xs:element name="type" type="xs:string" />
        <xs:element name="deppk" type="dependentid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emppk" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="//matchesnameof@idattributename" type="xs:string" />
        <xs:element name="//matchesnameof@idattributeandtypeofembeddedidofemployeeemp" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityembeddedidparentidclasstest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="policyid" >
      <xs:sequence>
        <xs:element name="type" type="xs:string" />
        <xs:element name="deppk" type="dependentid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emppk" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentsimpledeptest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentsimpledepmapsidtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derivedidentityembeddedidparentsameidtypeembeddediddeptest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityembeddedidparentsameidtypeidclassdeptest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//correspondstopktypeofemployeeemppk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentembeddeddeptest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//correspondstopktypeofemployeeemp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentidclassdeptest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idclassgeneratedvaluemanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customerinventorypk" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentembeddediddeptest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customerinventorytwopk" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="custid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositekeydeletetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idmapmanytoonespecjtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customerinventorypk" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="custid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//correspondstopktypeofemployeeemppk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreigngeneratorviamapsidtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityidclassparentsameidtypeembeddediddeptest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityidclassparentsameidtypeidclassdeptest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="first_name" type="xs:string" />
          <xs:element name="last_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employerid" >
      <xs:sequence>
        <xs:element name="//matchesnameof@idattributename" type="xs:string" />
        <xs:element name="//matchesnameof@idattributeandtypeofemployeepkemployee" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonewithderivedidentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderlinepk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="//matchesnameof@idattributeandtypeofemployeepkemp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositederivedidentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derivedidentitywithbidirectionalassociationtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emppk" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityidclassparentembeddediddeptest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="//matchesnameof@idattributename" type="xs:string" />
        <xs:element name="//matchesnameofattributeandtypeofemployeepkemp" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityidclassparentidclassdeptest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tableperclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addressentrypk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="exchangeratekey" >
      <xs:sequence>
        <xs:element name="date" type="xs:long" />
        <xs:element name="1" type="currency" nillable="true" minOccurs="0" />
        <xs:element name="2" type="currency" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generation" >
      <xs:sequence>
        <xs:element name="age" type="xs:string" />
        <xs:element name="culture" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagerindexedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="paintingpk" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="painter" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="building" >
      <xs:sequence>
        <xs:element name="height" type="xs:long" />
        <xs:element name="GeneratedName" type="room" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uniqueconstrainttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="safemappingtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedsubclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subselecttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tuplizertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicinstantiator" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitynameinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicentitytuplizer" >
      <xs:complexContent>
       <xs:extension base="pojoentitytuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dataproxyhandler" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="data" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamiccomponenttuplizer" >
      <xs:complexContent>
       <xs:extension base="pojocomponenttuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hammer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tool" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxybreakingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="firstletter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="common" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trimmed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lastnumber" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeycustomenumtypetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumeratedtypetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="firstlettertype" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.type.enumtype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lastnumbertype" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.type.enumtype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ormxmlenumtypetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binding" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bookwithormenum" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="ordinalenum" type="binding" nillable="true" minOccurs="0" />
        <xs:element name="stringenum" type="binding" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumeratedwithmappedsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="socialnetwork" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeyenumeratedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="companycode" type="xs:anyType" />
        <xs:element name="contractnumber" type="xs:long" />
        <xs:element name="contractsequencenumber" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modelid" >
      <xs:sequence>
        <xs:element name="/***/serialversionuid" type="xs:long" />
        <xs:element name="companycode" type="xs:anyType" />
        <xs:element name="manufacturercode" type="xs:anyType" />
        <xs:element name="modelcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonewithformulatest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manufacturerid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="companycode" type="xs:anyType" />
        <xs:element name="manufacturercode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanymaxfetchdepth0test" >
      <xs:complexContent>
       <xs:extension base="manytomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="womanpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contactinfo" >
      <xs:sequence>
        <xs:element name="//@manytoone//addressaddress//unidirectional//bidirectionalphonenumbers" type="phonenumber" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="catpk" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="thoroughbred" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contactinfo" >
      <xs:sequence>
        <xs:element name="//@manytoone//addressaddress//unidirectional//bidirectionalphonenumbers" type="phonenumber" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobinfo" >
      <xs:sequence>
        <xs:element name="jobdescription" type="xs:string" />
        <xs:element name="//bidirectionalpm" type="programmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="iselder" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ddlwithoutcallbacktest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="displayconnector" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="GeneratedName" type="display" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanvalidationprovidedfactorytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanvalidationgroupstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanvalidationdisabledtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatetraversableresolvertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ddltest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="strict" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanvalidationautotest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="button" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="size" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indextest" >
      <xs:complexContent>
       <xs:extension base="abstractjpaindextest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractjpaindextest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dealer" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="rate" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ormxmlindextest" >
      <xs:complexContent>
       <xs:extension base="abstractjpaindextest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notfoundtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interaction" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitynonentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="communication" >
      <xs:complexContent>
       <xs:extension base="interaction">
         <xs:sequence>
          <xs:element name="species" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cellular" >
      <xs:complexContent>
       <xs:extension base="phone">
         <xs:sequence>
          <xs:element name="brand" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:complexContent>
       <xs:extension base="voice">
         <xs:sequence>
          <xs:element name="isnumeric" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderid" >
      <xs:sequence>
        <xs:element name="schoolid" type="xs:string" />
        <xs:element name="academicyear" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="/***isamaleorafemale*///showhetereogenouspktypesismale" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultnullorderingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderitemid" >
      <xs:sequence>
        <xs:element name="schoolid" type="xs:string" />
        <xs:element name="academicyear" type="xs:anyType" />
        <xs:element name="dayno" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manufacturer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="models" type="model" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="automobile" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="polymorphismtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="referencedcolumnnametest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="places" >
      <xs:sequence>
        <xs:element name="livingroom" type="place" nillable="true" minOccurs="0" />
        <xs:element name="kitchen" type="place" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="morefetchprofiletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchprofiletest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="isbn" type="xs:string" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="authors" type="author" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ormxmlparsetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="birth" type="xs:dateTime" />
        <xs:element name="books" type="book" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondarytabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tableperclasstest" >
      <xs:complexContent>
       <xs:extension base="subclasstest{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclasstest" >
      <xs:complexContent>
       <xs:extension base="subclasstest{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filterinheritancetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="transaction" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singletabletest" >
      <xs:complexContent>
       <xs:extension base="subclasstest{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="backquotetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="serviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="" type="sessionfactory" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="socialtouchpoints" >
      <xs:sequence>
        <xs:element name="//owningsideofmanytomanywebsite" type="socialsite" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entry" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="tags" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributeoverridetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="associationoverrideschematest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="schema_name" type="xs:string" />
          <xs:element name="table_name" type="xs:string" />
          <xs:element name="id_column_name" type="xs:string" />
          <xs:element name="value_column_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyinfo" >
      <xs:sequence>
        <xs:element name="parcelnumber" type="xs:anyType" />
        <xs:element name="size" type="xs:anyType" />
        <xs:element name="tax" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contactinfo" >
      <xs:sequence>
        <xs:element name="ess" type="addr" nillable="true" minOccurs="0" />
        <xs:element name="phonenumbers" type="phonenumber" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="social" type="socialtouchpoints" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="move" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="from" type="location" nillable="true" minOccurs="0" />
        <xs:element name="to" type="location" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associationoverridetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interfacestest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myoidgenerator" >
      <xs:sequence>
        <xs:element name="counter" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mystringtype" >
      <xs:sequence>
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicparameterizedtypetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myoid" >
      <xs:sequence>
        <xs:element name="high" type="xs:long" />
        <xs:element name="middle" type="xs:long" />
        <xs:element name="low" type="xs:long" />
        <xs:element name="other" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myoidtype" >
      <xs:sequence>
        <xs:element name="property_names" type="xs:string" />
        <xs:element name="s" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclassxmltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="habitatspecieslink" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="habitatid" type="xs:long" />
        <xs:element name="speciesid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="domainadminid" >
      <xs:sequence>
        <xs:element name="domainname" type="xs:string" />
        <xs:element name="adminuser" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclasscompositepktest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="/***isamaleorafemale*///showhetereogenouspktypesismale" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonejointest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="userpk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="userkey" type="xs:long" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericobject" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonereferencedcolumnnametest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nodepk" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="level" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lotzpk" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="loccode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiercollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="government" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="primeminister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:complexContent>
       <xs:extension base="java.io.serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hbmwithidentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="z" >
      <xs:complexContent>
       <xs:extension base="java.io.serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hbmtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cloudtype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3xmlmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="ejb3xmltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3xmlonetoonetest" >
      <xs:complexContent>
       <xs:extension base="ejb3xmltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="light" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lighter" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="model" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="manufacturer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="field1" type="entity2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3xmltestcase" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="reader" type="jpaoverriddenannotationreader" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="organization" type="map" nillable="true" minOccurs="0" />
        <xs:element name="conferenceroomextensions" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="carmodel" >
      <xs:complexContent>
       <xs:extension base="model">
         <xs:sequence>
          <xs:element name="year" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonexistentormversiontest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity3" >
      <xs:sequence>
        <xs:element name="field1" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3xmlmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="ejb3xmltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3xmltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3xmlonetomanytest" >
      <xs:complexContent>
       <xs:extension base="ejb3xmltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ormversion1supportedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vicepresident" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3xmlelementcollectiontest" >
      <xs:complexContent>
       <xs:extension base="ejb3xmltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="field1" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securedbindingtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplepk" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplepk" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="id3" type="xs:long" />
        <xs:element name="//annotationsourceprocessor(incorrectly)requiresthistobetransientseehhh-4819andhhh-4820transientcachedhashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclassgeneratedvaluetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddableintegratortest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dollarvalueusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="investment" >
      <xs:sequence>
        <xs:element name="amount" type="monetaryamount" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldaccessednestedembeddablemetadatatest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="monetaryamount" >
      <xs:sequence>
        <xs:element name="amount" type="xs:anyType" />
        <xs:element name="currency" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="investment" >
      <xs:sequence>
        <xs:element name="amount" type="monetaryamount" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetaryamount" >
      <xs:sequence>
        <xs:element name="amount" type="xs:anyType" />
        <xs:element name="currency" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nestedembeddablemetadatatest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dollarvalue" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="amount" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mydate" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="investortypecontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mydateusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="investment" >
      <xs:sequence>
        <xs:element name="amount" type="dollarvalue" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="date" type="mydate" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jointest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="create" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namingstrategyjointest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testnamingstrategy" >
      <xs:complexContent>
       <xs:extension base="physicalnamingstrategystandardimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dogpk" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="ownername" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:complexContent>
       <xs:extension base="parent>">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="arent" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericsinheritancetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parenthierarchy2" >
      <xs:complexContent>
       <xs:extension base="childhierarchy2>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:complexContent>
       <xs:extension base="child>">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="children" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childhierarchy2" >
      <xs:complexContent>
       <xs:extension base="parenthierarchy2>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="thing" >
      <xs:sequence>
        <xs:element name="isalive" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonnullablecirculardependencycascadetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personpair" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="left" type="person" nillable="true" minOccurs="0" />
        <xs:element name="right" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadetoembeddedmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/bcollection" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***nodocumentation*/dcollection" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***nodocumentation*/ccollection" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="e" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/" type="f" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/acollection" type="a" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***nodocumentation*/ecollection" type="e" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="h" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/" type="g" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/ccollection" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***nodocumenttion*/" type="a" nillable="true" minOccurs="0" />
          <xs:element name="/***nodocumentation*/" type="f" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="f" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/bcollection" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***nodocumentation*/" type="h" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadecircleidentityidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumenttion*/" type="a" nillable="true" minOccurs="0" />
          <xs:element name="/***nodocumentation*/" type="g" nillable="true" minOccurs="0" />
          <xs:element name="/***nodocumentation*/" type="b" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="g" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/ccollection" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/a" type="xs:anyType" />
          <xs:element name="/***nodocumentation*/" type="g" nillable="true" minOccurs="0" />
          <xs:element name="/***nodocumentation*/b" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="g" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/ccollection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/ccollection" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***nodocumentation*/a" type="xs:anyType" />
          <xs:element name="/***nodocumentation*/" type="f" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="f" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/bcollection" type="xs:anyType" />
          <xs:element name="/***nodocumentation*/" type="h" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/acollection" type="xs:anyType" />
          <xs:element name="/***nodocumentation*/ecollection" type="e" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadecirclesequenceidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="h" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/g" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/bcollection" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***nodocumentation*/dcollection" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***nodocumentation*/ccollection" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="e" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/" type="f" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="g" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="" type="b" nillable="true" minOccurs="0" />
          <xs:element name="fcollection" type="f" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bcollection" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="dcollection" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="f" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/ecollection" type="e" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
          <xs:element name="" type="g" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/gcollection" type="g" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***nodoumentation*/" type="c" nillable="true" minOccurs="0" />
          <xs:element name="/***noocumentation*/" type="d" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bcollection" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="c" nillable="true" minOccurs="0" />
          <xs:element name="" type="e" nillable="true" minOccurs="0" />
          <xs:element name="fcollection" type="f" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="e" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="dcollection" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="f" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multicirclejpacascadesequencetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="b" nillable="true" minOccurs="0" />
          <xs:element name="" type="c" nillable="true" minOccurs="0" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
          <xs:element name="" type="e" nillable="true" minOccurs="0" />
          <xs:element name="" type="f" nillable="true" minOccurs="0" />
          <xs:element name="" type="g" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="g" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="" type="b" nillable="true" minOccurs="0" />
          <xs:element name="fcollection" type="f" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bcollection" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="dcollection" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="f" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/ecollection" type="e" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
          <xs:element name="" type="g" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/gcollection" type="g" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***nodoumentation*/" type="c" nillable="true" minOccurs="0" />
          <xs:element name="/***noocumentation*/" type="d" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bcollection" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="c" nillable="true" minOccurs="0" />
          <xs:element name="" type="e" nillable="true" minOccurs="0" />
          <xs:element name="fcollection" type="f" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="e" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="dcollection" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="f" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multicirclejpacascadeidentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="b" nillable="true" minOccurs="0" />
          <xs:element name="" type="c" nillable="true" minOccurs="0" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
          <xs:element name="" type="e" nillable="true" minOccurs="0" />
          <xs:element name="" type="f" nillable="true" minOccurs="0" />
          <xs:element name="" type="g" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multicirclenonjpacascadeidentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="b" nillable="true" minOccurs="0" />
          <xs:element name="" type="c" nillable="true" minOccurs="0" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
          <xs:element name="" type="e" nillable="true" minOccurs="0" />
          <xs:element name="" type="f" nillable="true" minOccurs="0" />
          <xs:element name="" type="g" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="e" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="dcollection" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="f" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bcollection" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="c" nillable="true" minOccurs="0" />
          <xs:element name="" type="e" nillable="true" minOccurs="0" />
          <xs:element name="fcollection" type="f" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="gcollection" type="g" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="c" nillable="true" minOccurs="0" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="f" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/ecollection" type="e" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
          <xs:element name="" type="g" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bcollection" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="dcollection" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="g" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="" type="b" nillable="true" minOccurs="0" />
          <xs:element name="fcollection" type="f" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="gcollection" type="g" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="c" nillable="true" minOccurs="0" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="f" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/ecollection" type="e" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
          <xs:element name="" type="g" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bcollection" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="dcollection" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="g" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="" type="b" nillable="true" minOccurs="0" />
          <xs:element name="fcollection" type="f" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="e" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="dcollection" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="f" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multicirclenonjpacascadesequencetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="b" nillable="true" minOccurs="0" />
          <xs:element name="" type="c" nillable="true" minOccurs="0" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
          <xs:element name="" type="e" nillable="true" minOccurs="0" />
          <xs:element name="" type="f" nillable="true" minOccurs="0" />
          <xs:element name="" type="g" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bcollection" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="c" nillable="true" minOccurs="0" />
          <xs:element name="" type="e" nillable="true" minOccurs="0" />
          <xs:element name="fcollection" type="f" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="city" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strategytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitsqlresultsetmappingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="query" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myinterface" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myinterfaceimpl" >
      <xs:sequence>
        <xs:element name="key1" type="xs:string" />
        <xs:element name="key2" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcompositeidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addressimpl" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="addresstype" type="xs:string" />
        <xs:element name="GeneratedName" type="server" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serverimpl" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="servertype" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="server" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcomponentpropertyreftest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instrumentcachetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="uppercasename" type="xs:string" />
        <xs:element name="summary" type="xs:string" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="lasttextmodification" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typeoverridetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="h2dialectoverrideprefixedvarcharsqltypedesc" >
      <xs:complexContent>
       <xs:extension base="h2dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="h2dialectoverridevarcharsqlcode" >
      <xs:complexContent>
       <xs:extension base="h2dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storedprefixedstringtype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="prefix" type="xs:string" />
          <xs:element name="prefixed_varchar_type_descriptor" type="sqltypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="instance" type="storedprefixedstringtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemabasedmultitenancytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="acmeprovider" type="drivermanagerconnectionproviderimpl" nillable="true" minOccurs="0" />
          <xs:element name="jbossprovider" type="drivermanagerconnectionproviderimpl" nillable="true" minOccurs="0" />
          <xs:element name="serviceregistry" type="serviceregistryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="currenttenantresolvermultitenancytest" >
      <xs:complexContent>
       <xs:extension base="schemabasedmultitenancytest">
         <xs:sequence>
          <xs:element name="currenttenantresolver" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testingconnectionprovider" >
      <xs:complexContent>
       <xs:extension base="abstractmultitenantconnectionprovider">
         <xs:sequence>
          <xs:element name="connectionprovidermap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configurationvalidationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auction" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="bids" type="list" nillable="true" minOccurs="0" />
        <xs:element name="successful" type="bid" nillable="true" minOccurs="0" />
        <xs:element name="end" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auctiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="item" type="auction" nillable="true" minOccurs="0" />
        <xs:element name="amount" type="xs:anyType" />
        <xs:element name="successful" type="xs:anyType" />
        <xs:element name="time" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auctiontest2" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arraytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="s" type="b" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheablefiletest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="mapping" type="xs:string" />
          <xs:element name="mapping" type="file" nillable="true" minOccurs="0" />
          <xs:element name="mappingbin" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="goofyexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="value" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persisterclassprovidertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="goofypersisterclassprovider" >
      <xs:complexContent>
       <xs:extension base="entitypersister>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheconfigurationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="cfg_xml" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baseclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclass" >
      <xs:complexContent>
       <xs:extension base="baseclass">
         <xs:sequence>
          <xs:element name="items" type="item" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchversioneddataconfigtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="" type="sessionfactory" nillable="true" minOccurs="0" />
          <xs:element name="cfg" type="configuration" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typedmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addressid" >
      <xs:sequence>
        <xs:element name="type" type="xs:string" />
        <xs:element name="addressid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="customerid" type="xs:string" />
        <xs:element name="billing" type="address" nillable="true" minOccurs="0" />
        <xs:element name="shipping" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="addressid" nillable="true" minOccurs="0" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uuidbinarytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="node" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uuidchartest" >
      <xs:complexContent>
       <xs:extension base="uuidbinarytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customstrategytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="useidentifierrollbacktest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencegeneratortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="color" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plane" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="nbrofseats" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplehilopertablegeneratortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserver2012sequencegeneratortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="radio" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="frequency" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="evictiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="membership" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="user" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="group" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractmanytomanyassociationclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="user" nillable="true" minOccurs="0" />
          <xs:element name="" type="group" nillable="true" minOccurs="0" />
          <xs:element name="" type="membership" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="memberships" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanyassociationclassassignedidtest" >
      <xs:complexContent>
       <xs:extension base="abstractmanytomanyassociationclasstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanyassociationclassgeneratedidtest" >
      <xs:complexContent>
       <xs:extension base="abstractmanytomanyassociationclasstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="memberships" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="membershipwithcompositeid" >
      <xs:complexContent>
       <xs:extension base="membership">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanyassociationclasscompositeidtest" >
      <xs:complexContent>
       <xs:extension base="abstractmanytomanyassociationclasstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="component" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partiallygeneratedcomponenttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestampgeneratedvalueswithcachingtest" >
      <xs:complexContent>
       <xs:extension base="abstractgeneratedpropertytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generatedpropertyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lastmodified" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="triggergeneratedvalueswithoutcachingtest" >
      <xs:complexContent>
       <xs:extension base="abstractgeneratedpropertytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractgeneratedpropertytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="triggergeneratedvalueswithcachingtest" >
      <xs:complexContent>
       <xs:extension base="abstractgeneratedpropertytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="journalingconnectionobserver" >
      <xs:sequence>
        <xs:element name="physicalconnectionobtainedcount" type="xs:long" />
        <xs:element name="physicalconnectionreleasedcount" type="xs:long" />
        <xs:element name="logicalconnectionclosedcount" type="xs:long" />
        <xs:element name="statementpreparedcount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="journalingbatchobserver" >
      <xs:sequence>
        <xs:element name="implicitexecutioncount" type="xs:long" />
        <xs:element name="explicitexecutioncount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="journalingtransactionobserver" >
      <xs:sequence>
        <xs:element name="begins" type="xs:long" />
        <xs:element name="beforecompletions" type="xs:long" />
        <xs:element name="aftercompletions" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="memberships" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlexceptionconversiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="members" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcollectioninitializingduringflush" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testclearbatchfetchqueueafterflush" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testautoflushbeforequeryexecution" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rowidtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rowidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="point" >
      <xs:sequence>
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="row" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="passwordexpirydays" type="xs:double" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="comments" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unionsubclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
        <xs:element name="heightinches" type="xs:double" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="org" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="groups" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanyorphantest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="org" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="grouptype" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parts" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="part" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyreftest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orphantest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="userid" type="xs:string" />
        <xs:element name="mail" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletemultilevelorphanstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeeinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteonetooneorphanstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="employeeinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteonetooneorphanstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeeinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="employeeinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteonetooneorphanstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="employeeinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletemultilevelorphanstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeeinfo" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteonetooneorphanstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="employeeinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="employeeinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteonetooneorphanstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeeinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="employeeinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteonetooneorphanstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deleteonetomanyorphanstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mail" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="GeneratedName" type="user" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parttimeemployee" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="percent" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discriminatortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="comments" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleinheritancetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="text" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lastmodified" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messagerecipient" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="email" type="xs:string" />
        <xs:element name="GeneratedName" type="message" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statelesssessioninserttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="message" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="subject" type="xs:string" />
        <xs:element name="content" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="org" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paper" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="color" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statelesssessiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="org" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="task" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="user" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="resource" nillable="true" minOccurs="0" />
        <xs:element name="due" type="xs:dateTime" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="completion" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resource" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="owner" type="user" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statelesssessionfetchingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statelesssessionquerytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositedatetime" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="year" type="xs:anyType" />
        <xs:element name="month" type="xs:anyType" />
        <xs:element name="day" type="xs:anyType" />
        <xs:element name="hour" type="xs:anyType" />
        <xs:element name="minute" type="xs:anyType" />
        <xs:element name="second" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetoryamount" >
      <xs:sequence>
        <xs:element name="amount" type="xs:anyType" />
        <xs:element name="GeneratedName" type="currency" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeusertypetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="monetoryamountusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositedatetimeusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transaction" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="value" type="monetoryamount" nillable="true" minOccurs="0" />
        <xs:element name="timestamp" type="compositedatetime" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutualfund" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="holdings" type="monetoryamount" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactiontimeouttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cmttest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="org" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="users" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchedmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="user" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="groups" type="group" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="org" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="groups" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="org" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="users" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderedmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="org" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="groups" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractparentwithcollection" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childvalue" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcollectioneventtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="brokencollectioneventtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentwithcollectionofvalues" >
      <xs:complexContent>
       <xs:extension base="abstractparentwithcollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuesbagcollectioneventtest" >
      <xs:complexContent>
       <xs:extension base="abstractcollectioneventtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionlisteners" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="enerscalled" type="list" nillable="true" minOccurs="0" />
          <xs:element name="events" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aggregatedcollectioneventlistener" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="evententrylist" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="badmergehandlingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergecollectioneventtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="collectionlistenerintegrator" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiplecollectionlisteners" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="listenerscalled" type="listener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="events" type="abstractcollectionevent" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="snapshots" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detachedmultiplecollectionchangetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentwithcollection" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childentity" >
      <xs:complexContent>
       <xs:extension base="childvalue">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractassociationcollectioneventtest" >
      <xs:complexContent>
       <xs:extension base="abstractcollectioneventtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentwithbidirectionalmanytomany" >
      <xs:complexContent>
       <xs:extension base="abstractparentwithcollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childwithbidirectionalmanytomany" >
      <xs:complexContent>
       <xs:extension base="childentity">
         <xs:sequence>
          <xs:element name="parents" type="collection" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetomanysetcollectioneventtest" >
      <xs:complexContent>
       <xs:extension base="abstractassociationcollectioneventtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childwithmanytoone" >
      <xs:complexContent>
       <xs:extension base="childentity">
         <xs:sequence>
          <xs:element name="parent" type="parentwithcollection" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentwithbidirectionalonetomanysubclass" >
      <xs:complexContent>
       <xs:extension base="parentwithbidirectionalonetomany">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentwithbidirectionalonetomany" >
      <xs:complexContent>
       <xs:extension base="abstractparentwithcollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetomanybagcollectioneventtest" >
      <xs:complexContent>
       <xs:extension base="abstractassociationcollectioneventtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentwithcollectionofentities" >
      <xs:complexContent>
       <xs:extension base="abstractparentwithcollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="salespersons" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="//foreaseofhashcode()implstocknumber" type="xs:long" />
        <xs:element name="effectivestart" type="xs:dateTime" />
        <xs:element name="effectiveend" type="xs:dateTime" />
        <xs:element name="weightpounds" type="xs:double" />
        <xs:element name="orderlineitems" type="set" nillable="true" minOccurs="0" />
        <xs:element name="categories" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="user">
         <xs:sequence>
          <xs:element name="hire" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedfilteredbulkmanipulationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="user">
         <xs:sequence>
          <xs:element name="company" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicfilteredbulkmanipulationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="username" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="region" type="xs:string" />
        <xs:element name="placement" type="xs:dateTime" />
        <xs:element name="fulfillment" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="salesperson" nillable="true" minOccurs="0" />
        <xs:element name="buyer" type="xs:string" />
        <xs:element name="lineitems" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="effectivestart" type="xs:dateTime" />
        <xs:element name="effectiveend" type="xs:dateTime" />
        <xs:element name="products" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicfiltertest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="salesperson" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="region" type="xs:string" />
        <xs:element name="hire" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="department" nillable="true" minOccurs="0" />
        <xs:element name="orders" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="sequence" type="xs:long" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="salesperson" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="salesperson" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="customers" type="set" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ondeletetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxynarrowingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="info" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="details" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="container" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="info" nillable="true" minOccurs="0" />
        <xs:element name="datapoints" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generatedversionbindingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="referencecode" type="xs:string" />
        <xs:element name="rv" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uniquedelegatetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="getcolumndefinitionuniquenessfragmentcallcount" type="xs:long" />
          <xs:element name="gettablecreationuniqueconstrasfragmentcallcount" type="xs:long" />
          <xs:element name="getaltertabletoadduniquekeycommandcallcount" type="xs:long" />
          <xs:element name="getaltertabletodropuniquekeycommandcallcount" type="xs:long" />
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indextest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="persongroup" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="journalingschematoolingtarget" >
      <xs:sequence>
        <xs:element name="actions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personcomment" >
      <xs:sequence>
        <xs:element name="locale" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persongroup" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="persons" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="comments" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionpktest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedquerytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="named_query_hbm_xml" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryreturntest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="query_return_hbm_xml" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionkeyfknametest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequenceidentitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectgeneratortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mysibling" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entity" type="myentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sibling" type="mysibling" nillable="true" minOccurs="0" />
        <xs:element name="noninversechildren" type="set" nillable="true" minOccurs="0" />
        <xs:element name="inversechildren" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mychild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="inverseparent" type="myentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identitygeneratedkeystest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="comments" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="passwordexpirydays" type="xs:double" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="heightinches" type="xs:double" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="asciiregex" type="xs:string" />
          <xs:element name="current" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="authorid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="being" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="identity" type="xs:string" />
        <xs:element name="location" type="xs:string" />
        <xs:element name="species" type="xs:string" />
        <xs:element name="heightinches" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidtypebindingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alien" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="identity" type="xs:string" />
        <xs:element name="planet" type="xs:string" />
        <xs:element name="species" type="xs:string" />
        <xs:element name="heightinches" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselecttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setsubselecttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeegroupid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="groupname" type="xs:string" />
        <xs:element name="departmentname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="books" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="heightinches" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keymanytoonecascadedeletetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="item" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keymanytoonecascadedeletetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="orders" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="item" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="orders" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keymanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="items" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eagerkeymanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazykeymanytoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="orders" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="items" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astutiltest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="factory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="astiteratortest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="factory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="disabledforeignkeytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedinheritancetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistchildentitieswithdiscriminatortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="subsubentityid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryreturnequalsandhashcodetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryplanequalstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gethqlqueryplantest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="username" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="user">
         <xs:sequence>
          <xs:element name="company" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="user">
         <xs:sequence>
          <xs:element name="hire" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedcompositeidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="universitycourse" >
      <xs:complexContent>
       <xs:extension base="course">
         <xs:sequence>
          <xs:element name="semester" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="org" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlocktest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="author" type="xs:string" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="summary" type="xs:string" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="pubdate" type="publicationdate" nillable="true" minOccurs="0" />
        <xs:element name="totalsales" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="publicationdate" >
      <xs:sequence>
        <xs:element name="year" type="xs:long" />
        <xs:element name="month" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quoteglobaltest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="fooprop" type="xs:string" />
        <xs:element name="fooenum" type="xs:anyType" />
        <xs:element name="fooenumlist" type="xs:anyType" />
        <xs:element name="onetomany" type="associateddatapoint" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="manytomany" type="associateddatapoint" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associateddatapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="manytoone" type="associateddatapoint" nillable="true" minOccurs="0" />
        <xs:element name="manytomany" type="associateddatapoint" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="userid" type="xs:string" />
        <xs:element name="accounts" type="set" nillable="true" minOccurs="0" />
        <xs:element name="systems" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="accountid" type="xs:string" />
        <xs:element name="user" type="person" nillable="true" minOccurs="0" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicpropertiestest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyreftest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityclass" >
      <xs:sequence>
        <xs:element name="key" type="xs:long" />
        <xs:element name="field1" type="xs:string" />
        <xs:element name="field2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="personid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="accountid" type="xs:string" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unionsubclasspropertyreftest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="customerid" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="customerid" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="personid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclasspropertyreftest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="accountid" type="xs:string" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="bankaccount" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="accountid" type="xs:string" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bankaccount" >
      <xs:complexContent>
       <xs:extension base="account">
         <xs:sequence>
          <xs:element name="accountnumber" type="xs:string" />
          <xs:element name="bsb" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclasspropertyreftest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doesnotworkwithhbmtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachedpropertyrefcollectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="managedobject" >
      <xs:sequence>
        <xs:element name="moid" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="displayname" type="xs:string" />
        <xs:element name="members" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doesnotworktest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doesnotworkpk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id1" type="xs:string" />
        <xs:element name="id2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="owner" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partialcomponentpropertyreftest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="identity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="completecomponentpropertyreftest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="owner" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="identity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bigintegerincrementgeneratortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bigintegersequencegeneratortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigintegersequencegeneratorzeroscaletest" >
      <xs:complexContent>
       <xs:extension base="bigintegersequencegeneratortest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedsubclasshierarchywithidentitygenerationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customidentitycolumnsupporttest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicforcedtablesequencetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pooledforcedtablesequencetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hiloforcedtablesequencetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pooledtabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basictabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2generationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hilotabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pooledsequencetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hilosequencetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicsequencetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriontest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dbversiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="groups" type="set" nillable="true" minOccurs="0" />
        <xs:element name="permissions" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permission" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="context" type="xs:string" />
        <xs:element name="access" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thing" >
      <xs:sequence>
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="longdescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="things" type="list" nillable="true" minOccurs="0" />
        <xs:element name="tasks" type="list" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="task" >
      <xs:sequence>
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permission" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="context" type="xs:string" />
        <xs:element name="access" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="groups" type="set" nillable="true" minOccurs="0" />
        <xs:element name="permissions" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sybasetimestampversioningtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="master" type="human" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commandextractorservicetest" >
      <xs:complexContent>
       <xs:extension base="multilineimportfiletest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singlelineimportfiletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multilineimportfiletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadlocalcurrentsessiontest" >
      <xs:complexContent>
       <xs:extension base="connectionmanagementtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="silly" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="other" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatecreateblobfailedcase" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aggressivereleasetest" >
      <xs:complexContent>
       <xs:extension base="connectionmanagementtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="suppliedconnectiontest" >
      <xs:complexContent>
       <xs:extension base="connectionmanagementtestcase">
         <xs:sequence>
          <xs:element name="cp" type="connectionprovider" nillable="true" minOccurs="0" />
          <xs:element name="undertest" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="other" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectionmanagementtestcase" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicconnectionprovidertest" >
      <xs:complexContent>
       <xs:extension base="connectionmanagementtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="currentsessionconnectiontest" >
      <xs:complexContent>
       <xs:extension base="aggressivereleasetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondarytabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="thing" >
      <xs:sequence>
        <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
        <xs:element name="comments" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optionaljointest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jointest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ternarytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="site" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="employees" type="set" nillable="true" minOccurs="0" />
        <xs:element name="managers" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="hire" type="xs:dateTime" />
        <xs:element name="managerbysite" type="map" nillable="true" minOccurs="0" />
        <xs:element name="underlings" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetooneformulatest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="mailing" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetooneschematest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optionalonetoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="org" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
          <xs:element name="" type="address" nillable="true" minOccurs="0" />
          <xs:element name="mailing" type="address" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="dob" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonelinktest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclassonetoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
          <xs:element name="" type="address" nillable="true" minOccurs="0" />
          <xs:element name="mailing" type="address" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="org" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
          <xs:element name="" type="address" nillable="true" minOccurs="0" />
          <xs:element name="mailing" type="address" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discrimsubclassonetoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="org" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
          <xs:element name="addresses" type="set" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicmaponetoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="refreshtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipathcascadetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="//constants-----------------------------------------------------------------------------------//--------------------------------------------------------------------------------------//attributes----------------------------------------------------------------------------------id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="//a1-*hhs" type="set" nillable="true" minOccurs="0" />
        <xs:element name="//a1-1" type="g" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="h" >
      <xs:sequence>
        <xs:element name="//constants-----------------------------------------------------------------------------------//--------------------------------------------------------------------------------------//attributes----------------------------------------------------------------------------------id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
        <xs:element name="*hgs" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="deleteorphanchildren" type="set" nillable="true" minOccurs="0" />
        <xs:element name="children" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="job" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="batch" type="jobbatch" nillable="true" minOccurs="0" />
        <xs:element name="processinginstructions" type="xs:string" />
        <xs:element name="status" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transport" >
      <xs:sequence>
        <xs:element name="//@id//@sequencegenerator(name" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="/***valueobjectatwhichtheorderispickedup*///@manytoone(optional" type="node" nillable="true" minOccurs="0" />
        <xs:element name="/***valueobjectatwhichtheorderisdelivered*///@manytoone(optional" type="node" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="vehicle" nillable="true" minOccurs="0" />
        <xs:element name="//@transienttransientfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascademergetochildbeforeparenttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascadedelayedinserttest" >
      <xs:complexContent>
       <xs:extension base="multipathcirclecascadetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tour" >
      <xs:sequence>
        <xs:element name="//@id//@sequencegenerator(name" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="/***alistofnodescontainedinthistour.*///@onetomany(targetentity" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="route" >
      <xs:sequence>
        <xs:element name="//@id//@sequencegenerator(name" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="/***alistofnodescontainedinthisroute.*///@onetomany(targetentity" type="set" nillable="true" minOccurs="0" />
        <xs:element name="vehicles" type="set" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="//@transienttransientfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicle" >
      <xs:sequence>
        <xs:element name="//@id//@sequencegenerator(name" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="transports" type="set" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="route" nillable="true" minOccurs="0" />
        <xs:element name="transientfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascadetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="merge_operation" type="xs:anyType" />
          <xs:element name="save_operation" type="xs:anyType" />
          <xs:element name="save_update_operation" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascadechecknullibilityfalsetest" >
      <xs:complexContent>
       <xs:extension base="multipathcirclecascadetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascadechecknullfalsedelayedinserttest" >
      <xs:complexContent>
       <xs:extension base="multipathcirclecascadedelayedinserttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascadechecknullibilitytruetest" >
      <xs:complexContent>
       <xs:extension base="multipathcirclecascadetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascadechecknulltruedelayedinserttest" >
      <xs:complexContent>
       <xs:extension base="multipathcirclecascadedelayedinserttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="//@id//@sequencegenerator(name" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="/***thelistofordersthataredeliveredatthisnode*///@onetomany(fetch" type="set" nillable="true" minOccurs="0" />
        <xs:element name="/***thelistofordersthatarepickedupatthisnode*///@onetomany(fetch" type="set" nillable="true" minOccurs="0" />
        <xs:element name="/***thetowhichthisnodebelongs*///@manytoone(targetentity" type="route" nillable="true" minOccurs="0" />
        <xs:element name="/***thethisnodebelongsto,nullifthisnodedoesnotbelongtoa(e.gfirstnodeofaroute)*///@manytoone(targetentity" type="tour" nillable="true" minOccurs="0" />
        <xs:element name="//@transienttransientfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetestwithassignedparentidtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetomanycascadetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteorphanchild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobbatch" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="batch" type="xs:dateTime" />
        <xs:element name="jobs" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="g" >
      <xs:sequence>
        <xs:element name="//constants-----------------------------------------------------------------------------------//--------------------------------------------------------------------------------------//attributes----------------------------------------------------------------------------------id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="1g" type="a" nillable="true" minOccurs="0" />
        <xs:element name="*hhs" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapcompositeelementtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="part" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="code" type="xs:string" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parts" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractversionedrecursivebidirectionalonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractrecursivebidirectionalonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="recursiveversionedbidirectionalonetomanynocachetest" >
      <xs:complexContent>
       <xs:extension base="abstractversionedrecursivebidirectionalonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractrecursivebidirectionalonetomanytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="recursivebidirectionalonetomanynocachetest" >
      <xs:complexContent>
       <xs:extension base="abstractrecursivebidirectionalonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="recursivebidirectionalonetomanycachetest" >
      <xs:complexContent>
       <xs:extension base="abstractrecursivebidirectionalonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="recursiveversionedbidirectionalonetomanycachetest" >
      <xs:complexContent>
       <xs:extension base="abstractversionedrecursivebidirectionalonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="parent" type="node" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="subnodes" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergemultipleentitycopiesallowedloggedtest" >
      <xs:complexContent>
       <xs:extension base="mergemultipleentitycopiesallowedtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergemultipleentitycopiescustomtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
        <xs:element name="parent" type="node" nillable="true" minOccurs="0" />
        <xs:element name="children" type="set" nillable="true" minOccurs="0" />
        <xs:element name="cascadingchildren" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="numberednode" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="numberednode" nillable="true" minOccurs="0" />
        <xs:element name="children" type="set" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergemultipleentitycopiesdisallowedtest" >
      <xs:complexContent>
       <xs:extension base="mergemultipleentitycopiesdisallowedbydefaulttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employers" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competitor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergetest" >
      <xs:complexContent>
       <xs:extension base="abstractoperationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleopstest" >
      <xs:complexContent>
       <xs:extension base="abstractoperationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestampedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="timestamp" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="category" nillable="true" minOccurs="0" />
        <xs:element name="subitemsbackref" type="subitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="colors" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subcategory" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="parent" type="versionedentity" nillable="true" minOccurs="0" />
        <xs:element name="children" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competition" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="competitors" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergemultipleentitycopiesdisallowedbydefaulttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="createtest" >
      <xs:complexContent>
       <xs:extension base="abstractoperationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="details" type="personaldetails" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getloadtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hoarder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="favorite" type="item" nillable="true" minOccurs="0" />
        <xs:element name="items" type="item" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personaldetails" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="somepersonaldetail" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergemultipleentitycopiesallowedorphandeletetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deletetest" >
      <xs:complexContent>
       <xs:extension base="abstractoperationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="saveorupdatetest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employees" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="vers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="streetaddress" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="resident" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractoperationtestcase" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="example" type="item" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="subcategories" type="subcategory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergemultipleentitycopiesallowedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtalazyloadingtest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="children_size" type="xs:long" />
          <xs:element name="parentid" type="xs:long" />
          <xs:element name="lastchildid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyloadingtest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="children_size" type="xs:long" />
          <xs:element name="parentid" type="xs:long" />
          <xs:element name="lastchildid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:complexContent>
       <xs:extension base="item">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="securedocument" >
      <xs:complexContent>
       <xs:extension base="document">
         <xs:sequence>
          <xs:element name="permissionbits" type="xs:anyType" />
          <xs:element name="owner" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:complexContent>
       <xs:extension base="item">
         <xs:sequence>
          <xs:element name="content" type="xs:anyType" />
          <xs:element name="modified" type="xs:anyType" />
          <xs:element name="created" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="documentinterceptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="xs:string" />
        <xs:element name="suites" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="note" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="addresses" type="set" nillable="true" minOccurs="0" />
        <xs:element name="friends" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletetransiententitytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="suite" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="location" type="xs:string" />
        <xs:element name="notes" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unionsubclassfiltertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discrimsubclassfiltertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclassfiltertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="contactowner" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="company" type="xs:string" />
        <xs:element name="region" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="department" type="xs:string" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="minions" type="set" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="targetstdoutimpltest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="formatter" nillable="true" minOccurs="0" />
        <xs:element name="before_format" type="xs:string" />
        <xs:element name="after_format" type="xs:string" />
        <xs:element name="delimiter" type="xs:string" />
        <xs:element name="savedsystemout" type="xs:anyType" />
        <xs:element name="baos" type="xs:anyType" />
        <xs:element name="target" type="targetstdoutimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targetfileimpltest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="formatter" nillable="true" minOccurs="0" />
        <xs:element name="before_format" type="xs:string" />
        <xs:element name="after_format" type="xs:string" />
        <xs:element name="delimiter" type="xs:string" />
        <xs:element name="GeneratedName" type="file" nillable="true" minOccurs="0" />
        <xs:element name="path" type="xs:string" />
        <xs:element name="target" type="targetfileimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="beings" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hive" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="location" nillable="true" minOccurs="0" />
        <xs:element name="members" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="human">
         <xs:sequence>
          <xs:element name="salary" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:complexContent>
       <xs:extension base="being">
         <xs:sequence>
          <xs:element name="sex" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alien" >
      <xs:complexContent>
       <xs:extension base="being">
         <xs:sequence>
          <xs:element name="species" type="xs:string" />
          <xs:element name="" type="hive" nillable="true" minOccurs="0" />
          <xs:element name="hivemates" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="num" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seller" >
      <xs:sequence>
        <xs:element name="id" type="personid" nillable="true" minOccurs="0" />
        <xs:element name="buyers" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="carbuyer" >
      <xs:complexContent>
       <xs:extension base="customer">
         <xs:sequence>
          <xs:element name="sellername" type="xs:string" />
          <xs:element name="pid" type="xs:string" />
          <xs:element name="" type="seller" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="personid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sellcartest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="being" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="identity" type="xs:string" />
        <xs:element name="GeneratedName" type="location" nillable="true" minOccurs="0" />
        <xs:element name="things" type="list" nillable="true" minOccurs="0" />
        <xs:element name="info" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unionsubclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="thing" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="owner" type="being" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testextraphysicaltabletypes" >
      <xs:complexContent>
       <xs:extension base="informationextractorjdbcdatabasemetadataimpl">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiplicity" >
      <xs:sequence>
        <xs:element name="count" type="xs:long" />
        <xs:element name="glarch" type="glarchproxy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="object2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="dummy" type="xs:string" />
        <xs:element name="belongstomainobj" type="mainobject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="e" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="amount" type="xs:double" />
        <xs:element name="reverse" type="a" nillable="true" minOccurs="0" />
        <xs:element name="as" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subcomponent" >
      <xs:sequence>
        <xs:element name="_subname" type="xs:string" />
        <xs:element name="_subname1" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="x" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="y" nillable="true" minOccurs="0" />
        <xs:element name="xxs" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statisticstest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiplicitytype" >
      <xs:sequence>
        <xs:element name="prop_names" type="xs:string" />
        <xs:element name="sql_types" type="xs:long" />
        <xs:element name="s" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="innerkey" >
      <xs:sequence>
        <xs:element name="akey" type="xs:string" />
        <xs:element name="bkey" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="forward" type="e" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foocomponent" >
      <xs:sequence>
        <xs:element name="count" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="importants" type="xs:dateTime" />
        <xs:element name="subcomponent" type="foocomponent" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="fee" nillable="true" minOccurs="0" />
        <xs:element name="glarch" type="glarchproxy" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="fooproxy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="baz" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custompersister" >
      <xs:sequence>
        <xs:element name="instances" type="xs:anyType" />
        <xs:element name="generator" type="identifiergenerator" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="s" type="type" nillable="true" minOccurs="0" />
        <xs:element name="names" type="xs:string" />
        <xs:element name="mutability" type="xs:anyType" />
        <xs:element name="generation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customsqltest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="drug" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.test.legacy.resource">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="count" type="xs:long" />
        <xs:element name="GeneratedName" type="child" nillable="true" minOccurs="0" />
        <xs:element name="any" type="xs:anyType" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.test.legacy.party">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="president" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blobber" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assignable" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="categories" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fumtest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
          <xs:element name="fumkey" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="trivialproxy" >
      <xs:complexContent>
       <xs:extension base="fooproxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentchildtest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeelement" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidid" >
      <xs:sequence>
        <xs:element name="user" type="xs:string" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="composite" type="compositeelement" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foobartest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="custom" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="i" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="parent" type="k" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abcproxytest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentizable" >
      <xs:sequence>
        <xs:element name="/***surrogateid*/_id" type="xs:anyType" />
        <xs:element name="_nickname" type="xs:string" />
        <xs:element name="/****/_" type="component" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fumcompositeid" >
      <xs:sequence>
        <xs:element name="_" type="xs:string" />
        <xs:element name="_" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inner" >
      <xs:sequence>
        <xs:element name="id" type="innerkey" nillable="true" minOccurs="0" />
        <xs:element name="dudu" type="xs:string" />
        <xs:element name="middles" type="list" nillable="true" minOccurs="0" />
        <xs:element name="backout" type="outer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lower" >
      <xs:complexContent>
       <xs:extension base="top">
         <xs:sequence>
          <xs:element name="prop" type="xs:long" />
          <xs:element name="foo" type="xs:string" />
          <xs:element name="" type="set" nillable="true" minOccurs="0" />
          <xs:element name="bag" type="list" nillable="true" minOccurs="0" />
          <xs:element name="another" type="top" nillable="true" minOccurs="0" />
          <xs:element name="yetanother" type="lower" nillable="true" minOccurs="0" />
          <xs:element name="my" type="po" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="outerkey" >
      <xs:sequence>
        <xs:element name="master" type="middle" nillable="true" minOccurs="0" />
        <xs:element name="detailid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentnotnullmaster" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="test" type="xs:string" />
        <xs:element name="nullable" type="componentnotnull" nillable="true" minOccurs="0" />
        <xs:element name="supercomp" type="componentnotnull" nillable="true" minOccurs="0" />
        <xs:element name="components" type="list" nillable="true" minOccurs="0" />
        <xs:element name="componentsimplicit" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="root_category" type="xs:string" />
        <xs:element name="root_id" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="subcategories" type="list" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="assignable" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reversecomparator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="container" >
      <xs:sequence>
        <xs:element name="onetomany" type="list" nillable="true" minOccurs="0" />
        <xs:element name="manytomany" type="list" nillable="true" minOccurs="0" />
        <xs:element name="components" type="list" nillable="true" minOccurs="0" />
        <xs:element name="composites" type="set" nillable="true" minOccurs="0" />
        <xs:element name="cascades" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="bag" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="lazybag" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="ternary" type="map" nillable="true" minOccurs="0" />
        <xs:element name="ternary" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="qux" >
      <xs:sequence>
        <xs:element name="created" type="xs:anyType" />
        <xs:element name="deleted" type="xs:anyType" />
        <xs:element name="loaded" type="xs:anyType" />
        <xs:element name="//thisshouldmorelogicallybenamed"stored"butthat'sareservedkeywordonmysql5.7store" type="xs:anyType" />
        <xs:element name="key" type="xs:long" />
        <xs:element name="stuff" type="xs:string" />
        <xs:element name="fums" type="set" nillable="true" minOccurs="0" />
        <xs:element name="morefums" type="list" nillable="true" minOccurs="0" />
        <xs:element name="child" type="qux" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="session" nillable="true" minOccurs="0" />
        <xs:element name="childkey" type="xs:long" />
        <xs:element name="GeneratedName" type="holder" nillable="true" minOccurs="0" />
        <xs:element name="foo" type="fooproxy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="part" >
      <xs:complexContent>
       <xs:extension base="part">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="description" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="result" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="amount" type="xs:long" />
        <xs:element name="count" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fum" >
      <xs:sequence>
        <xs:element name="fum" type="xs:string" />
        <xs:element name="id" type="fumcompositeid" nillable="true" minOccurs="0" />
        <xs:element name="fo" type="fum" nillable="true" minOccurs="0" />
        <xs:element name="array" type="qux" nillable="true" minOccurs="0" />
        <xs:element name="friends" type="set" nillable="true" minOccurs="0" />
        <xs:element name="lastupdated" type="xs:anyType" />
        <xs:element name="t" type="xs:string" />
        <xs:element name="vid" type="xs:long" />
        <xs:element name="dupe" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ij2test" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="several" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="prop" type="xs:string" />
        <xs:element name="GeneratedName" type="single" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mainobject" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="obj2" type="object2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="super" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="amount" type="xs:double" />
        <xs:element name="reverse" type="a" nillable="true" minOccurs="0" />
        <xs:element name="inverse" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c1" >
      <xs:complexContent>
       <xs:extension base="b{">
         <xs:sequence>
          <xs:element name="address" type="xs:string" />
          <xs:element name="c1name" type="xs:string" />
          <xs:element name="" type="c2" nillable="true" minOccurs="0" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
          <xs:element name="c2s" type="collection" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="y" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="x" type="xs:string" />
        <xs:element name="the" type="x" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detail" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="master" nillable="true" minOccurs="0" />
        <xs:element name="i" type="xs:long" />
        <xs:element name="details" type="set" nillable="true" minOccurs="0" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="barproxy" >
      <xs:complexContent>
       <xs:extension base="abstractproxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
        <xs:element name="_name" type="xs:string" />
        <xs:element name="_" type="subcomponent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querybyexampletest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="maptest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="one" >
      <xs:sequence>
        <xs:element name="key" type="xs:long" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="manies" type="set" nillable="true" minOccurs="0" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="single" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="prop" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:string" />
        <xs:element name="several" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="submulti" >
      <xs:complexContent>
       <xs:extension base="multi">
         <xs:sequence>
          <xs:element name="amount" type="xs:double" />
          <xs:element name="parent" type="submulti" nillable="true" minOccurs="0" />
          <xs:element name="children" type="list" nillable="true" minOccurs="0" />
          <xs:element name="morechildren" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="middlekey" >
      <xs:sequence>
        <xs:element name="sup" type="inner" nillable="true" minOccurs="0" />
        <xs:element name="one" type="xs:string" />
        <xs:element name="two" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multi" >
      <xs:complexContent>
       <xs:extension base="top">
         <xs:sequence>
          <xs:element name="extraprop" type="xs:string" />
          <xs:element name="derived" type="xs:string" />
          <xs:element name="comp" type="component" nillable="true" minOccurs="0" />
          <xs:element name="" type="po" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="s" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
        <xs:element name="count" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="role" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="interventions" type="set" nillable="true" minOccurs="0" />
        <xs:element name="bunchofstrings" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mono" >
      <xs:complexContent>
       <xs:extension base="top">
         <xs:sequence>
          <xs:element name="strings" type="set" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="outer" >
      <xs:sequence>
        <xs:element name="id" type="outerkey" nillable="true" minOccurs="0" />
        <xs:element name="bubu" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="masterdetailtest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="up" >
      <xs:sequence>
        <xs:element name="id1" type="xs:string" />
        <xs:element name="id2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="party" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="address" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fumm" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="fum" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="morestuff" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="stuffs" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="w" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="zeds" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="count" type="xs:long" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstract" >
      <xs:complexContent>
       <xs:extension base="foo">
         <xs:sequence>
          <xs:element name="time" type="xs:anyType" />
          <xs:element name="abstracts" type="set" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="j" >
      <xs:complexContent>
       <xs:extension base="i">
         <xs:sequence>
          <xs:element name="amount" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.test.legacy.party">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="givenname" type="xs:anyType" />
          <xs:element name="lastname" type="xs:anyType" />
          <xs:element name="nationalid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfunctionstest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortable" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentnotnull" >
      <xs:sequence>
        <xs:element name="/*	*i'veflattenseveralcomponentsinoneclass,thisiskindofuglybut	*idon'thavetowritetonsofclasses	*/prop1nullable" type="xs:string" />
        <xs:element name="prop2nullable" type="xs:string" />
        <xs:element name="supercomp" type="componentnotnull" nillable="true" minOccurs="0" />
        <xs:element name="subcomp" type="componentnotnull" nillable="true" minOccurs="0" />
        <xs:element name="prop1subcomp" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fooproxy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middle" >
      <xs:sequence>
        <xs:element name="id" type="middlekey" nillable="true" minOccurs="0" />
        <xs:element name="bla" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractproxy" >
      <xs:complexContent>
       <xs:extension base="fooproxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multitabletest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonreflectivebindertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="" type="metadata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doublestringtype" >
      <xs:sequence>
        <xs:element name="types" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fixed" >
      <xs:complexContent>
       <xs:extension base="broken">
         <xs:sequence>
          <xs:element name="" type="set" nillable="true" minOccurs="0" />
          <xs:element name="" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
          <xs:element name="count" type="xs:long" />
          <xs:element name="" type="map" nillable="true" minOccurs="0" />
          <xs:element name="bname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vetoer" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="s" type="xs:string" />
        <xs:element name="onsavecalled" type="xs:anyType" />
        <xs:element name="onupdatecalled" type="xs:anyType" />
        <xs:element name="ondeletecalled" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trivialclass" >
      <xs:complexContent>
       <xs:extension base="top">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stuff" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="foo" type="fooproxy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="morestuff" nillable="true" minOccurs="0" />
        <xs:element name="property" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="down" >
      <xs:complexContent>
       <xs:extension base="up">
         <xs:sequence>
          <xs:element name="value" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringcomparator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="holder" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="ones" type="list" nillable="true" minOccurs="0" />
        <xs:element name="array" type="foo" nillable="true" minOccurs="0" />
        <xs:element name="foos" type="set" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="other" type="holder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eye" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="jay" nillable="true" minOccurs="0" />
        <xs:element name="jays" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="named" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="top" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="count" type="xs:long" />
        <xs:element name="date" type="xs:anyType" />
        <xs:element name="other" type="top" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="top" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fo" >
      <xs:sequence>
        <xs:element name="id" type="fumcompositeid" nillable="true" minOccurs="0" />
        <xs:element name="buf" type="xs:anyType" />
        <xs:element name="serial" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="master" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="other" type="master" nillable="true" minOccurs="0" />
        <xs:element name="details" type="set" nillable="true" minOccurs="0" />
        <xs:element name="moredetails" type="set" nillable="true" minOccurs="0" />
        <xs:element name="incoming" type="set" nillable="true" minOccurs="0" />
        <xs:element name="outgoing" type="set" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stamp" type="xs:dateTime" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="x" type="xs:long" />
        <xs:element name="alldetails" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resource" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="usercode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="glarchproxy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="count" type="xs:long" />
        <xs:element name="date" type="xs:anyType" />
        <xs:element name="number" type="xs:double" />
        <xs:element name="other" type="simple" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c2" >
      <xs:complexContent>
       <xs:extension base="b">
         <xs:sequence>
          <xs:element name="address" type="xs:string" />
          <xs:element name="" type="c1" nillable="true" minOccurs="0" />
          <xs:element name="c2name" type="xs:string" />
          <xs:element name="c1s" type="collection" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="intervention" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="z" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="w" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trivial" >
      <xs:complexContent>
       <xs:extension base="foo">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlloadertest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
          <xs:element name="next" type="xs:long" />
          <xs:element name="next" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fee" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="fee" nillable="true" minOccurs="0" />
        <xs:element name="another" type="fee" nillable="true" minOccurs="0" />
        <xs:element name="fi" type="xs:string" />
        <xs:element name="key" type="xs:string" />
        <xs:element name="fees" type="set" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="qux" nillable="true" minOccurs="0" />
        <xs:element name="compon" type="foocomponent" nillable="true" minOccurs="0" />
        <xs:element name="count" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medication" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.test.legacy.intervention">
         <xs:sequence>
          <xs:element name="prescribeddrug" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentcollection" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
        <xs:element name="foos" type="list" nillable="true" minOccurs="0" />
        <xs:element name="floats" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentnotnulltest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="streetnumber" type="xs:long" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="streetname" type="xs:string" />
        <xs:element name="countrycode" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baz" >
      <xs:sequence>
        <xs:element name="stringset" type="xs:anyType" />
        <xs:element name="stringdate" type="map" nillable="true" minOccurs="0" />
        <xs:element name="string" type="list" nillable="true" minOccurs="0" />
        <xs:element name="array" type="xs:long" />
        <xs:element name="fooarray" type="fooproxy" nillable="true" minOccurs="0" />
        <xs:element name="array" type="xs:string" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="customs" type="list" nillable="true" minOccurs="0" />
        <xs:element name="topcomponents" type="list" nillable="true" minOccurs="0" />
        <xs:element name="foo" type="set" nillable="true" minOccurs="0" />
        <xs:element name="components" type="foocomponent" nillable="true" minOccurs="0" />
        <xs:element name="timearray" type="xs:dateTime" />
        <xs:element name="count" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bag" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="topfoos" type="set" nillable="true" minOccurs="0" />
        <xs:element name="topglarchez" type="map" nillable="true" minOccurs="0" />
        <xs:element name="cascadingbars" type="set" nillable="true" minOccurs="0" />
        <xs:element name="footoglarch" type="map" nillable="true" minOccurs="0" />
        <xs:element name="foocomponenttofoo" type="map" nillable="true" minOccurs="0" />
        <xs:element name="glarchtofoo" type="map" nillable="true" minOccurs="0" />
        <xs:element name="fees" type="list" nillable="true" minOccurs="0" />
        <xs:element name="foobag" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="cached" type="set" nillable="true" minOccurs="0" />
        <xs:element name="cached" type="map" nillable="true" minOccurs="0" />
        <xs:element name="stringglarch" type="map" nillable="true" minOccurs="0" />
        <xs:element name="anytoany" type="map" nillable="true" minOccurs="0" />
        <xs:element name="manytoany" type="list" nillable="true" minOccurs="0" />
        <xs:element name="idfoobag" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="bytebag" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="foo" type="fooproxy" nillable="true" minOccurs="0" />
        <xs:element name="bazez" type="list" nillable="true" minOccurs="0" />
        <xs:element name="sortablez" type="xs:anyType" />
        <xs:element name="collectioncomponent" type="nestingcomponent" nillable="true" minOccurs="0" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="parts" type="list" nillable="true" minOccurs="0" />
        <xs:element name="moreparts" type="list" nillable="true" minOccurs="0" />
        <xs:element name="subs" type="list" nillable="true" minOccurs="0" />
        <xs:element name="super" type="baz" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nameable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicnameable" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ijtest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contained" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="container" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="bag" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="lazybag" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nestingcomponent" >
      <xs:sequence>
        <xs:element name="nested" type="componentcollection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutable" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="glarch" >
      <xs:complexContent>
       <xs:extension base="super">
         <xs:sequence>
          <xs:element name="version" type="xs:long" />
          <xs:element name="next" type="glarchproxy" nillable="true" minOccurs="0" />
          <xs:element name="order" type="xs:long" />
          <xs:element name="strings" type="list" nillable="true" minOccurs="0" />
          <xs:element name="stringsets" type="map" nillable="true" minOccurs="0" />
          <xs:element name="foocomponents" type="list" nillable="true" minOccurs="0" />
          <xs:element name="proxyarray" type="glarchproxy" nillable="true" minOccurs="0" />
          <xs:element name="proxy" type="set" nillable="true" minOccurs="0" />
          <xs:element name="//currencycurrency" type="map" nillable="true" minOccurs="0" />
          <xs:element name="immutable" type="xs:string" />
          <xs:element name="derivedversion" type="xs:long" />
          <xs:element name="any" type="xs:anyType" />
          <xs:element name="x" type="xs:long" />
          <xs:element name="multiple" type="multiplicity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jay" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="eye" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abctest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonecachetest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
          <xs:element name="generatedid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="po" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="GeneratedName" type="set" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="list" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="top" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lower" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="circular" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="clazz" type="xs:anyType" />
        <xs:element name="other" type="circular" nillable="true" minOccurs="0" />
        <xs:element name="anyentity" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="legacytestcase" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="use_antlr_parser_prop" type="xs:string" />
          <xs:element name="useantlrparser" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:complexContent>
       <xs:extension base="abstract">
         <xs:sequence>
          <xs:element name="bar" type="xs:string" />
          <xs:element name="barcomponent" type="foocomponent" nillable="true" minOccurs="0" />
          <xs:element name="" type="baz" nillable="true" minOccurs="0" />
          <xs:element name="x" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="broken" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="otherid" type="xs:string" />
        <xs:element name="timestamp" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subdetail" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="k" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="is" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
        <xs:element name="count" type="xs:long" />
        <xs:element name="/*publicbooleanequals(objectother){		fooproxyotherfoo" type="xs:string" />
        <xs:element name="_foo" type="fooproxy" nillable="true" minOccurs="0" />
        <xs:element name="_" type="xs:string" />
        <xs:element name="_" type="xs:dateTime" />
        <xs:element name="_timestamp" type="xs:dateTime" />
        <xs:element name="_" type="xs:anyType" />
        <xs:element name="_" type="xs:long" />
        <xs:element name="_" type="xs:long" />
        <xs:element name="_" type="xs:double" />
        <xs:element name="_" type="xs:double" />
        <xs:element name="_" type="xs:anyType" />
        <xs:element name="_" type="xs:anyType" />
        <xs:element name="_null" type="xs:anyType" />
        <xs:element name="_" type="xs:long" />
        <xs:element name="_bool" type="xs:anyType" />
        <xs:element name="_zero" type="xs:double" />
        <xs:element name="_s" type="xs:anyType" />
        <xs:element name="yesno" type="xs:anyType" />
        <xs:element name="blob" type="xs:anyType" />
        <xs:element name="nullblob" type="xs:anyType" />
        <xs:element name="binary" type="xs:anyType" />
        <xs:element name="custom" type="xs:string" />
        <xs:element name="component" type="foocomponent" nillable="true" minOccurs="0" />
        <xs:element name="_" type="xs:anyType" />
        <xs:element name="dependent" type="fee" nillable="true" minOccurs="0" />
        <xs:element name="the" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="formula" type="xs:double" />
        <xs:element name="joinedprop" type="xs:string" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many" >
      <xs:sequence>
        <xs:element name="key" type="xs:long" />
        <xs:element name="GeneratedName" type="one" nillable="true" minOccurs="0" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testnamingstrategy" >
      <xs:complexContent>
       <xs:extension base="implicitnamingstrategyjpacompliantimpl">
         <xs:sequence>
          <xs:element name="/***singletonaccess*/instance" type="testnamingstrategy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customers" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="specified_column" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tests" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="physicalnamingstrategyimpl" >
      <xs:complexContent>
       <xs:extension base="physicalnamingstrategystandardimpl">
         <xs:sequence>
          <xs:element name="/***singletonaccess*/instance" type="physicalnamingstrategyimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localizedembeddable" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namingstrategytest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentnamingstrategytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="legacyjpanamingwithannotationbindingtests" >
      <xs:complexContent>
       <xs:extension base="baseannotationbindingtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacyjpanamingwithhbmbindingtests" >
      <xs:complexContent>
       <xs:extension base="basehbmbindingtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basenamingtests" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseannotationbindingtests" >
      <xs:complexContent>
       <xs:extension base="basenamingtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:sequence>
        <xs:element name="//etcisocode" type="xs:string" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basehbmbindingtests" >
      <xs:complexContent>
       <xs:extension base="basenamingtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="line1" type="xs:string" />
        <xs:element name="line2" type="xs:string" />
        <xs:element name="GeneratedName" type="zipcode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fullyqualifiedentitynamenamingstrategytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="ssr" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iteratetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sybasease15lockhintstest" >
      <xs:complexContent>
       <xs:extension base="abstractlockhinttest">
         <xs:sequence>
          <xs:element name="" type="dialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlockhinttest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="" type="dialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverlockhintstest" >
      <xs:complexContent>
       <xs:extension base="abstractlockhinttest">
         <xs:sequence>
          <xs:element name="" type="dialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sybaselockhintstest" >
      <xs:complexContent>
       <xs:extension base="abstractlockhinttest">
         <xs:sequence>
          <xs:element name="" type="dialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sybasease15functiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ansitrimemulationfunctiontest" >
      <xs:sequence>
        <xs:element name="trimsource" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mysqlroundfunctiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="weight" type="xs:long" />
        <xs:element name="price" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfunctionsintersystemstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testintersystemsfunctionsclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="date3" type="xs:anyType" />
        <xs:element name="date1" type="xs:anyType" />
        <xs:element name="date" type="xs:anyType" />
        <xs:element name="datetext" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlserverdialecttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="paginationtest" >
      <xs:complexContent>
       <xs:extension base="basenonconfigcorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="number_of_test_rows" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tag" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="surrogate" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datametapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="datapoint" nillable="true" minOccurs="0" />
        <xs:element name="meta" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="sequence" type="xs:long" />
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="distinctselecttest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="num_of_users" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entry" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="tags" type="tag" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringvaluemappingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="stringjavadescriptor" type="stringtypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="varcharsqldescriptor" type="varchartypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="clobsqldescriptor" type="clobtypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="" type="wrapperoptions" nillable="true" minOccurs="0" />
          <xs:element name="column_name" type="xs:string" />
          <xs:element name="bind_position" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetproxy" >
      <xs:sequence>
        <xs:element name="methodname" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringclobimpl" >
      <xs:sequence>
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preparedstatementproxy" >
      <xs:sequence>
        <xs:element name="methodname" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bigdecimaldescriptortest" >
      <xs:complexContent>
       <xs:extension base="abstractdescriptortest<bigdecimal>">
         <xs:sequence>
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="copy" type="xs:anyType" />
          <xs:element name="different" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractdescriptortest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="typedescriptor" type="xs:anyType" />
          <xs:element name="testdata" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringdescriptortest" >
      <xs:complexContent>
       <xs:extension base="abstractdescriptortest<string>">
         <xs:sequence>
          <xs:element name="original" type="xs:string" />
          <xs:element name="copy" type="xs:string" />
          <xs:element name="different" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigintegerdescriptortest" >
      <xs:complexContent>
       <xs:extension base="abstractdescriptortest<biginteger>">
         <xs:sequence>
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="copy" type="xs:anyType" />
          <xs:element name="different" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="booleandescriptortest" >
      <xs:complexContent>
       <xs:extension base="abstractdescriptortest<boolean>">
         <xs:sequence>
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="copy" type="xs:anyType" />
          <xs:element name="different" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blobdescriptortest" >
      <xs:complexContent>
       <xs:extension base="abstractdescriptortest<blob>">
         <xs:sequence>
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="copy" type="xs:anyType" />
          <xs:element name="different" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localetypedescriptortest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basictyperegistrytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="search" >
      <xs:sequence>
        <xs:element name="search" type="xs:string" />
        <xs:element name="searchresults" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclassdynamicmaptest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deprecationloggingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="loginspection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
        <xs:element name="something" type="xs:string" />
        <xs:element name="somethingelse" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="GeneratedName" type="component" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loglistenerimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="loglistenerimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="addressid" nillable="true" minOccurs="0" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="customerid" type="xs:string" />
        <xs:element name="billing" type="address" nillable="true" minOccurs="0" />
        <xs:element name="shipping" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedonetoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addressid" >
      <xs:sequence>
        <xs:element name="type" type="xs:string" />
        <xs:element name="customerid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="groups" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idbagtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employment" >
      <xs:sequence>
        <xs:element name="personname" type="xs:string" />
        <xs:element name="organizationname" type="xs:string" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="personname" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="employments" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyonetoonetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithargfunctionascolumn" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lower" type="xs:long" />
        <xs:element name="upper" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pettingzoo" >
      <xs:complexContent>
       <xs:extension base="zoo">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="truck" >
      <xs:complexContent>
       <xs:extension base="vehicle">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querytranslatortestcase" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classictranslatortest" >
      <xs:complexContent>
       <xs:extension base="querytranslatortestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:complexContent>
       <xs:extension base="mammal">
         <xs:sequence>
          <xs:element name="" type="name" nillable="true" minOccurs="0" />
          <xs:element name="nickname" type="xs:string" />
          <xs:element name="friends" type="collection" nillable="true" minOccurs="0" />
          <xs:element name="pets" type="collection" nillable="true" minOccurs="0" />
          <xs:element name="family" type="map" nillable="true" minOccurs="0" />
          <xs:element name="heightinches" type="xs:double" />
          <xs:element name="value" type="xs:anyType" />
          <xs:element name="value" type="xs:anyType" />
          <xs:element name="value" type="xs:long" />
          <xs:element name="value" type="xs:double" />
          <xs:element name="nicknames" type="set" nillable="true" minOccurs="0" />
          <xs:element name="addresses" type="map" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriahqlalignmenttest" >
      <xs:complexContent>
       <xs:extension base="querytranslatortestcase">
         <xs:sequence>
          <xs:element name="initialversion2sqlflagvalue" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="postalcode" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="GeneratedName" type="stateprovince" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="key1" type="xs:long" />
        <xs:element name="key2" type="xs:string" />
        <xs:element name="someproperty" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:complexContent>
       <xs:extension base="domesticanimal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bulkmanipulationtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:complexContent>
       <xs:extension base="domesticanimal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constructor" >
      <xs:sequence>
        <xs:element name="constructor_execution_count" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="some" type="xs:string" />
        <xs:element name="some" type="xs:anyType" />
        <xs:element name="some" type="xs:anyType" />
        <xs:element name="another" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integerversioned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithcrazycompositekey" >
      <xs:sequence>
        <xs:element name="id" type="crazycompositekey" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="crazycompositekey" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="otherid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedsubclassbulkmaniptest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="treatkeywordtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="suv" >
      <xs:complexContent>
       <xs:extension base="truck">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="zoo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="classification" nillable="true" minOccurs="0" />
        <xs:element name="directors" type="map" nillable="true" minOccurs="0" />
        <xs:element name="animals" type="map" nillable="true" minOccurs="0" />
        <xs:element name="mammals" type="map" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joiner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="joinedname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="variouskeywordpropertyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="key" type="xs:string" />
        <xs:element name="entry" type="xs:string" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keymanytooneentity" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stateprovince" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="isocode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletewithsubquerytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classificationtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lizard" >
      <xs:complexContent>
       <xs:extension base="reptile">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parametertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleassociatedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="owner" type="simpleentitywithassociation" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="booleanliteralentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="yesno" type="xs:anyType" />
        <xs:element name="truefalse" type="xs:anyType" />
        <xs:element name="zeroone" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toonefetchandjointest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tomanyfetchandjointest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="keymanytoonekeyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classification" >
      <xs:sequence>
        <xs:element name="cool" type="classification" nillable="true" minOccurs="0" />
        <xs:element name="lame" type="classification" nillable="true" minOccurs="0" />
        <xs:element name="instances" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ordinal" type="xs:long" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithfunctionascolumnholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="nextholder" type="entitywithfunctionascolumnholder" nillable="true" minOccurs="0" />
        <xs:element name="entitywithargfunctionascolumns" type="set" nillable="true" minOccurs="0" />
        <xs:element name="entitywithnoargfunctionascolumns" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleentitywithassociation" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="negatednumber" type="xs:anyType" />
        <xs:element name="associatedentities" type="set" nillable="true" minOccurs="0" />
        <xs:element name="manytomanyassociatedentities" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="bodyweight" type="xs:double" />
        <xs:element name="offspring" type="set" nillable="true" minOccurs="0" />
        <xs:element name="mother" type="animal" nillable="true" minOccurs="0" />
        <xs:element name="father" type="animal" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="zoo" nillable="true" minOccurs="0" />
        <xs:element name="serialnumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestampversioned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="heresanothercrazyidfieldname" >
      <xs:sequence>
        <xs:element name="heresanothercrazyidfieldname" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicle" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="vin" type="xs:string" />
        <xs:element name="owner" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="functionnameascolumntest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithnoargfunctionascolumn" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="user" type="xs:string" />
        <xs:element name="currentdate" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentcontainer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="GeneratedName" type="human" nillable="true" minOccurs="0" />
        <xs:element name="permissions" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reptile" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="bodytemperature" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqltest" >
      <xs:complexContent>
       <xs:extension base="querytranslatortestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="withclausetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejbqltest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqlparsertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="domesticanimal" >
      <xs:complexContent>
       <xs:extension base="mammal">
         <xs:sequence>
          <xs:element name="owner" type="human" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="astparserloadingorderbytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="stateprovince" nillable="true" minOccurs="0" />
          <xs:element name="1" type="zoo" nillable="true" minOccurs="0" />
          <xs:element name="2" type="zoo" nillable="true" minOccurs="0" />
          <xs:element name="3" type="zoo" nillable="true" minOccurs="0" />
          <xs:element name="4" type="zoo" nillable="true" minOccurs="0" />
          <xs:element name="zooswithsamename" type="zoo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="zooswithsameaddress" type="zoo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="zoo11" type="mammal" nillable="true" minOccurs="0" />
          <xs:element name="zoo12" type="mammal" nillable="true" minOccurs="0" />
          <xs:element name="zoo2director1" type="human" nillable="true" minOccurs="0" />
          <xs:element name="zoo2director2" type="human" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="image" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sizekb" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scrollablecollectionfetchingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="morecrazyidfieldnamestuffentity" >
      <xs:sequence>
        <xs:element name="morecrazyidfieldnamestuffentity" type="xs:long" />
        <xs:element name="//sillyain'tit)" type="heresanothercrazyidfieldname" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pickup" >
      <xs:complexContent>
       <xs:extension base="truck">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="name" >
      <xs:sequence>
        <xs:element name="first" type="xs:string" />
        <xs:element name="initial" type="character" nillable="true" minOccurs="0" />
        <xs:element name="last" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mammal" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="pregnant" type="xs:anyType" />
          <xs:element name="birth" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:complexContent>
       <xs:extension base="vehicle">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="astparserloadingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="createdanimalids" type="xs:anyType" />
          <xs:element name="default_preparer" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="search" >
      <xs:sequence>
        <xs:element name="search" type="xs:string" />
        <xs:element name="searchresults" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockmodetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inserteddatatest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonaggregatedcompositeidcachingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectioncacheevictiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="polymorphiccachetest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyloadingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="employeeid" type="xs:string" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unconstrainedtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadplanstructureassertiontest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadplanstructureassertionhelper" >
      <xs:sequence>
        <xs:element name="/***singletonaccesstothehelper*/instance" type="loadplanstructureassertionhelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nestedcompositeelementtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeswalkingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loggingassociationvisitationstrategy" >
      <xs:sequence>
        <xs:element name="depth" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keymanytoonewalkingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="helper" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="helper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="test" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonencapsulatedcompositeidresultsetprocessortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typeparametertest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultvalueintegertype" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="defaultvalue" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="widget" >
      <xs:sequence>
        <xs:element name="valueone" type="xs:long" />
        <xs:element name="valuetwo" type="xs:long" />
        <xs:element name="valuethree" type="xs:long" />
        <xs:element name="valuefour" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutabletest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="party" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="contract" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="infos" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plan" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="contracts" type="set" nillable="true" minOccurs="0" />
        <xs:element name="infos" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contract" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="customername" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="variations" type="list" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="contract" nillable="true" minOccurs="0" />
        <xs:element name="subcontracts" type="set" nillable="true" minOccurs="0" />
        <xs:element name="plans" type="set" nillable="true" minOccurs="0" />
        <xs:element name="parties" type="set" nillable="true" minOccurs="0" />
        <xs:element name="infos" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="info" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractentitywithmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="isplancontractsinverse" type="xs:anyType" />
          <xs:element name="isplancontractsbidirectional" type="xs:anyType" />
          <xs:element name="isplanversioned" type="xs:anyType" />
          <xs:element name="iscontractversioned" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contract" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="customername" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="variations" type="list" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="contract" nillable="true" minOccurs="0" />
        <xs:element name="subcontracts" type="set" nillable="true" minOccurs="0" />
        <xs:element name="plans" type="set" nillable="true" minOccurs="0" />
        <xs:element name="parties" type="set" nillable="true" minOccurs="0" />
        <xs:element name="infos" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="plan" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plan" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="contracts" type="set" nillable="true" minOccurs="0" />
        <xs:element name="infos" type="set" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="owner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contractvariation" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="contract" nillable="true" minOccurs="0" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="infos" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithnoninverseonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionedentitywithnoninversemanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithmanytomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithnoninversemanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithmanytomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionedentitywithnoninverseonetomanyjointest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithnoninverseonetomanyjointest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithnoninverseonetomanyunidirtest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionedentitywithnoninverseonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithnoninversemanytomanyunidirtest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithmanytomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="info" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithinverseonetomanyjointest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionedentitywithinverseonetomanyjointest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithinversemanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithmanytomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionedentitywithinverseonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithinverseonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionedentitywithinversemanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithmanytomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="party" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="contract" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="infos" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractentitywithonetomanytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="iscontractpartiesinverse" type="xs:anyType" />
          <xs:element name="iscontractpartiesbidirectional" type="xs:anyType" />
          <xs:element name="iscontractvariationsbidirectional" type="xs:anyType" />
          <xs:element name="iscontractversioned" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractvariation" >
      <xs:sequence>
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="contract" nillable="true" minOccurs="0" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="infos" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionattribute" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="objectdata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapindexformulatest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="session" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractjpatest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="other" type="myentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutablenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="immutablenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="myuserid" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="email" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtatransactionjoiningtest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resourcelocaltransactionjoiningtest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onkeywordtest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativequerytest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namednativequerytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="functionkeywordtest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpaqlcompliancetest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stay" >
      <xs:sequence>
        <xs:element name="//memberdeclarationid" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="old" type="person" nillable="true" minOccurs="0" />
        <xs:element name="veryold" type="person" nillable="true" minOccurs="0" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="vessel" type="xs:string" />
        <xs:element name="authoriser" type="xs:string" />
        <xs:element name="comments" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchingtest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="//memberdeclarationid" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="companyname" type="xs:string" />
        <xs:element name="stays" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="oldstays" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="veryoldstays" type="collection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="convertbetweentest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigdecimaltostringconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addtenconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaproxytest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentassigned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="info" type="parentinfoassigned" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="other" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="info" type="childinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentinfoassigned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="parentassigned" nillable="true" minOccurs="0" />
        <xs:element name="info" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="info" type="parentinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childinfoassigned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="childassigned" nillable="true" minOccurs="0" />
        <xs:element name="info" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="info" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="otherassigned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="parentassigned" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childassigned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="parentassigned" nillable="true" minOccurs="0" />
        <xs:element name="info" type="childinfoassigned" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="child" nillable="true" minOccurs="0" />
        <xs:element name="info" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mysubclassentity" >
      <xs:complexContent>
       <xs:extension base="myentity">
         <xs:sequence>
          <xs:element name="somesubproperty" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removedentitytest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpalocktest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="repeatablereadtest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="parts" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="part" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stocknumber" type="xs:string" />
        <xs:element name="unitprice" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customdirtinessstrategytest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="initial_name" type="xs:string" />
          <xs:element name="subsequent_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="orgname" type="xs:string" />
        <xs:element name="customername" type="xs:string" />
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="favoritecustomer" >
      <xs:complexContent>
       <xs:extension base="customer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customerid" >
      <xs:sequence>
        <xs:element name="orgname" type="xs:string" />
        <xs:element name="customername" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclasstest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterparsertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityentrytest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="executablelisttest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="l" type="xs:anyType" />
          <xs:element name="action1" type="xs:anyType" />
          <xs:element name="action2" type="xs:anyType" />
          <xs:element name="action3" type="xs:anyType" />
          <xs:element name="action4" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standarddialectresolvertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="drivermanagerconnectionprovidertransactionisolationconfigtest" >
      <xs:complexContent>
       <xs:extension base="basetransactionisolationconfigtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertiestest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="drivermanagerregistrationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="connectioncreatortest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="templatetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="property_mapping" type="propertymapping" nillable="true" minOccurs="0" />
          <xs:element name="mapper" type="columnmapper" nillable="true" minOccurs="0" />
          <xs:element name="" type="dialect" nillable="true" minOccurs="0" />
          <xs:element name="function_registry" type="sqlfunctionregistry" nillable="true" minOccurs="0" />
          <xs:element name="//requiredfororderbyrendering.session_factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicpropertyaccessortest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="directpropertyaccessortest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mocks" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectfactorytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="registry" type="standardserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="dialectfactory" type="dialectfactoryimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dialectresolvertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testingdialectresolutioninfo" >
      <xs:sequence>
        <xs:element name="databasename" type="xs:string" />
        <xs:element name="databasemajorversion" type="xs:long" />
        <xs:element name="databaseminorversion" type="xs:long" />
        <xs:element name="drivername" type="xs:string" />
        <xs:element name="drivermajorversion" type="xs:long" />
        <xs:element name="driverminorversion" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derbydialecttestcase" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserver2005dialecttestcase" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="dialect" type="sqlserver2005dialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresql81dialecttestcase" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracle8idialecttestcase" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2dialecttestcase" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="dialect" type="db2dialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testingdialects" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracledialectstest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclassproxyinterfacetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doctor" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idoctor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheaccesstypetest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querykeytest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="query_" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidcachekeytest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentservicebindingtest" >
      <xs:sequence>
        <xs:element name="testtypes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serviceregistryclosingcascadetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpaspecversionvalueupdatingtest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionwithsharedconnectiontest" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobcreatortest" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.testing.junit4.baseunittestcase">
         <xs:sequence>
          <xs:element name="conn_proxy_types" type="xs:anyType" />
          <xs:element name="meta_proxy_types" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicformattertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactoryserializationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentidentifierbag" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="values" type="xs:anyType" />
          <xs:element name="identifiers" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentarrayholder" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="array" type="xs:anyType" />
          <xs:element name="//justtohelpoutduringtheload(ugly,iknow)transientelement" type="xs:anyType" />
          <xs:element name="transienttemplist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentmap" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="" type="map" nillable="true" minOccurs="0" />
          <xs:element name="transientloadingentries" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpersistentcollection" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="transientsession" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="initialized" type="xs:anyType" />
        <xs:element name="transientoperationqueue" type="xs:anyType" />
        <xs:element name="transientdirectlyaccessible" type="xs:anyType" />
        <xs:element name="transientinitializing" type="xs:anyType" />
        <xs:element name="owner" type="xs:anyType" />
        <xs:element name="cachedsize" type="xs:long" />
        <xs:element name="role" type="xs:string" />
        <xs:element name="key" type="xs:anyType" />
        <xs:element name="//collectionsdetectchangesmadeviatheirpublicinterfaceandmark//themselvesasdirtyasaperformanceoptimizationdirty" type="xs:anyType" />
        <xs:element name="storedsnapshot" type="xs:anyType" />
        <xs:element name="sessionfactoryuuid" type="xs:string" />
        <xs:element name="allowloadoutsidetransaction" type="xs:anyType" />
        <xs:element name="unknown" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentsortedmap" >
      <xs:complexContent>
       <xs:extension base="persistentmap">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentlist" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentsortedset" >
      <xs:complexContent>
       <xs:extension base="persistentset">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentbag" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="bag" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentset" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="" type="set" nillable="true" minOccurs="0" />
          <xs:element name="transienttemp" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentcollection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serviceregistryimplementor" >
      <xs:complexContent>
       <xs:extension base="serviceregistry">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serviceinitiator" >
      <xs:complexContent>
       <xs:extension base="service>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="servicecontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serviceexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manageable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wrapped" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="startable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="injectservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryserviceregistryfactory" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactoryserviceregistry" >
      <xs:complexContent>
       <xs:extension base="serviceregistryimplementor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serviceregistryawareservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="servicebinding" >
      <xs:complexContent>
       <xs:extension base="service>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="lifecycleowner" type="xs:anyType" />
          <xs:element name="servicerole" type="xs:anyType" />
          <xs:element name="serviceinitiator" type="xs:anyType" />
          <xs:element name="sevice" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stoppable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryserviceinitiator" >
      <xs:complexContent>
       <xs:extension base="service>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unknownserviceexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="servicerole" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unknownunwraptypeexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serviceregistry" >
      <xs:complexContent>
       <xs:extension base="service<t>>}">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardserviceinitiators" >
      <xs:sequence>
        <xs:element name="list" type="standardserviceinitiator" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryserviceregistryimpl" >
      <xs:complexContent>
       <xs:extension base="abstractserviceregistryimpl">
         <xs:sequence>
          <xs:element name="" type="sessionfactoryoptions" nillable="true" minOccurs="0" />
          <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serviceproxygenerationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardsessionfactoryserviceinitiators" >
      <xs:sequence>
        <xs:element name="list" type="sessionfactoryserviceinitiator" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractserviceregistryimpl" >
      <xs:complexContent>
       <xs:extension base="service>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="allow_crawling" type="xs:string" />
          <xs:element name="parent" type="serviceregistryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="allowcrawling" type="xs:anyType" />
          <xs:element name="servicebindingmap" type="xs:anyType" />
          <xs:element name="rolexref" type="xs:anyType" />
          <xs:element name="//implnote:thelistusedforordereddestruction.cannotusedmapabovebecauseweneedto//iterateitinreverseorderwhichisonlyavailablethroughlistiterator//assume20servicesforinitialsizingservicebindinglist" type="servicebinding" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="autocloseregistry" type="xs:anyType" />
          <xs:element name="childregistries" type="serviceregistryimplementor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="active" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="providedservice" >
      <xs:sequence>
        <xs:element name="servicerole" type="xs:anyType" />
        <xs:element name="sevice" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryserviceregistryfactoryimpl" >
      <xs:sequence>
        <xs:element name="thebasicserviceregistry" type="serviceregistryimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="servicedependencyexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactoryserviceregistryfactoryinitiator" >
      <xs:sequence>
        <xs:element name="instance" type="sessionfactoryserviceregistryfactoryinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentservicebinding" >
      <xs:sequence>
        <xs:element name="empty_leaf" type="node" nillable="true" minOccurs="0" />
        <xs:element name="treeroot" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lifecycle" >
      <xs:sequence>
        <xs:element name="/***returnvaluetovetotheaction(true)*/veto" type="xs:anyType" />
        <xs:element name="/***returnvaluetoaccepttheaction(false)*/no_veto" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyvalueexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertysetteraccessexception" >
      <xs:complexContent>
       <xs:extension base="propertyaccessexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitynameresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlquery" >
      <xs:complexContent>
       <xs:extension base="query,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronizeablequery" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emptyinterceptor" >
      <xs:sequence>
        <xs:element name="/***thesingletonreference.*/instance" type="interceptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractserializableproxy" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="readonly" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitynotfounddelegate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="javassistlazyinitializer" >
      <xs:complexContent>
       <xs:extension base="basiclazyinitializer">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="interfaces" type="xs:anyType" />
          <xs:element name="constructed" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="javassistproxyfactory" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="ize_filter" type="xs:anyType" />
        <xs:element name="persistent" type="xs:anyType" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="interfaces" type="xs:anyType" />
        <xs:element name="getidentifier" type="xs:anyType" />
        <xs:element name="setidentifier" type="xs:anyType" />
        <xs:element name="componentidtype" type="compositetype" nillable="true" minOccurs="0" />
        <xs:element name="overridesequals" type="xs:anyType" />
        <xs:element name="proxy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializableproxy" >
      <xs:complexContent>
       <xs:extension base="abstractserializableproxy">
         <xs:sequence>
          <xs:element name="persistent" type="xs:anyType" />
          <xs:element name="interfaces" type="xs:anyType" />
          <xs:element name="identifiergettermethodname" type="xs:string" />
          <xs:element name="identifiergettermethod" type="xs:anyType" />
          <xs:element name="identifiersettermethodname" type="xs:string" />
          <xs:element name="identifiersettermethod" type="xs:anyType" />
          <xs:element name="identifiersettermethodparams" type="xs:anyType" />
          <xs:element name="componentidtype" type="compositetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiclazyinitializer" >
      <xs:complexContent>
       <xs:extension base="abstractlazyinitializer">
         <xs:sequence>
          <xs:element name="invoke_implementation" type="xs:anyType" />
          <xs:element name="persistent" type="xs:anyType" />
          <xs:element name="getidentifier" type="xs:anyType" />
          <xs:element name="setidentifier" type="xs:anyType" />
          <xs:element name="overridesequals" type="xs:anyType" />
          <xs:element name="componentidtype" type="compositetype" nillable="true" minOccurs="0" />
          <xs:element name="replacement" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxyfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateproxyhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyinitializer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maplazyinitializer" >
      <xs:complexContent>
       <xs:extension base="abstractlazyinitializer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapproxy" >
      <xs:sequence>
        <xs:element name="li" type="maplazyinitializer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapproxyfactory" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateproxy" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlazyinitializer" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="target" type="xs:anyType" />
        <xs:element name="initialized" type="xs:anyType" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="unwrap" type="xs:anyType" />
        <xs:element name="transientsession" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="readonlybeforeattachedtosession" type="xs:anyType" />
        <xs:element name="sessionfactoryuuid" type="xs:string" />
        <xs:element name="allowloadoutsidetransaction" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instantiationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="clazz" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappingnotfoundexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
          <xs:element name="path" type="xs:string" />
          <xs:element name="type" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="duplicationstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eventlistenerregistry" >
      <xs:complexContent>
       <xs:extension base="service,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventlistenergroup" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventlistenerregistrationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventlistenerregistryimpl" >
      <xs:complexContent>
       <xs:extension base="t>...">
         <xs:sequence>
          <xs:element name="listenerclasstoinstancemap" type="xs:anyType" />
          <xs:element name="registeredeventlisteners" type="eventlistenergroupimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventlistenerserviceinitiator" >
      <xs:sequence>
        <xs:element name="instance" type="eventlistenerserviceinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postcommiteventlistenergroupimpl" >
      <xs:complexContent>
       <xs:extension base="eventlistenergroupimpl<t>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="extendedlistenercontract" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventlistenergroupimpl" >
      <xs:sequence>
        <xs:element name="eventtype" type="xs:anyType" />
        <xs:element name="duplicationstrategies" type="duplicationstrategy" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="listeners" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultpersistonflusheventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultpersisteventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxyvisitor" >
      <xs:complexContent>
       <xs:extension base="abstractvisitor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultlockeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractlockupgradeeventlistener">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultreplicateeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractsaveeventlistener">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsaveeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractreassociateeventlistener">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultsaveorupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractsaveeventlistener">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onupdatevisitor" >
      <xs:complexContent>
       <xs:extension base="reattachvisitor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractflushingeventlistener" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onlockvisitor" >
      <xs:complexContent>
       <xs:extension base="reattachvisitor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onreplicatevisitor" >
      <xs:complexContent>
       <xs:extension base="reattachvisitor">
         <xs:sequence>
          <xs:element name="isupdate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="evictvisitor" >
      <xs:complexContent>
       <xs:extension base="abstractvisitor">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultinitializecollectioneventlistener" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultmergeeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractsaveeventlistener">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="entitycopyobserverstrategy" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushvisitor" >
      <xs:complexContent>
       <xs:extension base="abstractvisitor">
         <xs:sequence>
          <xs:element name="owner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultresolvenaturalideventlistener" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="removed_entity_marker" type="xs:anyType" />
          <xs:element name="inconsistent_rtn_class_marker" type="xs:anyType" />
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrapvisitor" >
      <xs:complexContent>
       <xs:extension base="proxyvisitor">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="substitute" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergecontext" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="session" type="eventsource" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitycopyobserver" nillable="true" minOccurs="0" />
        <xs:element name="mergetomanagedentityxref" type="xs:anyType" />
        <xs:element name="managedtomergeentityxref" type="xs:anyType" />
        <xs:element name="mergeentitytooperatedonflagmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractlockupgradeeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractreassociateeventlistener">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitycopyallowedobserver" >
      <xs:sequence>
        <xs:element name="short_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultpreloadeventlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultdeleteeventlistener" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractreassociateeventlistener" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultsaveeventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultsaveorupdateeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reattachvisitor" >
      <xs:complexContent>
       <xs:extension base="proxyvisitor">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="owneridentifier" type="xs:anyType" />
          <xs:element name="owner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultflushentityeventlistener" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultflusheventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractflushingeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dirtycollectionsearchvisitor" >
      <xs:complexContent>
       <xs:extension base="abstractvisitor">
         <xs:sequence>
          <xs:element name="dirty" type="xs:anyType" />
          <xs:element name="propertyversionability" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultdirtycheckeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractflushingeventlistener">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultevicteventlistener" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultautoflusheventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractflushingeventlistener">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitycopyallowedloggedobserver" >
      <xs:complexContent>
       <xs:extension base="entitycopyallowedobserver">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="short_name" type="xs:string" />
          <xs:element name="countsbyentityname" type="xs:anyType" />
          <xs:element name="managedtomergeentitiesxref" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultsaveorupdateeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultpostloadeventlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultloadeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractlockupgradeeventlistener">
         <xs:sequence>
          <xs:element name="removed_entity_marker" type="xs:anyType" />
          <xs:element name="inconsistent_rtn_class_marker" type="xs:anyType" />
          <xs:element name="default_lock_mode" type="lockmode" nillable="true" minOccurs="0" />
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="traceenabled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultpersisteventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractsaveeventlistener">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultrefresheventlistener" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitycopynotallowedobserver" >
      <xs:sequence>
        <xs:element name="short_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractvisitor" >
      <xs:sequence>
        <xs:element name="session" type="eventsource" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postdeleteeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="saveorupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="saveorupdateevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="requestedid" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="entry" type="entityentry" nillable="true" minOccurs="0" />
          <xs:element name="resultid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="initializecollectionevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preupdateevent" >
      <xs:complexContent>
       <xs:extension base="abstractpredatabaseoperationevent">
         <xs:sequence>
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="oldstate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergeeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventtype" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
          <xs:element name="typecounter" type="xs:anyType" />
          <xs:element name="load" type="loadeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="resolve_natural_id" type="resolvenaturalideventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="init_collection" type="initializecollectioneventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="save_update" type="saveorupdateeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="update" type="saveorupdateeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="save" type="saveorupdateeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="persist" type="persisteventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="persist_onflush" type="persisteventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="merge" type="mergeeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="delete" type="deleteeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="replicate" type="replicateeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="flush" type="flusheventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="auto_flush" type="autoflusheventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="dirty_check" type="dirtycheckeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="flush_entity" type="flushentityeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="clear" type="cleareventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="evict" type="evicteventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="lock" type="lockeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="refresh" type="refresheventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="pre_load" type="preloadeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="pre_delete" type="predeleteeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="pre_update" type="preupdateeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="pre_insert" type="preinserteventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="post_load" type="postloadeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="post_delete" type="postdeleteeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="post_update" type="postupdateeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="post_insert" type="postinserteventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="post_commit_delete" type="postdeleteeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="post_commit_update" type="postupdateeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="post_commit_insert" type="postinserteventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="pre_collection_recreate" type="precollectionrecreateeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="pre_collection_remove" type="precollectionremoveeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="pre_collection_update" type="precollectionupdateeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="post_collection_recreate" type="postcollectionrecreateeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="post_collection_remove" type="postcollectionremoveeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="post_collection_update" type="postcollectionupdateeventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="event_type_by_name_map" type="xs:anyType" />
          <xs:element name="eventname" type="xs:string" />
          <xs:element name="baselistenerinterface" type="xs:anyType" />
          <xs:element name="ordinal" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postdeleteevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="deletedstate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="initializecollectioneventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dirtycheckevent" >
      <xs:complexContent>
       <xs:extension base="flushevent">
         <xs:sequence>
          <xs:element name="dirty" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="precollectionupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoflusheventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="precollectionrecreateevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="precollectionremoveevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postloadeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="precollectionremoveeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractevent" >
      <xs:sequence>
        <xs:element name="session" type="eventsource" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postloadevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="evictevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="predeleteevent" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="deletedstate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="refreshevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deleteeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpredatabaseoperationevent" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="numberofentitiesprocessed" type="xs:long" />
          <xs:element name="numberofcollectionsprocessed" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preloadevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergeevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="requestedid" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="result" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="predeleteeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dirtycheckeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushentityeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
          <xs:element name="reload" type="xs:anyType" />
          <xs:element name="get" type="xs:anyType" />
          <xs:element name="load" type="xs:anyType" />
          <xs:element name="immediate_load" type="xs:anyType" />
          <xs:element name="internal_load_eager" type="xs:anyType" />
          <xs:element name="internal_load_lazy" type="xs:anyType" />
          <xs:element name="internal_load_nullable" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommitinserteventlistener" >
      <xs:complexContent>
       <xs:extension base="postinserteventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cleareventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postupdateevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="oldstate" type="xs:anyType" />
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="dirtyproperties" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushentityevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="propertyvalues" type="xs:anyType" />
          <xs:element name="databasesnapshot" type="xs:anyType" />
          <xs:element name="dirtyproperties" type="xs:long" />
          <xs:element name="hasdirtycollection" type="xs:anyType" />
          <xs:element name="dirtycheckpossible" type="xs:anyType" />
          <xs:element name="dirtycheckhandledbyinterceptor" type="xs:anyType" />
          <xs:element name="" type="entityentry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="precollectionupdateevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resolvenaturalidevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="default_lock_mode" type="lockmode" nillable="true" minOccurs="0" />
          <xs:element name="" type="entitypersister" nillable="true" minOccurs="0" />
          <xs:element name="naturalidvalues" type="xs:anyType" />
          <xs:element name="orderednaturalidvalues" type="xs:anyType" />
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
          <xs:element name="entityid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preinserteventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommitdeleteeventlistener" >
      <xs:complexContent>
       <xs:extension base="postdeleteeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcollectionremoveevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="evicteventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persisteventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="refresheventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deleteevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="cascadedeleteenabled" type="xs:anyType" />
          <xs:element name="//todo:theremoveorphanconceptisatemporary"hack"forhhh-6484.thisshouldberemovedonceaction/task//orderingisimproved.orphanremovalbeforeupdates" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postinsertevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="replicateevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="replicationmode" nillable="true" minOccurs="0" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventsource" >
      <xs:complexContent>
       <xs:extension base="sessionimplementor,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="precollectionrecreateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcollectionupdateevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommitupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="postupdateeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcollectionevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="collection" type="persistentcollection" nillable="true" minOccurs="0" />
          <xs:element name="affectedowner" type="xs:anyType" />
          <xs:element name="affectedownerid" type="xs:anyType" />
          <xs:element name="affectedownerentityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="default_lock_mode" type="lockmode" nillable="true" minOccurs="0" />
          <xs:element name="//performancehotspot:avoidallocatingunneededdefault_lock_options" type="lockoptions" nillable="true" minOccurs="0" />
          <xs:element name="entityid" type="xs:anyType" />
          <xs:element name="entityclassname" type="xs:string" />
          <xs:element name="instancetoload" type="xs:anyType" />
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
          <xs:element name="isassociationfetch" type="xs:anyType" />
          <xs:element name="result" type="xs:anyType" />
          <xs:element name="" type="postloadevent" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resolvenaturalideventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="replicateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoflushevent" >
      <xs:complexContent>
       <xs:extension base="flushevent">
         <xs:sequence>
          <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
          <xs:element name="flushrequired" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcollectionrecreateevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preinsertevent" >
      <xs:complexContent>
       <xs:extension base="abstractpredatabaseoperationevent">
         <xs:sequence>
          <xs:element name="state" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcollectionupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcollectionremoveeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcollectionrecreateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flusheventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postinserteventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clearevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitycopyobserver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preloadeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assertionfailure" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateerror" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ansijoinfragment" >
      <xs:complexContent>
       <xs:extension base="joinfragment">
         <xs:sequence>
          <xs:element name="buffer" type="xs:anyType" />
          <xs:element name="conditions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="decodecasefragment" >
      <xs:complexContent>
       <xs:extension base="casefragment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ansicasefragment" >
      <xs:complexContent>
       <xs:extension base="casefragment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectfragment" >
      <xs:sequence>
        <xs:element name="suffix" type="xs:string" />
        <xs:element name="columns" type="xs:anyType" />
        <xs:element name="//listaliases" type="xs:anyType" />
        <xs:element name="extraselectlist" type="xs:string" />
        <xs:element name="usedaliases" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oraclejoinfragment" >
      <xs:complexContent>
       <xs:extension base="joinfragment">
         <xs:sequence>
          <xs:element name="afterfrom" type="xs:anyType" />
          <xs:element name="afterwhere" type="xs:anyType" />
          <xs:element name="operators" type="set" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="select" >
      <xs:sequence>
        <xs:element name="selectclause" type="xs:string" />
        <xs:element name="fromclause" type="xs:string" />
        <xs:element name="outerjoinsafterfrom" type="xs:string" />
        <xs:element name="whereclause" type="xs:string" />
        <xs:element name="outerjoinsafterwhere" type="xs:string" />
        <xs:element name="orderbyclause" type="xs:string" />
        <xs:element name="groupbyclause" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="GeneratedName" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="guesstimatedbuffersize" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionfragment" >
      <xs:sequence>
        <xs:element name="tablealias" type="xs:string" />
        <xs:element name="lhs" type="xs:string" />
        <xs:element name="rhs" type="xs:string" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryjoinfragment" >
      <xs:complexContent>
       <xs:extension base="joinfragment">
         <xs:sequence>
          <xs:element name="afterfrom" type="xs:anyType" />
          <xs:element name="afterwhere" type="xs:anyType" />
          <xs:element name="" type="dialect" nillable="true" minOccurs="0" />
          <xs:element name="usethetastyleinnerjoins" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aliasgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="insert" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="tablename" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="columns" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alias" >
      <xs:sequence>
        <xs:element name="length" type="xs:long" />
        <xs:element name="suffix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="disjunctionfragment" >
      <xs:sequence>
        <xs:element name="buffer" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="casefragment" >
      <xs:sequence>
        <xs:element name="returncolumnname" type="xs:string" />
        <xs:element name="cases" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinfragment" >
      <xs:sequence>
        <xs:element name="/***specifiesaninnerjoin.**use{@linkjoype#inner_join}instead.*/inner_join" type="xs:long" />
        <xs:element name="/***specifiesafulljoin**use{@linkjoype#full_join}instead.*/full_join" type="xs:long" />
        <xs:element name="/***specifiesaleftjoin.**use{@linkjoype#left_outer_join}instead.*/left_outer_join" type="xs:long" />
        <xs:element name="/***specifiesarightjoin.**use{@linkjoype#right_outer_join}instead.*/right_outer_join" type="xs:long" />
        <xs:element name="hasfiltercondition" type="xs:anyType" />
        <xs:element name="hasthetajoins" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryselect" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="joins" type="joinfragment" nillable="true" minOccurs="0" />
        <xs:element name="select" type="xs:anyType" />
        <xs:element name="where" type="xs:anyType" />
        <xs:element name="groupby" type="xs:anyType" />
        <xs:element name="orderby" type="xs:anyType" />
        <xs:element name="having" type="xs:anyType" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="distinct" type="xs:anyType" />
        <xs:element name="dont_space_tokens" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hsqlcasefragment" >
      <xs:complexContent>
       <xs:extension base="casefragment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="forupdatefragment" >
      <xs:sequence>
        <xs:element name="aliases" type="xs:anyType" />
        <xs:element name="isnowaitenabled" type="xs:anyType" />
        <xs:element name="isskiplockedenabled" type="xs:anyType" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockoptions" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jointype" >
      <xs:sequence>
        <xs:element name="joypevalue" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachejoinfragment" >
      <xs:complexContent>
       <xs:extension base="ansijoinfragment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="formulareference" >
      <xs:complexContent>
       <xs:extension base="sqlvaluereference">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlvaluereference" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="factory" >
      <xs:complexContent>
       <xs:extension base="astfactory">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortkey" >
      <xs:complexContent>
       <xs:extension base="nodesupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="translationcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderingspecification" >
      <xs:complexContent>
       <xs:extension base="nodesupport">
         <xs:sequence>
          <xs:element name="resolved" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbyfragmentparser" >
      <xs:complexContent>
       <xs:extension base="generatedorderbyfragmentparser">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="context" type="translationcontext" nillable="true" minOccurs="0" />
          <xs:element name="columnreferences" type="xs:anyType" />
          <xs:element name="template_marker_length" type="xs:long" />
          <xs:element name="//tracelogging~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~tracedepth" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbyfragmentrenderer" >
      <xs:complexContent>
       <xs:extension base="generatedorderbyfragmentrenderer">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="printer" type="astprinter" nillable="true" minOccurs="0" />
          <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="//handletracelogging~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~tracedepth" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbyfragmenttranslator" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collationspecification" >
      <xs:complexContent>
       <xs:extension base="nodesupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbytranslation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortspecification" >
      <xs:complexContent>
       <xs:extension base="nodesupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbyaliasresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nodesupport" >
      <xs:complexContent>
       <xs:extension base="commonast">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbyfragment" >
      <xs:complexContent>
       <xs:extension base="nodesupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnreference" >
      <xs:complexContent>
       <xs:extension base="sqlvaluereference">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mckoicasefragment" >
      <xs:complexContent>
       <xs:extension base="casefragment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derbycasefragment" >
      <xs:complexContent>
       <xs:extension base="casefragment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertselect" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="tablename" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="columnnames" type="list" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="select" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sybase11joinfragment" >
      <xs:complexContent>
       <xs:extension base="joinfragment">
         <xs:sequence>
          <xs:element name="afterfrom" type="xs:anyType" />
          <xs:element name="afterwhere" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectexpression" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectvalues" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="selectvaluelist" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="infragment" >
      <xs:sequence>
        <xs:element name="null" type="xs:string" />
        <xs:element name="not_null" type="xs:string" />
        <xs:element name="columnname" type="xs:string" />
        <xs:element name="values" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delete" >
      <xs:sequence>
        <xs:element name="tablename" type="xs:string" />
        <xs:element name="versioncolumnname" type="xs:string" />
        <xs:element name="where" type="xs:string" />
        <xs:element name="primarykeycolumns" type="map" nillable="true" minOccurs="0" />
        <xs:element name="comment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="update" >
      <xs:sequence>
        <xs:element name="tablename" type="xs:string" />
        <xs:element name="versioncolumnname" type="xs:string" />
        <xs:element name="where" type="xs:string" />
        <xs:element name="assignments" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="primarykeycolumns" type="map" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="map" nillable="true" minOccurs="0" />
        <xs:element name="wherecolumns" type="map" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="template" >
      <xs:sequence>
        <xs:element name="keywords" type="xs:anyType" />
        <xs:element name="before_table_keywords" type="xs:anyType" />
        <xs:element name="function_keywords" type="xs:anyType" />
        <xs:element name="template" type="xs:string" />
        <xs:element name="legacy_order_by_alias_resolver" type="orderbyaliasresolver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleselect" >
      <xs:sequence>
        <xs:element name="//aliasdefault_alias" type="xs:string" />
        <xs:element name="orderby" type="xs:string" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="columns" type="xs:anyType" />
        <xs:element name="aliases" type="xs:anyType" />
        <xs:element name="wheretokens" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scrollableresults" >
      <xs:complexContent>
       <xs:extension base="java.io.closeable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachemode" >
      <xs:sequence>
        <xs:element name="isputenabled" type="xs:anyType" />
        <xs:element name="isgetenabled" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="callbackexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querytimeoutexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymode" >
      <xs:sequence>
        <xs:element name="externalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wrongclassexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="identifier" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classmetadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionmetadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractwork" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expectation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="returningwork" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workexecutorvisitable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workexecutor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchfailedexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="toomanyrowsaffectedexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="expectedrowcount" type="xs:long" />
          <xs:element name="actualrowcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="work" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractreturningwork" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expectations" >
      <xs:complexContent>
       <xs:extension base="basicexpectation">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="" type="sqlexceptionhelper" nillable="true" minOccurs="0" />
          <xs:element name="usual_expected_count" type="xs:long" />
          <xs:element name="usual_param_position" type="xs:long" />
          <xs:element name="//variousinstances~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~none" type="expectation" nillable="true" minOccurs="0" />
          <xs:element name="basic" type="expectation" nillable="true" minOccurs="0" />
          <xs:element name="param" type="expectation" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchedtoomanyrowsaffectedexception" >
      <xs:complexContent>
       <xs:extension base="toomanyrowsaffectedexception">
         <xs:sequence>
          <xs:element name="batchposition" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaautotooling" >
      <xs:sequence>
        <xs:element name="externalform" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jaccpermissiondefinition" >
      <xs:sequence>
        <xs:element name="contextid" type="xs:string" />
        <xs:element name="role" type="xs:string" />
        <xs:element name="clazz" type="xs:string" />
        <xs:element name="actions" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidmappingexception" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.invalidmappingexception">
         <xs:sequence>
          <xs:element name="" type="origin" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadata" >
      <xs:complexContent>
       <xs:extension base="mapping">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bootstrapserviceregistry" >
      <xs:complexContent>
       <xs:extension base="serviceregistry">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardserviceregistrybuilder" >
      <xs:sequence>
        <xs:element name="/***thedefaultresourcenameforahibernateconfigurationxmlfile.*/default_cfg_resource_name" type="xs:string" />
        <xs:element name="settings" type="map" nillable="true" minOccurs="0" />
        <xs:element name="initiators" type="standardserviceinitiator" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="providedservices" type="providedservice" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="autocloseregistry" type="xs:anyType" />
        <xs:element name="GeneratedName" type="bootstrapserviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="configloader" nillable="true" minOccurs="0" />
        <xs:element name="aggregatedcfgxml" type="loadedconfig" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstrapserviceregistrybuilder" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
          <xs:element name="providedintegrators" type="integrator" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="providedclassloaders" type="xs:anyType" />
          <xs:element name="provided" type="classloaderservice" nillable="true" minOccurs="0" />
          <xs:element name="" type="strategyselectorbuilder" nillable="true" minOccurs="0" />
          <xs:element name="autocloseregistry" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardserviceregistry" >
      <xs:complexContent>
       <xs:extension base="serviceregistry">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardserviceregistryimpl" >
      <xs:complexContent>
       <xs:extension base="abstractserviceregistryimpl">
         <xs:sequence>
          <xs:element name="configurationvalues" type="map" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bootstrapserviceregistryimpl" >
      <xs:complexContent>
       <xs:extension base="service>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="autocloseregistry" type="xs:anyType" />
          <xs:element name="active" type="xs:anyType" />
          <xs:element name="no_integrators" type="integrator" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="classloaderservicebinding" type="classloaderservice" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="strategyselectorbinding" type="strategyselector" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="integratorservicebinding" type="integratorservice" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="childregistries" type="serviceregistryimplementor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classloadingexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classloaderservice" >
      <xs:complexContent>
       <xs:extension base="service,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classloaderserviceimpl" >
      <xs:complexContent>
       <xs:extension base="classloader">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="serviceloaders" type="xs:anyType" />
          <xs:element name="volatile" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strategyregistrationprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplestrategyregistrationimpl" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
          <xs:element name="strategyrole" type="xs:anyType" />
          <xs:element name="strategyimplementation" type="xs:anyType" />
          <xs:element name="selectornames" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="strategyselector" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strategyselectionexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="strategyregistration" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="strategyselectorbuilder" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="explicitstrategyregistrations" type="strategyregistration" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strategyselectorimpl" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="namedstrategyimplementorbystrategymap" type="xs:anyType" />
          <xs:element name="" type="classloaderservice" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardserviceinitiator" >
      <xs:complexContent>
       <xs:extension base="service>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappingnotfoundexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configloader" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="bootstrapserviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="jaxbprocessorholder" type="jaxbcfgprocessor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cfgxmlaccessserviceimpl" >
      <xs:sequence>
        <xs:element name="aggregatedcfgxml" type="loadedconfig" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jaxbcfgprocessor" >
      <xs:complexContent>
       <xs:extension base="eventreaderdelegate">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="hibernate_configuration_uri" type="xs:string" />
          <xs:element name="" type="classloaderservice" nillable="true" minOccurs="0" />
          <xs:element name="xmlresourceresolver" type="localxmlresourceresolver" nillable="true" minOccurs="0" />
          <xs:element name="staxfactory" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cfgxmlaccessserviceinitiator" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="cfgxmlaccessserviceinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadedconfig" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="sessionfactoryname" type="xs:string" />
        <xs:element name="configurationvalues" type="map" nillable="true" minOccurs="0" />
        <xs:element name="jaccpermissionsbycontextid" type="xs:anyType" />
        <xs:element name="cacheregiondefinitions" type="cacheregiondefinition" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="mappingreferences" type="mappingreference" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="eventlistenermap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cfgxmlaccessservice" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
          <xs:element name="loaded_config_key" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappingreference" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="reference" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadataimplementor" >
      <xs:complexContent>
       <xs:extension base="metadata,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inflightmetadatacollector" >
      <xs:complexContent>
       <xs:extension base="mapping,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractdelegatingsessionfactoryoptions" >
      <xs:sequence>
        <xs:element name="delegate" type="sessionfactoryoptions" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="additionaljaxbmappingproducer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classloaderaccessdelegateimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingdefaults" >
      <xs:sequence>
        <xs:element name="default_identifier_column_name" type="xs:string" />
        <xs:element name="default_tenant_identifier_column_name" type="xs:string" />
        <xs:element name="default_discriminator_column_name" type="xs:string" />
        <xs:element name="default_cascade_name" type="xs:string" />
        <xs:element name="default_property_access_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatasourcescontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classloaderaccess" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactorybuilderfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatabuilderimplementor" >
      <xs:complexContent>
       <xs:extension base="metadatabuilder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlmappingbinderaccess" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="classloaderservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mappingbinder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatabuildingcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaormxmlpersistenceunitdefaultaware" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatacontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basictyperegistration" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="basictype" nillable="true" minOccurs="0" />
        <xs:element name="registrationkeys" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatabuildingoptions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractdelegatingmetadatabuilderimplementor" >
      <xs:complexContent>
       <xs:extension base="abstractdelegatingmetadatabuilderimplementor<t>>">
         <xs:sequence>
          <xs:element name="delegate" type="metadatabuilderimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactorybuilderimplementor" >
      <xs:complexContent>
       <xs:extension base="sessionfactorybuilder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactoryoptions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatabuilderinitializer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractdelegatingsessionfactorybuilder" >
      <xs:complexContent>
       <xs:extension base="abstractdelegatingsessionfactorybuilder<t>>">
         <xs:sequence>
          <xs:element name="delegate" type="sessionfactorybuilder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metadatabuilderfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturaliduniquekeybinder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractdelegatingmetadata" >
      <xs:sequence>
        <xs:element name="delegate" type="metadataimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractdelegatingmetadatabuildingoptions" >
      <xs:sequence>
        <xs:element name="delegate" type="metadatabuildingoptions" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jarinputstreambasedarchivedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstractarchivedescriptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explodedarchivedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstractarchivedescriptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytearrayinputstreamaccess" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="s" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="archivehelper" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jarprotocolarchivedescriptor" >
      <xs:sequence>
        <xs:element name="delegatedescriptor" type="archivedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jarfilebasedarchivedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstractarchivedescriptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="urlinputstreamaccess" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardarchivedescriptorfactory" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="/***singletonaccess*/instance" type="standardarchivedescriptorfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fileinputstreamaccess" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="file" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="archivedescriptorfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inputstreamaccess" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="archiveentryhandler" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractarchivedescriptor" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="archivedescriptorfactory" nillable="true" minOccurs="0" />
        <xs:element name="archive" type="xs:anyType" />
        <xs:element name="entrybaseprefix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractarchivedescriptorfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="archiveexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jarfileentryurladjuster" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="archivecontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="archivedescriptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="archiveentry" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classfilearchiveentryhandler" >
      <xs:sequence>
        <xs:element name="resultcollector" type="scanresultcollector" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scanner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classdescriptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractscannerimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="archivedescriptorfactory" nillable="true" minOccurs="0" />
        <xs:element name="archivedescriptorcache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonclassfilearchiveentryhandler" >
      <xs:sequence>
        <xs:element name="resultcollector" type="scanresultcollector" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingfiledescriptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="packagedescriptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scanparameters" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scanoptions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="packageinfoarchiveentryhandler" >
      <xs:sequence>
        <xs:element name="resultcollector" type="scanresultcollector" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scanenvironment" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scanresult" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classdescriptorimpl" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="streamaccess" type="inputstreamaccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardscanner" >
      <xs:complexContent>
       <xs:extension base="abstractscannerimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="packagedescriptorimpl" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="streamaccess" type="inputstreamaccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scanresultcollector" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="environment" type="scanenvironment" nillable="true" minOccurs="0" />
        <xs:element name="options" type="scanoptions" nillable="true" minOccurs="0" />
        <xs:element name="discoveredclasses" type="classdescriptor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="discoveredpackages" type="packagedescriptor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="discoveredmappingfiles" type="mappingfiledescriptor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardscanoptions" >
      <xs:sequence>
        <xs:element name="detectclassesinroot" type="xs:anyType" />
        <xs:element name="detectclassesinnonroot" type="xs:anyType" />
        <xs:element name="detecthibernatemappingfiles" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardscanparameters" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="standardscanparameters" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scanresultimpl" >
      <xs:sequence>
        <xs:element name="packagedescriptorset" type="packagedescriptor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="classdescriptorset" type="classdescriptor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="mappingfileset" type="mappingfiledescriptor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingfiledescriptorimpl" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="streamaccess" type="inputstreamaccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unsupportedormxsdversionexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
          <xs:element name="requestedversion" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metadatabuilder" >
      <xs:complexContent>
       <xs:extension base="attributeconverter>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="origin" >
      <xs:sequence>
        <xs:element name="unknown_file_path" type="xs:string" />
        <xs:element name="type" type="sourcetype" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jarfileentryxmlsource" >
      <xs:complexContent>
       <xs:extension base="xmlsource">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="jarfileentry" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jaxpsourcexmlsource" >
      <xs:complexContent>
       <xs:extension base="xmlsource">
         <xs:sequence>
          <xs:element name="jaxp" type="source" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbinder" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="xmlresourceresolver" type="localxmlresourceresolver" nillable="true" minOccurs="0" />
        <xs:element name="validatexml" type="xs:anyType" />
        <xs:element name="staxfactory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inputstreamxmlsource" >
      <xs:complexContent>
       <xs:extension base="xmlsource">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="autoclose" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="urlxmlsource" >
      <xs:complexContent>
       <xs:extension base="xmlsource">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filexmlsource" >
      <xs:complexContent>
       <xs:extension base="xmlsource">
         <xs:sequence>
          <xs:element name="" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheablefilexmlsource" >
      <xs:complexContent>
       <xs:extension base="xmlsource">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="xml" type="file" nillable="true" minOccurs="0" />
          <xs:element name="ser" type="file" nillable="true" minOccurs="0" />
          <xs:element name="strict" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contextprovidingvalidationeventhandler" >
      <xs:sequence>
        <xs:element name="linenumber" type="xs:long" />
        <xs:element name="columnnumber" type="xs:long" />
        <xs:element name="message" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingbinder" >
      <xs:complexContent>
       <xs:extension base="abstractbinder">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="hbm" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basexmleventreader" >
      <xs:complexContent>
       <xs:extension base="eventreaderdelegate">
         <xs:sequence>
          <xs:element name="previousevent" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlinfrastructureexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpaormxmleventreader" >
      <xs:complexContent>
       <xs:extension base="eventreaderdelegate">
         <xs:sequence>
          <xs:element name="namespace_uris_to_map" type="xs:anyType" />
          <xs:element name="root_element_name" type="xs:string" />
          <xs:element name="version_attribute_name" type="xs:string" />
          <xs:element name="default_version" type="xs:string" />
          <xs:element name="valid_versions" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bufferedxmleventreader" >
      <xs:complexContent>
       <xs:extension base="basexmleventreader">
         <xs:sequence>
          <xs:element name="eventbuffer" type="xs:anyType" />
          <xs:element name="eventlimit" type="xs:long" />
          <xs:element name="bufferreader" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localschema" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="namespaceuri" type="xs:string" />
        <xs:element name="localresourcename" type="xs:string" />
        <xs:element name="currentversion" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hbmeventreader" >
      <xs:complexContent>
       <xs:extension base="eventreaderdelegate">
         <xs:sequence>
          <xs:element name="namespace_uris_to_map" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filteringxmleventreader" >
      <xs:complexContent>
       <xs:extension base="basexmleventreader">
         <xs:sequence>
          <xs:element name="prunedelements" type="xs:anyType" />
          <xs:element name="peekedevent" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlstreamconstantsutils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unsupportedormxsdversionexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localschemalocator" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="supportedormxsdversion" >
      <xs:sequence>
        <xs:element name="schemaresourcename" type="xs:string" />
        <xs:element name="schema" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localxmlresourceresolver" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="classpath_extension_url_base" type="xs:string" />
        <xs:element name="GeneratedName" type="classloaderservice" nillable="true" minOccurs="0" />
        <xs:element name="/***mapsthenamespacefortheorm.xmlxsdforjpa1.0and2.0*/initial_jpa_xsd_mapping" type="xs:anyType" />
        <xs:element name="/***mapsthenamespacefortheorm.xmlxsdforjpa2.1+*/jpa_xsd_mapping" type="xs:anyType" />
        <xs:element name="hbm_xsd_mapping" type="xs:anyType" />
        <xs:element name="hbm_xsd_mapping2" type="xs:anyType" />
        <xs:element name="cfg_xsd_mapping" type="xs:anyType" />
        <xs:element name="hbm_dtd_mapping" type="xs:anyType" />
        <xs:element name="legacy_hbm_dtd_mapping" type="xs:anyType" />
        <xs:element name="legacy2_hbm_dtd_mapping" type="xs:anyType" />
        <xs:element name="cfg_dtd_mapping" type="xs:anyType" />
        <xs:element name="legacy_cfg_dtd_mapping" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheaccesstypeconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlockstyleconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachemodeconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationtimingconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymodeconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitresultsetmappingdefinition" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="valuemappingsources" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="executeupdateresultcheckstyleconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flushmodeconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockmodeconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configparametercontainer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributeinfoidbagadapter" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplevaluetypeinfo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tableinformationcontainer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributeinfoprimitivearrayadapter" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondarytablecontainer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributemapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subentityinfo" >
      <xs:complexContent>
       <xs:extension base="entityinfo">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetmappingbindingdefinition" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singularattributeinfo" >
      <xs:complexContent>
       <xs:extension base="attributemapping,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativequerynonscalarrootreturn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toolinghintcontainer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributeinfo" >
      <xs:complexContent>
       <xs:extension base="attributemapping,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityinfo" >
      <xs:complexContent>
       <xs:extension base="toolinghintcontainer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typecontainer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="binding" >
      <xs:sequence>
        <xs:element name="roo" type="xs:anyType" />
        <xs:element name="GeneratedName" type="origin" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="binder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlsource" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="origin" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sourcetype" >
      <xs:sequence>
        <xs:element name="legacytypetext" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardentitynotfounddelegate" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="standardentitynotfounddelegate" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactorybuilderimpl" >
      <xs:complexContent>
       <xs:extension base="entitytuplizer>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
          <xs:element name="options" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metadatabuilderimpl" >
      <xs:complexContent>
       <xs:extension base="attributeconverter>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="sources" type="metadatasources" nillable="true" minOccurs="0" />
          <xs:element name="options" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classloaderaccessimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="jpatemp" type="xs:anyType" />
        <xs:element name="GeneratedName" type="classloaderservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryoptionsstate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadataimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="metadatabuildingoptions" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="typeresolver" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="identifiergeneratorfactory" nillable="true" minOccurs="0" />
        <xs:element name="entitybindingmap" type="xs:anyType" />
        <xs:element name="mappedsuperclassmap" type="xs:anyType" />
        <xs:element name="collectionbindingmap" type="xs:anyType" />
        <xs:element name="typedefinitionmap" type="xs:anyType" />
        <xs:element name="filterdefinitionmap" type="xs:anyType" />
        <xs:element name="fetchprofilemap" type="xs:anyType" />
        <xs:element name="imports" type="xs:anyType" />
        <xs:element name="idgeneratordefinitionmap" type="xs:anyType" />
        <xs:element name="namedquerymap" type="xs:anyType" />
        <xs:element name="namednativequerymap" type="xs:anyType" />
        <xs:element name="namedprocedurecallmap" type="xs:anyType" />
        <xs:element name="sqlresultsetmappingmap" type="xs:anyType" />
        <xs:element name="namedentitygraphmap" type="xs:anyType" />
        <xs:element name="sqlfunctionmap" type="xs:anyType" />
        <xs:element name="GeneratedName" type="database" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inflightmetadatacollectorimpl" >
      <xs:complexContent>
       <xs:extension base="attributeconverter>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="options" type="metadatabuildingoptions" nillable="true" minOccurs="0" />
          <xs:element name="" type="typeresolver" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="identifiergeneratorfactory" type="mutableidentifiergeneratorfactory" nillable="true" minOccurs="0" />
          <xs:element name="entitybindingmap" type="xs:anyType" />
          <xs:element name="collectionbindingmap" type="xs:anyType" />
          <xs:element name="typedefinitionmap" type="xs:anyType" />
          <xs:element name="filterdefinitionmap" type="xs:anyType" />
          <xs:element name="imports" type="xs:anyType" />
          <xs:element name="" type="database" nillable="true" minOccurs="0" />
          <xs:element name="namedquerymap" type="xs:anyType" />
          <xs:element name="namednativequerymap" type="xs:anyType" />
          <xs:element name="namedprocedurecallmap" type="xs:anyType" />
          <xs:element name="sqlresultsetmappingmap" type="xs:anyType" />
          <xs:element name="namedentitygraphmap" type="xs:anyType" />
          <xs:element name="fetchprofilemap" type="xs:anyType" />
          <xs:element name="idgeneratordefinitionmap" type="xs:anyType" />
          <xs:element name="attributeconverterdefinitionsbyclass" type="xs:anyType" />
          <xs:element name="sqlfunctionmap" type="xs:anyType" />
          <xs:element name="//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//alltheannotation-processing-specificstate:(defaultidentifiergeneratornames" type="xs:anyType" />
          <xs:element name="defaultnamedquerynames" type="xs:anyType" />
          <xs:element name="defaultnamednativequerynames" type="xs:anyType" />
          <xs:element name="defaultsqlresultsetmappingnames" type="xs:anyType" />
          <xs:element name="defaultnamedprocedurenames" type="xs:anyType" />
          <xs:element name="anymetadefs" type="xs:anyType" />
          <xs:element name="mappedsuperclasses" type="xs:anyType" />
          <xs:element name="propertiesannotatedwithmapsid" type="xs:anyType" />
          <xs:element name="propertiesannotatedwithidandtoone" type="xs:anyType" />
          <xs:element name="mappedbyresolver" type="xs:anyType" />
          <xs:element name="propertyrefresolver" type="xs:anyType" />
          <xs:element name="delayedpropertyreferencehandlers" type="xs:anyType" />
          <xs:element name="uniqueconstraintholdersbytable" type="xs:anyType" />
          <xs:element name="jpaindexholdersbytable" type="xs:anyType" />
          <xs:element name="logicaltophysicaltablenamemap" type="xs:anyType" />
          <xs:element name="physicaltologicaltablenamemap" type="xs:anyType" />
          <xs:element name="columnnamebindingbytablemap" type="xs:anyType" />
          <xs:element name="annotatedclasstypemap" type="xs:anyType" />
          <xs:element name="entitytablexrefmap" type="xs:anyType" />
          <xs:element name="pkdrivenbydefaultmapsidsecondpasslist" type="pkdrivenbydefaultmapsidsecondpass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="setsimplevaluetypesecondpasslist" type="setsimplevaluetypesecondpass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="copyidentifiercomponentsecondpaslist" type="copyidentifiercomponentsecondpass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="fksecondpasslist" type="fksecondpass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="createkeysecondpaslist" type="createkeysecondpass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="secondarytablesecondpasslist" type="secondarytablesecondpass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="querysecondpasslist" type="querysecondpass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="implicitcolumnnamingsecondpasslist" type="implicitcolumnnamingsecondpass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="generalsecondpasslist" type="secondpass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="insecondpass" type="xs:anyType" />
          <xs:element name="naturaliduniquekeybindermap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactoryoptionsimpl" >
      <xs:sequence>
        <xs:element name="serviceregistry" type="standardserviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="//integrationbeanmanagerreference" type="xs:anyType" />
        <xs:element name="validatorfactoryreference" type="xs:anyType" />
        <xs:element name="//sessionfactorybehaviorsessionfactoryname" type="xs:string" />
        <xs:element name="sessionfactorynamealsojndiname" type="xs:anyType" />
        <xs:element name="//sessionbehaviorflushbeforecompletionenabled" type="xs:anyType" />
        <xs:element name="autoclosesessionenabled" type="xs:anyType" />
        <xs:element name="//transactionhandlingjtatrackbythread" type="xs:anyType" />
        <xs:element name="preferusertransaction" type="xs:anyType" />
        <xs:element name="//statistics/interceptor/observersstatisticsenabled" type="xs:anyType" />
        <xs:element name="GeneratedName" type="interceptor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="statementinspector" nillable="true" minOccurs="0" />
        <xs:element name="list" type="sessionfactoryobserver" nillable="true" minOccurs="0" />
        <xs:element name="//notexposedonbuilderatm" type="baselinesessioneventslistenerbuilder" nillable="true" minOccurs="0" />
        <xs:element name="//persistencebehavior" type="customentitydirtinessstrategy" nillable="true" minOccurs="0" />
        <xs:element name="s" type="entitynameresolver" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitynotfounddelegate" nillable="true" minOccurs="0" />
        <xs:element name="identifierrollbackenabled" type="xs:anyType" />
        <xs:element name="default" type="entitymode" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitytuplizerfactory" nillable="true" minOccurs="0" />
        <xs:element name="checknullability" type="xs:anyType" />
        <xs:element name="initializelazystateoutsidetransactions" type="xs:anyType" />
        <xs:element name="GeneratedName" type="multitablebulkidstrategy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="temptableddltransactionhandling" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="batchfetchstyle" nillable="true" minOccurs="0" />
        <xs:element name="defaultbatchfetchsize" type="xs:long" />
        <xs:element name="maximumfetchdepth" type="xs:anyType" />
        <xs:element name="default" type="nullprecedence" nillable="true" minOccurs="0" />
        <xs:element name="orderupdatesenabled" type="xs:anyType" />
        <xs:element name="orderinsertsenabled" type="xs:anyType" />
        <xs:element name="//multi-tenancy" type="multitenancystrategy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="currenttenantidentifierresolver" nillable="true" minOccurs="0" />
        <xs:element name="//queriesquerysubstitutions" type="map" nillable="true" minOccurs="0" />
        <xs:element name="strictjpaquerylanguagecompliance" type="xs:anyType" />
        <xs:element name="namedquerystartupcheckingenabled" type="xs:anyType" />
        <xs:element name="//cachingsecondlevelcacheenabled" type="xs:anyType" />
        <xs:element name="querycacheenabled" type="xs:anyType" />
        <xs:element name="GeneratedName" type="querycachefactory" nillable="true" minOccurs="0" />
        <xs:element name="cacheregionprefix" type="xs:string" />
        <xs:element name="minimalputsenabled" type="xs:anyType" />
        <xs:element name="structuredcacheentriesenabled" type="xs:anyType" />
        <xs:element name="directreferencecacheentriesenabled" type="xs:anyType" />
        <xs:element name="autoevictcollectioncache" type="xs:anyType" />
        <xs:element name="//schematooling" type="schemaautotooling" nillable="true" minOccurs="0" />
        <xs:element name="//jdbchandlinggetgeneratedkeysenabled" type="xs:anyType" />
        <xs:element name="jdbcbatchsize" type="xs:long" />
        <xs:element name="jdbcbatchversioneddata" type="xs:anyType" />
        <xs:element name="jdbcfetchsize" type="xs:anyType" />
        <xs:element name="scrollableresultsetsenabled" type="xs:anyType" />
        <xs:element name="commentsenabled" type="xs:anyType" />
        <xs:element name="GeneratedName" type="connectionreleasemode" nillable="true" minOccurs="0" />
        <xs:element name="wrapresultsetsenabled" type="xs:anyType" />
        <xs:element name="sqlfunctions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatabuildingcontextrootimpl" >
      <xs:sequence>
        <xs:element name="options" type="metadatabuildingoptions" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mappingdefaults" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="classloaderaccess" nillable="true" minOccurs="0" />
        <xs:element name="metadatacollector" type="inflightmetadatacollector" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="objectnamenormalizer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultcustomentitydirtinessstrategy" >
      <xs:sequence>
        <xs:element name="instance" type="defaultcustomentitydirtinessstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idgeneratorinterpreterimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="fallbackinterpreter" type="idgeneratorstrategyinterpreter" nillable="true" minOccurs="0" />
        <xs:element name="delegates" type="idgeneratorstrategyinterpreter" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedefinition" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="typeimplementor" type="xs:anyType" />
        <xs:element name="registrationkeys" type="xs:string" />
        <xs:element name="parameters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="caching" >
      <xs:sequence>
        <xs:element name="//note:fornowbecauseineedtolookathowjpa'ssharedcachemodeconceptishandledrequested" type="truthvalue" nillable="true" minOccurs="0" />
        <xs:element name="region" type="xs:string" />
        <xs:element name="GeneratedName" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="cachelazyproperties" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scanningcoordinator" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="/***singletonaccess*/instance" type="scanningcoordinator" nillable="true" minOccurs="0" />
          <xs:element name="single_arg" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="managedresourcesimpl" >
      <xs:sequence>
        <xs:element name="attributeconverterdefinitionmap" type="xs:anyType" />
        <xs:element name="annotatedclassreferences" type="xs:anyType" />
        <xs:element name="annotatedclassnames" type="xs:anyType" />
        <xs:element name="annotatedpackagenames" type="xs:anyType" />
        <xs:element name="mappingfilebindings" type="binding" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatabuildingprocess" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedresources" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="javatypedescriptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typecontributions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customsql" >
      <xs:sequence>
        <xs:element name="sql" type="xs:string" />
        <xs:element name="iscallable" type="xs:anyType" />
        <xs:element name="checkstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiergeneratordefinition" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="strategy" type="xs:string" />
        <xs:element name="parameters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exportableproducer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="qualifiedsequencename" >
      <xs:complexContent>
       <xs:extension base="qualifiednameimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedauxiliarydatabaseobject" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="qualifiedtablename" >
      <xs:complexContent>
       <xs:extension base="qualifiednameimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractauxiliarydatabaseobject" >
      <xs:sequence>
        <xs:element name="export_identifier_prefix" type="xs:string" />
        <xs:element name="counter" type="xs:anyType" />
        <xs:element name="exportidentifier" type="xs:string" />
        <xs:element name="beforetables" type="xs:anyType" />
        <xs:element name="dialectscopes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namespace" >
      <xs:complexContent>
       <xs:extension base="comparable<t>>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="" type="database" nillable="true" minOccurs="0" />
          <xs:element name="" type="name" nillable="true" minOccurs="0" />
          <xs:element name="physical" type="name" nillable="true" minOccurs="0" />
          <xs:element name="tables" type="xs:anyType" />
          <xs:element name="sequences" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="qualifiedname" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="qualifiednameimpl" >
      <xs:complexContent>
       <xs:extension base="qualifiednameparser.nameparts">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loggable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exportable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="qualifiednameparser" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="qualifiednameparser" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="initcommand" >
      <xs:sequence>
        <xs:element name="initcommands" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequence" >
      <xs:complexContent>
       <xs:extension base="qualifiednameparser.nameparts">
         <xs:sequence>
          <xs:element name="name" type="qualifiedsequencename" nillable="true" minOccurs="0" />
          <xs:element name="exportidentifier" type="xs:string" />
          <xs:element name="initialvalue" type="xs:long" />
          <xs:element name="incrementsize" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleauxiliarydatabaseobject" >
      <xs:complexContent>
       <xs:extension base="abstractauxiliarydatabaseobject">
         <xs:sequence>
          <xs:element name="catalog_name_placeholder" type="xs:string" />
          <xs:element name="schema_name_placeholder" type="xs:string" />
          <xs:element name="catalogname" type="xs:string" />
          <xs:element name="schemaname" type="xs:string" />
          <xs:element name="creates" type="xs:string" />
          <xs:element name="drops" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auxiliarydatabaseobject" >
      <xs:complexContent>
       <xs:extension base="exportable,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="database" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="buildingoptions" type="metadatabuildingoptions" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbcenvironment" nillable="true" minOccurs="0" />
        <xs:element name="implicit" type="namespace" nillable="true" minOccurs="0" />
        <xs:element name="namespacemap" type="xs:anyType" />
        <xs:element name="auxiliarydatabaseobjects" type="xs:anyType" />
        <xs:element name="initcommands" type="initcommand" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idgeneratorstrategyinterpreter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="truthvalue" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitjoincolumnnamesource" >
      <xs:complexContent>
       <xs:extension base="implicitnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitidentifiercolumnnamesource" >
      <xs:complexContent>
       <xs:extension base="implicitnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="databaseidentifier" >
      <xs:complexContent>
       <xs:extension base="identifier">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitnamingstrategycomponentpathimpl" >
      <xs:complexContent>
       <xs:extension base="implicitnamingstrategyjpacompliantimpl">
         <xs:sequence>
          <xs:element name="instance" type="implicitnamingstrategycomponentpathimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitanydiscriminatorcolumnnamesource" >
      <xs:complexContent>
       <xs:extension base="implicitnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicituniquekeynamesource" >
      <xs:complexContent>
       <xs:extension base="implicitconstraintnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="illegalidentifierexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitcollectiontablenamesource" >
      <xs:complexContent>
       <xs:extension base="implicitnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitanykeycolumnnamesource" >
      <xs:complexContent>
       <xs:extension base="implicitnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitnamingstrategylegacyhbmimpl" >
      <xs:complexContent>
       <xs:extension base="implicitnamingstrategyjpacompliantimpl">
         <xs:sequence>
          <xs:element name="/***singletonaccess*/instance" type="implicitnamingstrategylegacyhbmimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namingstrategyhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitprimarykeyjoincolumnnamesource" >
      <xs:complexContent>
       <xs:extension base="implicitnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitforeignkeynamesource" >
      <xs:complexContent>
       <xs:extension base="implicitconstraintnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitnamingstrategylegacyjpaimpl" >
      <xs:complexContent>
       <xs:extension base="implicitnamingstrategyjpacompliantimpl">
         <xs:sequence>
          <xs:element name="/***singletonaccess*/instance" type="implicitnamingstrategylegacyjpaimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="physicalnamingstrategystandardimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="physicalnamingstrategystandardimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naminghelper" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="naminghelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitnamingstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitbasiccolumnnamesource" >
      <xs:complexContent>
       <xs:extension base="implicitnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitindexnamesource" >
      <xs:complexContent>
       <xs:extension base="implicitconstraintnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitynaming" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitindexcolumnnamesource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitconstraintnamesource" >
      <xs:complexContent>
       <xs:extension base="implicitnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitdiscriminatorcolumnnamesource" >
      <xs:complexContent>
       <xs:extension base="implicitnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitjointablenamesource" >
      <xs:complexContent>
       <xs:extension base="implicitnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectnamenormalizer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="database" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitmapkeycolumnnamesource" >
      <xs:complexContent>
       <xs:extension base="implicitnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifier" >
      <xs:sequence>
        <xs:element name="text" type="xs:string" />
        <xs:element name="isquoted" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="physicalnamingstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitentitynamesource" >
      <xs:complexContent>
       <xs:extension base="implicitnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitnamesource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicittenantidcolumnnamesource" >
      <xs:complexContent>
       <xs:extension base="implicitnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitnamingstrategyjpacompliantimpl" >
      <xs:sequence>
        <xs:element name="instance" type="implicitnamingstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typecontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchcharacteristicspluralattribute" >
      <xs:complexContent>
       <xs:extension base="fetchcharacteristics">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitysource" >
      <xs:complexContent>
       <xs:extension base="identifiabletypesource,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributeelementsource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationalvaluesource" >
      <xs:complexContent>
       <xs:extension base="relationalvaluesource>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchcharacteristicssingularassociation" >
      <xs:complexContent>
       <xs:extension base="fetchcharacteristics">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritancetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnsandformulassourcecontainer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributeelementsourcebasic" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnsource" >
      <xs:complexContent>
       <xs:extension base="relationalvaluesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitynamingsourcecontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributeindexsource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filtersource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiabletypesource" >
      <xs:complexContent>
       <xs:extension base="attributesourcecontainer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiersourcesimple" >
      <xs:complexContent>
       <xs:extension base="identifiersource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inlineviewsource" >
      <xs:complexContent>
       <xs:extension base="tablespecificationsource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionidsource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discriminatorsource" >
      <xs:complexContent>
       <xs:extension base="implicitdiscriminatorcolumnnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multitenancysource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributeelementsourceonetomany" >
      <xs:complexContent>
       <xs:extension base="pluralattributeelementsourceassociation">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="toolinghintcontextcontainer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toolinghint" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="inheritable" type="xs:anyType" />
        <xs:element name="GeneratedName" type="metaattribute" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationalvaluesourcecontainer" >
      <xs:complexContent>
       <xs:extension base="columnbindingdefaults">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributekeysource" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeidentifiersource" >
      <xs:complexContent>
       <xs:extension base="identifiersource,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localmetadatabuildingcontext" >
      <xs:complexContent>
       <xs:extension base="metadatabuildingcontext">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractattributekey" >
      <xs:sequence>
        <xs:element name="parent" type="abstractattributekey" nillable="true" minOccurs="0" />
        <xs:element name="property" type="xs:string" />
        <xs:element name="fullpath" type="xs:string" />
        <xs:element name="depth" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributemapkeymanytomanysource" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singularattributesourcemanytoone" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="anydiscriminatorsource" >
      <xs:complexContent>
       <xs:extension base="implicitanydiscriminatorcolumnnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributeelementsourcemanytomany" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributemapkeymanytoanysource" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablesource" >
      <xs:complexContent>
       <xs:extension base="tablespecificationsource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singularattributesourceonetoone" >
      <xs:complexContent>
       <xs:extension base="singularattributesourcetoone">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchcharacteristics" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributemapkeysourcebasic" >
      <xs:complexContent>
       <xs:extension base="pluralattributeindexsource,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="javatypedescriptorresolvable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondarytablesource" >
      <xs:complexContent>
       <xs:extension base="foreignkeycontributingsource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiersourceaggregatedcomposite" >
      <xs:complexContent>
       <xs:extension base="compositeidentifiersource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcdatatype" >
      <xs:sequence>
        <xs:element name="typecode" type="xs:long" />
        <xs:element name="typename" type="xs:string" />
        <xs:element name="javatype" type="xs:anyType" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singularattributesourceembedded" >
      <xs:complexContent>
       <xs:extension base="singularattributesource,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributesource" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributesourcearray" >
      <xs:complexContent>
       <xs:extension base="indexedpluralattributesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sizesource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singularattributesource" >
      <xs:complexContent>
       <xs:extension base="attributesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclassentitysource" >
      <xs:complexContent>
       <xs:extension base="subclassentitysource,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidmutability" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributerole" >
      <xs:complexContent>
       <xs:extension base="abstractattributekey">
         <xs:sequence>
          <xs:element name="delimiter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singularattributesourcebasic" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionattributesource" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapsidsource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablespecificationsource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablemapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributemapkeysource" >
      <xs:complexContent>
       <xs:extension base="pluralattributeindexsource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metadatasourceprocessor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedattributemapping" >
      <xs:complexContent>
       <xs:extension base="singularattributeinfo">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityhierarchysource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toolinghintcontext" >
      <xs:sequence>
        <xs:element name="toolinghintmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclassentitysource" >
      <xs:complexContent>
       <xs:extension base="entitysource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributenature" >
      <xs:sequence>
        <xs:element name="indexed" type="xs:anyType" />
        <xs:element name="reportedjavatype" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singularattributenature" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associationsource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatetypesource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadestylesource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributemapkeysourceembedded" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="anykeysource" >
      <xs:complexContent>
       <xs:extension base="implicitanykeycolumnnamesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablesource" >
      <xs:complexContent>
       <xs:extension base="attributesourcecontainer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpacallbacksource" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributeelementnature" >
      <xs:sequence>
        <xs:element name="isassociation" type="xs:anyType" />
        <xs:element name="iscascadeable" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributeelementsourcemanytoany" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributesequentialindexsource" >
      <xs:complexContent>
       <xs:extension base="pluralattributeindexsource,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributeindexnature" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitynamingsource" >
      <xs:complexContent>
       <xs:extension base="entitynaming">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchableattributesource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreignkeycontributingsource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiersource" >
      <xs:complexContent>
       <xs:extension base="toolinghintcontextcontainer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributeelementsourceassociation" >
      <xs:complexContent>
       <xs:extension base="pluralattributeelementsource,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singularattributesourcetoone" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablesourcecontributor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiersourcenonaggregatedcomposite" >
      <xs:complexContent>
       <xs:extension base="compositeidentifiersource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnbindingdefaults" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributesourcecontainer" >
      <xs:complexContent>
       <xs:extension base="toolinghintcontextcontainer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singularattributesourceany" >
      <xs:complexContent>
       <xs:extension base="singularattributesource,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derivedvaluesource" >
      <xs:complexContent>
       <xs:extension base="relationalvaluesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attributesource" >
      <xs:complexContent>
       <xs:extension base="toolinghintcontextcontainer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributeelementsourceembedded" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attributepath" >
      <xs:complexContent>
       <xs:extension base="abstractattributekey">
         <xs:sequence>
          <xs:element name="delimiter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="anymappingsource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="overriddenmappingdefaults" >
      <xs:sequence>
        <xs:element name="implicitschemaname" type="xs:string" />
        <xs:element name="implicitcatalogname" type="xs:string" />
        <xs:element name="implicitlyquoteidentifiers" type="xs:anyType" />
        <xs:element name="implicitidcolumnname" type="xs:string" />
        <xs:element name="implicittenantidcolumnname" type="xs:string" />
        <xs:element name="implicitdiscriminatorcolumnname" type="xs:string" />
        <xs:element name="implicitpackagename" type="xs:string" />
        <xs:element name="autoimportenabled" type="xs:anyType" />
        <xs:element name="implicitcascadestylename" type="xs:string" />
        <xs:element name="implicitpropertyaccessorname" type="xs:string" />
        <xs:element name="entitiesimplicitlylazy" type="xs:anyType" />
        <xs:element name="pluralattributesimplicitlylazy" type="xs:anyType" />
        <xs:element name="implicitcache" type="accesstype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationmetadatasourceprocessorimpl" >
      <xs:complexContent>
       <xs:extension base="attributeconverter>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="rootmetadatabuildingcontext" type="metadatabuildingcontextrootimpl" nillable="true" minOccurs="0" />
          <xs:element name="jandexview" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="annotatedpackages" type="xs:anyType" />
          <xs:element name="xclasses" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idclasssource" >
      <xs:sequence>
        <xs:element name="idclassdescriptor" type="javatypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="rootentitysource" type="rootentitysourceimpl" nillable="true" minOccurs="0" />
        <xs:element name="source" type="mappingdocument" nillable="true" minOccurs="0" />
        <xs:element name="base" type="attributepath" nillable="true" minOccurs="0" />
        <xs:element name="base" type="attributerole" nillable="true" minOccurs="0" />
        <xs:element name="attributesources" type="attributesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablesourceimpl" >
      <xs:complexContent>
       <xs:extension base="abstracthbmsourcenode">
         <xs:sequence>
          <xs:element name="jaxb" type="embeddablemapping" nillable="true" minOccurs="0" />
          <xs:element name="typedescriptor" type="javatypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="base" type="attributerole" nillable="true" minOccurs="0" />
          <xs:element name="base" type="attributepath" nillable="true" minOccurs="0" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
          <xs:element name="isdynamic" type="xs:anyType" />
          <xs:element name="isunique" type="xs:anyType" />
          <xs:element name="tuplizerclassmap" type="xs:anyType" />
          <xs:element name="attributesources" type="attributesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auxiliarydatabaseobjectbinder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributeelementsourceonetomanyimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="jaxbonetomanyelement" type="xs:anyType" />
          <xs:element name="referencedentityname" type="xs:string" />
          <xs:element name="cascade" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributesourcesetimpl" >
      <xs:complexContent>
       <xs:extension base="abstractpluralattributesourceimpl">
         <xs:sequence>
          <xs:element name="jaxbset" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablesourcevirtualimpl" >
      <xs:complexContent>
       <xs:extension base="abstracthbmsourcenode">
         <xs:sequence>
          <xs:element name="typedescriptor" type="javatypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="base" type="attributerole" nillable="true" minOccurs="0" />
          <xs:element name="base" type="attributepath" nillable="true" minOccurs="0" />
          <xs:element name="attributesources" type="attributesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="isunique" type="xs:anyType" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonepropertysource" >
      <xs:sequence>
        <xs:element name="manytoonemapping" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityhierarchybuilder" >
      <xs:complexContent>
       <xs:extension base="[%s]">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="entityhierarchylist" type="entityhierarchysourceimpl" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="entitysourcebynamemap" type="xs:anyType" />
          <xs:element name="tobelinkedqueue" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsingularattributesourceembeddedimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="jaxb" type="embeddedattributemapping" nillable="true" minOccurs="0" />
          <xs:element name="" type="embeddablesource" nillable="true" minOccurs="0" />
          <xs:element name="" type="naturalidmutability" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributeelementsourcemanytoanyimpl" >
      <xs:sequence>
        <xs:element name="cascade" type="xs:string" />
        <xs:element name="discriminatorsource" type="anydiscriminatorsource" nillable="true" minOccurs="0" />
        <xs:element name="keysource" type="anykeysource" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hbmlocalmetadatabuildingcontext" >
      <xs:complexContent>
       <xs:extension base="localmetadatabuildingcontext">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="modelbinder" >
      <xs:complexContent>
       <xs:extension base="abstractpluralattributesecondpass">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="debugenabled" type="xs:anyType" />
          <xs:element name="" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
          <xs:element name="" type="database" nillable="true" minOccurs="0" />
          <xs:element name="" type="objectnamenormalizer" nillable="true" minOccurs="0" />
          <xs:element name="" type="implicitnamingstrategy" nillable="true" minOccurs="0" />
          <xs:element name="" type="relationalobjectbinder" nillable="true" minOccurs="0" />
          <xs:element name="id_mapper_path_part" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributeelementsourcebasicimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="pluralattributesource" nillable="true" minOccurs="0" />
          <xs:element name="typesource" type="hibernatetypesourceimpl" nillable="true" minOccurs="0" />
          <xs:element name="valuesources" type="relationalvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttooneattributesourceimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="naturalidmutability" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicattributecolumnsandformulassource" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="basicattributemapping" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclassentitysourceimpl" >
      <xs:complexContent>
       <xs:extension base="subclassentitysourceimpl">
         <xs:sequence>
          <xs:element name="jaxbkeymapping" type="xs:anyType" />
          <xs:element name="primarykeyjoincolumnsources" type="columnsource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpluralassociationelementsourceimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="pluralattributesource" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchcharacteristicssingularassociationimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="fetchtiming" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="fetchstyle" nillable="true" minOccurs="0" />
        <xs:element name="unwrapproxies" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formulaimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="tablename" type="xs:string" />
          <xs:element name="expression" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiergeneratordefinitionbinder" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributeelementsourcemanytomanyimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="no_filter_sources" type="filtersource" nillable="true" minOccurs="0" />
          <xs:element name="jaxbmanytomanyelement" type="xs:anyType" />
          <xs:element name="referencedentityname" type="xs:string" />
          <xs:element name="" type="fetchcharacteristics" nillable="true" minOccurs="0" />
          <xs:element name="valuesources" type="relationalvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="s" type="filtersource" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeidentifiersingularattributesourcemanytooneimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="keymanytooneelement" type="xs:anyType" />
          <xs:element name="referencedentityname" type="xs:string" />
          <xs:element name="typesource" type="hibernatetypesourceimpl" nillable="true" minOccurs="0" />
          <xs:element name="valuesources" type="relationalvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="attributepath" nillable="true" minOccurs="0" />
          <xs:element name="" type="attributerole" nillable="true" minOccurs="0" />
          <xs:element name="fetchcharacteristics" type="fetchcharacteristicssingularassociationimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitynamingsourceimpl" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="classname" type="xs:string" />
        <xs:element name="jpaentityname" type="xs:string" />
        <xs:element name="typename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singularidentifierattributesourceimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="xmlnodename" type="xs:string" />
          <xs:element name="accessname" type="xs:string" />
          <xs:element name="typesource" type="hibernatetypesourceimpl" nillable="true" minOccurs="0" />
          <xs:element name="valuesources" type="relationalvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="attributerole" nillable="true" minOccurs="0" />
          <xs:element name="" type="attributepath" nillable="true" minOccurs="0" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatetypesourceimpl" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parameters" type="xs:anyType" />
        <xs:element name="GeneratedName" type="javatypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filtersourceimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="condition" type="xs:string" />
          <xs:element name="autoaliasinjection" type="xs:anyType" />
          <xs:element name="aliastablemap" type="xs:anyType" />
          <xs:element name="aliasentitymap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributemapkeymanytomanysourceimpl" >
      <xs:sequence>
        <xs:element name="referencedentityname" type="xs:string" />
        <xs:element name="fkname" type="xs:string" />
        <xs:element name="GeneratedName" type="hibernatetypesource" nillable="true" minOccurs="0" />
        <xs:element name="relationalvaluesources" type="relationalvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiersourcesimpleimpl" >
      <xs:sequence>
        <xs:element name="attribute" type="singularidentifierattributesourceimpl" nillable="true" minOccurs="0" />
        <xs:element name="generatordefinition" type="identifiergeneratordefinition" nillable="true" minOccurs="0" />
        <xs:element name="unsavedvalue" type="xs:string" />
        <xs:element name="GeneratedName" type="toolinghintcontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributesourcelistimpl" >
      <xs:complexContent>
       <xs:extension base="abstractpluralattributesourceimpl">
         <xs:sequence>
          <xs:element name="jaxblistmapping" type="xs:anyType" />
          <xs:element name="indexsource" type="pluralattributesequentialindexsource" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytooneattributecolumnsandformulassource" >
      <xs:complexContent>
       <xs:extension base="relationalvaluesourcehelper.abstractcolumnsandformulassource">
         <xs:sequence>
          <xs:element name="manytoonemapping" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributesequentialindexsourceimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="base" type="xs:long" />
          <xs:element name="xmlnodename" type="xs:string" />
          <xs:element name="typesource" type="hibernatetypesourceimpl" nillable="true" minOccurs="0" />
          <xs:element name="valuesources" type="relationalvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filterdefinitionbinder" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchcharacteristicspluralattributeimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="fetchtiming" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="fetchstyle" nillable="true" minOccurs="0" />
        <xs:element name="batchsize" type="xs:anyType" />
        <xs:element name="extralazy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclassentitysourceimpl" >
      <xs:complexContent>
       <xs:extension base="abstractentitysourceimpl">
         <xs:sequence>
          <xs:element name="container" type="entitysource" nillable="true" minOccurs="0" />
          <xs:element name="primarytable" type="tablespecificationsource" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configparameterhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pluralattributeelementsourceembeddedimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="embeddablesource" type="embeddablesourceimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singularattributesourcebasicimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="propertyelement" type="xs:anyType" />
          <xs:element name="typesource" type="hibernatetypesourceimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="naturalidmutability" nillable="true" minOccurs="0" />
          <xs:element name="relationalvaluesources" type="relationalvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="attributerole" nillable="true" minOccurs="0" />
          <xs:element name="" type="attributepath" nillable="true" minOccurs="0" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetmappingbinder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiersourcenonaggregatedcompositeimpl" >
      <xs:sequence>
        <xs:element name="rootentitysource" type="rootentitysourceimpl" nillable="true" minOccurs="0" />
        <xs:element name="base" type="attributepath" nillable="true" minOccurs="0" />
        <xs:element name="base" type="attributerole" nillable="true" minOccurs="0" />
        <xs:element name="generatordefinition" type="identifiergeneratordefinition" nillable="true" minOccurs="0" />
        <xs:element name="//:(attributesources" type="list" nillable="true" minOccurs="0" />
        <xs:element name="idclasssource" type="embeddablesource" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="toolinghintcontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionattributesourceimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="versionelement" type="xs:anyType" />
          <xs:element name="typesource" type="hibernatetypesourceimpl" nillable="true" minOccurs="0" />
          <xs:element name="relationalvaluesources" type="relationalvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="attributepath" nillable="true" minOccurs="0" />
          <xs:element name="" type="attributerole" nillable="true" minOccurs="0" />
          <xs:element name="toolinghints" type="toolinghintcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singularattributesourceonetooneimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="onetooneelement" type="xs:anyType" />
          <xs:element name="typesource" type="hibernatetypesourceimpl" nillable="true" minOccurs="0" />
          <xs:element name="referencedtypename" type="xs:string" />
          <xs:element name="formulasources" type="derivedvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="attributerole" nillable="true" minOccurs="0" />
          <xs:element name="" type="attributepath" nillable="true" minOccurs="0" />
          <xs:element name="fetchcharacteristics" type="fetchcharacteristicssingularassociationimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributesourcemapimpl" >
      <xs:complexContent>
       <xs:extension base="abstractpluralattributesourceimpl">
         <xs:sequence>
          <xs:element name="indexsource" type="pluralattributeindexsource" nillable="true" minOccurs="0" />
          <xs:element name="xmlnodename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributemapkeymanytoanysourceimpl" >
      <xs:sequence>
        <xs:element name="unknown" type="hibernatetypesource" nillable="true" minOccurs="0" />
        <xs:element name="discriminatorsource" type="anydiscriminatorsource" nillable="true" minOccurs="0" />
        <xs:element name="keysource" type="anykeysource" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityhierarchysourceimpl" >
      <xs:sequence>
        <xs:element name="rootentitysource" type="rootentitysourceimpl" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="identifiersource" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="versionattributesource" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="discriminatorsource" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="multitenancysource" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="caching" nillable="true" minOccurs="0" />
        <xs:element name="naturalid" type="caching" nillable="true" minOccurs="0" />
        <xs:element name="hierarchy" type="inheritancetype" nillable="true" minOccurs="0" />
        <xs:element name="collectedentitynames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstracthbmsourcenode" >
      <xs:sequence>
        <xs:element name="source" type="mappingdocument" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingdocument" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="documentroot" type="xs:anyType" />
        <xs:element name="GeneratedName" type="origin" nillable="true" minOccurs="0" />
        <xs:element name="rootbuildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mappingdefaults" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="toolinghintcontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiersourceaggregatedcompositeimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="attributesource" type="xs:anyType" />
          <xs:element name="generatordefinition" type="identifiergeneratordefinition" nillable="true" minOccurs="0" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributesourcebagimpl" >
      <xs:complexContent>
       <xs:extension base="abstractpluralattributesourceimpl">
         <xs:sequence>
          <xs:element name="jaxbbagmapping" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchprofilebinder" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singularattributesourceanyimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="jaxbanymapping" type="xs:anyType" />
          <xs:element name="" type="naturalidmutability" nillable="true" minOccurs="0" />
          <xs:element name="" type="attributepath" nillable="true" minOccurs="0" />
          <xs:element name="" type="attributerole" nillable="true" minOccurs="0" />
          <xs:element name="//wedon'treallyknowthetypeoftheattributeoverallattributetypesource" type="hibernatetypesource" nillable="true" minOccurs="0" />
          <xs:element name="discriminatorsource" type="anydiscriminatorsource" nillable="true" minOccurs="0" />
          <xs:element name="keysource" type="anykeysource" nillable="true" minOccurs="0" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rootentitysourceimpl" >
      <xs:complexContent>
       <xs:extension base="abstractentitysourceimpl">
         <xs:sequence>
          <xs:element name="primarytable" type="tablespecificationsource" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typedefinitionbinder" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablesourcecontainer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedquerybinder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnattributesourceimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="tablename" type="xs:string" />
          <xs:element name="columnname" type="xs:string" />
          <xs:element name="" type="sizesource" nillable="true" minOccurs="0" />
          <xs:element name="nullable" type="truthvalue" nillable="true" minOccurs="0" />
          <xs:element name="unique" type="truthvalue" nillable="true" minOccurs="0" />
          <xs:element name="indexconstraintnames" type="xs:anyType" />
          <xs:element name="ukconstraintnames" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributemapkeysourcebasicimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="typesource" type="hibernatetypesourceimpl" nillable="true" minOccurs="0" />
          <xs:element name="valuesources" type="relationalvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="xmlnodename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributekeysourceimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="explicitfkname" type="xs:string" />
          <xs:element name="referencedpropertyname" type="xs:string" />
          <xs:element name="cascadedeletesatfklevel" type="xs:anyType" />
          <xs:element name="nullable" type="xs:anyType" />
          <xs:element name="updateable" type="xs:anyType" />
          <xs:element name="valuesources" type="relationalvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributesourceidbagimpl" >
      <xs:complexContent>
       <xs:extension base="abstractpluralattributesourceimpl">
         <xs:sequence>
          <xs:element name="idbagmapping" type="xs:anyType" />
          <xs:element name="" type="collectionidsource" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attributeshelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractentitysourceimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="no_filter_sources" type="filtersource" nillable="true" minOccurs="0" />
          <xs:element name="jaxbentitymapping" type="xs:anyType" />
          <xs:element name="" type="entitynamingsource" nillable="true" minOccurs="0" />
          <xs:element name="base" type="attributerole" nillable="true" minOccurs="0" />
          <xs:element name="base" type="attributepath" nillable="true" minOccurs="0" />
          <xs:element name="subclassentitysources" type="identifiabletypesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="inlineviewcount" type="xs:long" />
          <xs:element name="//logically,butbuiltduring'afterinstantiation'callbackattributesources" type="attributesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="secondarytablemap" type="xs:anyType" />
          <xs:element name="s" type="filtersource" nillable="true" minOccurs="0" />
          <xs:element name="tuplizerclassmap" type="xs:anyType" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
          <xs:element name="entityhierarchy" type="entityhierarchysourceimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributesourceprimitivearrayimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="indexsource" type="pluralattributesequentialindexsource" nillable="true" minOccurs="0" />
          <xs:element name="jaxbarraymapping" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributemapkeysourceembeddedimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="embeddablesource" type="embeddablesourceimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributesourcearrayimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="jaxbarraymapping" type="xs:anyType" />
          <xs:element name="indexsource" type="pluralattributesequentialindexsource" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeidentifiersingularattributesourcebasicimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="keypropertyelement" type="xs:anyType" />
          <xs:element name="typesource" type="hibernatetypesourceimpl" nillable="true" minOccurs="0" />
          <xs:element name="valuesources" type="relationalvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="attributepath" nillable="true" minOccurs="0" />
          <xs:element name="" type="attributerole" nillable="true" minOccurs="0" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inlineviewsourceimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="schemaname" type="xs:string" />
          <xs:element name="catalogname" type="xs:string" />
          <xs:element name="selectstatement" type="xs:string" />
          <xs:element name="logicalname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnsourceimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="tablename" type="xs:string" />
          <xs:element name="columnelement" type="xs:anyType" />
          <xs:element name="nullable" type="truthvalue" nillable="true" minOccurs="0" />
          <xs:element name="indexconstraintnames" type="xs:anyType" />
          <xs:element name="ukconstraintnames" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singularattributesourceembeddedimpl" >
      <xs:complexContent>
       <xs:extension base="abstractsingularattributesourceembeddedimpl">
         <xs:sequence>
          <xs:element name="xmlnodename" type="xs:string" />
          <xs:element name="insert" type="xs:anyType" />
          <xs:element name="update" type="xs:anyType" />
          <xs:element name="lazy" type="xs:anyType" />
          <xs:element name="optimisticlock" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sizesourceimpl" >
      <xs:sequence>
        <xs:element name="length" type="xs:anyType" />
        <xs:element name="scale" type="xs:anyType" />
        <xs:element name="precision" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexedpluralattributesource" >
      <xs:complexContent>
       <xs:extension base="pluralattributesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestampattributesourceimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="timestampelement" type="xs:anyType" />
          <xs:element name="typesource" type="hibernatetypesourceimpl" nillable="true" minOccurs="0" />
          <xs:element name="relationalvaluesources" type="relationalvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="attributepath" nillable="true" minOccurs="0" />
          <xs:element name="" type="attributerole" nillable="true" minOccurs="0" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondarytablesourceimpl" >
      <xs:complexContent>
       <xs:extension base="abstracthbmsourcenode">
         <xs:sequence>
          <xs:element name="jaxbsecondarytablemapping" type="xs:anyType" />
          <xs:element name="jointable" type="tablespecificationsource" nillable="true" minOccurs="0" />
          <xs:element name="logicaltablename" type="xs:string" />
          <xs:element name="keycolumnsources" type="columnsource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpluralattributesourceimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="no_filter_sources" type="filtersource" nillable="true" minOccurs="0" />
          <xs:element name="pluralattributejaxbmapping" type="pluralattributeinfo" nillable="true" minOccurs="0" />
          <xs:element name="container" type="attributesourcecontainer" nillable="true" minOccurs="0" />
          <xs:element name="" type="attributerole" nillable="true" minOccurs="0" />
          <xs:element name="" type="attributepath" nillable="true" minOccurs="0" />
          <xs:element name="typeinformation" type="hibernatetypesource" nillable="true" minOccurs="0" />
          <xs:element name="keysource" type="pluralattributekeysource" nillable="true" minOccurs="0" />
          <xs:element name="elementsource" type="pluralattributeelementsource" nillable="true" minOccurs="0" />
          <xs:element name="fetchcharacteristics" type="fetchcharacteristicspluralattributeimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="caching" nillable="true" minOccurs="0" />
          <xs:element name="s" type="filtersource" nillable="true" minOccurs="0" />
          <xs:element name="synchronizedtablenames" type="xs:string" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="helper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicattributepropertysource" >
      <xs:sequence>
        <xs:element name="basicattributemapping" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlelementmetadata" >
      <xs:sequence>
        <xs:element name="inherentlysinglecolumn" type="xs:anyType" />
        <xs:element name="canbenamed" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commaseparatedstringhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singularattributesourcemanytooneimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="manytooneelement" type="xs:anyType" />
          <xs:element name="typesource" type="hibernatetypesourceimpl" nillable="true" minOccurs="0" />
          <xs:element name="referencedtypename" type="xs:string" />
          <xs:element name="relationalvaluesources" type="relationalvaluesource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="attributerole" nillable="true" minOccurs="0" />
          <xs:element name="" type="attributepath" nillable="true" minOccurs="0" />
          <xs:element name="" type="toolinghintcontext" nillable="true" minOccurs="0" />
          <xs:element name="fetchcharacteristics" type="fetchcharacteristicssingularassociationimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationalvaluesourcehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hbmmetadatasourceprocessorimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="rootbuildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="mappingdocuments" type="mappingdocument" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="modelbinder" nillable="true" minOccurs="0" />
        <xs:element name="entityhierarchies" type="entityhierarchysourceimpl" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationalobjectbinder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="database" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="physicalnamingstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertysource" >
      <xs:complexContent>
       <xs:extension base="toolinghintcontainer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablesourceimpl" >
      <xs:complexContent>
       <xs:extension base="abstracthbmsourcenode">
         <xs:sequence>
          <xs:element name="explicitcatalog" type="xs:string" />
          <xs:element name="explicitschema" type="xs:string" />
          <xs:element name="explicittablename" type="xs:string" />
          <xs:element name="rowid" type="xs:string" />
          <xs:element name="comment" type="xs:string" />
          <xs:element name="checkconstraint" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitcolumnnamingsecondpass" >
      <xs:complexContent>
       <xs:extension base="secondpass">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheregiondefinition" >
      <xs:sequence>
        <xs:element name="regiontype" type="xs:anyType" />
        <xs:element name="role" type="xs:string" />
        <xs:element name="usage" type="xs:string" />
        <xs:element name="region" type="xs:string" />
        <xs:element name="cachelazy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatasources" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xmlmappingbinderaccess" nillable="true" minOccurs="0" />
        <xs:element name="xmlbindings" type="binding" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="annotatedclasses" type="xs:anyType" />
        <xs:element name="annotatedclassnames" type="xs:anyType" />
        <xs:element name="annotatedpackages" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="temptableddltransactionhandling" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingexception" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.mappingexception">
         <xs:sequence>
          <xs:element name="" type="origin" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactorybuilder" >
      <xs:complexContent>
       <xs:extension base="entitytuplizer>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pessimisticlockexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonuniqueobjectexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="identifier" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unresolvableobjectexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="identifier" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockmode" >
      <xs:sequence>
        <xs:element name="level" type="xs:long" />
        <xs:element name="externalform" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readerinputstream" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.engine.jdbc.readerinputstream">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multitenancystrategy" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scrollableresultsimpl" >
      <xs:complexContent>
       <xs:extension base="abstractscrollableresults">
         <xs:sequence>
          <xs:element name="currentrow" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactoryobserverchain" >
      <xs:sequence>
        <xs:element name="observers" type="sessionfactoryobserver" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicfilteraliasgenerator" >
      <xs:sequence>
        <xs:element name="tables" type="xs:string" />
        <xs:element name="rootalias" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionimpl" >
      <xs:complexContent>
       <xs:extension base="abstractsessionimpl">
         <xs:sequence>
          <xs:element name="//todo:needtofindacleanwaytohandlethe"eventsource"role//aseparateclassresponsibleforgenerating/dispatchingeventsjustduplicatesmostofthesessionmethods...//passingaroundseparateinterceptor,factory,actionqueue,andpersistentcontextisnotmanageable...log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="trace_enabled" type="xs:anyType" />
          <xs:element name="transienttimestamp" type="xs:long" />
          <xs:element name="transient" type="sessionowner" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="actionqueue" nillable="true" minOccurs="0" />
          <xs:element name="transientpersistencecontext" type="statefulpersistencecontext" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="transactioncoordinator" nillable="true" minOccurs="0" />
          <xs:element name="transientjdbccoordinator" type="jdbccoordinatorimpl" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="interceptor" nillable="true" minOccurs="0" />
          <xs:element name="" type="statementinspector" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="entitynameresolver" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="connectionreleasemode" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="flushmode" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="cachemode" nillable="true" minOccurs="0" />
          <xs:element name="//forejb3transientautoclear" type="xs:anyType" />
          <xs:element name="transientautojointransactions" type="xs:anyType" />
          <xs:element name="transientflushbeforecompletionenabled" type="xs:anyType" />
          <xs:element name="transientautoclosesessionenabled" type="xs:anyType" />
          <xs:element name="transientdontflushfromfind" type="xs:long" />
          <xs:element name="transient" type="loadqueryinfluencers" nillable="true" minOccurs="0" />
          <xs:element name="transientistransactioncoordinatorshared" type="xs:anyType" />
          <xs:element name="transient" type="transactionobserver" nillable="true" minOccurs="0" />
          <xs:element name="sessioneventsmanager" type="sessioneventlistenermanagerimpl" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="jdbcsessioncontext" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="exceptionmapper" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="managedflushchecker" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="aftercompletionaction" nillable="true" minOccurs="0" />
          <xs:element name="//cachedinstancetransient" type="loadevent" nillable="true" minOccurs="0" />
          <xs:element name="transientlobhelper" type="xs:anyType" />
          <xs:element name="standard_exception_mapper" type="exceptionmapper" nillable="true" minOccurs="0" />
          <xs:element name="standard_after_completion_action" type="aftercompletionaction" nillable="true" minOccurs="0" />
          <xs:element name="standard_managed_flush_checker" type="managedflushchecker" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filterimpl" >
      <xs:sequence>
        <xs:element name="marker" type="xs:string" />
        <xs:element name="transientdefinition" type="filterdefinition" nillable="true" minOccurs="0" />
        <xs:element name="filtername" type="xs:string" />
        <xs:element name="parameters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedqueryrepository" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="namedsqlresultsetmappingmap" type="xs:anyType" />
        <xs:element name="namedquerydefinitionmap" type="xs:anyType" />
        <xs:element name="namedsqlquerydefinitionmap" type="xs:anyType" />
        <xs:element name="procedurecallmementomap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractsessionimpl" >
      <xs:sequence>
        <xs:element name="transientfactory" type="sessionfactoryimpl" nillable="true" minOccurs="0" />
        <xs:element name="tenantidentifier" type="xs:string" />
        <xs:element name="closed" type="xs:anyType" />
        <xs:element name="transientcurrenthibernate" type="transaction" nillable="true" minOccurs="0" />
        <xs:element name="transientwrapperoptions" type="wrapperoptionsimpl" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="jdbcconnectionaccess" nillable="true" minOccurs="0" />
        <xs:element name="sessionidentifier" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="corelogging" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionfilterimpl" >
      <xs:complexContent>
       <xs:extension base="queryimpl">
         <xs:sequence>
          <xs:element name="collection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchingscrollableresultsimpl" >
      <xs:complexContent>
       <xs:extension base="abstractscrollableresults">
         <xs:sequence>
          <xs:element name="currentrow" type="xs:anyType" />
          <xs:element name="currentposition" type="xs:long" />
          <xs:element name="maxposition" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbasicquerycontractimpl" >
      <xs:sequence>
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="cacheable" type="xs:anyType" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="selection" type="rowselection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="iteratorimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="rs" type="xs:anyType" />
        <xs:element name="session" type="eventsource" nillable="true" minOccurs="0" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="s" type="type" nillable="true" minOccurs="0" />
        <xs:element name="single" type="xs:anyType" />
        <xs:element name="currentresult" type="xs:anyType" />
        <xs:element name="hasnext" type="xs:anyType" />
        <xs:element name="names" type="xs:string" />
        <xs:element name="ps" type="xs:anyType" />
        <xs:element name="GeneratedName" type="holderinstantiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlqueryimpl" >
      <xs:complexContent>
       <xs:extension base="abstractqueryimpl">
         <xs:sequence>
          <xs:element name="queryreturns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="queryreturnbuilders" type="xs:anyType" />
          <xs:element name="autodiscovertypes" type="xs:anyType" />
          <xs:element name="queryspaces" type="xs:anyType" />
          <xs:element name="callable" type="xs:anyType" />
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="confighelper" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valueholder" >
      <xs:sequence>
        <xs:element name="valueinitializer" type="xs:anyType" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="no_deferred_initializer" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cloneable" >
      <xs:sequence>
        <xs:element name="reader_method_args" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockmodeconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializationhelper" >
      <xs:complexContent>
       <xs:extension base="objectinputstream">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="byteshelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arrayhelper" >
      <xs:sequence>
        <xs:element name="true" type="xs:anyType" />
        <xs:element name="false" type="xs:anyType" />
        <xs:element name="empty__array" type="xs:string" />
        <xs:element name="empty__array" type="xs:long" />
        <xs:element name="empty__array" type="xs:anyType" />
        <xs:element name="empty__array" type="xs:anyType" />
        <xs:element name="empty__array" type="xs:anyType" />
        <xs:element name="empty__array" type="type" nillable="true" minOccurs="0" />
        <xs:element name="empty__array" type="xs:anyType" />
        <xs:element name="seed" type="xs:long" />
        <xs:element name="prime_numer" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinediterable" >
      <xs:sequence>
        <xs:element name="iterator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identitymap" >
      <xs:complexContent>
       <xs:extension base="k,">
         <xs:sequence>
          <xs:element name="map" type="xs:anyType" />
          <xs:element name="entryarray" type="xs:anyType" />
          <xs:element name="transientdirty" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyiterator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="map" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boundedconcurrenthashmap" >
      <xs:complexContent>
       <xs:extension base="abstractmap<k,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/*		*thebasicstrategyistosubdividethetableamongsegments,		*eachofwhichitselfisaconcurrentlyreadablehashtable.		*//*----------------constants--------------*//***thedefaultinitialcapacityforthistable,*usedwhennototherwisespecifiedinaconstructor.*/default_maximum_capacity" type="xs:long" />
          <xs:element name="/***thedefaultloadfactorforthistable,usedwhennot*otherwisespecifiedinaconstructor.*/default_load_factor" type="xs:double" />
          <xs:element name="/***thedefaultconcurrencylevelforthistable,usedwhennot*otherwisespecifiedinaconstructor.*/default_concurrency_level" type="xs:long" />
          <xs:element name="/***themaximumcapacity,usedifahighervalueisimplicitly*specifiedbyeitheroftheconstructorswitharguments.must*beapoweroftwo<" type="xs:long" />
          <xs:element name="/***themaximumnumberofsegmentstoallowusedtobound*constructorarguments.*///slightlyconservativemax_segments" type="xs:long" />
          <xs:element name="/***numberofunsynchronizedretriesinsizeandcontainsvalue*methodsbeforeresortingtolocking.thisisusedtoavoid*unboundedretriesiftablesundergocontinuousmodification*whichwouldmakeitimpossibletoobtainanaccurateresult.*/retries_before_lock" type="xs:long" />
          <xs:element name="/*----------------fields--------------*//***maskvalueforindexingosegments.theupperbitsofa*key'shashcodeareusedtochoosethesegment.*/segmentmask" type="xs:long" />
          <xs:element name="/***shiftvalueforindexingwithinsegments.*/segmentshift" type="xs:long" />
          <xs:element name="segments" type="xs:anyType" />
          <xs:element name="transientkeyset" type="k" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="entryset" type="xs:anyType" />
          <xs:element name="transientvalues" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinediterator" >
      <xs:sequence>
        <xs:element name="wrappediterators" type="xs:anyType" />
        <xs:element name="currentiteratorindex" type="xs:long" />
        <xs:element name="currentiterator" type="xs:anyType" />
        <xs:element name="lastusediterator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emptyiterator" >
      <xs:sequence>
        <xs:element name="instance" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentreferencehashmap" >
      <xs:complexContent>
       <xs:extension base="abstractmap<k,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/*----------------constants--------------*/default_key_type" type="xs:anyType" />
          <xs:element name="default_value_type" type="xs:anyType" />
          <xs:element name="/***thedefaultinitialcapacityforthistable,*usedwhennototherwisespecifiedinaconstructor.*/default_initial_capacity" type="xs:long" />
          <xs:element name="/***thedefaultloadfactorforthistable,usedwhennot*otherwisespecifiedinaconstructor.*/default_load_factor" type="xs:double" />
          <xs:element name="/***thedefaultconcurrencylevelforthistable,usedwhennot*otherwisespecifiedinaconstructor.*/default_concurrency_level" type="xs:long" />
          <xs:element name="/***themaximumcapacity,usedifahighervalueisimplicitly*specifiedbyeitheroftheconstructorswitharguments.must*beapoweroftwo<" type="xs:long" />
          <xs:element name="/***themaximumnumberofsegmentstoallowusedtobound*constructorarguments.*///slightlyconservativemax_segments" type="xs:long" />
          <xs:element name="/***numberofunsynchronizedretriesinsizeandcontainsvalue*methodsbeforeresortingtolocking.thisisusedtoavoid*unboundedretriesiftablesundergocontinuousmodification*whichwouldmakeitimpossibletoobtainanaccurateresult.*/retries_before_lock" type="xs:long" />
          <xs:element name="/*----------------fields--------------*//***maskvalueforindexingosegments.theupperbitsofa*key'shashcodeareusedtochoosethesegment.*/segmentmask" type="xs:long" />
          <xs:element name="/***shiftvalueforindexingwithinsegments.*/segmentshift" type="xs:long" />
          <xs:element name="segments" type="xs:anyType" />
          <xs:element name="identitycomparisons" type="xs:anyType" />
          <xs:element name="transientkeyset" type="k" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="entryset" type="xs:anyType" />
          <xs:element name="transientvalues" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singletoniterator" >
      <xs:sequence>
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="hasnext" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identityset" >
      <xs:sequence>
        <xs:element name="dump_value" type="xs:anyType" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionhelper" >
      <xs:sequence>
        <xs:element name="minimum_initial_capacity" type="xs:long" />
        <xs:element name="load_factor" type="xs:double" />
        <xs:element name="/***use{@linkjava.util.collections#empty_}or{@linkjava.util.collections#empty()}instead*/empty_" type="list" nillable="true" minOccurs="0" />
        <xs:element name="/***use{@linkjava.util.s#empty_list}or{@linkjava.util.s#emptylist()}instead*/empty_" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="/***use{@linkjava.util.collections#empty_}or{@linkjava.util.collections#empty()}instead*/empty_" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="streamcopier" >
      <xs:sequence>
        <xs:element name="buffer_size" type="xs:long" />
        <xs:element name="buffer" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcexceptionhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beaninfohelper" >
      <xs:sequence>
        <xs:element name="bean" type="xs:anyType" />
        <xs:element name="stop" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanintrospectionexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jndihelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="calendarcomparator" >
      <xs:sequence>
        <xs:element name="instance" type="calendarcomparator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="comparablecomparator" >
      <xs:complexContent>
       <xs:extension base="comparable>">
         <xs:sequence>
          <xs:element name="instance" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="equalshelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configurationhelper" >
      <xs:sequence>
        <xs:element name="placeholder_start" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primitivewrapperhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityprinter" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflecthelper" >
      <xs:sequence>
        <xs:element name="no_param_signature" type="xs:anyType" />
        <xs:element name="no_params" type="xs:anyType" />
        <xs:element name="single_object_param_signature" type="xs:anyType" />
        <xs:element name="object_equals" type="xs:anyType" />
        <xs:element name="object_hashcode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dtdentityresolver" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="hibernate_namespace" type="xs:string" />
        <xs:element name="old_hibernate_namespace" type="xs:string" />
        <xs:element name="user_namespace" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmldocumentimpl" >
      <xs:sequence>
        <xs:element name="tree" type="document" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="origin" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="origin" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsupportedormxsdversionexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmldocument" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlhelper" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basexmleventreader" >
      <xs:complexContent>
       <xs:extension base="eventreaderdelegate">
         <xs:sequence>
          <xs:element name="previousevent" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="originimpl" >
      <xs:sequence>
        <xs:element name="type" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bufferedxmleventreader" >
      <xs:complexContent>
       <xs:extension base="basexmleventreader">
         <xs:sequence>
          <xs:element name="eventbuffer" type="xs:anyType" />
          <xs:element name="eventlimit" type="xs:long" />
          <xs:element name="bufferreader" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="errorlogger" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="//lazilyinitalizederrors" type="xs:anyType" />
        <xs:element name="file" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlstreamconstantsutils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xsdexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="xsdname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlinfrastructureexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filteringxmleventreader" >
      <xs:complexContent>
       <xs:extension base="basexmleventreader">
         <xs:sequence>
          <xs:element name="prunedelements" type="xs:anyType" />
          <xs:element name="peekedevent" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringhelper" >
      <xs:sequence>
        <xs:element name="alias_truncate_length" type="xs:long" />
        <xs:element name="whitespace" type="xs:string" />
        <xs:element name="empty_s" type="xs:string" />
        <xs:element name="batch_id_placeholder" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="markerobject" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="settings" type="sessionfactoryoptions" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="querycache" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="regionfactory" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="updatetimestampscache" nillable="true" minOccurs="0" />
        <xs:element name="querycaches" type="xs:anyType" />
        <xs:element name="allcacheregions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterhelper" >
      <xs:sequence>
        <xs:element name="filternames" type="xs:string" />
        <xs:element name="filterconditions" type="xs:string" />
        <xs:element name="filterautoaliasflags" type="xs:anyType" />
        <xs:element name="filteraliastablemaps" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractscrollableresults" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="ps" type="xs:anyType" />
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="loader" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="queryparameters" nillable="true" minOccurs="0" />
        <xs:element name="s" type="type" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="holderinstantiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaimpl" >
      <xs:sequence>
        <xs:element name="entityorclassname" type="xs:string" />
        <xs:element name="transientsession" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="rootalias" type="xs:string" />
        <xs:element name="criterionentries" type="xs:anyType" />
        <xs:element name="orderentries" type="xs:anyType" />
        <xs:element name="GeneratedName" type="projection" nillable="true" minOccurs="0" />
        <xs:element name="projection" type="criteria" nillable="true" minOccurs="0" />
        <xs:element name="subcriterialist" type="xs:anyType" />
        <xs:element name="fetchmodes" type="xs:anyType" />
        <xs:element name="lockmodes" type="xs:anyType" />
        <xs:element name="maxresults" type="xs:anyType" />
        <xs:element name="firstresult" type="xs:anyType" />
        <xs:element name="timeout" type="xs:anyType" />
        <xs:element name="fetchsize" type="xs:anyType" />
        <xs:element name="cacheable" type="xs:anyType" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="queryhints" type="xs:anyType" />
        <xs:element name="GeneratedName" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="session" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="session" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="GeneratedName" type="resulttransformer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="uuid_generator" type="identifiergenerator" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="entitypersisters" type="xs:anyType" />
        <xs:element name="classmetadata" type="xs:anyType" />
        <xs:element name="entityproxyinterfacemap" type="xs:anyType" />
        <xs:element name="collectionpersisters" type="xs:anyType" />
        <xs:element name="collectionmetadata" type="xs:anyType" />
        <xs:element name="collectionrolesbyentityparticipant" type="xs:anyType" />
        <xs:element name="identifiergenerators" type="xs:anyType" />
        <xs:element name="transient" type="namedqueryrepository" nillable="true" minOccurs="0" />
        <xs:element name="filters" type="xs:anyType" />
        <xs:element name="fetchprofiles" type="xs:anyType" />
        <xs:element name="imports" type="xs:anyType" />
        <xs:element name="transientserviceregistry" type="sessionfactoryserviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="jdbcservices" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="settings" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="xs:anyType" />
        <xs:element name="transient" type="schemaexport" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="currentsessioncontext" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="sqlfunctionregistry" nillable="true" minOccurs="0" />
        <xs:element name="transientobserver" type="sessionfactoryobserverchain" nillable="true" minOccurs="0" />
        <xs:element name="entitynameresolvers" type="xs:anyType" />
        <xs:element name="transient" type="queryplancache" nillable="true" minOccurs="0" />
        <xs:element name="transientcacheaccess" type="cacheimplementor" nillable="true" minOccurs="0" />
        <xs:element name="transientisclosed" type="xs:anyType" />
        <xs:element name="transient" type="typeresolver" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="typehelper" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="sessionfactoryoptions" nillable="true" minOccurs="0" />
        <xs:element name="cacheaccessstrategiesmap" type="xs:anyType" />
        <xs:element name="entity_name_resolver_map_value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statelesssessionimpl" >
      <xs:complexContent>
       <xs:extension base="abstractsessionimpl">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="" type="transactioncoordinator" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="jdbccoordinator" nillable="true" minOccurs="0" />
          <xs:element name="temporary" type="persistencecontext" nillable="true" minOccurs="0" />
          <xs:element name="timestamp" type="xs:long" />
          <xs:element name="" type="jdbcsessioncontext" nillable="true" minOccurs="0" />
          <xs:element name="stateless" type="loadqueryinfluencers" nillable="true" minOccurs="0" />
          <xs:element name="sessioneventsmanager" type="sessioneventlistenermanagerimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryimpl" >
      <xs:complexContent>
       <xs:extension base="abstractqueryimpl">
         <xs:sequence>
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="staticfilteraliasgenerator" >
      <xs:sequence>
        <xs:element name="alias" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryregistry" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***singletonaccess*/instance" type="sessionfactoryregistry" nillable="true" minOccurs="0" />
        <xs:element name="sessionfactorymap" type="xs:anyType" />
        <xs:element name="nameuuidxref" type="xs:anyType" />
        <xs:element name="/***implementationof{@literaljndi}{@linkjavax.naming.event.}contracttolistenerforcontextevents*andreactaccordinglyifnecessary*/listener" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterconfiguration" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="condition" type="xs:string" />
        <xs:element name="autoaliasinjection" type="xs:anyType" />
        <xs:element name="aliastablemap" type="xs:anyType" />
        <xs:element name="aliasentitymap" type="xs:anyType" />
        <xs:element name="GeneratedName" type="persistentclass" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typelocatorimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="typeresolver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wrapperoptionsimpl" >
      <xs:sequence>
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="usestreamforlobbinding" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filteraliasgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="coremessagelogger" >
      <xs:complexContent>
       <xs:extension base="basiclogger">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="connectionpoolinglogger" >
      <xs:complexContent>
       <xs:extension base="basiclogger">
         <xs:sequence>
          <xs:element name="/***accesstothelogginginstance*/connections_logger" type="connectionpoolinglogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="urlmessagebundle" >
      <xs:sequence>
        <xs:element name="url_logger" type="urlmessagebundle" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deprecationlogger" >
      <xs:complexContent>
       <xs:extension base="basiclogger">
         <xs:sequence>
          <xs:element name="deprecation_logger" type="deprecationlogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractqueryimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="unset_parameter" type="xs:anyType" />
        <xs:element name="unset_type" type="xs:anyType" />
        <xs:element name="query" type="xs:string" />
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="parametermetadata" nillable="true" minOccurs="0" />
        <xs:element name="//parameterbindvalues...values" type="list" nillable="true" minOccurs="0" />
        <xs:element name="types" type="list" nillable="true" minOccurs="0" />
        <xs:element name="namedparameters" type="xs:anyType" />
        <xs:element name="namedparameterlists" type="xs:anyType" />
        <xs:element name="optional" type="xs:anyType" />
        <xs:element name="optionalid" type="xs:anyType" />
        <xs:element name="optionalentityname" type="xs:string" />
        <xs:element name="selection" type="rowselection" nillable="true" minOccurs="0" />
        <xs:element name="cacheable" type="xs:anyType" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="queryhints" type="xs:anyType" />
        <xs:element name="GeneratedName" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="session" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="session" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="collectionkey" type="xs:anyType" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="GeneratedName" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="queryplan" type="hqlqueryplan" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectionobserverstatsbridge" >
      <xs:sequence>
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomany" >
      <xs:sequence>
        <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
        <xs:element name="referencing" type="table" nillable="true" minOccurs="0" />
        <xs:element name="referencedentityname" type="xs:string" />
        <xs:element name="associatedclass" type="persistentclass" nillable="true" minOccurs="0" />
        <xs:element name="embedded" type="xs:anyType" />
        <xs:element name="ignorenotfound" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="set" >
      <xs:complexContent>
       <xs:extension base="collection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bag" >
      <xs:complexContent>
       <xs:extension base="collection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexbackref" >
      <xs:complexContent>
       <xs:extension base="property">
         <xs:sequence>
          <xs:element name="collectionrole" type="xs:string" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="accessstrategy" type="propertyaccessstrategy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primarykey" >
      <xs:complexContent>
       <xs:extension base="constraint">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivearray" >
      <xs:complexContent>
       <xs:extension base="array">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:complexContent>
       <xs:extension base="simplevalue">
         <xs:sequence>
          <xs:element name="properties" type="property" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="componentclassname" type="xs:string" />
          <xs:element name="embedded" type="xs:anyType" />
          <xs:element name="parentproperty" type="xs:string" />
          <xs:element name="owner" type="persistentclass" nillable="true" minOccurs="0" />
          <xs:element name="dynamic" type="xs:anyType" />
          <xs:element name="metaattributes" type="map" nillable="true" minOccurs="0" />
          <xs:element name="iskey" type="xs:anyType" />
          <xs:element name="rolename" type="xs:string" />
          <xs:element name="tuplizerimpls" type="xs:anyType" />
          <xs:element name="built" type="identifiergenerator" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="list" >
      <xs:complexContent>
       <xs:extension base="indexedcollection">
         <xs:sequence>
          <xs:element name="baseindex" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="backref" >
      <xs:complexContent>
       <xs:extension base="property">
         <xs:sequence>
          <xs:element name="collectionrole" type="xs:string" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="" type="propertyaccessstrategy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexedcollection" >
      <xs:complexContent>
       <xs:extension base="collection">
         <xs:sequence>
          <xs:element name="default_index_column_name" type="xs:string" />
          <xs:element name="index" type="value" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationalmodel" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatasource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributecontainer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="any" >
      <xs:complexContent>
       <xs:extension base="simplevalue">
         <xs:sequence>
          <xs:element name="identifiertypename" type="xs:string" />
          <xs:element name="metatypename" type="xs:string" />
          <xs:element name="metavalues" type="map" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="syntheticproperty" >
      <xs:complexContent>
       <xs:extension base="property">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentclass" >
      <xs:sequence>
        <xs:element name="pk_" type="alias" nillable="true" minOccurs="0" />
        <xs:element name="null_discriminator_mapping" type="xs:string" />
        <xs:element name="not_null_discriminator_mapping" type="xs:string" />
        <xs:element name="GeneratedName" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="classname" type="xs:string" />
        <xs:element name="transientmapped" type="xs:anyType" />
        <xs:element name="proxyinterfacename" type="xs:string" />
        <xs:element name="transientproxyinterface" type="xs:anyType" />
        <xs:element name="jpaentityname" type="xs:string" />
        <xs:element name="discriminatorvalue" type="xs:string" />
        <xs:element name="lazy" type="xs:anyType" />
        <xs:element name="properties" type="xs:anyType" />
        <xs:element name="declaredproperties" type="xs:anyType" />
        <xs:element name="subclasses" type="subclass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="subclassproperties" type="xs:anyType" />
        <xs:element name="subclasstables" type="xs:anyType" />
        <xs:element name="dynamicinsert" type="xs:anyType" />
        <xs:element name="dynamicupdate" type="xs:anyType" />
        <xs:element name="batchsize" type="xs:long" />
        <xs:element name="selectbeforeupdate" type="xs:anyType" />
        <xs:element name="metaattributes" type="xs:anyType" />
        <xs:element name="joins" type="join" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="subclassjoins" type="xs:anyType" />
        <xs:element name="filters" type="xs:anyType" />
        <xs:element name="synchronizedtables" type="xs:anyType" />
        <xs:element name="loadername" type="xs:string" />
        <xs:element name="isabstract" type="xs:anyType" />
        <xs:element name="hassubselectloadablecollections" type="xs:anyType" />
        <xs:element name="identifiermapper" type="component" nillable="true" minOccurs="0" />
        <xs:element name="//customsqlcustomsqlinsert" type="xs:string" />
        <xs:element name="custominsertcallable" type="xs:anyType" />
        <xs:element name="insertcheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqlupdate" type="xs:string" />
        <xs:element name="customupdatecallable" type="xs:anyType" />
        <xs:element name="updatecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqldelete" type="xs:string" />
        <xs:element name="customdeletecallable" type="xs:anyType" />
        <xs:element name="deletecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="tuplizerimpls" type="xs:anyType" />
        <xs:element name="super" type="mappedsuperclass" nillable="true" minOccurs="0" />
        <xs:element name="declaredidentifiermapper" type="component" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="optimisticlockstyle" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoone" >
      <xs:complexContent>
       <xs:extension base="toone">
         <xs:sequence>
          <xs:element name="constrained" type="xs:anyType" />
          <xs:element name="foreignkeytype" type="foreignkeydirection" nillable="true" minOccurs="0" />
          <xs:element name="identifier" type="keyvalue" nillable="true" minOccurs="0" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="array" >
      <xs:complexContent>
       <xs:extension base="list">
         <xs:sequence>
          <xs:element name="elementclassname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collection" >
      <xs:sequence>
        <xs:element name="default_element_column_name" type="xs:string" />
        <xs:element name="default_key_column_name" type="xs:string" />
        <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
        <xs:element name="owner" type="persistentclass" nillable="true" minOccurs="0" />
        <xs:element name="key" type="keyvalue" nillable="true" minOccurs="0" />
        <xs:element name="element" type="value" nillable="true" minOccurs="0" />
        <xs:element name="collection" type="table" nillable="true" minOccurs="0" />
        <xs:element name="role" type="xs:string" />
        <xs:element name="lazy" type="xs:anyType" />
        <xs:element name="extralazy" type="xs:anyType" />
        <xs:element name="inverse" type="xs:anyType" />
        <xs:element name="mutable" type="xs:anyType" />
        <xs:element name="subselectloadable" type="xs:anyType" />
        <xs:element name="cacheconcurrencystrategy" type="xs:string" />
        <xs:element name="cacheregionname" type="xs:string" />
        <xs:element name="orderby" type="xs:string" />
        <xs:element name="where" type="xs:string" />
        <xs:element name="manytomanywhere" type="xs:string" />
        <xs:element name="manytomanyorderby" type="xs:string" />
        <xs:element name="referencedpropertyname" type="xs:string" />
        <xs:element name="mappedbyproperty" type="xs:string" />
        <xs:element name="sorted" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="comparatorclassname" type="xs:string" />
        <xs:element name="orphandelete" type="xs:anyType" />
        <xs:element name="batchsize" type="xs:long" />
        <xs:element name="GeneratedName" type="fetchmode" nillable="true" minOccurs="0" />
        <xs:element name="embedded" type="xs:anyType" />
        <xs:element name="optimisticlocked" type="xs:anyType" />
        <xs:element name="collectionpersister" type="xs:anyType" />
        <xs:element name="typename" type="xs:string" />
        <xs:element name="typeparameters" type="xs:anyType" />
        <xs:element name="filters" type="xs:anyType" />
        <xs:element name="manytomanyfilters" type="xs:anyType" />
        <xs:element name="synchronizedtables" type="xs:anyType" />
        <xs:element name="customsqlinsert" type="xs:string" />
        <xs:element name="custominsertcallable" type="xs:anyType" />
        <xs:element name="insertcheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqlupdate" type="xs:string" />
        <xs:element name="customupdatecallable" type="xs:anyType" />
        <xs:element name="updatecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqldelete" type="xs:string" />
        <xs:element name="customdeletecallable" type="xs:anyType" />
        <xs:element name="deletecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqldeleteall" type="xs:string" />
        <xs:element name="customdeleteallcallable" type="xs:anyType" />
        <xs:element name="deleteallcheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="loadername" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="index" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="column" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="columnordermap" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="join" >
      <xs:sequence>
        <xs:element name="pk_" type="alias" nillable="true" minOccurs="0" />
        <xs:element name="properties" type="xs:anyType" />
        <xs:element name="declaredproperties" type="xs:anyType" />
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="key" type="keyvalue" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="persistentclass" nillable="true" minOccurs="0" />
        <xs:element name="sequentialselect" type="xs:anyType" />
        <xs:element name="inverse" type="xs:anyType" />
        <xs:element name="optional" type="xs:anyType" />
        <xs:element name="//customsqlcustomsqlinsert" type="xs:string" />
        <xs:element name="custominsertcallable" type="xs:anyType" />
        <xs:element name="insertcheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqlupdate" type="xs:string" />
        <xs:element name="customupdatecallable" type="xs:anyType" />
        <xs:element name="updatecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqldelete" type="xs:string" />
        <xs:element name="customdeletecallable" type="xs:anyType" />
        <xs:element name="deletecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unionsubclass" >
      <xs:complexContent>
       <xs:extension base="subclass">
         <xs:sequence>
          <xs:element name="" type="table" nillable="true" minOccurs="0" />
          <xs:element name="key" type="keyvalue" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="denormalizedtable" >
      <xs:complexContent>
       <xs:extension base="table">
         <xs:sequence>
          <xs:element name="included" type="table" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uniquekey" >
      <xs:complexContent>
       <xs:extension base="constraint">
         <xs:sequence>
          <xs:element name="columnordermap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singletablesubclass" >
      <xs:complexContent>
       <xs:extension base="subclass">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constraint" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="columns" type="column" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoone" >
      <xs:complexContent>
       <xs:extension base="toone">
         <xs:sequence>
          <xs:element name="ignorenotfound" type="xs:anyType" />
          <xs:element name="islogicalonetoone" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchprofile" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="source" type="metadatasource" nillable="true" minOccurs="0" />
        <xs:element name="fetches" type="fetch" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentclassvisitor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependantvalue" >
      <xs:complexContent>
       <xs:extension base="simplevalue">
         <xs:sequence>
          <xs:element name="wrappedvalue" type="keyvalue" nillable="true" minOccurs="0" />
          <xs:element name="nullable" type="xs:anyType" />
          <xs:element name="updateable" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rootclass" >
      <xs:complexContent>
       <xs:extension base="persistentclass">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="default_identifier_column_name" type="xs:string" />
          <xs:element name="default_discriminator_column_name" type="xs:string" />
          <xs:element name="identifier" type="property" nillable="true" minOccurs="0" />
          <xs:element name="identifier" type="keyvalue" nillable="true" minOccurs="0" />
          <xs:element name="version" type="property" nillable="true" minOccurs="0" />
          <xs:element name="polymorphic" type="xs:anyType" />
          <xs:element name="cacheconcurrencystrategy" type="xs:string" />
          <xs:element name="cacheregionname" type="xs:string" />
          <xs:element name="naturalidcacheregionname" type="xs:string" />
          <xs:element name="lazypropertiescacheable" type="xs:anyType" />
          <xs:element name="discriminator" type="value" nillable="true" minOccurs="0" />
          <xs:element name="mutable" type="xs:anyType" />
          <xs:element name="embeddedidentifier" type="xs:anyType" />
          <xs:element name="explicitpolymorphism" type="xs:anyType" />
          <xs:element name="entitypersister" type="xs:anyType" />
          <xs:element name="forcediscriminator" type="xs:anyType" />
          <xs:element name="where" type="xs:string" />
          <xs:element name="" type="table" nillable="true" minOccurs="0" />
          <xs:element name="discriminatorinsertable" type="xs:anyType" />
          <xs:element name="nextsubclassid" type="xs:long" />
          <xs:element name="declaredidentifier" type="property" nillable="true" minOccurs="0" />
          <xs:element name="declaredversion" type="property" nillable="true" minOccurs="0" />
          <xs:element name="cachingexplicitlyrequested" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="column" >
      <xs:sequence>
        <xs:element name="default_length" type="xs:long" />
        <xs:element name="default_precision" type="xs:long" />
        <xs:element name="default_scale" type="xs:long" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="precision" type="xs:long" />
        <xs:element name="scale" type="xs:long" />
        <xs:element name="GeneratedName" type="value" nillable="true" minOccurs="0" />
        <xs:element name="typeindex" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nullable" type="xs:anyType" />
        <xs:element name="unique" type="xs:anyType" />
        <xs:element name="sqltype" type="xs:string" />
        <xs:element name="sqltypecode" type="xs:anyType" />
        <xs:element name="quoted" type="xs:anyType" />
        <xs:element name="uniqueeger" type="xs:long" />
        <xs:element name="checkconstraint" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="defaultvalue" type="xs:string" />
        <xs:element name="customwrite" type="xs:string" />
        <xs:element name="customread" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertygeneration" >
      <xs:sequence>
        <xs:element name="/***valuesforthispropertyarenevergeneratedbythedatabase.*/never" type="propertygeneration" nillable="true" minOccurs="0" />
        <xs:element name="/***valuesforthispropertyaregeneratedbythedatabaseoninsert.*/insert" type="propertygeneration" nillable="true" minOccurs="0" />
        <xs:element name="/***valuesforthispropertyaregeneratedbythedatabaseonbothinsertandupdate.*/always" type="propertygeneration" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auxiliarydatabaseobject" >
      <xs:complexContent>
       <xs:extension base="relationalmodel,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metaattribute" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="values" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedef" >
      <xs:sequence>
        <xs:element name="typeclass" type="xs:string" />
        <xs:element name="parameters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifierbag" >
      <xs:complexContent>
       <xs:extension base="identifiercollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="property" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="value" nillable="true" minOccurs="0" />
        <xs:element name="cascade" type="xs:string" />
        <xs:element name="updateable" type="xs:anyType" />
        <xs:element name="insertable" type="xs:anyType" />
        <xs:element name="selectable" type="xs:anyType" />
        <xs:element name="optimisticlocked" type="xs:anyType" />
        <xs:element name="strategy" type="valuegeneration" nillable="true" minOccurs="0" />
        <xs:element name="propertyaccessorname" type="xs:string" />
        <xs:element name="lazy" type="xs:anyType" />
        <xs:element name="optional" type="xs:anyType" />
        <xs:element name="metaattributes" type="xs:anyType" />
        <xs:element name="GeneratedName" type="persistentclass" nillable="true" minOccurs="0" />
        <xs:element name="naturalidentifier" type="xs:anyType" />
        <xs:element name="lob" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toone" >
      <xs:complexContent>
       <xs:extension base="simplevalue">
         <xs:sequence>
          <xs:element name="" type="fetchmode" nillable="true" minOccurs="0" />
          <xs:element name="referencedpropertyname" type="xs:string" />
          <xs:element name="referencedentityname" type="xs:string" />
          <xs:element name="embedded" type="xs:anyType" />
          <xs:element name="lazy" type="xs:anyType" />
          <xs:element name="unwrapproxy" type="xs:anyType" />
          <xs:element name="referencetoprimarykey" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="formula" >
      <xs:sequence>
        <xs:element name="formulauniqueeger" type="xs:long" />
        <xs:element name="formula" type="xs:string" />
        <xs:element name="uniqueeger" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metaattributable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclass" >
      <xs:complexContent>
       <xs:extension base="persistentclass">
         <xs:sequence>
          <xs:element name="superclass" type="persistentclass" nillable="true" minOccurs="0" />
          <xs:element name="persister" type="xs:anyType" />
          <xs:element name="subclassid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="keyvalue" >
      <xs:complexContent>
       <xs:extension base="value">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuevisitor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="value" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkey" >
      <xs:complexContent>
       <xs:extension base="constraint">
         <xs:sequence>
          <xs:element name="referenced" type="table" nillable="true" minOccurs="0" />
          <xs:element name="referencedentityname" type="xs:string" />
          <xs:element name="cascadedeleteenabled" type="xs:anyType" />
          <xs:element name="referencedcolumns" type="column" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="creationenabled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idgenerator" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="identifiergeneratorstrategy" type="xs:string" />
        <xs:element name="params" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="map" >
      <xs:complexContent>
       <xs:extension base="indexedcollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclass" >
      <xs:complexContent>
       <xs:extension base="subclass">
         <xs:sequence>
          <xs:element name="" type="table" nillable="true" minOccurs="0" />
          <xs:element name="key" type="keyvalue" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiercollection" >
      <xs:complexContent>
       <xs:extension base="collection">
         <xs:sequence>
          <xs:element name="default_identifier_column_name" type="xs:string" />
          <xs:element name="identifier" type="keyvalue" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="table" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="catalog" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="schema" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="name" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="/***containsallcolumns,includingtheprimarykey*/columns" type="map" nillable="true" minOccurs="0" />
        <xs:element name="idvalue" type="keyvalue" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="primarykey" nillable="true" minOccurs="0" />
        <xs:element name="foreignkeys" type="xs:anyType" />
        <xs:element name="indexes" type="xs:anyType" />
        <xs:element name="uniquekeys" type="xs:anyType" />
        <xs:element name="uniqueeger" type="xs:long" />
        <xs:element name="checkconstraints" type="xs:anyType" />
        <xs:element name="rowid" type="xs:string" />
        <xs:element name="subselect" type="xs:string" />
        <xs:element name="isabstract" type="xs:anyType" />
        <xs:element name="hasdenormalizedtables" type="xs:anyType" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="initcommands" type="initcommand" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="sizeofuniquekeymaponlastcleanse" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplevalue" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="default_id_gen_strategy" type="xs:string" />
        <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="selectable" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="typename" type="xs:string" />
        <xs:element name="typeparameters" type="xs:anyType" />
        <xs:element name="isnationalized" type="xs:anyType" />
        <xs:element name="identifiergenerator" type="xs:anyType" />
        <xs:element name="identifiergeneratorstrategy" type="xs:string" />
        <xs:element name="nullvalue" type="xs:string" />
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="foreignkeyname" type="xs:string" />
        <xs:element name="alternateuniquekey" type="xs:anyType" />
        <xs:element name="cascadedeleteenabled" type="xs:anyType" />
        <xs:element name="GeneratedName" type="attributeconverterdefinition" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="identifiergenerator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tableowner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectionacquisitionmode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customentitydirtinessstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentobjectexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappingexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockoptions" >
      <xs:sequence>
        <xs:element name="/***representslockmode.none(timeout+scopedonotapply).*/none" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="/***representslockmode.read(timeout+scopedonotapply).*/read" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="/***representslockmode.upgrade(willwaitforeverforlockandscopeoffalsemeaningonlyentityislocked).*/upgrade" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="/***indicatesthatthedatabaseshouldnotwaitatalltoacquirethepessimisticlock.*@see#gettimeout*/no_wait" type="xs:long" />
        <xs:element name="/***indicatesthatthereisnotimeoutfortheacquisition.*@see#gettimeout*/wait_forever" type="xs:long" />
        <xs:element name="/***indicatesthatrowsthatarealreadylockedshouldbeskipped.*@see#gettimeout()*/skip_locked" type="xs:long" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="timeout" type="xs:long" />
        <xs:element name="aliasspecificlockmodes" type="xs:anyType" />
        <xs:element name="scope" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unknownsqlresultsetmappingexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
          <xs:element name="unknownsqlresultsetmappingname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterregistration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="positionalparameterregistration" >
      <xs:complexContent>
       <xs:extension base="abstractparameterregistrationimpl<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedparameterregistration" >
      <xs:complexContent>
       <xs:extension base="abstractparameterregistrationimpl<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="procedureoutputsimpl" >
      <xs:complexContent>
       <xs:extension base="outputsimpl">
         <xs:sequence>
          <xs:element name="procedurecall" type="procedurecallimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="refcursorparameters" type="parameterregistrationimplementor" nillable="true" minOccurs="0" />
          <xs:element name="refcursorparamindex" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterbindimpl" >
      <xs:sequence>
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="explicit" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="procedurecallmementoimpl" >
      <xs:sequence>
        <xs:element name="procedurename" type="xs:string" />
        <xs:element name="queryreturns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="parameterstrategy" nillable="true" minOccurs="0" />
        <xs:element name="parameterdeclarations" type="xs:anyType" />
        <xs:element name="synchronizedqueryspaces" type="xs:anyType" />
        <xs:element name="hintsmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postgrescallablestatementsupport" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="postgrescallablestatementsupport" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardcallablestatementsupport" >
      <xs:sequence>
        <xs:element name="/***singletonaccess-withoutref_cursorsupport*/no_ref_cursor_instance" type="standardcallablestatementsupport" nillable="true" minOccurs="0" />
        <xs:element name="/***singletonaccess-withrefcursorsupport*/ref_cursor_instance" type="standardcallablestatementsupport" nillable="true" minOccurs="0" />
        <xs:element name="supportsrefcursors" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="util" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="procedurecallimpl" >
      <xs:complexContent>
       <xs:extension base="abstractbasicquerycontractimpl">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="no_returns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" />
          <xs:element name="procedurename" type="xs:string" />
          <xs:element name="queryreturns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" />
          <xs:element name="" type="parameterstrategy" nillable="true" minOccurs="0" />
          <xs:element name="registeredparameters" type="xs:anyType" />
          <xs:element name="synchronizedqueryspaces" type="xs:anyType" />
          <xs:element name="outputs" type="procedureoutputsimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractparameterregistrationimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="procedurecall" type="procedurecallimpl" nillable="true" minOccurs="0" />
        <xs:element name="position" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="bind" type="parameterbindimpl" nillable="true" minOccurs="0" />
        <xs:element name="startindex" type="xs:long" />
        <xs:element name="hibernate" type="type" nillable="true" minOccurs="0" />
        <xs:element name="sqltypes" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="procedureoutputs" >
      <xs:complexContent>
       <xs:extension base="outputs">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterbind" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterstrategyexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterregistrationimplementor" >
      <xs:complexContent>
       <xs:extension base="parameterregistration<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="callablestatementsupport" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedparametersnotsupportedexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="procedurecall" >
      <xs:complexContent>
       <xs:extension base="basicquerycontract,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nosuchparameterexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parametermisuseexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="procedurecallmemento" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchmode" >
      <xs:sequence>
        <xs:element name="outer-join" type="fetchmode" nillable="true" minOccurs="0" />
        <xs:element name="outer-join" type="fetchmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unsupportedlockattemptexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcconnectionexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsqlexceptionconversiondelegate" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="conversioncontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="violatedconstraintnameextracter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conversioncontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlexceptionconverter" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlexceptionconversiondelegate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlexceptionconverterfactory" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="templatedviolatedconstraintnameextracter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockacquisitionexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlexceptiontypedelegate" >
      <xs:complexContent>
       <xs:extension base="abstractsqlexceptionconversiondelegate">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlstateconversiondelegate" >
      <xs:complexContent>
       <xs:extension base="abstractsqlexceptionconversiondelegate">
         <xs:sequence>
          <xs:element name="sql_grammar_categories" type="xs:anyType" />
          <xs:element name="data_categories" type="set" nillable="true" minOccurs="0" />
          <xs:element name="integrity_violation_categories" type="set" nillable="true" minOccurs="0" />
          <xs:element name="connection_categories" type="set" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlstateconverter" >
      <xs:complexContent>
       <xs:extension base="standardsqlexceptionconverter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardsqlexceptionconverter" >
      <xs:sequence>
        <xs:element name="delegates" type="sqlexceptionconversiondelegate" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachesqlexceptionconversiondelegate" >
      <xs:complexContent>
       <xs:extension base="abstractsqlexceptionconversiondelegate">
         <xs:sequence>
          <xs:element name="data_categories" type="xs:anyType" />
          <xs:element name="integrity_violation_categories" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericjdbcexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlgrammarexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dataexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="locktimeoutexception" >
      <xs:complexContent>
       <xs:extension base="lockacquisitionexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constraintviolationexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
          <xs:element name="constraintname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyinitializationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushmode" >
      <xs:sequence>
        <xs:element name="level" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentidentifiergenerator" >
      <xs:complexContent>
       <xs:extension base="identifiergenerator,">
         <xs:sequence>
          <xs:element name="/***theconfigurationparameterholdingtheschemaname*/schema" type="xs:string" />
          <xs:element name="/***theconfigurationparameterholdingthetablenameforthe*generatedid*/table" type="xs:string" />
          <xs:element name="/***theconfigurationparameterholdingthetablenamesforall*tablesforwhichtheidmustbeunique*/tables" type="xs:string" />
          <xs:element name="/***theconfigurationparameterholdingtheprimarykeycolumn*nameofthegeneratedid*/pk" type="xs:string" />
          <xs:element name="/***theconfigurationparameterholdingthecatalogname*/catalog" type="xs:string" />
          <xs:element name="/***thekeyunderwhcihtofindthe{@linkorg.hibernate.boot.model.naming.objectnamenormalizer}intheconfigparammap.*/identifier_normalizer" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configurable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identitygenerator" >
      <xs:complexContent>
       <xs:extension base="abstractpostinsertgenerator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiplehilopertablegenerator" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="id_table" type="xs:string" />
        <xs:element name="pk_column_name" type="xs:string" />
        <xs:element name="pk_value_name" type="xs:string" />
        <xs:element name="value_column_name" type="xs:string" />
        <xs:element name="pk_length_name" type="xs:string" />
        <xs:element name="default_pk_length" type="xs:long" />
        <xs:element name="default_table" type="xs:string" />
        <xs:element name="default_pk_column" type="xs:string" />
        <xs:element name="default_value_column" type="xs:string" />
        <xs:element name="qualifiedtablename" type="qualifiedname" nillable="true" minOccurs="0" />
        <xs:element name="tablename" type="xs:string" />
        <xs:element name="segmentcolumnname" type="xs:string" />
        <xs:element name="segmentname" type="xs:string" />
        <xs:element name="valuecolumnname" type="xs:string" />
        <xs:element name="query" type="xs:string" />
        <xs:element name="insert" type="xs:string" />
        <xs:element name="update" type="xs:string" />
        <xs:element name="//hiloparamsmax_lo" type="xs:string" />
        <xs:element name="maxlo" type="xs:long" />
        <xs:element name="hilooptimizer" type="legacyhiloalgorithmoptimizer" nillable="true" minOccurs="0" />
        <xs:element name="return" type="xs:anyType" />
        <xs:element name="keysize" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uuidgenerator" >
      <xs:sequence>
        <xs:element name="uuid_gen_strategy" type="xs:string" />
        <xs:element name="uuid_gen_strategy_class" type="xs:string" />
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="strategy" type="uuidgenerationstrategy" nillable="true" minOccurs="0" />
        <xs:element name="valuetransformer" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceidentitygenerator" >
      <xs:complexContent>
       <xs:extension base="abstractreturningdelegate">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositenestedgeneratedvaluegenerator" >
      <xs:complexContent>
       <xs:extension base="exportableproducer">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="generationplans" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiergenerationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pooledoptimizer" >
      <xs:complexContent>
       <xs:extension base="abstractoptimizer">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="initialvalue" type="xs:long" />
          <xs:element name="notenantstate" type="xs:anyType" />
          <xs:element name="tenantspecificstate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencestructure" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="logicalqualifiedsequencename" type="qualifiedname" nillable="true" minOccurs="0" />
        <xs:element name="initialvalue" type="xs:long" />
        <xs:element name="incrementsize" type="xs:long" />
        <xs:element name="numbertype" type="xs:anyType" />
        <xs:element name="sequencename" type="xs:string" />
        <xs:element name="sql" type="xs:string" />
        <xs:element name="applyincrementsizetosourcevalues" type="xs:anyType" />
        <xs:element name="accesscounter" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractoptimizer" >
      <xs:sequence>
        <xs:element name="return" type="xs:anyType" />
        <xs:element name="incrementsize" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hilooptimizer" >
      <xs:complexContent>
       <xs:extension base="abstractoptimizer">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="notenantstate" type="xs:anyType" />
          <xs:element name="tenantspecificstate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablestructure" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="logicalqualifiedtablename" type="qualifiedname" nillable="true" minOccurs="0" />
        <xs:element name="logicalvaluecolumnname" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="initialvalue" type="xs:long" />
        <xs:element name="incrementsize" type="xs:long" />
        <xs:element name="numbertype" type="xs:anyType" />
        <xs:element name="tablenametext" type="xs:string" />
        <xs:element name="valuecolumnnametext" type="xs:string" />
        <xs:element name="selectquery" type="xs:string" />
        <xs:element name="updatequery" type="xs:string" />
        <xs:element name="applyincrementsizetosourcevalues" type="xs:anyType" />
        <xs:element name="accesscounter" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pooledlothreadlocaloptimizer" >
      <xs:complexContent>
       <xs:extension base="abstractoptimizer">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="tenantspecificstate" type="xs:anyType" />
          <xs:element name="localassignedids" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacyhiloalgorithmoptimizer" >
      <xs:complexContent>
       <xs:extension base="abstractoptimizer">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="initialmaxlo" type="xs:long" />
          <xs:element name="notenantstate" type="xs:anyType" />
          <xs:element name="tenantspecificstate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablegenerator" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***bydefault(intheabsenceofa{@link#segment_value_param}setting)weuseasinglerowforall*generators.thissettingcanbeusedtochangethattoinsteaddefaulttousingarowforeachentityname.*/config_prefer_segment_per_entity" type="xs:string" />
        <xs:element name="/***configuresthenameofthetabletouse.thedefaultvalueis{@link#def_table}*/table_param" type="xs:string" />
        <xs:element name="/***thedefault{@link#table_param}value*/def_table" type="xs:string" />
        <xs:element name="/***thenameofcolumnwhichholdsthesequencevalue.thedefaultvalueis{@link#def_value_column}*/value_column_param" type="xs:string" />
        <xs:element name="/***thedefault{@link#value_column_param}value*/def_value_column" type="xs:string" />
        <xs:element name="/***thenameofthecolumnwhichholdsthesegmentkey.thesegmentdefinesthedifferentbuckets(segments)*ofvaluescurrentlytrackedinthetable.thedefaultvalueis{@link#def_segment_column}*/segment_column_param" type="xs:string" />
        <xs:element name="/***thedefault{@link#segment_column_param}value*/def_segment_column" type="xs:string" />
        <xs:element name="/***thevalueindicatingwhichsegmentisusedbythisgenerator,asindicatedbytheactualvaluestoredinthe*columnindicatedby{@link#segment_column_param}.thedefaultvalueforsettingis{@link#def_segment_value},*although{@link#config_prefer_segment_per_entity}effectsthedefaultaswell.*/segment_value_param" type="xs:string" />
        <xs:element name="/***thedefault{@link#segment_value_param}value,unless{@link#config_prefer_segment_per_entity}isspecified*/def_segment_value" type="xs:string" />
        <xs:element name="/***indicatesthelengthofthecolumndefinedby{@link#segment_column_param}.usedinschemaexport.the*defaultvalueis{@link#def_segment_length}*/segment_length_param" type="xs:string" />
        <xs:element name="/***thedefault{@link#segment_length_param}value*/def_segment_length" type="xs:long" />
        <xs:element name="/***indicatestheinitialvaluetouse.thedefaultvalueis{@link#default_initial_value}*/initial_param" type="xs:string" />
        <xs:element name="/***thedefault{@link#initial_param}value*/default_initial_value" type="xs:long" />
        <xs:element name="/***indicatestheincrementsizetouse.thedefaultvalueis{@link#default_increment_size}*/increment_param" type="xs:string" />
        <xs:element name="/***thedefault{@link#increment_param}value*/default_increment_size" type="xs:long" />
        <xs:element name="/***indicatestheoptimizertouse,eithernaminga{@linkoptimizer}implementationclassorbynaming*a{@linkstandardoptimizerdescriptor}byname*/opt_param" type="xs:string" />
        <xs:element name="identifier" type="type" nillable="true" minOccurs="0" />
        <xs:element name="qualifiedtablename" type="qualifiedname" nillable="true" minOccurs="0" />
        <xs:element name="renderedtablename" type="xs:string" />
        <xs:element name="segmentcolumnname" type="xs:string" />
        <xs:element name="segmentvalue" type="xs:string" />
        <xs:element name="segmentvaluelength" type="xs:long" />
        <xs:element name="valuecolumnname" type="xs:string" />
        <xs:element name="initialvalue" type="xs:long" />
        <xs:element name="incrementsize" type="xs:long" />
        <xs:element name="selectquery" type="xs:string" />
        <xs:element name="insertquery" type="xs:string" />
        <xs:element name="updatequery" type="xs:string" />
        <xs:element name="GeneratedName" type="optimizer" nillable="true" minOccurs="0" />
        <xs:element name="accesscount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesscallback" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="initialvalueawareoptimizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardoptimizerdescriptor" >
      <xs:complexContent>
       <xs:extension base="optimizer>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="externalname" type="xs:string" />
          <xs:element name="optimizerclass" type="xs:anyType" />
          <xs:element name="ispooled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="databasestructure" >
      <xs:complexContent>
       <xs:extension base="exportableproducer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pooledlooptimizer" >
      <xs:complexContent>
       <xs:extension base="abstractoptimizer">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="notenantstate" type="xs:anyType" />
          <xs:element name="tenantspecificstate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimizerfactory" >
      <xs:complexContent>
       <xs:extension base="optimizer>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="ctor_sig" type="xs:anyType" />
          <xs:element name="/***deprecated!**use{@linkstandardoptimizerdescriptor#getexternalname()}via{@linkstandardoptimizerdescriptor#none}*/none" type="xs:string" />
          <xs:element name="/***deprecated!**use{@linkstandardoptimizerdescriptor#getexternalname()}via{@linkstandardoptimizerdescriptor#hilo}*/hilo" type="xs:string" />
          <xs:element name="/***deprecated!**use{@linkstandardoptimizerdescriptor#getexternalname()}via{@linkstandardoptimizerdescriptor#legacy_hilo}*/legacy_hilo" type="xs:string" />
          <xs:element name="/***deprecated!**use{@linkstandardoptimizerdescriptor#getexternalname()}via{@linkstandardoptimizerdescriptor#pooled}*/pool" type="xs:string" />
          <xs:element name="/***deprecated!**use{@linkstandardoptimizerdescriptor#getexternalname()}via{@linkstandardoptimizerdescriptor#pooled_lo}*/pool_lo" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="noopoptimizer" >
      <xs:complexContent>
       <xs:extension base="abstractoptimizer">
         <xs:sequence>
          <xs:element name="lastsourcevalue" type="integraldatatypeholder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencehilogenerator" >
      <xs:complexContent>
       <xs:extension base="sequencegenerator">
         <xs:sequence>
          <xs:element name="max_lo" type="xs:string" />
          <xs:element name="maxlo" type="xs:long" />
          <xs:element name="hilooptimizer" type="legacyhiloalgorithmoptimizer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiergeneratorhelper" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***markerobjectreturnedfrom{@linkidentifiergenerator#generate}toindicatethatweshouldshort-circuitany*continuedgeneratedidchecking.currentlythisisonlyusedinthecaseofthe*{@linkorg.hibernate.id.foreigngeneratorforeign}generatorasawaytosignalthatweshouldusetheassociated*entity'sidvalue.*/short_circuit_indicator" type="xs:anyType" />
        <xs:element name="/***markerobjectreturnedfrom{@linkidentifiergenerator#generate}toindicatethattheentity'sidentifierwill*begeneratedaspartofthedatbaseinsertion.*/post_insert_indicator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectgenerator" >
      <xs:complexContent>
       <xs:extension base="abstractpostinsertgenerator">
         <xs:sequence>
          <xs:element name="uniquekeypropertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidhexgenerator" >
      <xs:complexContent>
       <xs:extension base="abstractuuidgenerator">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="warned" type="xs:anyType" />
          <xs:element name="sep" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpostinsertgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetidentifierconsumer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exportablecolumn" >
      <xs:complexContent>
       <xs:extension base="column">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreigngenerator" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractuuidgenerator" >
      <xs:sequence>
        <xs:element name="ip" type="xs:long" />
        <xs:element name="counter" type="xs:long" />
        <xs:element name="jvm" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assigned" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiergeneratoraggregator" >
      <xs:complexContent>
       <xs:extension base="exportableproducer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidgenerationstrategy" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="incrementgenerator" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="return" type="xs:anyType" />
        <xs:element name="sql" type="xs:string" />
        <xs:element name="previousvalueholder" type="integraldatatypeholder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityidentifiernature" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiergenerator" >
      <xs:sequence>
        <xs:element name="/***theconfigurationparameterholdingtheentityname*/entity_name" type="xs:string" />
        <xs:element name="/***theconfigurationparameterholdingthejpaentityname*/jpa_entity_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customversiononestrategy" >
      <xs:sequence>
        <xs:element name="mostsignificantbits" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardrandomstrategy" >
      <xs:sequence>
        <xs:element name="instance" type="standardrandomstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="helper" >
      <xs:sequence>
        <xs:element name="address_s" type="xs:anyType" />
        <xs:element name="address_" type="xs:long" />
        <xs:element name="address_hex_" type="xs:string" />
        <xs:element name="jvm_identifier_s" type="xs:anyType" />
        <xs:element name="jvm_identifier_" type="xs:long" />
        <xs:element name="jvm_identifier_hex_" type="xs:string" />
        <xs:element name="//counter~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~counter" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="guidgenerator" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="warned" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postinsertidentifiergenerator" >
      <xs:complexContent>
       <xs:extension base="identifiergenerator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postinsertidentitypersister" >
      <xs:complexContent>
       <xs:extension base="entitypersister">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integraldatatypeholder" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutableidentifiergeneratorfactory" >
      <xs:complexContent>
       <xs:extension base="identifiergeneratorfactory,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultidentifiergeneratorfactory" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="generatorstrategytoclassnamemap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutableidentifiergeneratorfactoryinitiator" >
      <xs:sequence>
        <xs:element name="instance" type="mutableidentifiergeneratorfactoryinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiergeneratorfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencegenerator" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="/***thesequenceparameter*/sequence" type="xs:string" />
        <xs:element name=".**nolongersupported.tospecifyinitial-valueorincrementusethe*org.hibernate.id.enhanced.sequencestylegeneratorgeneratorinstead.*/parameters" type="xs:string" />
        <xs:element name="logicalqualifiedsequencename" type="qualifiedname" nillable="true" minOccurs="0" />
        <xs:element name="sequencename" type="xs:string" />
        <xs:element name="identifier" type="type" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bulkinsertioncapableidentifiergenerator" >
      <xs:complexContent>
       <xs:extension base="identifiergenerator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertselectidentityinsert" >
      <xs:complexContent>
       <xs:extension base="identifiergeneratinginsert">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractreturningdelegate" >
      <xs:sequence>
        <xs:element name="persister" type="postinsertidentitypersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiergeneratinginsert" >
      <xs:complexContent>
       <xs:extension base="insert">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractselectingdelegate" >
      <xs:sequence>
        <xs:element name="persister" type="postinsertidentitypersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="insertgeneratedidentifierdelegate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionsecondpass" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="localinheritedmetas" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondpass" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexcolumn" >
      <xs:complexContent>
       <xs:extension base="ejb3column">
         <xs:sequence>
          <xs:element name="base" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3discriminatorcolumn" >
      <xs:complexContent>
       <xs:extension base="ejb3column">
         <xs:sequence>
          <xs:element name="default_discriminator_column_name" type="xs:string" />
          <xs:element name="default_discriminator_type" type="xs:string" />
          <xs:element name="default_discriminator_length" type="xs:long" />
          <xs:element name="discriminatortypename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="improvednamingstrategy" >
      <xs:sequence>
        <xs:element name="/***aconvenientsingletoninstance*/instance" type="namingstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="copyidentifiercomponentsecondpass" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="referencedentityname" type="xs:string" />
        <xs:element name="GeneratedName" type="component" nillable="true" minOccurs="0" />
        <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="joincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validationmode" >
      <xs:sequence>
        <xs:element name="externalform" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activationcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typesafeactivator" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="factory_property" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integrationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanvalidationeventlistener" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="xs:anyType" />
        <xs:element name="associationsperentitypersister" type="xs:anyType" />
        <xs:element name="GeneratedName" type="groupsperoperation" nillable="true" minOccurs="0" />
        <xs:element name="initialized" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatetraversableresolver" >
      <xs:sequence>
        <xs:element name="associations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="duplicationstrategyimpl" >
      <xs:sequence>
        <xs:element name="instance" type="duplicationstrategyimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanvalidationintegrator" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="apply_constraints" type="xs:string" />
        <xs:element name="bv_check_class" type="xs:string" />
        <xs:element name="mode_property" type="xs:string" />
        <xs:element name="activator_class_name" type="xs:string" />
        <xs:element name="validate_supplied_factory_method_name" type="xs:string" />
        <xs:element name="activate_method_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupsperoperation" >
      <xs:sequence>
        <xs:element name="jpa_group_prefix" type="xs:string" />
        <xs:element name="hibernate_group_prefix" type="xs:string" />
        <xs:element name="default_groups" type="xs:anyType" />
        <xs:element name="empty_groups" type="xs:anyType" />
        <xs:element name="groupsperoperation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="verifyfetchprofilereferencesecondpass" >
      <xs:sequence>
        <xs:element name="fetchprofilename" type="xs:string" />
        <xs:element name="fetch" type="xs:anyType" />
        <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentpropertyholder" >
      <xs:complexContent>
       <xs:extension base="abstractpropertyholder">
         <xs:sequence>
          <xs:element name="//todointroduceaoverridetable()methodforcolumnsheldbysectableratherthanthehack//joinsperrealtablenameinclasspropertyholder" type="component" nillable="true" minOccurs="0" />
          <xs:element name="isorwithinembeddedid" type="xs:anyType" />
          <xs:element name="virtual" type="xs:anyType" />
          <xs:element name="embeddedattributename" type="xs:string" />
          <xs:element name="attributeconversioninfomap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="environment" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="bytecode_provider_instance" type="bytecodeprovider" nillable="true" minOccurs="0" />
        <xs:element name="enable_binary_streams" type="xs:anyType" />
        <xs:element name="enable_reflection_optimizer" type="xs:anyType" />
        <xs:element name="jvm_has_timestamp_bug" type="xs:anyType" />
        <xs:element name="global_" type="xs:anyType" />
        <xs:element name="obsolete_properties" type="map" nillable="true" minOccurs="0" />
        <xs:element name="renamed_properties" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributeconverterdefinition" >
      <xs:complexContent>
       <xs:extension base="attributeconverter>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="autoapply" type="xs:anyType" />
          <xs:element name="entityattributetype" type="xs:anyType" />
          <xs:element name="databasecolumntype" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accesstype" >
      <xs:sequence>
        <xs:element name="accesstype" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toonebinder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritancestate" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
        <xs:element name="/***hassibling(eithermappedsuperclassentity)*/hassiblings" type="xs:anyType" />
        <xs:element name="/***amotherentityisavailable*/hasparents" type="xs:anyType" />
        <xs:element name="type" type="inheritancetype" nillable="true" minOccurs="0" />
        <xs:element name="isembeddablesuperclass" type="xs:anyType" />
        <xs:element name="inheritancestateperclass" type="xs:anyType" />
        <xs:element name="classestoprocessformappedsuperclass" type="xs:anyType" />
        <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="hasidclassorembeddedid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultnamingstrategy" >
      <xs:sequence>
        <xs:element name="/***thesingletoninstance*/instance" type="namingstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="availablesettings" >
      <xs:complexContent>
       <xs:extension base="connectionprovider>}">
         <xs:sequence>
          <xs:element name="//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//bootstrapserviceregistrylevelsettings//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/***usedtodefinea{@linkjava.util.collection}ofthe{@linkclassloader}instanceshibernateshouldusefor*class-loadingandresource-lookups.**@since5.0*/classloaders" type="xs:string" />
          <xs:element name="/***namesthe{@linkclassloader}usedtoloaduserapplicationclasses.*@since4.0**use{@link#classloaders}instead*/app_classloader" type="xs:string" />
          <xs:element name="/***namesthe{@linkclassloader}hibernateshouldusetoperformresourceloading.*@since4.0*use{@link#classloaders}instead*/resources_classloader" type="xs:string" />
          <xs:element name="/***namesthe{@linkclassloader}responsibleforloadinghibernateclasses.bydefaultthisis*the{@linkclassloader}thatloadedthisclass.*@since4.0*use{@link#classloaders}instead*/hibernate_classloader" type="xs:string" />
          <xs:element name="/***namesthe{@linkclassloader}usedwhenhibernateisunabletolocatesclassesonthe*{@link#app_classloader}or{@link#hibernate_classloader}.*@since4.0*use{@link#classloaders}instead*/environment_classloader" type="xs:string" />
          <xs:element name="*theterm{@code"class"}appearsinthesettingnameduetolegacyreasonshoweveritcanacceptinstances.*/connection_provider" type="xs:string" />
          <xs:element name="/***namesthe{@literaljdbc}driverclass*/driver" type="xs:string" />
          <xs:element name="/***namesthe{@literaljdbc}connectionurl.*/url" type="xs:string" />
          <xs:element name="*/user" type="xs:string" />
          <xs:element name="/***namestheconnectionpassword.seeusagediscussionon{@link#user}*/pass" type="xs:string" />
          <xs:element name="/***namesthe{@literaljdbc}transactionisolationlevel*/isolation" type="xs:string" />
          <xs:element name="/***namesthe{@literaljdbc}autocommitmode*/autocommit" type="xs:string" />
          <xs:element name="/***maximumnumberofinactiveconnectionsforthebuilt-inhibernateconnectionpool.*/pool_size" type="xs:string" />
          <xs:element name="*forjndinames,sesalso{@link#jndi_class},{@link#jndi_url},{@link#jndi_prefix},etc.*/datasource" type="xs:string" />
          <xs:element name="/***namesaprefixusedtodefinearbitraryjdbcconnectionproperties.thesepropertiesarepassedalongto*the{@literaljdbc}providerwhencreatingaconnection.*/connection_prefix" type="xs:string" />
          <xs:element name="/***namesthe{@literaljndi}{@linkjavax.naming.initialcontext}class.**@seejavax.naming.context#initial_context_factory*/jndi_class" type="xs:string" />
          <xs:element name="/***namesthe{@literaljndi}provider/connectionurl**@seejavax.naming.context#provider_url*/jndi_url" type="xs:string" />
          <xs:element name="/***namesaprefixusedtodefinearbitrary{@literaljndi}{@linkjavax.naming.initialcontext}properties.these*propertiesarepassedalongto{@linkjavax.naming.initialcontext#initialcontext(java.util.hashtable)}*/jndi_prefix" type="xs:string" />
          <xs:element name="/***namesthehibernate{@literalsql}{@linkorg.hibernate.dialect.dialect}class*/dialect" type="xs:string" />
          <xs:element name="/***namesanyadditional{@linkorg.hibernate.engine.jdbc.dialect.spi.dialectresolver}implementationsto*registerwiththestandard{@linkorg.hibernate.engine.jdbc.dialect.spi.dialectfactory}.*/dialect_resolvers" type="xs:string" />
          <xs:element name="/***usedtospecifythe{@linkorg.hibernate.tool.schema.spi.schemamanagementtool}touseforperforming*schemamanagement.thedefaultistouse{@linkorg.hibernate.tool.schema.internal.hibernateschemamanagementtool}**@since5.0*/schema_management_tool" type="xs:string" />
          <xs:element name="**@since5.0*/transaction_coordinator_strategy" type="xs:string" />
          <xs:element name="/***namesthe{@linkorg.hibernate.engine.transaction.jta.platform.spi.jtaplatform}implementationtouseforintegrating*with{@literaljta}systems.canreferenceeithera{@linkorg.hibernate.engine.transaction.jta.platform.spi.jtaplatform}*instanceorthenameofthe{@linkorg.hibernate.engine.transaction.jta.platform.spi.jtaplatform}implementationclass**@since4.0*/jta_platform" type="xs:string" />
          <xs:element name="**@since5.0*/prefer_user_transaction" type="xs:string" />
          <xs:element name="/***namesthe{@linkorg.hibernate.engine.transaction.jta.platform.spi.jtaplatformresolver}implementationtouse.*@since4.3*/jta_platform_resolver" type="xs:string" />
          <xs:element name="/***aconfigurationvaluekeyusedtoindicatethatitissafetocache*{@linkjavax.transaction.transactionmanager}references.**@since4.0*/jta_cache_tm" type="xs:string" />
          <xs:element name="/***aconfigurationvaluekeyusedtoindicatethatitissafetocache*{@linkjavax.transaction.usertransaction}references.**@since4.0*/jta_cache_ut" type="xs:string" />
          <xs:element name="//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//metadatabuilderlevelsettings//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/***adefaultdatabasecatalognametouseforunqualifiedtablenames**@seemetadatabuilder#applyimplicitcatalogname*/default_catalog" type="xs:string" />
          <xs:element name="/***adefaultdatabaseschema(owner)nametouseforunqualifiedtablenames**@seemetadatabuilder#applyimplicitschemaname*/default_schema" type="xs:string" />
          <xs:element name="/***settingusedtogivethenameofthedefault{@linkorg.hibernate.annotations.cacheconcurrencystrategy}*tousewheneither{@linkjavax.persistence.cacheable@cacheable}or*{@linkorg.hibernate.annotations.cache@cache}isused.{@linkorg.hibernate.annotations.cache@cache(strategy" type="xs:string" />
          <xs:element name="*defaultis{@codetrue}.existingapplicationsmaywanttodisablethis(setit{@codefalse})for*upgradecompatibility.**@seemetadatabuilder#enablenewidentifiergeneratorsupport*/use_new_id_generator_mappings" type="xs:string" />
          <xs:element name="/***@seeorg.hibernate.boot.metadatabuilder#enableimplicitforcingofdiscriminatorsinselect(boolean)*/force_discriminator_in_selects_by_default" type="xs:string" />
          <xs:element name="*seehibernatejiraissuehhh-6911foradditionalbackgroundinfo.**@seemetadatabuilder#enableimplicitdiscriminatorsforjoinedsubclasssupport*@see#ignore_explicit_discriminator_columns_for_joined_subclass*/implicit_discriminator_columns_for_joined_subclass" type="xs:string" />
          <xs:element name="*seehibernatejiraissuehhh-6911foradditionalbackgroundinfo.**@seemetadatabuilder#enableexplicitdiscriminatorsforjoinedsubclasssupport*@see#implicit_discriminator_columns_for_joined_subclass*/ignore_explicit_discriminator_columns_for_joined_subclass" type="xs:string" />
          <xs:element name="/***enablenationalizedcharactersupportonall/clobbasedattribute(,char,clob,textetc).**defaultis{@codefalse}.**@seemetadatabuilder#enableglobalnationalizedcharacterdatasupport(boolean)*/use_nationalized_character_data" type="xs:string" />
          <xs:element name="/***thedeprecatedname.use{@link#scanner}or{@link#scanner_archive_interpreter}instead.*/scanner_deprecated" type="xs:string" />
          <xs:element name="**@seeorg.hibernate.boot.metadatabuilder#applyscanner*/scanner" type="xs:string" />
          <xs:element name="*seeinformationon{@linkorg.hibernate.boot.archive.scan.spi.scanner}*aboutexpectedconstructorforms.**@see#scanner*@seeorg.hibernate.boot.archive.scan.spi.scanner*@seeorg.hibernate.boot.archive.scan.spi.abstractscannerimpl*@seemetadatabuilder#applyarchivedescriptorfactory*/scanner_archive_interpreter" type="xs:string" />
          <xs:element name="**@seeorg.hibernate.boot.metadatabuilder#applyscanoptions*/scanner_discovery" type="xs:string" />
          <xs:element name="**thedefaultisdefinedbytheimplicitnamingstrategyregisteredunderthe"default"key.ifthathappensto*beempty,thefallbackistouse{@linkorg.hibernate.boot.model.naming.implicitnamingstrategyjpacompliantimpl}.**@seemetadatabuilder#applyimplicitnamingstrategy**@since5.0*/implicit_naming_strategy" type="xs:string" />
          <xs:element name="/***usedtospecifythe{@linkorg.hibernate.boot.model.naming.physicalnamingstrategy}classtouse.**@seemetadatabuilder#applyphysicalnamingstrategy**@since5.0*/physical_naming_strategy" type="xs:string" />
          <xs:element name="*defaultis{@code"hbm,class"}whichindicatestoprocess{@codehbm.xml}filesfollowedby*annotations(combinedwith{@codeorm.xml}mappings).**@seemetadatabuilder#applysourceprocessordering(org.hibernate.cfg.metadatasourcetype...)*/artifact_processing_order" type="xs:string" />
          <xs:element name="/***specifieswhethertoautomaticallyquoteanynamesthataredeemedkeywords.auto-quoting*isenabledbydefault.settofalsetodisable.**@since5.0*/keyword_auto_quoting_enabled" type="xs:string" />
          <xs:element name="//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//sessionfactorybuilderlevelsettings//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/***settingusedtonamethehibernate{@linkorg.hibernate.sessionfactory}.**namingthesessionfactoryallowsforittobeproperlyserializedacrossjvmsas*longasthesamenameisusedoneachjvm.**if{@link#session_factory_name_is_jndi}issetto{@codetrue},thisisalsothe*nameunderwhichthesessionfactoryisboundintojndionstartupandfromwhich*itcanbeobtainedfromjndi.**@see#session_factory_name_is_jndi*@seeorg.hibernate.internal.sessionfactoryregistry*/session_factory_name" type="xs:string" />
          <xs:element name="/***doesthevaluedefinedby{@link#session_factory_name}representajndinamespaceintowhich*the{@linkorg.hibernate.sessionfactory}shouldbeboundandmadeaccessible?**defaultsto{@codetrue}forbackwardscompatibility.**setthisto{@codefalse}ifnamingasessionfactoryisneededforserializationpurposes,but*nowritablejndicontextexistsintheruntimeenvironmentoriftheusersimplydoesnotwant*jnditobeused.**@see#session_factory_name*/session_factory_name_is_jndi" type="xs:string" />
          <xs:element name="/***enableloggingofgeneratedsqltotheconsole*/show_sql" type="xs:string" />
          <xs:element name="/***enableformattingofsqlloggedtotheconsole*/format_sql" type="xs:string" />
          <xs:element name="/***addcommentstothegeneratedsql*/use_sql_comments" type="xs:string" />
          <xs:element name="/***maximumdepthofouterjoinfetching*/max_fetch_depth" type="xs:string" />
          <xs:element name="/***thedefaultbatchsizeforbatchfetching*/default_batch_fetch_size" type="xs:string" />
          <xs:element name="streamstoread/writebinarydatafrom/tojdbc*/use_streams_for_binary" type="xs:string" />
          <xs:element name=",ie.theuserissupplyingjdbcconnections.*/use_scrollable_resultset" type="xs:string" />
          <xs:element name="/***tellsthejdbcdrivertoattempttoretrieverowidwiththejdbc3.0preparedstatement.getgeneratedkeys()*method.ingeneral,performancewillbebetterifthispropertyissettotrueandtheunderlying*jdbcdriversupportsgetgeneratedkeys().*/use_get_generated_keys" type="xs:string" />
          <xs:element name=",jdbcdriverdefaultsettingswillbeused.*/statement_fetch_size" type="xs:string" />
          <xs:element name="/***maximumjdbcbatchsize.anonzerovalueenablesbatchupdates.*/statement_batch_size" type="xs:string" />
          <xs:element name="/***selectacustombatcher.*/batch_strategy" type="xs:string" />
          <xs:element name="/***shouldversioneddatabeincludedinbatching?*/batch_versioned_data" type="xs:string" />
          <xs:element name="/***enableautomaticsessioncloseatendoftransaction*/auto_close_session" type="xs:string" />
          <xs:element name="callback*/flush_before_completion" type="xs:string" />
          <xs:element name="/***specifieshowhibernateshouldreleasejdbcconnections.*/release_connections" type="xs:string" />
          <xs:element name="/***contextscopingimplfor{@linkorg.hibernate.sessionfactory#getcurrentsession()}processing.*/current_session_context_class" type="xs:string" />
          <xs:element name="use_identifier_rollback" type="xs:string" />
          <xs:element name="/***usebytecodelibrariesoptimizedpropertyaccess*/use_reflection_optimizer" type="xs:string" />
          <xs:element name="/***theclassnameofthehqlqueryparserfactory*/query_translator" type="xs:string" />
          <xs:element name="/***acomma-separatedlistoftokensubstitutionstousewhentranslatingahibernate*querytosql*/query_substitutions" type="xs:string" />
          <xs:element name="*mainlyintendedfortestenvironments.*/query_startup_checking" type="xs:string" />
          <xs:element name=".*/hbm2ddl_auto" type="xs:string" />
          <xs:element name="/***the{@linkorg.hibernate.exception.spi.sqlexceptionconverter}touseforconvertingsqlexceptions*tohibernate'sjdbcexceptionhierarchy.thedefaultistousetheconfigured*{@linkorg.hibernate.dialect.dialect}'spreferredsqlexceptionconverter.*/sql_exception_converter" type="xs:string" />
          <xs:element name="/***enablewrappingofjdbcresultsetsinordertospeedupcolumnnamelookupsfor*brokenjdbcdrivers*/wrap_result_sets" type="xs:string" />
          <xs:element name="/***enableorderingofupdatestatementsbyprimarykeyvalue*/order_updates" type="xs:string" />
          <xs:element name="/***enableorderingofinsertstatementsforthepurposeofmoreefficientjdbcbatching.*/order_inserts" type="xs:string" />
          <xs:element name="/***defaultprecedenceofnullvaluesin{@codeorderby}clause.supportedoptions:{@codenone}(default),*{@codefirst},{@codelast}.*/default_null_ordering" type="xs:string" />
          <xs:element name="//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//c3p0connectionpoolingspecificsettings//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/***asettingprefixusedtoindicatesettingsthattargetthehibernate-c3p0integration*/c3p0_config_prefix" type="xs:string" />
          <xs:element name="/***maximumsizeofc3p0connectionpool*/c3p0_max_size" type="xs:string" />
          <xs:element name="/***minimumsizeofc3p0connectionpool*/c3p0_min_size" type="xs:string" />
          <xs:element name="/***maximumidletimeforc3p0connectionpool*/c3p0_timeout" type="xs:string" />
          <xs:element name="/***maximumsizeofc3p0statementcache*/c3p0_max_statements" type="xs:string" />
          <xs:element name="/***numberofconnectionsacquiredwhenpoolisexhausted*/c3p0_acquire_increment" type="xs:string" />
          <xs:element name="/***idletimebeforeac3p0pooledconnectionisvalidated*/c3p0_idle_test_period" type="xs:string" />
          <xs:element name="//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//proxoolconnectionpoolingspecificsettings//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/***asettingprefixusedtoindicatesettingsthattargetthehibernate-proxoolintegration*/proxool_config_prefix" type="xs:string" />
          <xs:element name="/***proxool/hibernatepropertyprefix*@deprecateduse{@link#proxool_config_prefix}instead*/proxool_prefix" type="xs:string" />
          <xs:element name=")*/proxool_xml" type="xs:string" />
          <xs:element name=")*/proxool_properties" type="xs:string" />
          <xs:element name=")*/proxool_existing_pool" type="xs:string" />
          <xs:element name=")*/proxool_pool_alias" type="xs:string" />
          <xs:element name="//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//second-levelcachesettings//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/***the{@linkorg.hibernate.cache.spi.regionfactory}implementationclass*/cache_region_factory" type="xs:string" />
          <xs:element name="implementationclass*/cache_provider_config" type="xs:string" />
          <xs:element name="/***enablethesecond-levelcache(enabledbydefault)*/use_second_level_cache" type="xs:string" />
          <xs:element name="/***enablethequerycache(disabledbydefault)*/use_query_cache" type="xs:string" />
          <xs:element name="/***the{@linkorg.hibernate.cache.spi.querycachefactory}implementationclass.*/query_cache_factory" type="xs:string" />
          <xs:element name="regionnameprefix*/cache_region_prefix" type="xs:string" />
          <xs:element name="/***optimizethecacheforminimalputsinsteadofminimalgets*/use_minimal_puts" type="xs:string" />
          <xs:element name="/***enableuseofstructuredsecond-levelcacheentries*/use_structured_cache" type="xs:string" />
          <xs:element name="/***enablestheautomaticevictionofabi-directionalassociation'scollectioncachewhenanelementinthe*manytoonecollectionisadded/updated/removedwithoutproperlymanagingthechangeontheonetomanyside.*/auto_evict_collection_cache" type="xs:string" />
          <xs:element name="/***enabledirectstorageofentityreferencesintothesecondlevelcachewhenapplicable(immutabledata,etc).*defaultistonotstoredirectreferences.*/use_direct_reference_cache_entries" type="xs:string" />
          <xs:element name="*/hbm2ddl_import_files" type="xs:string" />
          <xs:element name=".*/hbm2ddl_import_files_sql_extractor" type="xs:string" />
          <xs:element name="/***specifieswhethertoautomaticallycreatealsothedatabaseschema/catalog.*thedefaultisfalse.**@since5.0*/hbm2dll_create_namespaces" type="xs:string" />
          <xs:element name="/***theentitymodeinwhichsetthesessionopenedfromthesessionfactory.*/default_entity_mode" type="xs:string" />
          <xs:element name="/***shouldalldatabaseidentifiersbequoted.*/globally_quoted_identifiers" type="xs:string" />
          <xs:element name="/***enablenullabilitychecking.*raisesanexceptionifapropertymarkedasnot-nullisnull.*defaulttofalseifbeanvalidationispresentintheclasspathandhibernateannotationsisused,*trueotherwise.*/check_nullability" type="xs:string" />
          <xs:element name="bytecode_provider" type="xs:string" />
          <xs:element name="jpaql_strict_compliance" type="xs:string" />
          <xs:element name="/***whenusingpooled{@linkorg.hibernate.id.enhanced.optimizeroptimizers},preferinterpretingthe*databasevalueasthelower(lo)boundary.thedefaultistointerpretitasthehighboundary.**use{@link#preferred_pooled_optimizer}instead*/prefer_pooled_values_lo" type="xs:string" />
          <xs:element name="/***whenageneratorspecifiedanincrement-sizeandanoptimizerwasnotexplicitlyspecified,whichof*the"pooled"optimizersshouldbepreferred?canspecifyanoptimizershortnameoranoptimizer*implfqn.*/preferred_pooled_optimizer" type="xs:string" />
          <xs:element name="/***themaximumnumberofstrongreferencesmaintainedby{@linkorg.hibernate.engine.query.spi.queryplancache}.defaultis128.*infavorof{@link#query_plan_cache_parameter_metadata_max_size}*/query_plan_cache_max_strong_references" type="xs:string" />
          <xs:element name="/***themaximumnumberofsoftreferencesmaintainedby{@linkorg.hibernate.engine.query.spi.queryplancache}.defaultis2048.*infavorof{@link#query_plan_cache_max_size}*/query_plan_cache_max_soft_references" type="xs:string" />
          <xs:element name="**maintainedby{@linkorg.hibernate.engine.query.spi.queryplancache}.defaultis2048.*/query_plan_cache_max_size" type="xs:string" />
          <xs:element name="/***themaximumnumberof{@linkorg.hibernate.engine.query.spi.parametermetadata}maintained*by{@linkorg.hibernate.engine.query.spi.queryplancache}.defaultis128.*/query_plan_cache_parameter_metadata_max_size" type="xs:string" />
          <xs:element name="/***shouldwenotusecontextuallobcreation(akabasedon{@linkjava.sql.connection#createblob()}etal).*/non_contextual_lob_creation" type="xs:string" />
          <xs:element name="jmx_enabled" type="xs:string" />
          <xs:element name="jmx_platform_server" type="xs:string" />
          <xs:element name="jmx_agent_id" type="xs:string" />
          <xs:element name="jmx_domain_name" type="xs:string" />
          <xs:element name="jmx_sf_name" type="xs:string" />
          <xs:element name="jmx_default_obj_name_domain" type="xs:string" />
          <xs:element name="/***settingtoidentifya{@linkorg.hibernate.customentitydirtinessstrategy}touse.maypointto*eitheraclassnameorinstance.*/custom_entity_dirtiness_strategy" type="xs:string" />
          <xs:element name="/***strategyformulti-tenancy.**@seeorg.hibernate.multitenancystrategy*@since4.0*/multi_tenant" type="xs:string" />
          <xs:element name="/***namesa{@linkorg.hibernate.engine.jdbc.connections.spi.multitenantconnectionprovider}implementationto*use.asmultitenantconnectionproviderisalsoaservice,canbeconfigureddirectlythroughthe*{@linkorg.hibernate.boot.registry.standardserviceregistrybuilder}**@since4.1*/multi_tenant_connection_provider" type="xs:string" />
          <xs:element name="**@since4.1*/multi_tenant_identifier_resolver" type="xs:string" />
          <xs:element name="**@since5.0*/interceptor" type="xs:string" />
          <xs:element name="**@since5.0*/statement_inspector" type="xs:string" />
          <xs:element name="enable_lazy_load_no_trans" type="xs:string" />
          <xs:element name="hql_bulk_id_strategy" type="xs:string" />
          <xs:element name="/***namesthe{@linkorg.hibernate.loader.batchfetchstyle}touse.canspecifyeitherthe*{@linkorg.hibernate.loader.batchfetchstyle}name(insensitively),ora*{@linkorg.hibernate.loader.batchfetchstyle}instance.**{@codelegacy}isthedefaultvalue.*/batch_fetch_style" type="xs:string" />
          <xs:element name="(enabled).*/jta_track_by_thread" type="xs:string" />
          <xs:element name="jacc_context_id" type="xs:string" />
          <xs:element name="jacc_prefix" type="xs:string" />
          <xs:element name="jacc_enabled" type="xs:string" />
          <xs:element name="/***ifenabled,allowsschemaupdateandvalidationtosupportsynonyms.due*tothepossibilitythatthiswouldreturnduplicatetables(especiallyin*oracle),thisisdisabledbydefault.*/enable_synonyms" type="xs:string" />
          <xs:element name="/***identifiesacomma-separatelistofvaluestospecifyextratabletypes,*otherthanthedefault"table"value,torecognizeasdefiningaphysicaltable*byschemaupdate,creationandvalidation.**@since5.0*/extra_physical_table_types" type="xs:string" />
          <xs:element name="/***uniquecolumnsanduniquekeysbothuseuniqueconstraintsinmostdialects.*schemaupdateneedstocreatetheseconstraints,butdb's*supportforfindingexistingconstraintsisextremelyinconsistent.further,*non-explicitly-nameduniqueconstraintsuserandomlygeneratedcharacters.**therefore,selectfromthesestrategies.*{@linkorg.hibernate.tool.hbm2ddl.uniqueconstraintschemaupdatestrategy#drop_recreate_quietly}(default):*			attempttodrop,then(re-)createeachuniqueconstraint.*			ignoreanyexceptionsthrown.*{@linkorg.hibernate.tool.hbm2ddl.uniqueconstraintschemaupdatestrategy#recreate_quietly}:*			attemptto(re-)createuniqueconstraints,*			ignoringexceptionsthrowniftheconstraintalreadyexisted*{@linkorg.hibernate.tool.hbm2ddl.uniqueconstraintschemaupdatestrategy#skip}:*			donotattempttocreateuniqueconstraintsonaschemaupdate*/unique_constraint_schema_update_strategy" type="xs:string" />
          <xs:element name="/***enablestatisticscollection*/generate_statistics" type="xs:string" />
          <xs:element name="/***asettingtocontrolwhetherto{@linkorg.hibernate.engine.internal.statisticalloggingsessioneventlistener}is*enabledonallsessions(unlessexplicitlydisabledforagivensession).thedefaultvalueofthis*settingisdeterminedbythevaluefor{@link#generate_statistics},meaningthatifcollectionofstatistics*isenabledloggingofsessionmetricsisenabledbydefaulttoo.*/log_session_metrics" type="xs:string" />
          <xs:element name="/***definesadefault{@linkorg.hibernate.sessioneventlistener}tobeappliedtoopenedsessions.*/auto_session_events_listener" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyinferreddata" >
      <xs:sequence>
        <xs:element name="defaultaccess" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="property" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="declaringclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertydata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectnamesource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toonefksecondpass" >
      <xs:complexContent>
       <xs:extension base="fksecondpass">
         <xs:sequence>
          <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
          <xs:element name="unique" type="xs:anyType" />
          <xs:element name="path" type="xs:string" />
          <xs:element name="entityclassname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="externalsessionfactoryconfig" >
      <xs:sequence>
        <xs:element name="mapresources" type="xs:string" />
        <xs:element name="dialect" type="xs:string" />
        <xs:element name="defaultschema" type="xs:string" />
        <xs:element name="defaultcatalog" type="xs:string" />
        <xs:element name="maximumfetchdepth" type="xs:string" />
        <xs:element name="jdbcfetchsize" type="xs:string" />
        <xs:element name="jdbcbatchsize" type="xs:string" />
        <xs:element name="batchversioneddataenabled" type="xs:string" />
        <xs:element name="jdbcscrollableresultsetenabled" type="xs:string" />
        <xs:element name="getgeneratedkeysenabled" type="xs:string" />
        <xs:element name="streamsforbinaryenabled" type="xs:string" />
        <xs:element name="reflectionoptimizationenabled" type="xs:string" />
        <xs:element name="querysubstitutions" type="xs:string" />
        <xs:element name="showsqlenabled" type="xs:string" />
        <xs:element name="commentsenabled" type="xs:string" />
        <xs:element name="cacheregionfactory" type="xs:string" />
        <xs:element name="cacheproviderconfig" type="xs:string" />
        <xs:element name="cacheregionprefix" type="xs:string" />
        <xs:element name="secondlevelcacheenabled" type="xs:string" />
        <xs:element name="minimalputsenabled" type="xs:string" />
        <xs:element name="querycacheenabled" type="xs:string" />
        <xs:element name="additionalproperties" type="map" nillable="true" minOccurs="0" />
        <xs:element name="excludedpropertynames" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="createkeysecondpass" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="rootclass" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="joinedsubclass" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wrappedinferreddata" >
      <xs:sequence>
        <xs:element name="wrappedinferreddata" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uniqueconstraintholder" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="columns" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configuration" >
      <xs:complexContent>
       <xs:extension base="attributeconverter>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="artefact_processing_order" type="xs:string" />
          <xs:element name="" type="bootstrapserviceregistry" nillable="true" minOccurs="0" />
          <xs:element name="" type="metadatasources" nillable="true" minOccurs="0" />
          <xs:element name="//usedduringprocessingmappings" type="implicitnamingstrategy" nillable="true" minOccurs="0" />
          <xs:element name="" type="physicalnamingstrategy" nillable="true" minOccurs="0" />
          <xs:element name="basictypes" type="basictype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="typecontributorregistrations" type="typecontributor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="namedsqlqueries" type="xs:anyType" />
          <xs:element name="namedprocedurecallmap" type="xs:anyType" />
          <xs:element name="sqlresultsetmappings" type="xs:anyType" />
          <xs:element name="namedentitygraphmap" type="xs:anyType" />
          <xs:element name="sqlfunctions" type="xs:anyType" />
          <xs:element name="auxiliarydatabaseobjectlist" type="auxiliarydatabaseobject" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="attributeconverterdefinitionsbyclass" type="xs:anyType" />
          <xs:element name="//usedtobuildsf" type="standardserviceregistrybuilder" nillable="true" minOccurs="0" />
          <xs:element name="" type="entitynotfounddelegate" nillable="true" minOccurs="0" />
          <xs:element name="" type="entitytuplizerfactory" nillable="true" minOccurs="0" />
          <xs:element name="" type="interceptor" nillable="true" minOccurs="0" />
          <xs:element name="" type="sessionfactoryobserver" nillable="true" minOccurs="0" />
          <xs:element name="" type="currenttenantidentifierresolver" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="recoverableexception" >
      <xs:complexContent>
       <xs:extension base="annotationexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querysecondpass" >
      <xs:complexContent>
       <xs:extension base="secondpass">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3namingstrategy" >
      <xs:sequence>
        <xs:element name="instance" type="namingstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3joincolumn" >
      <xs:complexContent>
       <xs:extension base="ejb3column">
         <xs:sequence>
          <xs:element name="/***propertynamerepatedtothiscolumn*/referencedcolumn" type="xs:string" />
          <xs:element name="mappedby" type="xs:string" />
          <xs:element name="//propertynameonthemappedbysideifanymappedbypropertyname" type="xs:string" />
          <xs:element name="//tablenameonthemappedbysideifanymappedbytablename" type="xs:string" />
          <xs:element name="mappedbyentityname" type="xs:string" />
          <xs:element name="mappedbyjpaentityname" type="xs:string" />
          <xs:element name="jpa2elementcollection" type="xs:anyType" />
          <xs:element name="manytomanyownersideentityname" type="xs:string" />
          <xs:element name="//keepitjdk1.4compliant//implicitwayno_reference" type="xs:long" />
          <xs:element name="//referencetothepkinanexplicitorderpk_reference" type="xs:long" />
          <xs:element name="//referencetononpkcolumnsnon_pk_reference" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonesecondpass" >
      <xs:sequence>
        <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="mappedby" type="xs:string" />
        <xs:element name="ownerentity" type="xs:string" />
        <xs:element name="ownerproperty" type="xs:string" />
        <xs:element name="GeneratedName" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="ignorenotfound" type="xs:anyType" />
        <xs:element name="inferreddata" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="targetentity" type="xs:anyType" />
        <xs:element name="cascadeondelete" type="xs:anyType" />
        <xs:element name="optional" type="xs:anyType" />
        <xs:element name="cascadestrategy" type="xs:string" />
        <xs:element name="joincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertybinder" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="returnedclassname" type="xs:string" />
          <xs:element name="lazy" type="xs:anyType" />
          <xs:element name="" type="accesstype" nillable="true" minOccurs="0" />
          <xs:element name="columns" type="ejb3column" nillable="true" minOccurs="0" />
          <xs:element name="holder" type="propertyholder" nillable="true" minOccurs="0" />
          <xs:element name="" type="value" nillable="true" minOccurs="0" />
          <xs:element name="insertable" type="xs:anyType" />
          <xs:element name="updatable" type="xs:anyType" />
          <xs:element name="cascade" type="xs:string" />
          <xs:element name="" type="simplevaluebinder" nillable="true" minOccurs="0" />
          <xs:element name="declaringclass" type="xs:anyType" />
          <xs:element name="declaringclassset" type="xs:anyType" />
          <xs:element name="embedded" type="xs:anyType" />
          <xs:element name="" type="entitybinder" nillable="true" minOccurs="0" />
          <xs:element name="isxtomany" type="xs:anyType" />
          <xs:element name="referencedentityname" type="xs:string" />
          <xs:element name="/*			*propertycanbenull			*preferpropertynametoproperty.getname()sincesomeareoverloaded			*/property" type="xs:anyType" />
          <xs:element name="returnedclass" type="xs:anyType" />
          <xs:element name="isid" type="xs:anyType" />
          <xs:element name="inheritancestateperclass" type="xs:anyType" />
          <xs:element name="mapping" type="property" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedprocedurecalldefinition" >
      <xs:sequence>
        <xs:element name="registeredname" type="xs:string" />
        <xs:element name="procedurename" type="xs:string" />
        <xs:element name="resultes" type="xs:anyType" />
        <xs:element name="resultsetmappings" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="hints" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bagbinder" >
      <xs:complexContent>
       <xs:extension base="collectionbinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idbagbinder" >
      <xs:complexContent>
       <xs:extension base="bagbinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querybinder" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryhintdefinition" >
      <xs:sequence>
        <xs:element name="hintsmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primitivearraybinder" >
      <xs:complexContent>
       <xs:extension base="arraybinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlcontext" >
      <xs:complexContent>
       <xs:extension base="attributeconverter>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="" type="classloaderaccess" nillable="true" minOccurs="0" />
          <xs:element name="globals" type="xs:anyType" />
          <xs:element name="classoverriding" type="xs:anyType" />
          <xs:element name="defaultsoverriding" type="xs:anyType" />
          <xs:element name="defaultelements" type="xs:anyType" />
          <xs:element name="defaultentitylisteners" type="xs:anyType" />
          <xs:element name="hascontext" type="xs:anyType" />
          <xs:element name="attributeconverterdefinitions" type="attributeconverterdefinition" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classloaderaccesslazyimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="metadatabuildingoptions" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributeconverterdefinitioncollector" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaoverriddenannotationreader" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="schema_validation" type="xs:string" />
          <xs:element name="word_separator" type="xs:string" />
          <xs:element name="annotationtoxml" type="xs:anyType" />
          <xs:element name="" type="xmlcontext" nillable="true" minOccurs="0" />
          <xs:element name="" type="classloaderaccess" nillable="true" minOccurs="0" />
          <xs:element name="element" type="xs:anyType" />
          <xs:element name="classname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="s" type="xs:anyType" />
          <xs:element name="annotationsmap" type="xs:anyType" />
          <xs:element name="transientelementsforproperty" type="xs:anyType" />
          <xs:element name="mirroredattribute" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpametadataprovider" >
      <xs:sequence>
        <xs:element name="delegate" type="xs:anyType" />
        <xs:element name="GeneratedName" type="classloaderaccess" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xmlcontext" nillable="true" minOccurs="0" />
        <xs:element name="defaults" type="xs:anyType" />
        <xs:element name="cache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentattributefilter" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="persistentattributefilter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionbinder" >
      <xs:complexContent>
       <xs:extension base="comparator>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
          <xs:element name="" type="collection" nillable="true" minOccurs="0" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="" type="propertyholder" nillable="true" minOccurs="0" />
          <xs:element name="batchsize" type="xs:long" />
          <xs:element name="mappedby" type="xs:string" />
          <xs:element name="collectiontype" type="xs:anyType" />
          <xs:element name="targetentity" type="xs:anyType" />
          <xs:element name="inversejoincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
          <xs:element name="cascadestrategy" type="xs:string" />
          <xs:element name="cacheconcurrencystrategy" type="xs:string" />
          <xs:element name="cacheregionname" type="xs:string" />
          <xs:element name="onetomany" type="xs:anyType" />
          <xs:element name="" type="indexcolumn" nillable="true" minOccurs="0" />
          <xs:element name="cascadedeleteenabled" type="xs:anyType" />
          <xs:element name="mapkeypropertyname" type="xs:string" />
          <xs:element name="insertable" type="xs:anyType" />
          <xs:element name="updatable" type="xs:anyType" />
          <xs:element name="fkjoincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
          <xs:element name="isexplicitassociationtable" type="xs:anyType" />
          <xs:element name="elementcolumns" type="ejb3column" nillable="true" minOccurs="0" />
          <xs:element name="isembedded" type="xs:anyType" />
          <xs:element name="property" type="xs:anyType" />
          <xs:element name="ignorenotfound" type="xs:anyType" />
          <xs:element name="" type="tablebinder" nillable="true" minOccurs="0" />
          <xs:element name="mapkeycolumns" type="ejb3column" nillable="true" minOccurs="0" />
          <xs:element name="mapkeymanytomanycolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
          <xs:element name="localgenerators" type="xs:anyType" />
          <xs:element name="inheritancestateperclass" type="xs:anyType" />
          <xs:element name="declaringclass" type="xs:anyType" />
          <xs:element name="declaringclassset" type="xs:anyType" />
          <xs:element name="" type="accesstype" nillable="true" minOccurs="0" />
          <xs:element name="hibernateextensionmapping" type="xs:anyType" />
          <xs:element name="issortedcollection" type="xs:anyType" />
          <xs:element name="jpaorderby" type="xs:anyType" />
          <xs:element name="sql" type="orderby" nillable="true" minOccurs="0" />
          <xs:element name="deprecated" type="sort" nillable="true" minOccurs="0" />
          <xs:element name="naturalsort" type="sortnatural" nillable="true" minOccurs="0" />
          <xs:element name="comparatorsort" type="sortcomparator" nillable="true" minOccurs="0" />
          <xs:element name="explicittype" type="xs:string" />
          <xs:element name="explicittypeparameters" type="xs:anyType" />
          <xs:element name="joincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeyjoincolumndelegator" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="column" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplevaluebinder" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="returnedclassname" type="xs:string" />
        <xs:element name="columns" type="ejb3column" nillable="true" minOccurs="0" />
        <xs:element name="persistentclassname" type="xs:string" />
        <xs:element name="explicittype" type="xs:string" />
        <xs:element name="defaulttype" type="xs:string" />
        <xs:element name="typeparameters" type="xs:anyType" />
        <xs:element name="isnationalized" type="xs:anyType" />
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="simplevalue" nillable="true" minOccurs="0" />
        <xs:element name="isversion" type="xs:anyType" />
        <xs:element name="timestampversiontype" type="xs:string" />
        <xs:element name="//isamapkeykey" type="xs:anyType" />
        <xs:element name="referencedentityname" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="attributeconverterdefinition" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arraybinder" >
      <xs:complexContent>
       <xs:extension base="listbinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customizablecolumns" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="s" type="column" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullability" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listbinder" >
      <xs:complexContent>
       <xs:extension base="collectionbinder">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapbinder" >
      <xs:complexContent>
       <xs:extension base="collectionbinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeycolumndelegator" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="column" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablebinder" >
      <xs:sequence>
        <xs:element name="//todomoveittoagetter/setterstrategylog" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="schema" type="xs:string" />
        <xs:element name="catalog" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="isabstract" type="xs:anyType" />
        <xs:element name="uniqueconstraints" type="uniqueconstraintholder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="uniqueconstraintsconstraints" type="xs:string" />
        <xs:element name="ownerentitytable" type="xs:string" />
        <xs:element name="associatedentitytable" type="xs:string" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="ownerclassname" type="xs:string" />
        <xs:element name="ownerentity" type="xs:string" />
        <xs:element name="ownerjpaentity" type="xs:string" />
        <xs:element name="associatedclassname" type="xs:string" />
        <xs:element name="associatedentity" type="xs:string" />
        <xs:element name="associatedjpaentity" type="xs:string" />
        <xs:element name="isjpa2elementcollection" type="xs:anyType" />
        <xs:element name="jpaindexholders" type="jpaindexholder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedentitygraphdefinition" >
      <xs:sequence>
        <xs:element name="annotation" type="xs:anyType" />
        <xs:element name="jpaentityname" type="xs:string" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setbinder" >
      <xs:complexContent>
       <xs:extension base="collectionbinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hcannhelper" >
      <xs:sequence>
        <xs:element name="javaxmember" type="xs:anyType" />
        <xs:element name="getmember" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertycontainer" >
      <xs:sequence>
        <xs:element name="////{//system.setproperty("jboss.i18n.generate-proxies","true")//}log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***theclassforwhichthiscontaineriscreated.*/" type="xs:anyType" />
        <xs:element name="entityatstake" type="xs:anyType" />
        <xs:element name="/***holdstheindicatedforuseattheclass/container-levelforcaseswherepersistentattribute*didnotspecify.*/classlevel" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="persistentattributemap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="binderhelper" >
      <xs:sequence>
        <xs:element name="annotation__default" type="xs:string" />
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="primitive_names" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setsimplevaluetypesecondpass" >
      <xs:sequence>
        <xs:element name="binder" type="simplevaluebinder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributeconversioninfo" >
      <xs:complexContent>
       <xs:extension base="attributeconverter>">
         <xs:sequence>
          <xs:element name="converterclass" type="xs:anyType" />
          <xs:element name="conversiondisabled" type="xs:anyType" />
          <xs:element name="attributename" type="xs:string" />
          <xs:element name="source" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namingstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extendsqueueentry" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
          <xs:element name="explicitname" type="xs:string" />
          <xs:element name="mappingpackage" type="xs:string" />
          <xs:element name="metadataxml" type="xmldocument" nillable="true" minOccurs="0" />
          <xs:element name="entitynames" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionpropertyholder" >
      <xs:complexContent>
       <xs:extension base="abstractpropertyholder">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="" type="collection" nillable="true" minOccurs="0" />
          <xs:element name="//assumetrue,theconstructorwilloptoutwhereappropriatecanelementbeconverted" type="xs:anyType" />
          <xs:element name="cankeybeconverted" type="xs:anyType" />
          <xs:element name="elementattributeconversioninfomap" type="xs:anyType" />
          <xs:element name="keyattributeconversioninfomap" type="xs:anyType" />
          <xs:element name="prepared" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexoruniquekeysecondpass" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="indexname" type="xs:string" />
        <xs:element name="columns" type="xs:string" />
        <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="column" type="ejb3column" nillable="true" minOccurs="0" />
        <xs:element name="unique" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notyetimplementedexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="settings" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sessionfactoryoptions" nillable="true" minOccurs="0" />
        <xs:element name="defaultcatalogname" type="xs:string" />
        <xs:element name="defaultschemaname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondarytablesecondpass" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="entitybinder" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="annotatedclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpropertyholder" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="abstractpropertyholder" nillable="true" minOccurs="0" />
        <xs:element name="holdercolumnoverride" type="xs:anyType" />
        <xs:element name="currentpropertycolumnoverride" type="xs:anyType" />
        <xs:element name="holderjoincolumnoverride" type="xs:anyType" />
        <xs:element name="currentpropertyjoincolumnoverride" type="xs:anyType" />
        <xs:element name="holderjointableoverride" type="xs:anyType" />
        <xs:element name="currentpropertyjointableoverride" type="xs:anyType" />
        <xs:element name="path" type="xs:string" />
        <xs:element name="context" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="isinidclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyholderbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fksecondpass" >
      <xs:sequence>
        <xs:element name="value" type="simplevalue" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
        <xs:element name="/***uniquecounterisneededtodifferentiate2instancesoffksecondpass*astheyarecompared.*fairlyhackybutibmvmsometimesreturnsthesamehashcodefor2differentobjects*todoisitdoabletorelyontheejb3joincolumnnames?notsureattheycouldbeinferred*/uniquecounter" type="xs:long" />
        <xs:element name="globalcounter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyholder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3dtdentityresolver" >
      <xs:complexContent>
       <xs:extension base="dtdentityresolver">
         <xs:sequence>
          <xs:element name="instance" type="xs:anyType" />
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="resolved" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3column" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="context" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="mapping" type="column" nillable="true" minOccurs="0" />
        <xs:element name="insertable" type="xs:anyType" />
        <xs:element name="updatable" type="xs:anyType" />
        <xs:element name="explicittablename" type="xs:string" />
        <xs:element name="joins" type="xs:anyType" />
        <xs:element name="GeneratedName" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="isimplicit" type="xs:anyType" />
        <xs:element name="default_column_length" type="xs:long" />
        <xs:element name="sqltype" type="xs:string" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="precision" type="xs:long" />
        <xs:element name="scale" type="xs:long" />
        <xs:element name="logicalcolumnname" type="xs:string" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="unique" type="xs:anyType" />
        <xs:element name="nullable" type="xs:anyType" />
        <xs:element name="formula" type="xs:string" />
        <xs:element name="GeneratedName" type="formula" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="readexpression" type="xs:string" />
        <xs:element name="writeexpression" type="xs:string" />
        <xs:element name="defaultvalue" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baselinesessioneventslistenerbuilder" >
      <xs:complexContent>
       <xs:extension base="sessioneventlistener>">
         <xs:sequence>
          <xs:element name="logsessionmetrics" type="xs:anyType" />
          <xs:element name="autolistener" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pkdrivenbydefaultmapsidsecondpass" >
      <xs:sequence>
        <xs:element name="referencedentityname" type="xs:string" />
        <xs:element name="columns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
        <xs:element name="value" type="simplevalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaindexholder" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="columns" type="xs:string" />
        <xs:element name="ordering" type="xs:string" />
        <xs:element name="unique" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatasourcetype" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedsubclassfksecondpass" >
      <xs:complexContent>
       <xs:extension base="fksecondpass">
         <xs:sequence>
          <xs:element name="entity" type="joinedsubclass" nillable="true" minOccurs="0" />
          <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertypreloadeddata" >
      <xs:sequence>
        <xs:element name="defaultaccess" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="returnedclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnsbuilder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="nullability" nillable="true" minOccurs="0" />
        <xs:element name="property" type="xs:anyType" />
        <xs:element name="inferreddata" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitybinder" nillable="true" minOccurs="0" />
        <xs:element name="buildingcontext" type="metadatabuildingcontext" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="ejb3column" nillable="true" minOccurs="0" />
        <xs:element name="joincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultcomponentsafenamingstrategy" >
      <xs:complexContent>
       <xs:extension base="ejb3namingstrategy">
         <xs:sequence>
          <xs:element name="instance" type="namingstrategy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="duplicatemappingexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="type" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectiondefinition" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionelementdefinition" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associationkey" >
      <xs:sequence>
        <xs:element name="table" type="xs:string" />
        <xs:element name="columns" type="xs:string" />
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositecollectionelementdefinition" >
      <xs:complexContent>
       <xs:extension base="compositiondefinition{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="associationvisitationstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositiondefinition" >
      <xs:complexContent>
       <xs:extension base="attributedefinition,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="walkingexception" >
      <xs:complexContent>
       <xs:extension base="hibernateerror">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="associationattributedefinition" >
      <xs:complexContent>
       <xs:extension base="attributedefinition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="anymappingdefinition" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonencapsulatedentityidentifierdefinition" >
      <xs:complexContent>
       <xs:extension base="entityidentifierdefinition,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionindexdefinition" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributesource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metamodelgraphwalker" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="strategy" type="associationvisitationstrategy" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="//todo:addagetdepth()methodtocurrent" type="propertypath" nillable="true" minOccurs="0" />
        <xs:element name="visitedassociationkeys" type="associationkey" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="encapsulatedentityidentifierdefinition" >
      <xs:complexContent>
       <xs:extension base="entityidentifierdefinition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitydefinition" >
      <xs:complexContent>
       <xs:extension base="attributesource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attributedefinition" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityidentifierdefinition" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchstrategyhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardanytypedefinition" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="anytype" nillable="true" minOccurs="0" />
        <xs:element name="definedaslazy" type="xs:anyType" />
        <xs:element name="discriminatormappings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositionsingularsubattributeshelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityidentifierdefinitionhelper" >
      <xs:complexContent>
       <xs:extension base="attributedefinitionadapter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionpropertymapping" >
      <xs:sequence>
        <xs:element name="memberpersister" type="queryablecollection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanypersister" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionpersister">
         <xs:sequence>
          <xs:element name="cascadedeleteenabled" type="xs:anyType" />
          <xs:element name="keyisnullable" type="xs:anyType" />
          <xs:element name="keyisupdateable" type="xs:anyType" />
          <xs:element name="deleterowbatchkey" type="basicbatchkey" nillable="true" minOccurs="0" />
          <xs:element name="insertrowbatchkey" type="basicbatchkey" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcollectionpersister" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="//todo:encapsulatetheprotectedinstancevariables!role" type="xs:string" />
        <xs:element name="//sqlstatementssqldelete" type="xs:string" />
        <xs:element name="sqlinsertrow" type="xs:string" />
        <xs:element name="sqlupdaterow" type="xs:string" />
        <xs:element name="sqldeleterow" type="xs:string" />
        <xs:element name="sqlselectsize" type="xs:string" />
        <xs:element name="sqlselectrowbyindex" type="xs:string" />
        <xs:element name="sqldetectrowbyindex" type="xs:string" />
        <xs:element name="sqldetectrowbyelement" type="xs:string" />
        <xs:element name="haswhere" type="xs:anyType" />
        <xs:element name="sqlwhere" type="xs:string" />
        <xs:element name="sqlwheretemplate" type="xs:string" />
        <xs:element name="hasorder" type="xs:anyType" />
        <xs:element name="GeneratedName" type="orderbytranslation" nillable="true" minOccurs="0" />
        <xs:element name="hasmanytomanyorder" type="xs:anyType" />
        <xs:element name="manytomany" type="orderbytranslation" nillable="true" minOccurs="0" />
        <xs:element name="baseindex" type="xs:long" />
        <xs:element name="mappedbyproperty" type="xs:string" />
        <xs:element name="indexcontainsformula" type="xs:anyType" />
        <xs:element name="elementispureformula" type="xs:anyType" />
        <xs:element name="//skey" type="type" nillable="true" minOccurs="0" />
        <xs:element name="index" type="type" nillable="true" minOccurs="0" />
        <xs:element name="element" type="type" nillable="true" minOccurs="0" />
        <xs:element name="identifier" type="type" nillable="true" minOccurs="0" />
        <xs:element name="keycolumnnames" type="xs:string" />
        <xs:element name="indexcolumnnames" type="xs:string" />
        <xs:element name="indexformulatemplates" type="xs:string" />
        <xs:element name="indexformulas" type="xs:string" />
        <xs:element name="indexcolumnissettable" type="xs:anyType" />
        <xs:element name="elementcolumnnames" type="xs:string" />
        <xs:element name="elementcolumnwriters" type="xs:string" />
        <xs:element name="elementcolumnreaders" type="xs:string" />
        <xs:element name="elementcolumnreadertemplates" type="xs:string" />
        <xs:element name="elementformulatemplates" type="xs:string" />
        <xs:element name="elementformulas" type="xs:string" />
        <xs:element name="elementcolumnissettable" type="xs:anyType" />
        <xs:element name="elementcolumnisinprimarykey" type="xs:anyType" />
        <xs:element name="indexcolumnaliases" type="xs:string" />
        <xs:element name="elementcolumnaliases" type="xs:string" />
        <xs:element name="keycolumnaliases" type="xs:string" />
        <xs:element name="identifiercolumnname" type="xs:string" />
        <xs:element name="identifiercolumnalias" type="xs:string" />
        <xs:element name="//privateunquotedidentifiercolumnnamequalifiedtablename" type="xs:string" />
        <xs:element name="queryloadername" type="xs:string" />
        <xs:element name="isprimitivearray" type="xs:anyType" />
        <xs:element name="isarray" type="xs:anyType" />
        <xs:element name="hasindex" type="xs:anyType" />
        <xs:element name="hasidentifier" type="xs:anyType" />
        <xs:element name="islazy" type="xs:anyType" />
        <xs:element name="isextralazy" type="xs:anyType" />
        <xs:element name="isinverse" type="xs:anyType" />
        <xs:element name="ismutable" type="xs:anyType" />
        <xs:element name="isversioned" type="xs:anyType" />
        <xs:element name="batchsize" type="xs:long" />
        <xs:element name="GeneratedName" type="fetchmode" nillable="true" minOccurs="0" />
        <xs:element name="hasorphandelete" type="xs:anyType" />
        <xs:element name="subselectloadable" type="xs:anyType" />
        <xs:element name="//extrainformationabouttheelementtypeelement" type="xs:anyType" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlexceptionhelper" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="ownerpersister" type="entitypersister" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="identifiergenerator" nillable="true" minOccurs="0" />
        <xs:element name="element" type="propertymapping" nillable="true" minOccurs="0" />
        <xs:element name="elementpersister" type="entitypersister" nillable="true" minOccurs="0" />
        <xs:element name="cacheaccessstrategy" type="collectionregionaccessstrategy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="collectiontype" nillable="true" minOccurs="0" />
        <xs:element name="initializer" type="collectioninitializer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cacheentrystructure" nillable="true" minOccurs="0" />
        <xs:element name="//dynamicfiltersforthecollection" type="filterhelper" nillable="true" minOccurs="0" />
        <xs:element name="//dynamicfiltersspecificallyformany-to-manyinsidethecollectionmanytomany" type="filterhelper" nillable="true" minOccurs="0" />
        <xs:element name="manytomanywhere" type="xs:string" />
        <xs:element name="manytomanywheretemplate" type="xs:string" />
        <xs:element name="//customsqlinsertcallable" type="xs:anyType" />
        <xs:element name="updatecallable" type="xs:anyType" />
        <xs:element name="deletecallable" type="xs:anyType" />
        <xs:element name="deleteallcallable" type="xs:anyType" />
        <xs:element name="insertcheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="updatecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="deletecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="deleteallcheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="spaces" type="xs:anyType" />
        <xs:element name="collectionpropertycolumnaliases" type="map" nillable="true" minOccurs="0" />
        <xs:element name="collectionpropertycolumnnames" type="map" nillable="true" minOccurs="0" />
        <xs:element name="removebatchkey" type="basicbatchkey" nillable="true" minOccurs="0" />
        <xs:element name="recreatebatchkey" type="basicbatchkey" nillable="true" minOccurs="0" />
        <xs:element name="deletebatchkey" type="basicbatchkey" nillable="true" minOccurs="0" />
        <xs:element name="insertbatchkey" type="basicbatchkey" nillable="true" minOccurs="0" />
        <xs:element name="indexfragments" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeelementpropertymapping" >
      <xs:complexContent>
       <xs:extension base="abstractpropertymapping">
         <xs:sequence>
          <xs:element name="" type="compositetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryablecollection" >
      <xs:complexContent>
       <xs:extension base="propertymapping,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlloadablecollection" >
      <xs:complexContent>
       <xs:extension base="queryablecollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionpropertynames" >
      <xs:sequence>
        <xs:element name="collection_size" type="xs:string" />
        <xs:element name="collection_elements" type="xs:string" />
        <xs:element name="collection_indices" type="xs:string" />
        <xs:element name="collection_max_index" type="xs:string" />
        <xs:element name="collection_min_index" type="xs:string" />
        <xs:element name="collection_max_element" type="xs:string" />
        <xs:element name="collection_min_element" type="xs:string" />
        <xs:element name="collection_index" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedquerycollectioninitializer" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="queryname" type="xs:string" />
        <xs:element name="persister" type="collectionpersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basiccollectionpersister" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionpersister">
         <xs:sequence>
          <xs:element name="updatebatchkey" type="basicbatchkey" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elementpropertymapping" >
      <xs:sequence>
        <xs:element name="elementcolumns" type="xs:string" />
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionpersister" >
      <xs:complexContent>
       <xs:extension base="collectiondefinition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlloadable" >
      <xs:complexContent>
       <xs:extension base="loadable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="outerjoinloadable" >
      <xs:complexContent>
       <xs:extension base="loadable,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unionsubclassentitypersister" >
      <xs:complexContent>
       <xs:extension base="abstractentitypersister">
         <xs:sequence>
          <xs:element name="//theclasshierarchystructuresubquery" type="xs:string" />
          <xs:element name="tablename" type="xs:string" />
          <xs:element name="subclassclosure" type="xs:string" />
          <xs:element name="spaces" type="xs:string" />
          <xs:element name="subclassspaces" type="xs:string" />
          <xs:element name="discriminatorvalue" type="xs:anyType" />
          <xs:element name="discriminatorsqlvalue" type="xs:string" />
          <xs:element name="subclassbydiscriminatorvalue" type="map" nillable="true" minOccurs="0" />
          <xs:element name="constraintorderedtablenames" type="xs:string" />
          <xs:element name="constraintorderedkeycolumnnames" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadable" >
      <xs:complexContent>
       <xs:extension base="entitypersister">
         <xs:sequence>
          <xs:element name="rowid_alias" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockable" >
      <xs:complexContent>
       <xs:extension base="entitypersister">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryable" >
      <xs:complexContent>
       <xs:extension base="the">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discriminatortype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="underlying" type="type" nillable="true" minOccurs="0" />
          <xs:element name="persister" type="loadable" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicentitypropertymapping" >
      <xs:complexContent>
       <xs:extension base="abstractpropertymapping">
         <xs:sequence>
          <xs:element name="persister" type="abstractentitypersister" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discriminatormetadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedqueryloader" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="queryname" type="xs:string" />
        <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedsubclassentitypersister" >
      <xs:complexContent>
       <xs:extension base="abstractentitypersister">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="implicit_discriminator_alias" type="xs:string" />
          <xs:element name="null_discriminator" type="xs:anyType" />
          <xs:element name="not_null_discriminator" type="xs:anyType" />
          <xs:element name="null_" type="xs:string" />
          <xs:element name="not_null_" type="xs:string" />
          <xs:element name="//theclasshierarchystructuretablespan" type="xs:long" />
          <xs:element name="tablenames" type="xs:string" />
          <xs:element name="naturalordertablenames" type="xs:string" />
          <xs:element name="tablekeycolumns" type="xs:string" />
          <xs:element name="tablekeycolumnreaders" type="xs:string" />
          <xs:element name="tablekeycolumnreadertemplates" type="xs:string" />
          <xs:element name="naturalordertablekeycolumns" type="xs:string" />
          <xs:element name="naturalordertablekeycolumnreaders" type="xs:string" />
          <xs:element name="naturalordertablekeycolumnreadertemplates" type="xs:string" />
          <xs:element name="naturalordercascadedeleteenabled" type="xs:anyType" />
          <xs:element name="spaces" type="xs:string" />
          <xs:element name="subclassclosure" type="xs:string" />
          <xs:element name="subclasstablenameclosure" type="xs:string" />
          <xs:element name="subclasstablekeycolumnclosure" type="xs:string" />
          <xs:element name="isclassorsuperclasstable" type="xs:anyType" />
          <xs:element name="naturalorderpropertytablenumbers" type="xs:long" />
          <xs:element name="propertytablenumbers" type="xs:long" />
          <xs:element name="subclasspropertytablenumberclosure" type="xs:long" />
          <xs:element name="subclasscolumntablenumberclosure" type="xs:long" />
          <xs:element name="subclassformulatablenumberclosure" type="xs:long" />
          <xs:element name="subclasstablesequentialselect" type="xs:anyType" />
          <xs:element name="subclasstableislazyclosure" type="xs:anyType" />
          <xs:element name="//subclassdiscriminationworksbyassigningparticular//valuestocertaincombinationsofnullprimarykey//valuesintheouterjoinusingansqlcasesubclassesbydiscriminatorvalue" type="map" nillable="true" minOccurs="0" />
          <xs:element name="discriminatorvalues" type="xs:string" />
          <xs:element name="notnullcolumnnames" type="xs:string" />
          <xs:element name="notnullcolumntablenumbers" type="xs:long" />
          <xs:element name="constraintorderedtablenames" type="xs:string" />
          <xs:element name="constraintorderedkeycolumnnames" type="xs:string" />
          <xs:element name="discriminatorvalue" type="xs:anyType" />
          <xs:element name="discriminatorsql" type="xs:string" />
          <xs:element name="" type="discriminatortype" nillable="true" minOccurs="0" />
          <xs:element name="explicitdiscriminatorcolumnname" type="xs:string" />
          <xs:element name="discriminatoralias" type="xs:string" />
          <xs:element name="//spanofthetablesdirectlymappedbythisentityandsuper-classes,ifanycoretablespan" type="xs:long" />
          <xs:element name="isnullabletable" type="xs:anyType" />
          <xs:element name="" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitypersister" >
      <xs:complexContent>
       <xs:extension base="optimisticcachesource,">
         <xs:sequence>
          <xs:element name="/***thepropertynameofthe"special"identifierpropertyinhql*/entity_id" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uniquekeyloadable" >
      <xs:complexContent>
       <xs:extension base="loadable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singletableentitypersister" >
      <xs:complexContent>
       <xs:extension base="abstractentitypersister">
         <xs:sequence>
          <xs:element name="//theclasshierarchystructurejoinspan" type="xs:long" />
          <xs:element name="qualifiedtablenames" type="xs:string" />
          <xs:element name="isinversetable" type="xs:anyType" />
          <xs:element name="isnullabletable" type="xs:anyType" />
          <xs:element name="keycolumnnames" type="xs:string" />
          <xs:element name="cascadedeleteenabled" type="xs:anyType" />
          <xs:element name="hassequentialselects" type="xs:anyType" />
          <xs:element name="spaces" type="xs:string" />
          <xs:element name="subclassclosure" type="xs:string" />
          <xs:element name="subclasstablenameclosure" type="xs:string" />
          <xs:element name="subclasstableislazyclosure" type="xs:anyType" />
          <xs:element name="isinversesubclasstable" type="xs:anyType" />
          <xs:element name="isnullablesubclasstable" type="xs:anyType" />
          <xs:element name="subclasstablesequentialselect" type="xs:anyType" />
          <xs:element name="subclasstablekeycolumnclosure" type="xs:string" />
          <xs:element name="isclassorsuperclasstable" type="xs:anyType" />
          <xs:element name="propertytablenumbers" type="xs:long" />
          <xs:element name="subclasspropertytablenumberclosure" type="xs:long" />
          <xs:element name="subclasscolumntablenumberclosure" type="xs:long" />
          <xs:element name="subclassformulatablenumberclosure" type="xs:long" />
          <xs:element name="subclassesbydiscriminatorvalue" type="xs:anyType" />
          <xs:element name="forcediscriminator" type="xs:anyType" />
          <xs:element name="discriminatorcolumnname" type="xs:string" />
          <xs:element name="discriminatorcolumnreaders" type="xs:string" />
          <xs:element name="discriminatorcolumnreadertemplate" type="xs:string" />
          <xs:element name="discriminatorformula" type="xs:string" />
          <xs:element name="discriminatorformulatemplate" type="xs:string" />
          <xs:element name="discriminatoralias" type="xs:string" />
          <xs:element name="discriminator" type="type" nillable="true" minOccurs="0" />
          <xs:element name="discriminatorvalue" type="xs:anyType" />
          <xs:element name="discriminatorsqlvalue" type="xs:string" />
          <xs:element name="discriminatorinsertable" type="xs:anyType" />
          <xs:element name="constraintorderedtablenames" type="xs:string" />
          <xs:element name="constraintorderedkeycolumnnames" type="xs:string" />
          <xs:element name="//mappropertytablenumbersbyname" type="xs:anyType" />
          <xs:element name="sequentialselectstringsbyentityname" type="xs:anyType" />
          <xs:element name="null_discriminator" type="xs:anyType" />
          <xs:element name="not_null_discriminator" type="xs:anyType" />
          <xs:element name="null_" type="xs:string" />
          <xs:element name="not_null_" type="xs:string" />
          <xs:element name="fulldiscriminatorvalues" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentitypersister" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="entity_class" type="xs:string" />
        <xs:element name="//movedupfromabstractentitypersister~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="cacheaccessstrategy" type="entityregionaccessstrategy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="naturalidregionaccessstrategy" nillable="true" minOccurs="0" />
        <xs:element name="islazypropertiescacheable" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="entitymetamodel" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitytuplizer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entityentryfactory" nillable="true" minOccurs="0" />
        <xs:element name="roottablekeycolumnnames" type="xs:string" />
        <xs:element name="roottablekeycolumnreaders" type="xs:string" />
        <xs:element name="roottablekeycolumnreadertemplates" type="xs:string" />
        <xs:element name="identifieraliases" type="xs:string" />
        <xs:element name="identifiercolumnspan" type="xs:long" />
        <xs:element name="versioncolumnname" type="xs:string" />
        <xs:element name="hasformulaproperties" type="xs:anyType" />
        <xs:element name="batchsize" type="xs:long" />
        <xs:element name="hassubselectloadablecollections" type="xs:anyType" />
        <xs:element name="rowidname" type="xs:string" />
        <xs:element name="lazyproperties" type="set" nillable="true" minOccurs="0" />
        <xs:element name="//theoptionalsqldefinedinthewhereattributesqlwhere" type="xs:string" />
        <xs:element name="sqlwheretemplate" type="xs:string" />
        <xs:element name="propertycolumnspans" type="xs:long" />
        <xs:element name="propertysubclassnames" type="xs:string" />
        <xs:element name="propertycolumnaliases" type="xs:string" />
        <xs:element name="propertycolumnnames" type="xs:string" />
        <xs:element name="propertycolumnformulatemplates" type="xs:string" />
        <xs:element name="propertycolumnreadertemplates" type="xs:string" />
        <xs:element name="propertycolumnwriters" type="xs:string" />
        <xs:element name="propertycolumnupdateable" type="xs:anyType" />
        <xs:element name="propertycolumninsertable" type="xs:anyType" />
        <xs:element name="propertyuniqueness" type="xs:anyType" />
        <xs:element name="propertyselectable" type="xs:anyType" />
        <xs:element name="lobproperties" type="xs:anyType" />
        <xs:element name="lazypropertynames" type="xs:string" />
        <xs:element name="lazypropertynumbers" type="xs:long" />
        <xs:element name="lazypropertys" type="type" nillable="true" minOccurs="0" />
        <xs:element name="lazypropertycolumnaliases" type="xs:string" />
        <xs:element name="subclasspropertynameclosure" type="xs:string" />
        <xs:element name="subclasspropertysubclassnameclosure" type="xs:string" />
        <xs:element name="subclasspropertyclosure" type="type" nillable="true" minOccurs="0" />
        <xs:element name="subclasspropertyformulatemplateclosure" type="xs:string" />
        <xs:element name="subclasspropertycolumnnameclosure" type="xs:string" />
        <xs:element name="subclasspropertycolumnreaderclosure" type="xs:string" />
        <xs:element name="subclasspropertycolumnreadertemplateclosure" type="xs:string" />
        <xs:element name="subclasspropertyclosure" type="fetchmode" nillable="true" minOccurs="0" />
        <xs:element name="subclasspropertynullabilityclosure" type="xs:anyType" />
        <xs:element name="propertydefinedonsubclass" type="xs:anyType" />
        <xs:element name="subclasspropertycolumnnumberclosure" type="xs:long" />
        <xs:element name="subclasspropertyformulanumberclosure" type="xs:long" />
        <xs:element name="subclasspropertyclosure" type="cascadestyle" nillable="true" minOccurs="0" />
        <xs:element name="subclasscolumnclosure" type="xs:string" />
        <xs:element name="subclasscolumnlazyclosure" type="xs:anyType" />
        <xs:element name="subclasscolumnaliasclosure" type="xs:string" />
        <xs:element name="subclasscolumnselectableclosure" type="xs:anyType" />
        <xs:element name="subclasscolumnreadertemplateclosure" type="xs:string" />
        <xs:element name="subclassformulaclosure" type="xs:string" />
        <xs:element name="subclassformulatemplateclosure" type="xs:string" />
        <xs:element name="subclassformulaaliasclosure" type="xs:string" />
        <xs:element name="subclassformulalazyclosure" type="xs:anyType" />
        <xs:element name="//dynamicfiltersattachedtotheclass-level" type="filterhelper" nillable="true" minOccurs="0" />
        <xs:element name="affectingfetchprofilenames" type="xs:anyType" />
        <xs:element name="uniquekeyloaders" type="map" nillable="true" minOccurs="0" />
        <xs:element name="lockers" type="map" nillable="true" minOccurs="0" />
        <xs:element name="loaders" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//sqlssqlversionselect" type="xs:string" />
        <xs:element name="sqlsnapshotselect" type="xs:string" />
        <xs:element name="sqllazyselect" type="xs:string" />
        <xs:element name="sqlidentityinsert" type="xs:string" />
        <xs:element name="sqlupdatebyrowid" type="xs:string" />
        <xs:element name="sqllazyupdatebyrowid" type="xs:string" />
        <xs:element name="sqldeletes" type="xs:string" />
        <xs:element name="sqlinserts" type="xs:string" />
        <xs:element name="sqlupdates" type="xs:string" />
        <xs:element name="sqllazyupdates" type="xs:string" />
        <xs:element name="sqlinsertgeneratedvaluesselect" type="xs:string" />
        <xs:element name="sqlupdategeneratedvaluesselect" type="xs:string" />
        <xs:element name="insertcallable" type="xs:anyType" />
        <xs:element name="updatecallable" type="xs:anyType" />
        <xs:element name="deletecallable" type="xs:anyType" />
        <xs:element name="customsqlinsert" type="xs:string" />
        <xs:element name="customsqlupdate" type="xs:string" />
        <xs:element name="customsqldelete" type="xs:string" />
        <xs:element name="insertresultcheckstyles" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="updateresultcheckstyles" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="deleteresultcheckstyles" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="identitydelegate" type="insertgeneratedidentifierdelegate" nillable="true" minOccurs="0" />
        <xs:element name="tablehascolumns" type="xs:anyType" />
        <xs:element name="loadername" type="xs:string" />
        <xs:element name="queryloader" type="uniqueentityloader" nillable="true" minOccurs="0" />
        <xs:element name="subclasspropertyaliases" type="map" nillable="true" minOccurs="0" />
        <xs:element name="subclasspropertycolumnnames" type="map" nillable="true" minOccurs="0" />
        <xs:element name="propertymapping" type="basicentitypropertymapping" nillable="true" minOccurs="0" />
        <xs:element name="usereferencecacheentries" type="xs:anyType" />
        <xs:element name="discriminator_alias" type="xs:string" />
        <xs:element name="GeneratedName" type="discriminatormetadata" nillable="true" minOccurs="0" />
        <xs:element name="inserbatchkey" type="basicbatchkey" nillable="true" minOccurs="0" />
        <xs:element name="updatebatchkey" type="basicbatchkey" nillable="true" minOccurs="0" />
        <xs:element name="deletebatchkey" type="basicbatchkey" nillable="true" minOccurs="0" />
        <xs:element name="naturalidisnonnullable" type="xs:anyType" />
        <xs:element name="cachedpkbynonnullablenaturalidquery" type="xs:string" />
        <xs:element name="//entitydefinitionimpl~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" type="entityidentifierdefinition" nillable="true" minOccurs="0" />
        <xs:element name="embeddedcompositeidentifierattributes" type="attributedefinition" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="attributedefinitions" type="attributedefinition" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpropertymapping" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="typesbypropertypath" type="xs:anyType" />
        <xs:element name="columnsbypropertypath" type="xs:anyType" />
        <xs:element name="columnreadersbypropertypath" type="xs:anyType" />
        <xs:element name="columnreadertemplatesbypropertypath" type="xs:anyType" />
        <xs:element name="formulatemplatesbypropertypath" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistercreationcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persisterfactory" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unknownpersisterexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hydratedcompoundvaluehandler" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persisterclassresolver" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persisterfactoryimpl" >
      <xs:complexContent>
       <xs:extension base="entitypersister>">
         <xs:sequence>
          <xs:element name="entity_persister_constructor_args" type="xs:anyType" />
          <xs:element name="collection_persister_constructor_args" type="xs:anyType" />
          <xs:element name="serviceregistry" type="serviceregistryimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persisterclassresolverinitiator" >
      <xs:complexContent>
       <xs:extension base="persisterclassresolver>">
         <xs:sequence>
          <xs:element name="instance" type="persisterclassresolverinitiator" nillable="true" minOccurs="0" />
          <xs:element name="impl_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persisterfactoryinitiator" >
      <xs:complexContent>
       <xs:extension base="persisterfactory>">
         <xs:sequence>
          <xs:element name="instance" type="persisterfactoryinitiator" nillable="true" minOccurs="0" />
          <xs:element name="impl_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardpersisterclassresolver" >
      <xs:complexContent>
       <xs:extension base="entitypersister>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versiontypeseedparameterspecification" >
      <xs:sequence>
        <xs:element name="type" type="versiontype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="positionalparameterspecification" >
      <xs:complexContent>
       <xs:extension base="abstractexplicitparameterspecification">
         <xs:sequence>
          <xs:element name="hqlposition" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitparameterspecification" >
      <xs:complexContent>
       <xs:extension base="parameterspecification">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterspecification" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionfilterkeyparameterspecification" >
      <xs:sequence>
        <xs:element name="collectionrole" type="xs:string" />
        <xs:element name="key" type="type" nillable="true" minOccurs="0" />
        <xs:element name="queryparameterposition" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractexplicitparameterspecification" >
      <xs:sequence>
        <xs:element name="sourceline" type="xs:long" />
        <xs:element name="sourcecolumn" type="xs:long" />
        <xs:element name="expected" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicfilterparameterspecification" >
      <xs:sequence>
        <xs:element name="filtername" type="xs:string" />
        <xs:element name="parametername" type="xs:string" />
        <xs:element name="definedparameter" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedparameterspecification" >
      <xs:complexContent>
       <xs:extension base="abstractexplicitparameterspecification">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactory" >
      <xs:complexContent>
       <xs:extension base="referenceable,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sharedsessionbuilder" >
      <xs:complexContent>
       <xs:extension base="sessionbuilder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectdeletedexception" >
      <xs:complexContent>
       <xs:extension base="unresolvableobjectexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unknownprofileexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jmxserviceinitiator" >
      <xs:sequence>
        <xs:element name="instance" type="jmxserviceinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jmxserviceimpl" >
      <xs:complexContent>
       <xs:extension base="service>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="obj_name_template" type="xs:string" />
          <xs:element name="useplatformserver" type="xs:anyType" />
          <xs:element name="agentid" type="xs:string" />
          <xs:element name="defaultdomain" type="xs:string" />
          <xs:element name="sessionfactoryname" type="xs:string" />
          <xs:element name="startedserver" type="xs:anyType" />
          <xs:element name="registeredmbeans" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="disabledjmxserviceimpl" >
      <xs:sequence>
        <xs:element name="instance" type="disabledjmxserviceimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jmxservice" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectnotfoundexception" >
      <xs:complexContent>
       <xs:extension base="unresolvableobjectexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullprecedence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nocacheregionfactoryavailableexception" >
      <xs:complexContent>
       <xs:extension base="cacheexception">
         <xs:sequence>
          <xs:element name="msg" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="regionfactoryinitiator" >
      <xs:complexContent>
       <xs:extension base="regionfactory>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="/***singletonaccess*/instance" type="regionfactoryinitiator" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nocachingregionfactory" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="nocachingregionfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectioncacheinvalidator" >
      <xs:complexContent>
       <xs:extension base="collectionaction">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="/***exposedforuseintesting*/propagate_exception" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachedatadescriptionimpl" >
      <xs:sequence>
        <xs:element name="mutable" type="xs:anyType" />
        <xs:element name="versioned" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="key" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardquerycache" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="debugging" type="xs:anyType" />
        <xs:element name="tracing" type="xs:anyType" />
        <xs:element name="cacheregion" type="queryresultsregion" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="updatetimestampscache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplecachekeysfactory" >
      <xs:sequence>
        <xs:element name="instance" type="cachekeysfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultcachekeysfactory" >
      <xs:sequence>
        <xs:element name="instance" type="cachekeysfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oldnaturalidcachekey" >
      <xs:sequence>
        <xs:element name="naturalidvalues" type="xs:anyType" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="tenantid" type="xs:string" />
        <xs:element name="hashcode" type="xs:long" />
        <xs:element name="//"transient"isimportanthere--naturalidcachekeyneedstobeserializabletransienttostring" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oldcachekeyimplementation" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="entityorrolename" type="xs:string" />
        <xs:element name="tenantid" type="xs:string" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardquerycachefactory" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="standardquerycachefactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityregionaccessstrategy" >
      <xs:complexContent>
       <xs:extension base="regionaccessstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidregionaccessstrategy" >
      <xs:complexContent>
       <xs:extension base="regionaccessstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="softlock" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesstype" >
      <xs:sequence>
        <xs:element name="externalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="regionaccessstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionregionaccessstrategy" >
      <xs:complexContent>
       <xs:extension base="regionaccessstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unknownaccesstypeexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="region" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="regionfactory" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querycachefactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryresultsregion" >
      <xs:complexContent>
       <xs:extension base="generaldataregion">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidregion" >
      <xs:complexContent>
       <xs:extension base="transactionaldataregion">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querykey" >
      <xs:sequence>
        <xs:element name="sqlquery" type="xs:string" />
        <xs:element name="positionalparameters" type="type" nillable="true" minOccurs="0" />
        <xs:element name="positionalparametervalues" type="xs:anyType" />
        <xs:element name="namedparameters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="firstrow" type="xs:anyType" />
        <xs:element name="maxrows" type="xs:anyType" />
        <xs:element name="tenantidentifier" type="xs:string" />
        <xs:element name="filterkeys" type="set" nillable="true" minOccurs="0" />
        <xs:element name="//theexplicituser-providedresulttransformer,nottheoneusedwith"selectnew".heretoavoidmangling//transformed/non-transformedresults.customtransformer" type="cacheableresulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="/***forperformancereasons,thehashcodeiscachedhowever,itismarkedtransientsothatitcanbe*recalculatedaspartoftheserializationprocesswhichallowsdistributedquerycachestoworkproperly.*/transienthashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generaldataregion" >
      <xs:complexContent>
       <xs:extension base="region">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachedatadescription" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterkey" >
      <xs:sequence>
        <xs:element name="filtername" type="xs:string" />
        <xs:element name="filterparameters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachekeysfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionaldataregion" >
      <xs:complexContent>
       <xs:extension base="region">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionawarecache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityregion" >
      <xs:complexContent>
       <xs:extension base="transactionaldataregion">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheentry" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="structuredcollectioncacheentry" >
      <xs:sequence>
        <xs:element name="/***accesstothesingletonreference.*/instance" type="structuredcollectioncacheentry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unstructuredcacheentry" >
      <xs:sequence>
        <xs:element name="/***accesstothesingletoninstance.*/instance" type="unstructuredcacheentry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardcacheentryimpl" >
      <xs:sequence>
        <xs:element name="disassembledstate" type="xs:anyType" />
        <xs:element name="subclass" type="xs:string" />
        <xs:element name="lazypropertiesareunfetched" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectioncacheentry" >
      <xs:sequence>
        <xs:element name="state" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="structuredcacheentry" >
      <xs:sequence>
        <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="referencecacheentryimpl" >
      <xs:sequence>
        <xs:element name="reference" type="xs:anyType" />
        <xs:element name="//passingthepersisteravoidsacostlypersisterlookupbyclassnameatcacheretrievaltimesubclasspersister" type="entitypersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="structuredmapcacheentry" >
      <xs:sequence>
        <xs:element name="/***accesstothesingletonreference*/instance" type="structuredmapcacheentry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheentrystructure" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatetimestampscache" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="debug_enabled" type="xs:anyType" />
        <xs:element name="/***theregionnameoftheupdate-timestampscache.*/region_name" type="xs:string" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="region" type="timestampsregion" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionregion" >
      <xs:complexContent>
       <xs:extension base="transactionaldataregion">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticcachesource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestampsregion" >
      <xs:complexContent>
       <xs:extension base="generaldataregion">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querycache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="regionfactory" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.cache.spi.regionfactory">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statelesssession" >
      <xs:complexContent>
       <xs:extension base="sharedsessioncontract,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permissioncheckentityinformation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="grantedpermission" >
      <xs:sequence>
        <xs:element name="role" type="xs:string" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="action" type="permissibleaction" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integrationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jaccservice" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jaccintegrator" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="duplication_strategy" type="duplicationstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jaccpermissiondeclarations" >
      <xs:sequence>
        <xs:element name="contextid" type="xs:string" />
        <xs:element name="permissiondeclarations" type="grantedpermission" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permissibleaction" >
      <xs:sequence>
        <xs:element name="externalname" type="xs:string" />
        <xs:element name="impliedactions" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractjaccsecurableeventlistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="jaccservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jaccpreinserteventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractjaccsecurableeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardjaccserviceimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="contextid" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jaccsecuritylistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="disabledjaccserviceimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jaccpreupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractjaccsecurableeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jaccpredeleteeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractjaccsecurableeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jaccpreloadeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractjaccsecurableeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usercollectiontype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loggableusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userversiontype" >
      <xs:complexContent>
       <xs:extension base="usertype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicparameterizedtype" >
      <xs:complexContent>
       <xs:extension base="parameterizedtype">
         <xs:sequence>
          <xs:element name="parameter_type" type="xs:string" />
          <xs:element name="is_dynamic" type="xs:string" />
          <xs:element name="returned_class" type="xs:string" />
          <xs:element name="is_primary_key" type="xs:string" />
          <xs:element name="entity" type="xs:string" />
          <xs:element name="property" type="xs:string" />
          <xs:element name="access_type" type="xs:string" />
          <xs:element name="xproperty" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enhancedusertype" >
      <xs:complexContent>
       <xs:extension base="usertype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sized" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterizedtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="replicationmode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transientpropertyvalueexception" >
      <xs:complexContent>
       <xs:extension base="transientobjectexception">
         <xs:sequence>
          <xs:element name="transiententityname" type="xs:string" />
          <xs:element name="propertyownerentityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyprojection" >
      <xs:complexContent>
       <xs:extension base="simpleprojection">
         <xs:sequence>
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="grouped" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="logicalexpression" >
      <xs:sequence>
        <xs:element name="lhs" type="criterion" nillable="true" minOccurs="0" />
        <xs:element name="rhs" type="criterion" nillable="true" minOccurs="0" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaquery" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="distinct" >
      <xs:sequence>
        <xs:element name="wrapped" type="projection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="ignorecase" type="xs:anyType" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalidentifier" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="conjunction" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizeexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="existssubqueryexpression" >
      <xs:complexContent>
       <xs:extension base="subqueryexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="property" >
      <xs:complexContent>
       <xs:extension base="propertyprojection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detachedcriteria" >
      <xs:sequence>
        <xs:element name="impl" type="criteriaimpl" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="criteria" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlprojection" >
      <xs:sequence>
        <xs:element name="sql" type="xs:string" />
        <xs:element name="groupby" type="xs:string" />
        <xs:element name="s" type="type" nillable="true" minOccurs="0" />
        <xs:element name="aliases" type="xs:string" />
        <xs:element name="columnaliases" type="xs:string" />
        <xs:element name="grouped" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="disjunction" >
      <xs:complexContent>
       <xs:extension base="junction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertysubqueryexpression" >
      <xs:complexContent>
       <xs:extension base="subqueryexpression">
         <xs:sequence>
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="emptyexpression" >
      <xs:complexContent>
       <xs:extension base="abstractemptinessexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enhancedprojection" >
      <xs:complexContent>
       <xs:extension base="projection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="matchmode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notemptyexpression" >
      <xs:complexContent>
       <xs:extension base="abstractemptinessexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rowcountprojection" >
      <xs:complexContent>
       <xs:extension base="simpleprojection">
         <xs:sequence>
          <xs:element name="args" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conjunction" >
      <xs:complexContent>
       <xs:extension base="junction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectionlist" >
      <xs:sequence>
        <xs:element name="elements" type="projection" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notnullexpression" >
      <xs:sequence>
        <xs:element name="no_values" type="typedvalue" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractemptinessexpression" >
      <xs:sequence>
        <xs:element name="no_values" type="typedvalue" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projection" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ilikeexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaspecification" >
      <xs:sequence>
        <xs:element name="/***thealiasthatreferstothe"root"entityofthecriteriaquery.*/root_alias" type="xs:string" />
        <xs:element name="fromaliastoentityinstance*/alias_to_entity_map" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="/***eachrowofresultsisaninstanceoftherootentity*/root_entity" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="/***eachrowofresultsisadistinctinstanceoftherootentity*/distinct_root_entity" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="*/projection" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="/***specifiesjoiningtoanentitybasedonaninnerjoin.**use{@linkorg.hibernate.sql.joype#inner_join}*/inner_join" type="xs:long" />
        <xs:element name="/***specifiesjoiningtoanentitybasedonafulljoin.**use{@linkorg.hibernate.sql.joype#full_join}*/full_join" type="xs:long" />
        <xs:element name="/***specifiesjoiningtoanentitybasedonaleftouterjoin.**use{@linkorg.hibernate.sql.joype#left_outer_join}*/left_join" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregateprojection" >
      <xs:complexContent>
       <xs:extension base="simpleprojection">
         <xs:sequence>
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="functionname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleprojection" >
      <xs:sequence>
        <xs:element name="num_reusable_aliases" type="xs:long" />
        <xs:element name="reusable_aliases" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="ascending" type="xs:anyType" />
        <xs:element name="ignorecase" type="xs:anyType" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="GeneratedName" type="nullprecedence" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="values" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="avgprojection" >
      <xs:complexContent>
       <xs:extension base="aggregateprojection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiereqexpression" >
      <xs:sequence>
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criterion" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyexpression" >
      <xs:sequence>
        <xs:element name="no_typed_values" type="typedvalue" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="otherpropertyname" type="xs:string" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="countprojection" >
      <xs:complexContent>
       <xs:extension base="aggregateprojection">
         <xs:sequence>
          <xs:element name="distinct" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="example" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
          <xs:element name="exampleentity" type="xs:anyType" />
          <xs:element name="selector" type="xs:anyType" />
          <xs:element name="islikeenabled" type="xs:anyType" />
          <xs:element name="escape" type="character" nillable="true" minOccurs="0" />
          <xs:element name="isignorecaseenabled" type="xs:anyType" />
          <xs:element name="" type="matchmode" nillable="true" minOccurs="0" />
          <xs:element name="excludedproperties" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullexpression" >
      <xs:sequence>
        <xs:element name="no_values" type="typedvalue" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifierprojection" >
      <xs:complexContent>
       <xs:extension base="simpleprojection">
         <xs:sequence>
          <xs:element name="grouped" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="restrictions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlcriterion" >
      <xs:sequence>
        <xs:element name="sql" type="xs:string" />
        <xs:element name="s" type="typedvalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertiessubqueryexpression" >
      <xs:complexContent>
       <xs:extension base="subqueryexpression">
         <xs:sequence>
          <xs:element name="propertynames" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subqueryexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="criteriaimpl" nillable="true" minOccurs="0" />
        <xs:element name="quantifier" type="xs:string" />
        <xs:element name="op" type="xs:string" />
        <xs:element name="params" type="queryparameters" nillable="true" minOccurs="0" />
        <xs:element name="s" type="type" nillable="true" minOccurs="0" />
        <xs:element name="innerquery" type="criteriaquerytranslator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="criterion" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expression" >
      <xs:complexContent>
       <xs:extension base="restrictions">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="junction" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="conditions" type="criterion" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subqueries" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="likeexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="escapechar" type="character" nillable="true" minOccurs="0" />
        <xs:element name="ignorecase" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projections" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplesubqueryexpression" >
      <xs:complexContent>
       <xs:extension base="subqueryexpression">
         <xs:sequence>
          <xs:element name="value" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aliasedprojection" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="projection" nillable="true" minOccurs="0" />
        <xs:element name="alias" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="betweenexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="lo" type="xs:anyType" />
        <xs:element name="hi" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="query" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializableclobproxy" >
      <xs:sequence>
        <xs:element name="proxy_interfaces" type="xs:anyType" />
        <xs:element name="transient" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobcreationcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blobimplementer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnnamecache" >
      <xs:sequence>
        <xs:element name="load_factor" type="xs:double" />
        <xs:element name="columnnametoindexcache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializableblobproxy" >
      <xs:sequence>
        <xs:element name="proxy_interfaces" type="xs:anyType" />
        <xs:element name="transient" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="noncontextuallobcreator" >
      <xs:complexContent>
       <xs:extension base="abstractlobcreator">
         <xs:sequence>
          <xs:element name="/***singletonaccess*/instance" type="noncontextuallobcreator" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrappedblob" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetwrapperproxy" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="sql_exception_helper" type="sqlexceptionhelper" nillable="true" minOccurs="0" />
        <xs:element name="rs" type="xs:anyType" />
        <xs:element name="GeneratedName" type="columnnamecache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="databasemetadatadialectresolutioninfoadapter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectresolver" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dialectresolutioninfo" >
      <xs:sequence>
        <xs:element name="/***constantusedtoindicatethatnoversionisdefined*/no_version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectresolutioninfosource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicdialectresolver" >
      <xs:sequence>
        <xs:element name="nametomatch" type="xs:string" />
        <xs:element name="majorversiontomatch" type="xs:long" />
        <xs:element name="minorversiontomatch" type="xs:long" />
        <xs:element name="dialect" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicsqlexceptionconverter" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***singletonaccess*/instance" type="basicsqlexceptionconverter" nillable="true" minOccurs="0" />
        <xs:element name="/***message*/msg" type="xs:string" />
        <xs:element name="converter" type="sqlstateconverter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectfactory" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standarddialectresolver" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***singletonaccess*/instance" type="standarddialectresolver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectfactoryinitiator" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="dialectfactoryinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectresolverinitiator" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="dialectresolverinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectresolverset" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="resolvers" type="dialectresolver" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectfactoryimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="strategyselector" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dialectresolver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="refcursorsupportinitiator" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="refcursorsupportinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardrefcursorsupport" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbcservices" nillable="true" minOccurs="0" />
        <xs:element name="refcursortypecode" type="xs:anyType" />
        <xs:element name="getresultsetbyposition" type="xs:anyType" />
        <xs:element name="getresultsetbyname" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="refcursorsupport" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="streamutils" >
      <xs:sequence>
        <xs:element name="/***defaultsizetouseforreadingbuffers.*/default_chunk_size" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="characterstream" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formatter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ddlformatterimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="ddlformatterimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobcreatorbuilder" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="usecontextuallobcreation" type="xs:anyType" />
        <xs:element name="no_arg_sig" type="xs:anyType" />
        <xs:element name="no_args" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcservicesinitiator" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="jdbcservicesinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="binarystreamimpl" >
      <xs:complexContent>
       <xs:extension base="bytearrayinputstream">
         <xs:sequence>
          <xs:element name="length" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="characterstreamimpl" >
      <xs:sequence>
        <xs:element name="length" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formatstyle" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="formatter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbccoordinatorimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="transientlogicalconnection" type="logicalconnectionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="transientowner" type="jdbcsessionowner" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="connectionreleasemode" nillable="true" minOccurs="0" />
        <xs:element name="transientcurrent" type="batch" nillable="true" minOccurs="0" />
        <xs:element name="transienttransactiontimeoutinstant" type="xs:long" />
        <xs:element name="/***thisisamarkervaluetoinsertinsteadofnullvaluesforwhenastatementgetsregisteredinxref*buthasnoassociatedresultsetsregistered.thisisusefultoefficientlycheckagainstduplicate*registrationbutyou'llhavetocheckagainstinstanceequalityratherthannullbeforeattempting*toaddelementstothisset.*/empty_resultset" type="xs:anyType" />
        <xs:element name="xref" type="xs:anyType" />
        <xs:element name="unassociatedresultsets" type="xs:anyType" />
        <xs:element name="transientexceptionhelper" type="sqlexceptionhelper" nillable="true" minOccurs="0" />
        <xs:element name="lastquery" type="statement" nillable="true" minOccurs="0" />
        <xs:element name="isusersuppliedconnection" type="xs:anyType" />
        <xs:element name="/***iftrue,manually(andtemporarily)circumventaggressivereleaseprocessing.*/releasesenabled" type="xs:anyType" />
        <xs:element name="flushdepth" type="xs:long" />
        <xs:element name="transient" type="statementpreparer" nillable="true" minOccurs="0" />
        <xs:element name="transientresultsetextractor" type="resultsetreturn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicformatterimpl" >
      <xs:sequence>
        <xs:element name="begin_clauses" type="xs:anyType" />
        <xs:element name="end_clauses" type="xs:anyType" />
        <xs:element name="logical" type="xs:anyType" />
        <xs:element name="quantifiers" type="xs:anyType" />
        <xs:element name="dml" type="xs:anyType" />
        <xs:element name="misc" type="xs:anyType" />
        <xs:element name="indent_" type="xs:string" />
        <xs:element name="initial" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetreturnimpl" >
      <xs:complexContent>
       <xs:extension base="statement>">
         <xs:sequence>
          <xs:element name="" type="jdbccoordinator" nillable="true" minOccurs="0" />
          <xs:element name="" type="dialect" nillable="true" minOccurs="0" />
          <xs:element name="" type="sqlstatementlogger" nillable="true" minOccurs="0" />
          <xs:element name="" type="sqlexceptionhelper" nillable="true" minOccurs="0" />
          <xs:element name="isjdbc4" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetwrapperimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statementpreparerimpl" >
      <xs:complexContent>
       <xs:extension base="statementpreparationtemplate">
         <xs:sequence>
          <xs:element name="jdbccoordinator" type="jdbccoordinatorimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcservicesimpl" >
      <xs:sequence>
        <xs:element name="serviceregistry" type="serviceregistryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbcenvironment" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="multitenancystrategy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlstatementlogger" nillable="true" minOccurs="0" />
        <xs:element name="resultsetwrapper" type="resultsetwrapperimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nclobimplementer" >
      <xs:complexContent>
       <xs:extension base="clobimplementer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemanameresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobcreatorbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namequalifiersupport" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifierhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="qualifiedobjectnameformatter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extracteddatabasemetadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ansisqlkeywords" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="ansisqlkeywords" nillable="true" minOccurs="0" />
        <xs:element name="keywordssql2003" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiercasestrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcenvironment" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlstatetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifierhelperbuilder" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbcenvironment" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="namequalifiersupport" nillable="true" minOccurs="0" />
        <xs:element name="reservedwords" type="xs:anyType" />
        <xs:element name="globallyquoteidentifiers" type="xs:anyType" />
        <xs:element name="autoquotekeywords" type="xs:anyType" />
        <xs:element name="unquotedcasestrategy" type="identifiercasestrategy" nillable="true" minOccurs="0" />
        <xs:element name="quotedcasestrategy" type="identifiercasestrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcenvironmentinitiator" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="instance" type="jdbcenvironmentinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultschemanameresolver" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="instance" type="defaultschemanameresolver" nillable="true" minOccurs="0" />
        <xs:element name="delegate" type="schemanameresolver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extracteddatabasemetadataimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="jdbcenvironment" nillable="true" minOccurs="0" />
        <xs:element name="connectioncatalogname" type="xs:string" />
        <xs:element name="connectionschemaname" type="xs:string" />
        <xs:element name="supportsrefcursors" type="xs:anyType" />
        <xs:element name="supportsnamedparameters" type="xs:anyType" />
        <xs:element name="supportsscrollableresults" type="xs:anyType" />
        <xs:element name="supportsgetgeneratedkeys" type="xs:anyType" />
        <xs:element name="supportsbatchupdates" type="xs:anyType" />
        <xs:element name="supportsdatadefinitionintransaction" type="xs:anyType" />
        <xs:element name="doesdatadefinitioncausetransactioncommit" type="xs:anyType" />
        <xs:element name="GeneratedName" type="sqlstatetype" nillable="true" minOccurs="0" />
        <xs:element name="loblocatorupdatecopy" type="xs:anyType" />
        <xs:element name="extrakeywords" type="xs:anyType" />
        <xs:element name="typeinfoset" type="typeinfo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcenvironmentimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlexceptionhelper" nillable="true" minOccurs="0" />
        <xs:element name="extractedmetadatasupport" type="extracteddatabasemetadata" nillable="true" minOccurs="0" />
        <xs:element name="currentcatalog" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="currentschema" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="identifierhelper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="qualifiedobjectnameformatter" nillable="true" minOccurs="0" />
        <xs:element name="lobcreatorbuilder" type="lobcreatorbuilderimpl" nillable="true" minOccurs="0" />
        <xs:element name="typeinfoset" type="typeinfo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="namequalifiersupport" nillable="true" minOccurs="0" />
        <xs:element name="schema_name_resolver" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobcreatorbuilderimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="usecontextuallobcreation" type="xs:anyType" />
        <xs:element name="no_arg_sig" type="xs:anyType" />
        <xs:element name="no_args" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="normalizingidentifierhelperimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbcenvironment" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="namequalifiersupport" nillable="true" minOccurs="0" />
        <xs:element name="globallyquoteidentifiers" type="xs:anyType" />
        <xs:element name="autoquotekeywords" type="xs:anyType" />
        <xs:element name="reservedwords" type="xs:anyType" />
        <xs:element name="unquotedcasestrategy" type="identifiercasestrategy" nillable="true" minOccurs="0" />
        <xs:element name="quotedcasestrategy" type="identifiercasestrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="qualifiedobjectnameformatterstandardimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readerinputstream" >
      <xs:complexContent>
       <xs:extension base="inputstream">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nclobproxy" >
      <xs:complexContent>
       <xs:extension base="{@link">
         <xs:sequence>
          <xs:element name="proxy_interfaces" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrappedclob" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializablenclobproxy" >
      <xs:complexContent>
       <xs:extension base="serializableclobproxy">
         <xs:sequence>
          <xs:element name="proxy_interfaces" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binarystream" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextuallobcreator" >
      <xs:complexContent>
       <xs:extension base="abstractlobcreator">
         <xs:sequence>
          <xs:element name="" type="lobcreationcontext" nillable="true" minOccurs="0" />
          <xs:element name="/***callbackforperformingcontextualblobcreation*/create_blob_callback" type="xs:anyType" />
          <xs:element name="/***callbackforperformingcontextualclobcreation*/create_clob_callback" type="xs:anyType" />
          <xs:element name="/***callbackforperformingcontextualnclobcreation*/create_nclob_callback" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrappednclob" >
      <xs:complexContent>
       <xs:extension base="wrappedclob">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchbuilderinitiator" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="batchbuilderinitiator" nillable="true" minOccurs="0" />
        <xs:element name="/***namesthebatchbuilderimplementationtouse.*/builder" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchbuilderimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="size" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractbatchimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="key" type="batchkey" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbccoordinator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlstatementlogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlexceptionhelper" nillable="true" minOccurs="0" />
        <xs:element name="statements" type="xs:anyType" />
        <xs:element name="observers" type="batchobserver" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonbatchingbatch" >
      <xs:complexContent>
       <xs:extension base="abstractbatchimpl">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="" type="jdbccoordinator" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicbatchkey" >
      <xs:sequence>
        <xs:element name="comparison" type="xs:string" />
        <xs:element name="statementcount" type="xs:long" />
        <xs:element name="GeneratedName" type="expectation" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchingbatch" >
      <xs:complexContent>
       <xs:extension base="abstractbatchimpl">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="//implnote:untilhhh-5797isfixed,therewillonlybe1statementinabatchbatchsize" type="xs:long" />
          <xs:element name="batchposition" type="xs:long" />
          <xs:element name="batchexecuted" type="xs:anyType" />
          <xs:element name="statementposition" type="xs:long" />
          <xs:element name="currentstatementsql" type="xs:string" />
          <xs:element name="currentstatement" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchkey" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchbuilder" >
      <xs:complexContent>
       <xs:extension base="service,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batch" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchobserver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blobproxy" >
      <xs:sequence>
        <xs:element name="proxy_interfaces" type="xs:anyType" />
        <xs:element name="GeneratedName" type="binarystream" nillable="true" minOccurs="0" />
        <xs:element name="needsreset" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clobproxy" >
      <xs:sequence>
        <xs:element name="proxy_interfaces" type="xs:anyType" />
        <xs:element name="GeneratedName" type="characterstream" nillable="true" minOccurs="0" />
        <xs:element name="needsreset" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobcreator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractlobcreator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractmultitenantconnectionprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectionprovider" >
      <xs:complexContent>
       <xs:extension base="service,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourcebasedmultitenantconnectionproviderimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***identifiesthedatasourcenametousefor{@link#selectanydatasource}handling*/tenant_identifier_to_use_for_any_key" type="xs:string" />
          <xs:element name="datasourcemap" type="xs:anyType" />
          <xs:element name="" type="jndiservice" nillable="true" minOccurs="0" />
          <xs:element name="tenantidentifierforany" type="xs:string" />
          <xs:element name="basejndinamespace" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multitenantconnectionprovider" >
      <xs:complexContent>
       <xs:extension base="service,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcconnectionaccess" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractdatasourcebasedmultitenantconnectionproviderimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="drivermanagerconnectioncreator" >
      <xs:complexContent>
       <xs:extension base="basicconnectioncreator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicconnectioncreator" >
      <xs:sequence>
        <xs:element name="serviceregistry" type="serviceregistryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="url" type="xs:string" />
        <xs:element name="connectionprops" type="xs:anyType" />
        <xs:element name="autocommit" type="xs:anyType" />
        <xs:element name="isolation" type="xs:anyType" />
        <xs:element name="simpleconverteraccess" type="sqlexceptionconversiondelegate" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pooledconnections" >
      <xs:sequence>
        <xs:element name="connections" type="xs:anyType" />
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="connectioncreator" nillable="true" minOccurs="0" />
        <xs:element name="autocommit" type="xs:anyType" />
        <xs:element name="minsize" type="xs:long" />
        <xs:element name="maxsize" type="xs:long" />
        <xs:element name="primed" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectioncreator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multitenantconnectionproviderinitiator" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="/***singletonaccess*/instance" type="multitenantconnectionproviderinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="drivermanagerconnectionproviderimpl" >
      <xs:sequence>
        <xs:element name="log" type="connectionpoolinglogger" nillable="true" minOccurs="0" />
        <xs:element name="min_size" type="xs:string" />
        <xs:element name="initial_size" type="xs:string" />
        <xs:element name="//intimeunit.secondsvalidation_interval" type="xs:string" />
        <xs:element name="active" type="xs:anyType" />
        <xs:element name="GeneratedName" type="connectioncreator" nillable="true" minOccurs="0" />
        <xs:element name="executorservice" type="xs:anyType" />
        <xs:element name="pool" type="pooledconnections" nillable="true" minOccurs="0" />
        <xs:element name="//createthepool~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~serviceregistry" type="serviceregistryimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourceconnectionproviderimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="user" type="xs:string" />
        <xs:element name="pass" type="xs:string" />
        <xs:element name="usecredentials" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jndiservice" nillable="true" minOccurs="0" />
        <xs:element name="available" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="driverconnectioncreator" >
      <xs:complexContent>
       <xs:extension base="basicconnectioncreator">
         <xs:sequence>
          <xs:element name="" type="driver" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectioncreatorbuilder" >
      <xs:sequence>
        <xs:element name="serviceregistry" type="serviceregistryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="driver" nillable="true" minOccurs="0" />
        <xs:element name="url" type="xs:string" />
        <xs:element name="connectionprops" type="xs:anyType" />
        <xs:element name="autocommit" type="xs:anyType" />
        <xs:element name="isolation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usersuppliedconnectionproviderimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectionproviderinitiator" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***singletonaccess*/instance" type="connectionproviderinitiator" nillable="true" minOccurs="0" />
        <xs:element name="/***thestrategyforc3p0connectionpooling*/c3p0_strategy" type="xs:string" />
        <xs:element name="/***thestrategyforproxoolconnectionpooling*/proxool_strategy" type="xs:string" />
        <xs:element name="/***thestrategyforproxoolconnectionpooling*/hikari_strategy" type="xs:string" />
        <xs:element name="/***noidea.isthisevenstillused?*/injection_data" type="xs:string" />
        <xs:element name="legacy_connection_provider_mapping" type="xs:anyType" />
        <xs:element name="special_properties" type="xs:anyType" />
        <xs:element name="isolation_value_map" type="xs:anyType" />
        <xs:element name="isolation_value_constant_name_map" type="xs:anyType" />
        <xs:element name="isolation_value_nice_name_map" type="xs:anyType" />
        <xs:element name="conditional_properties" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidatablewrapper" >
      <xs:complexContent>
       <xs:extension base="jdbcwrapper<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="connectionobserver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typesearchability" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlstatementlogger" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="logtostdout" type="xs:anyType" />
        <xs:element name="format" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typeinfo" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="typename" type="xs:string" />
        <xs:element name="jdbctypecode" type="xs:long" />
        <xs:element name="createparams" type="xs:string" />
        <xs:element name="unsigned" type="xs:anyType" />
        <xs:element name="precision" type="xs:long" />
        <xs:element name="minimumscale" type="xs:long" />
        <xs:element name="maximumscale" type="xs:long" />
        <xs:element name="fixedprecisionscale" type="xs:anyType" />
        <xs:element name="literalprefix" type="xs:string" />
        <xs:element name="literalsuffix" type="xs:string" />
        <xs:element name="casesensitive" type="xs:anyType" />
        <xs:element name="searchability" type="typesearchability" nillable="true" minOccurs="0" />
        <xs:element name="nullability" type="typenullability" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nondurableconnectionobserver" >
      <xs:complexContent>
       <xs:extension base="connectionobserver">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typenullability" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetreturn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcwrapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statementpreparer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlexceptionhelper" >
      <xs:complexContent>
       <xs:extension base="warninghandlerloggingsupport">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="default_exception_msg" type="xs:string" />
          <xs:element name="default_warning_msg" type="xs:string" />
          <xs:element name="default_converter" type="sqlexceptionconverter" nillable="true" minOccurs="0" />
          <xs:element name="" type="sqlexceptionconverter" nillable="true" minOccurs="0" />
          <xs:element name="/***accesstothestandardhandlerforloggingwarnings*/standard_warning_handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbccoordinator" >
      <xs:complexContent>
       <xs:extension base="serializable,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemanameresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetwrapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcservices" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="connectionobserveradapter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clobimplementer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="size" >
      <xs:sequence>
        <xs:element name="default_length" type="xs:long" />
        <xs:element name="default_precision" type="xs:long" />
        <xs:element name="default_scale" type="xs:long" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="precision" type="xs:long" />
        <xs:element name="scale" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchstyle" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetch" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="association" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchprofile" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="fetches" type="xs:anyType" />
        <xs:element name="containsjoinfetchedcollection" type="xs:anyType" />
        <xs:element name="containsjoinfetchedbag" type="xs:anyType" />
        <xs:element name="bagjoin" type="fetch" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="association" >
      <xs:sequence>
        <xs:element name="owner" type="entitypersister" nillable="true" minOccurs="0" />
        <xs:element name="associationpath" type="xs:string" />
        <xs:element name="role" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlockstyle" >
      <xs:sequence>
        <xs:element name="oldcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinsequence" >
      <xs:sequence>
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="conditions" type="xs:anyType" />
        <xs:element name="joins" type="join" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="usethetastyle" type="xs:anyType" />
        <xs:element name="rootalias" type="xs:string" />
        <xs:element name="root" type="joinable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="next" type="joinsequence" nillable="true" minOccurs="0" />
        <xs:element name="isfrompart" type="xs:anyType" />
        <xs:element name="treatasdeclarations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutableentityentryfactory" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="immutableentityentryfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonnullabletransientdependencies" >
      <xs:sequence>
        <xs:element name="propertypathsbytransiententity" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutableentityentryfactory" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="mutableentityentryfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="twophaseload" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutableentityentry" >
      <xs:complexContent>
       <xs:extension base="abstractentityentry">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessioneventlistenermanagerimpl" >
      <xs:sequence>
        <xs:element name="listenerlist" type="sessioneventlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityentryextrastateholder" >
      <xs:complexContent>
       <xs:extension base="entityentryextrastate>">
         <xs:sequence>
          <xs:element name="next" type="entityentryextrastate" nillable="true" minOccurs="0" />
          <xs:element name="deletedstate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statefulpersistencecontext" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="trace_enabled" type="xs:anyType" />
        <xs:element name="init_coll_size" type="xs:long" />
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="entitiesbykey" type="xs:anyType" />
        <xs:element name="entitiesbyuniquekey" type="xs:anyType" />
        <xs:element name="GeneratedName" type="entityentrycontext" nillable="true" minOccurs="0" />
        <xs:element name="proxiesbykey" type="xs:anyType" />
        <xs:element name="entitysnapshotsbykey" type="xs:anyType" />
        <xs:element name="arrayholders" type="xs:anyType" />
        <xs:element name="collectionentries" type="xs:anyType" />
        <xs:element name="collectionsbykey" type="xs:anyType" />
        <xs:element name="//setofentitykeysofdeletedobjectsnullifiableentitykeys" type="entitykey" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="//propertiesthatwehavetriedtoload,andnotfoundinthedatabasenullassociations" type="associationkey" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="//alistofcollectionwrappersthatwereinstantiatingduringresultset//processing,thatwewillneedtoinitializeattheendofthequerynonlazycollections" type="persistentcollection" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="unownedcollections" type="xs:anyType" />
        <xs:element name="parentsbychild" type="xs:anyType" />
        <xs:element name="cascading" type="xs:long" />
        <xs:element name="loadcounter" type="xs:long" />
        <xs:element name="removeorphanbeforeupdatescounter" type="xs:long" />
        <xs:element name="flushing" type="xs:anyType" />
        <xs:element name="defaultreadonly" type="xs:anyType" />
        <xs:element name="hasnonreadonlyentities" type="xs:anyType" />
        <xs:element name="GeneratedName" type="loadcontexts" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="batchfetchqueue" nillable="true" minOccurs="0" />
        <xs:element name="insertedkeysmap" type="xs:anyType" />
        <xs:element name="//naturalidresolutionhandling~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" type="naturalidxrefdelegate" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullability" >
      <xs:sequence>
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="checknullability" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutableentityentry" >
      <xs:complexContent>
       <xs:extension base="abstractentityentry">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascade" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collections" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalidxrefdelegate" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="persistencecontext" type="statefulpersistencecontext" nillable="true" minOccurs="0" />
        <xs:element name="naturalidresolutioncachemap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterbinder" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statisticalloggingsessioneventlistener" >
      <xs:complexContent>
       <xs:extension base="basesessioneventlistener">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="//cumulativestate~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~jdbcconnectionacquisitioncount" type="xs:long" />
          <xs:element name="jdbcconnectionacquisitiontime" type="xs:long" />
          <xs:element name="jdbcconnectionreleasecount" type="xs:long" />
          <xs:element name="jdbcconnectionreleasetime" type="xs:long" />
          <xs:element name="jdbcpreparestatementcount" type="xs:long" />
          <xs:element name="jdbcpreparestatementtime" type="xs:long" />
          <xs:element name="jdbcexecutestatementcount" type="xs:long" />
          <xs:element name="jdbcexecutestatementtime" type="xs:long" />
          <xs:element name="jdbcexecutebatchcount" type="xs:long" />
          <xs:element name="jdbcexecutebatchtime" type="xs:long" />
          <xs:element name="cacheputcount" type="xs:long" />
          <xs:element name="cacheputtime" type="xs:long" />
          <xs:element name="cachehitcount" type="xs:long" />
          <xs:element name="cachehittime" type="xs:long" />
          <xs:element name="cachemisscount" type="xs:long" />
          <xs:element name="cachemisstime" type="xs:long" />
          <xs:element name="flushcount" type="xs:long" />
          <xs:element name="flushentitycount" type="xs:long" />
          <xs:element name="flushcollectioncount" type="xs:long" />
          <xs:element name="flushtime" type="xs:long" />
          <xs:element name="partialflushcount" type="xs:long" />
          <xs:element name="partialflushentitycount" type="xs:long" />
          <xs:element name="partialflushcollectioncount" type="xs:long" />
          <xs:element name="partialflushtime" type="xs:long" />
          <xs:element name="//jdbcconnectionacquisition~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~jdbcconnectionacquisitionstart" type="xs:long" />
          <xs:element name="//jdbcconnectionrelease~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~jdbcconnectionreleasestart" type="xs:long" />
          <xs:element name="//jdbcstatementpreparation~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~jdbcprepstart" type="xs:long" />
          <xs:element name="//jdbcstatementexecution~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~jdbcexecutionstart" type="xs:long" />
          <xs:element name="//jdbcbatchexecution~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~jdbcbatchexecutionstart" type="xs:long" />
          <xs:element name="//caching-put~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~cacheputstart" type="xs:long" />
          <xs:element name="//caching-get~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~cachegetstart" type="xs:long" />
          <xs:element name="//flushing~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~flushstart" type="xs:long" />
          <xs:element name="//partial-flushing~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~partialflushstart" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versioning" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityentrycontext" >
      <xs:complexContent>
       <xs:extension base="map.entry<object,entityentry>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="transienthead" type="managedentity" nillable="true" minOccurs="0" />
          <xs:element name="transienttail" type="managedentity" nillable="true" minOccurs="0" />
          <xs:element name="transientcount" type="xs:long" />
          <xs:element name="nonenhancedentityxref" type="xs:anyType" />
          <xs:element name="reentrantsafeentries" type="xs:anyType" />
          <xs:element name="transientdirty" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeys" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadepoint" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractentityentry" >
      <xs:complexContent>
       <xs:extension base="entityentryextrastate>">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="loadedstate" type="xs:anyType" />
          <xs:element name="version" type="xs:anyType" />
          <xs:element name="//permanentbutweonlyneedtheentitynamestateinanontransientwaypersister" type="entitypersister" nillable="true" minOccurs="0" />
          <xs:element name="//cached(lazy-initialized)transientcached" type="entitykey" nillable="true" minOccurs="0" />
          <xs:element name="transientrowid" type="xs:anyType" />
          <xs:element name="transient" type="persistencecontext" nillable="true" minOccurs="0" />
          <xs:element name="next" type="entityentryextrastate" nillable="true" minOccurs="0" />
          <xs:element name="*representingenumvaluesbytheirordinalvalueisacceptableforourcaseasthisvalueitselfisnever*serializedordeserializedandthusisnotaffectedshouldordinalvalueschange.*/transientcompressedstate" type="xs:long" />
          <xs:element name="default_deleted_state" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsavedvaluefactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parametermetadata" >
      <xs:sequence>
        <xs:element name="empty_ordinals" type="ordinalparameterdescriptor" nillable="true" minOccurs="0" />
        <xs:element name="ordinaldescriptors" type="ordinalparameterdescriptor" nillable="true" minOccurs="0" />
        <xs:element name="nameddescriptormap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryplan" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="sourcequery" type="xs:string" />
        <xs:element name="GeneratedName" type="customquery" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryrootreturn" >
      <xs:complexContent>
       <xs:extension base="nativesqlquerynonscalarreturn">
         <xs:sequence>
          <xs:element name="returnentityname" type="xs:string" />
          <xs:element name="hashcode" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativesqlquerynonscalarreturn" >
      <xs:sequence>
        <xs:element name="alias" type="xs:string" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="propertyresults" type="xs:anyType" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryconstructorreturn" >
      <xs:sequence>
        <xs:element name="target" type="xs:anyType" />
        <xs:element name="columnreturns" type="nativesqlqueryscalarreturn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryscalarreturn" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="columnalias" type="xs:string" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryjoinreturn" >
      <xs:complexContent>
       <xs:extension base="nativesqlquerynonscalarreturn">
         <xs:sequence>
          <xs:element name="owneralias" type="xs:string" />
          <xs:element name="ownerproperty" type="xs:string" />
          <xs:element name="hashcode" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryreturn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlquerycollectionreturn" >
      <xs:complexContent>
       <xs:extension base="nativesqlquerynonscalarreturn">
         <xs:sequence>
          <xs:element name="ownerentityname" type="xs:string" />
          <xs:element name="ownerproperty" type="xs:string" />
          <xs:element name="hashcode" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryspecification" >
      <xs:sequence>
        <xs:element name="query" type="xs:string" />
        <xs:element name="queryreturns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" />
        <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativequeryinterpreterinitiator" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="nativequeryinterpreterinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ordinalparameterdescriptor" >
      <xs:sequence>
        <xs:element name="ordinalposition" type="xs:long" />
        <xs:element name="expected" type="type" nillable="true" minOccurs="0" />
        <xs:element name="sourcelocation" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hqlqueryplan" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="hereforshallow/non-shallowqueries...sourcequery" type="xs:string" />
        <xs:element name="translators" type="querytranslator" nillable="true" minOccurs="0" />
        <xs:element name="sqls" type="xs:string" />
        <xs:element name="GeneratedName" type="parametermetadata" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="returnmetadata" nillable="true" minOccurs="0" />
        <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
        <xs:element name="enabledfilternames" type="xs:anyType" />
        <xs:element name="shallow" type="xs:anyType" />
        <xs:element name="/***we'llcheckthetracelevelonlyonceperinstance*/traceenabled" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paramlocationrecognizer" >
      <xs:sequence>
        <xs:element name="namedparameterdescriptions" type="xs:anyType" />
        <xs:element name="ordinalparameterlocationlist" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryplancache" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***thedefaultstrongreferencecount.*/default_parameter_metadata_max_count" type="xs:long" />
        <xs:element name="/***thedefaultsoftreferencecount.*/default_query_plan_max_count" type="xs:long" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="/***thecacheoftheactualplans...*/queryplancache" type="boundedconcurrenthashmap" nillable="true" minOccurs="0" />
        <xs:element name="parametermetadatacache" type="xs:anyType" />
        <xs:element name="service" type="nativequeryinterpreter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitygraphqueryhint" >
      <xs:sequence>
        <xs:element name="originentitygraph" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterparser" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedparameterdescriptor" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="expected" type="type" nillable="true" minOccurs="0" />
        <xs:element name="sourcelocations" type="xs:long" />
        <xs:element name="jpastyle" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterqueryplan" >
      <xs:complexContent>
       <xs:extension base="an">
         <xs:sequence>
          <xs:element name="collectionrole" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativequeryinterpreter" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="returnmetadata" >
      <xs:sequence>
        <xs:element name="returnaliases" type="xs:string" />
        <xs:element name="returns" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativequeryinterpreterstandardimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="nativequeryinterpreterstandardimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchstrategy" >
      <xs:sequence>
        <xs:element name="timing" type="fetchtiming" nillable="true" minOccurs="0" />
        <xs:element name="style" type="fetchstyle" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchtiming" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jndiexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jndinameexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jndiservice" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jndiserviceinitiator" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="jndiserviceinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jndiserviceimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="initialcontextsettings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="isolationdelegate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronizationregistry" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinstatus" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionobserver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtaplatformexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtaplatformprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtaplatform" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtaplatformresolver" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtaplatforminitiator" >
      <xs:sequence>
        <xs:element name="instance" type="jtaplatforminitiator" nillable="true" minOccurs="0" />
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronizationregistryaccess" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sunonejtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="tm_name" type="xs:string" />
          <xs:element name="ut_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jotmjtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="tm_class_name" type="xs:string" />
          <xs:element name="ut_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="weblogicjtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="tm_name" type="xs:string" />
          <xs:element name="ut_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jrun4jtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="tm_name" type="xs:string" />
          <xs:element name="ut_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractjtaplatform" >
      <xs:sequence>
        <xs:element name="cachetransactionmanager" type="xs:anyType" />
        <xs:element name="cacheusertransaction" type="xs:anyType" />
        <xs:element name="serviceregistry" type="serviceregistryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="tmsynchronizationstrategy" type="jtasynchronizationstrategy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardjtaplatformresolver" >
      <xs:sequence>
        <xs:element name="instance" type="standardjtaplatformresolver" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jbossappserverjtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="as7_tm_name" type="xs:string" />
          <xs:element name="as4_tm_name" type="xs:string" />
          <xs:element name="jboss_ut_name" type="xs:string" />
          <xs:element name="ut_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtasynchronizationstrategy" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionmanageraccess" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="websphereextendedjtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="ut_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionmanagerbasedsynchronizationstrategy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="transactionmanageraccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webspherejtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="transactionmanageraccess" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resinjtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="tm_name" type="xs:string" />
          <xs:element name="ut_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orionjtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="tm_name" type="xs:string" />
          <xs:element name="ut_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nojtaplatform" >
      <xs:sequence>
        <xs:element name="instance" type="nojtaplatform" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jonasjtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="ut_name" type="xs:string" />
          <xs:element name="tm_class_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="synchronizationregistrybasedsynchronizationstrategy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="synchronizationregistryaccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="borlandenterpriseserverjtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="tm_name" type="xs:string" />
          <xs:element name="ut_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bitronixjtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="tm_class_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtaplatformresolverinitiator" >
      <xs:sequence>
        <xs:element name="instance" type="jtaplatformresolverinitiator" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jbossstandalonejtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="jboss_tm_class_name" type="xs:string" />
          <xs:element name="jboss_ut_class_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oc4jjtaplatform" >
      <xs:complexContent>
       <xs:extension base="abstractjtaplatform">
         <xs:sequence>
          <xs:element name="tm_name" type="xs:string" />
          <xs:element name="ut_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullsynchronizationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtastatushelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronizationregistryimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="synchronizations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="transactioncoordinator" nillable="true" minOccurs="0" />
        <xs:element name="control" type="xs:anyType" />
        <xs:element name="valid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationserviceimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="settings" type="map" nillable="true" minOccurs="0" />
        <xs:element name="serviceregistry" type="serviceregistryimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationserviceinitiator" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="configurationserviceinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationservice" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardconverters" >
      <xs:sequence>
        <xs:element name="boolean" type="xs:anyType" />
        <xs:element name="string" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetmappingdefinition" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="queryreturns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateiterator" >
      <xs:complexContent>
       <xs:extension base="iterator,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadcontexts" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="persistencecontext" nillable="true" minOccurs="0" />
        <xs:element name="collectionloadcontexts" type="xs:anyType" />
        <xs:element name="entityloadcontexts" type="xs:anyType" />
        <xs:element name="xrefloadingcollectionentries" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadingcollectionentry" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="persister" type="collectionpersister" nillable="true" minOccurs="0" />
        <xs:element name="key" type="xs:anyType" />
        <xs:element name="collection" type="persistentcollection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityloadcontext" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="loadcontexts" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="//todo:needmap?theprobisaproperkey,right?hydratingentities" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionloadcontext" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="loadcontexts" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="localloadingcollectionkeys" type="collectionkey" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityentryfactory" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valueinclusion" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rowselection" >
      <xs:sequence>
        <xs:element name="firstrow" type="xs:anyType" />
        <xs:element name="maxrows" type="xs:anyType" />
        <xs:element name="timeout" type="xs:anyType" />
        <xs:element name="fetchsize" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionentry" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="//attributesmaintainedbetweenflushcycles//session-start/post-flushpersistentstatesnapshot" type="xs:anyType" />
        <xs:element name="//allowthecollectionsnapshottobeserializedrole" type="xs:string" />
        <xs:element name="//"loaded"meansthereferencethatisconsistent//withthecurrentdatabasestatetransientloadedpersister" type="collectionpersister" nillable="true" minOccurs="0" />
        <xs:element name="loadedkey" type="xs:anyType" />
        <xs:element name="//attributesusedonlyduringflushcycle//duringflush,wenavigatetheobjectgraphto//collectionsanddecidewhattodowiththemtransientreached" type="xs:anyType" />
        <xs:element name="transientprocessed" type="xs:anyType" />
        <xs:element name="transientdoupdate" type="xs:anyType" />
        <xs:element name="transientdoremove" type="xs:anyType" />
        <xs:element name="transientdorecreate" type="xs:anyType" />
        <xs:element name="//ifweinstantiateacollectionduringtheflush()process,//wemustignoreitfortherestoftheflush()transientignore" type="xs:anyType" />
        <xs:element name="//"current"meansthereferencethatwasfoundduringflush()transientcurrentpersister" type="collectionpersister" nillable="true" minOccurs="0" />
        <xs:element name="transientcurrentkey" type="xs:anyType" />
        <xs:element name="frommerge" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedsqlquerydefinitionbuilder" >
      <xs:complexContent>
       <xs:extension base="namedquerydefinitionbuilder">
         <xs:sequence>
          <xs:element name="queryreturns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" />
          <xs:element name="queryspaces" type="xs:anyType" />
          <xs:element name="callable" type="xs:anyType" />
          <xs:element name="resultsetref" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unsavedvaluestrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryparameters" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="/***symbolsusedtosplitsqlintotokensin{@link#processfilters(,map,sessionfactoryimplementor)}.*/symbols" type="xs:string" />
        <xs:element name="positionalparameters" type="type" nillable="true" minOccurs="0" />
        <xs:element name="positionalparametervalues" type="xs:anyType" />
        <xs:element name="namedparameters" type="xs:anyType" />
        <xs:element name="GeneratedName" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="rowselection" nillable="true" minOccurs="0" />
        <xs:element name="cacheable" type="xs:anyType" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="queryhints" type="xs:anyType" />
        <xs:element name="GeneratedName" type="scrollmode" nillable="true" minOccurs="0" />
        <xs:element name="collectionkeys" type="xs:anyType" />
        <xs:element name="optional" type="xs:anyType" />
        <xs:element name="optionalentityname" type="xs:string" />
        <xs:element name="optionalid" type="xs:anyType" />
        <xs:element name="isreadonlyinitialized" type="xs:anyType" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="callable" type="xs:anyType" />
        <xs:element name="autodiscovertypes" type="xs:anyType" />
        <xs:element name="isnaturalkeylookup" type="xs:anyType" />
        <xs:element name="//whyisallothersnon?" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="processedsql" type="xs:string" />
        <xs:element name="processedpositionalparameters" type="type" nillable="true" minOccurs="0" />
        <xs:element name="processedpositionalparametervalues" type="xs:anyType" />
        <xs:element name="queryplan" type="hqlqueryplan" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheimplementor" >
      <xs:complexContent>
       <xs:extension base="service,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistencecontext" >
      <xs:sequence>
        <xs:element name="/***markerusedtoindicate(viareferencechecking)thatnorowwasreturned.*/no_row" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterdefinition" >
      <xs:sequence>
        <xs:element name="filtername" type="xs:string" />
        <xs:element name="defaultfiltercondition" type="xs:string" />
        <xs:element name="parametertypes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadestyle" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadingactions" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#delete(object)*/delete" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#lock(object,org.hibernate.lockmode)*/lock" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#refresh(object)*/refresh" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#evict(object)*/evict" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#saveorupdate(object)*/save_update" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#merge(object)*/merge" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#persist(object)*/persist" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***executepersistduringflushtime**@seeorg.hibernate.session#persist(object)*/persist_on_flush" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#replicate*/replicate" type="cascadingaction" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionvalue" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="/***assumethetransientinstanceisnewlyinstantiatediftheversion*isnull,otherwiseassumeitisadetachedinstance.*/null" type="versionvalue" nillable="true" minOccurs="0" />
        <xs:element name="/***assumethetransientinstanceisnewlyinstantiatediftheversion*isnull,otherwisedefertotheidentifierunsaved-value.*/undefined" type="versionvalue" nillable="true" minOccurs="0" />
        <xs:element name="/***assumethetransientinstanceisnewlyinstantiatediftheversion*isnegative,otherwiseassumeitisadetachedinstance.*/negative" type="versionvalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositetracker" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentattributeinterceptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadestyles" >
      <xs:complexContent>
       <xs:extension base="basecascadestyle">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="/***save/delete/update/evict/lock/replicate/merge/persist+deleteorphans*/all_delete_orphan" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***save/delete/update/evict/lock/replicate/merge/persist*/all" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***save/update*/update" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***lock*/lock" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***refresh*/refresh" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***evict*/evict" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***replicate*/replicate" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***merge*/merge" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***create*/persist" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***delete*/delete" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***delete+deleteorphans*/delete_orphan" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***nocascades*/none" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="styles" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="associationkey" >
      <xs:sequence>
        <xs:element name="ownerkey" type="entitykey" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="executeupdateresultcheckstyle" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedentity" >
      <xs:complexContent>
       <xs:extension base="managed">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadqueryinfluencers" >
      <xs:sequence>
        <xs:element name="/***referenceusefulforcaseswherewearecreatingloadsql*outsidethecontextofanyinfluencers.onesuchexampleis*anythingcreatedbythesessionfactory.*/none" type="loadqueryinfluencers" nillable="true" minOccurs="0" />
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="internalfetchprofile" type="xs:string" />
        <xs:element name="enabledfilters" type="xs:anyType" />
        <xs:element name="enabledfetchprofilenames" type="xs:anyType" />
        <xs:element name="fetchgraph" type="xs:anyType" />
        <xs:element name="loadgraph" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityentry" >
      <xs:complexContent>
       <xs:extension base="entityentryextrastate>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="managed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractdelegatingsessionbuilder" >
      <xs:sequence>
        <xs:element name="delegate" type="sessionbuilder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeowner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionowner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="executablelist" >
      <xs:complexContent>
       <xs:extension base="executable">
         <xs:sequence>
          <xs:element name="init_queue_list_size" type="xs:long" />
          <xs:element name="executables" type="e" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="sorter" type="e" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="sorted" type="xs:anyType" />
          <xs:element name="/***usedtoholdthequeryspaces(tablenames,roughly)thatalltheexecutableinstancescontained*inthislistdefine.thisinformationisultimatelyusedtoinvalidatecacheregionsasitis*exposedfrom{@link#getqueryspaces}.thisvaluebeing{@codenull}indicatesthatthe*queryspacesshouldbecalculated.*/transientqueryspaces" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadingaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselectfetch" >
      <xs:sequence>
        <xs:element name="from_" type="xs:string" />
        <xs:element name="resultingentitykeys" type="set" nillable="true" minOccurs="0" />
        <xs:element name="query" type="xs:string" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="GeneratedName" type="loadable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="queryparameters" nillable="true" minOccurs="0" />
        <xs:element name="namedparameterloc" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryimplementor" >
      <xs:complexContent>
       <xs:extension base="mapping,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractdelegatingsessionbuilderimplementor" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="delegate" type="sessionbuilderimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentattributeinterceptable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedsqlquerydefinition" >
      <xs:complexContent>
       <xs:extension base="namedquerydefinition">
         <xs:sequence>
          <xs:element name="queryreturns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" />
          <xs:element name="queryspaces" type="xs:anyType" />
          <xs:element name="callable" type="xs:anyType" />
          <xs:element name="resultsetref" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitykey" >
      <xs:sequence>
        <xs:element name="identifier" type="xs:anyType" />
        <xs:element name="hashcode" type="xs:long" />
        <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiervalue" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="/***alwaysassumethetransientinstanceisnewlyinstantiated*/any" type="identifiervalue" nillable="true" minOccurs="0" />
        <xs:element name="/***neverassumethetransientinstanceisnewlyinstantiated*/none" type="identifiervalue" nillable="true" minOccurs="0" />
        <xs:element name="/***assumethetransientinstanceisnewlyinstantiatediftheidentifier*isnull.*/null" type="identifiervalue" nillable="true" minOccurs="0" />
        <xs:element name="/***assumenothing.*/undefined" type="identifiervalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessiondelegatorbaseimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="session" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedquerydefinition" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="query" type="xs:string" />
        <xs:element name="cacheable" type="xs:anyType" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="timeout" type="xs:anyType" />
        <xs:element name="GeneratedName" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="fetchsize" type="xs:anyType" />
        <xs:element name="GeneratedName" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="parametertypes" type="map" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="//addedforjpa2.1firstresult" type="xs:anyType" />
        <xs:element name="maxresults" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selfdirtinesstracker" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedquerydefinitionbuilder" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="query" type="xs:string" />
        <xs:element name="cacheable" type="xs:anyType" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="timeout" type="xs:anyType" />
        <xs:element name="fetchsize" type="xs:anyType" />
        <xs:element name="GeneratedName" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="parametertypes" type="map" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="firstresult" type="xs:anyType" />
        <xs:element name="maxresults" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactorydelegatingimpl" >
      <xs:sequence>
        <xs:element name="delegate" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractdelegatingsharedsessionbuilder" >
      <xs:sequence>
        <xs:element name="delegate" type="sharedsessionbuilder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessioneventlistenermanager" >
      <xs:complexContent>
       <xs:extension base="sessioneventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionkey" >
      <xs:sequence>
        <xs:element name="role" type="xs:string" />
        <xs:element name="key" type="xs:anyType" />
        <xs:element name="key" type="type" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="hashcode" type="xs:long" />
        <xs:element name="GeneratedName" type="entitymode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheinitiator" >
      <xs:sequence>
        <xs:element name="instance" type="cacheinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchfetchqueue" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="context" type="persistencecontext" nillable="true" minOccurs="0" />
        <xs:element name="subselectsbyentitykey" type="xs:anyType" />
        <xs:element name="batchloadableentitykeys" type="xs:anyType" />
        <xs:element name="batchloadablecollections" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="actionqueue" >
      <xs:complexContent>
       <xs:extension base="executable">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
          <xs:element name="unresolvedinsertions" type="unresolvedentityinsertactions" nillable="true" minOccurs="0" />
          <xs:element name="//objectinsertions,updates,anddeletionshavelistsemanticsbecause//theymusthappenintherightordersoastorespectreferential//integrityinsertions" type="abstractentityinsertaction" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="deletions" type="entitydeleteaction" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="updates" type="entityupdateaction" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="//actuallythesemanticsofthenextthreearereally"bag"//notethat,unlikeobjects,collectioninsertions,updates,//deletionsarenotreallyrememberedbetweenflushes.we//justre-usethesamelistsforconvenience.collectioncreations" type="collectionrecreateaction" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="collectionupdates" type="collectionupdateaction" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="collectionqueuedops" type="queuedoperationcollectionaction" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="collectionremovals" type="collectionremoveaction" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="//todo:theremoveorphanconceptisatemporary"hack"forhhh-6484.thisshouldberemovedonceaction/task//orderingisimproved.orphanremovals" type="orphanremovalaction" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="transientistransactioncoordinatorshared" type="xs:anyType" />
          <xs:element name="aftertransactionprocesses" type="xs:anyType" />
          <xs:element name="beforetransactionprocesses" type="xs:anyType" />
          <xs:element name="executable_lists" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityuniquekey" >
      <xs:sequence>
        <xs:element name="uniquekeyname" type="xs:string" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="key" type="xs:anyType" />
        <xs:element name="key" type="type" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitymode" nillable="true" minOccurs="0" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachednaturalidvaluesource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedvalue" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="//"transient"isimportanthere--naturalidcachekeyneedstobeserializabletransienthashcode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionimplementor" >
      <xs:complexContent>
       <xs:extension base="serializable,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="status" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityentryextrastate" >
      <xs:complexContent>
       <xs:extension base="entityentryextrastate>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="managedcomposite" >
      <xs:complexContent>
       <xs:extension base="managed">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionbuilderimplementor" >
      <xs:complexContent>
       <xs:extension base="sessionbuilder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attributenodeimplementor" >
      <xs:complexContent>
       <xs:extension base="attributenode<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="graphnodeimplementor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basesessioneventlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteria" >
      <xs:complexContent>
       <xs:extension base="criteriaspecification">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enhancer" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="enhancementcontext" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="managedentity" type="xs:anyType" />
        <xs:element name="managedcomposite" type="xs:anyType" />
        <xs:element name="attributeinterceptor" type="xs:anyType" />
        <xs:element name="attributeinterceptable" type="xs:anyType" />
        <xs:element name="entityentry" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enhancementexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enhancementcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="helper" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyattributeloader" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="transientsession" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="lazyfields" type="xs:anyType" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="sessionfactoryuuid" type="xs:string" />
        <xs:element name="allowloadoutsidetransaction" type="xs:anyType" />
        <xs:element name="initializedfields" type="simplefieldtracker" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enhancerconstants" >
      <xs:sequence>
        <xs:element name="/***prefixforpersistent-fieldreadermethods.*/persistent_field_reader_prefix" type="xs:string" />
        <xs:element name="/***prefixforpersistent-fieldwritermethods.*/persistent_field_writer_prefix" type="xs:string" />
        <xs:element name="/***nameofthemethodusedtogetreferencethetheentityinstance(thisinthecaseofenhancedclasses).*/entity_instance_getter_name" type="xs:string" />
        <xs:element name="/***nameofthefieldusedtoholdthe{@linkorg.hibernate.engine.spi.entityentry}*/entity_entry_field_name" type="xs:string" />
        <xs:element name="/***nameofthemethodusedtoreadthe{@linkorg.hibernate.engine.spi.entityentry}field.**@see#entity_entry_field_name*/entity_entry_getter_name" type="xs:string" />
        <xs:element name="/***nameofthemethodusedtowritethe{@linkorg.hibernate.engine.spi.entityentry}field.**@see#entity_entry_field_name*/entity_entry_setter_name" type="xs:string" />
        <xs:element name="*together,previous/nextareusedtodefinea"linkedlist"**@see#next_field_name*/previous_field_name" type="xs:string" />
        <xs:element name="/***nameofthemethodusedtoreadtheprevious{@linkorg.hibernate.engine.spi.managedentity}field**@see#previous_field_name*/previous_getter_name" type="xs:string" />
        <xs:element name="/***nameofthemethodusedtowritetheprevious{@linkorg.hibernate.engine.spi.managedentity}field**@see#previous_field_name*/previous_setter_name" type="xs:string" />
        <xs:element name="*together,previous/nextareusedtodefinea"linkedlist"**@see#previous_field_name*/next_field_name" type="xs:string" />
        <xs:element name="/***nameofthemethodusedtoreadthenext{@linkorg.hibernate.engine.spi.managedentity}field**@see#next_field_name*/next_getter_name" type="xs:string" />
        <xs:element name="/***nameofthemethodusedtowritethenext{@linkorg.hibernate.engine.spi.managedentity}field**@see#next_field_name*/next_setter_name" type="xs:string" />
        <xs:element name="/***nameofthefieldusedtostorethe{@linkorg.hibernate.engine.spi.persistentattributeinterceptable}.*/interceptor_field_name" type="xs:string" />
        <xs:element name="/***nameofthemethodusedtoreadtheinterceptor**@see#interceptor_field_name*/interceptor_getter_name" type="xs:string" />
        <xs:element name="/***nameofthemethodusedtowritetheinterceptor**@see#interceptor_field_name*/interceptor_setter_name" type="xs:string" />
        <xs:element name="/***nameoftrackerfield*/tracker_field_name" type="xs:string" />
        <xs:element name="/***nameofmethodthataddchangedfields*/tracker_changer_name" type="xs:string" />
        <xs:element name="/***nameofmethodtoseeifanyfieldshaschanged*/tracker_has_changed_name" type="xs:string" />
        <xs:element name="/***nameofmethodtofetchdirtyattributes*/tracker_get_name" type="xs:string" />
        <xs:element name="/***nameofmethodtoclearstoreddirtyattributes*/tracker_clear_name" type="xs:string" />
        <xs:element name="/***nameofmethodtosuspenddirtytracking*/tracker_suspend_name" type="xs:string" />
        <xs:element name="/***nameofmethodtocheckifcollectionfieldsaredirty*/tracker_collection_get_name" type="xs:string" />
        <xs:element name="/***nameofmethodtocheckifcollectionfieldsaredirty*/tracker_collection_changed_name" type="xs:string" />
        <xs:element name="/***nameofthefieldthatholdsthecollectiontracker*/tracker_collection_name" type="xs:string" />
        <xs:element name="/***nameofmethodtogetdirtycollectionfieldnames*/tracker_collection_changed_field_name" type="xs:string" />
        <xs:element name="/***nameofmethodtocleardirtyattributeoncollectionfields*/tracker_collection_clear_name" type="xs:string" />
        <xs:element name="/***fieldtoholdthetracktheowneroftheembeddableentity*/tracker_composite_field_name" type="xs:string" />
        <xs:element name="/***methodtosettheowneroftheembeddedentity*/tracker_composite_set_owner" type="xs:string" />
        <xs:element name="/***methodtocleartheowneroftheembeddedentity*/tracker_composite_clear_owner" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectiontracker" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplefieldtracker" >
      <xs:sequence>
        <xs:element name="names" type="xs:string" />
        <xs:element name="suspended" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtytracker" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortedfieldtracker" >
      <xs:sequence>
        <xs:element name="names" type="xs:string" />
        <xs:element name="suspended" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeownertracker" >
      <xs:sequence>
        <xs:element name="names" type="xs:string" />
        <xs:element name="owners" type="compositeowner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplecollectiontracker" >
      <xs:sequence>
        <xs:element name="names" type="xs:string" />
        <xs:element name="sizes" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldwriter" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentattributesenhancer" >
      <xs:complexContent>
       <xs:extension base="enhancer">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityenhancer" >
      <xs:complexContent>
       <xs:extension base="enhancer">
         <xs:sequence>
          <xs:element name="//assumingthenumberoffieldsisnotveryhigh,simplefieldtrackerimplementationit'sthefastestdirty_tracker_impl" type="xs:string" />
          <xs:element name="collection_tracker_impl" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeenhancer" >
      <xs:complexContent>
       <xs:extension base="enhancer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="attributetypedescriptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentattributeshelper" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="methodwriter" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classfilter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instrumenter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="executionexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractinstrumenter" >
      <xs:sequence>
        <xs:element name="zip_magic" type="xs:long" />
        <xs:element name="class_magic" type="xs:long" />
        <xs:element name="GeneratedName" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldfilter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="logger" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classdescriptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicclassfilter" >
      <xs:sequence>
        <xs:element name="includedpackages" type="xs:string" />
        <xs:element name="includedclassnames" type="xs:anyType" />
        <xs:element name="isallempty" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="javassistinstrumenter" >
      <xs:complexContent>
       <xs:extension base="abstractinstrumenter">
         <xs:sequence>
          <xs:element name="class_filter" type="basicclassfilter" nillable="true" minOccurs="0" />
          <xs:element name="provider" type="bytecodeproviderimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bulkaccessor" >
      <xs:sequence>
        <xs:element name="target" type="xs:anyType" />
        <xs:element name="getters,setters" type="xs:string" />
        <xs:element name="types" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bulkaccessorfactory" >
      <xs:sequence>
        <xs:element name="package_name_prefix" type="xs:string" />
        <xs:element name="bulkacessor_class_name" type="xs:string" />
        <xs:element name="object_class_name" type="xs:string" />
        <xs:element name="generated_getter_name" type="xs:string" />
        <xs:element name="generated_setter_name" type="xs:string" />
        <xs:element name="get_setter_desc" type="xs:string" />
        <xs:element name="throwable_class_name" type="xs:string" />
        <xs:element name="bulkexception_class_name" type="xs:string" />
        <xs:element name="counter" type="xs:long" />
        <xs:element name="targetbean" type="xs:anyType" />
        <xs:element name="getternames" type="xs:string" />
        <xs:element name="setternames" type="xs:string" />
        <xs:element name="types" type="xs:anyType" />
        <xs:element name="writedirectory" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldhandled" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instantiationoptimizeradapter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="fastclass" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldfilter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldhandler" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accessoptimizeradapter" >
      <xs:sequence>
        <xs:element name="property_get_exception" type="xs:string" />
        <xs:element name="property_set_exception" type="xs:string" />
        <xs:element name="GeneratedName" type="bulkaccessor" nillable="true" minOccurs="0" />
        <xs:element name="mapped" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldtransformer" >
      <xs:sequence>
        <xs:element name="each_read_method_prefix" type="xs:string" />
        <xs:element name="each_write_method_prefix" type="xs:string" />
        <xs:element name="field_handled_type_name" type="xs:string" />
        <xs:element name="handler_field_name" type="xs:string" />
        <xs:element name="field_handler_type_name" type="xs:string" />
        <xs:element name="handler_field_descriptor" type="xs:string" />
        <xs:element name="getfieldhandler_method_name" type="xs:string" />
        <xs:element name="setfieldhandler_method_name" type="xs:string" />
        <xs:element name="getfieldhandler_method_descriptor" type="xs:string" />
        <xs:element name="setfieldhandler_method_descriptor" type="xs:string" />
        <xs:element name="filter" type="fieldfilter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflectionoptimizerimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transformingclassloader" >
      <xs:complexContent>
       <xs:extension base="classloader">
         <xs:sequence>
          <xs:element name="parent" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytecodeproviderimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fastclass" >
      <xs:sequence>
        <xs:element name="empty__array" type="xs:anyType" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyfactoryfactoryimpl" >
      <xs:sequence>
        <xs:element name="ize_filter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bulkaccessorexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="index" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="javassistclasstransformer" >
      <xs:complexContent>
       <xs:extension base="abstractclasstransformerimpl">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractfieldinterceptor" >
      <xs:sequence>
        <xs:element name="transientsession" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="uninitializedfields" type="set" nillable="true" minOccurs="0" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="transientinitializing" type="xs:anyType" />
        <xs:element name="dirty" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldinterceptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazypropertyinitializer" >
      <xs:sequence>
        <xs:element name="/***markervalueforuninitializedproperties.*/unfetched_property" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="javassisthelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldinterceptorimpl" >
      <xs:complexContent>
       <xs:extension base="abstractfieldinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldinterceptionhelper" >
      <xs:sequence>
        <xs:element name="instrumentation_delegates" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicproxyfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notinstrumentedexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instrumentedclassloader" >
      <xs:complexContent>
       <xs:extension base="classloader">
         <xs:sequence>
          <xs:element name="" type="classtransformer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractclasstransformerimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="classfilter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="fieldfilter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyfactoryfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bytecodehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classtransformer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityinstrumentationmetadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflectionoptimizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bytecodeprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unknownentitytypeexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="messagehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scriptexporter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreignkeymetadata" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="reftable" type="xs:string" />
        <xs:element name="references" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="importsqlcommandextractorinitiator" >
      <xs:sequence>
        <xs:element name="instance" type="importsqlcommandextractorinitiator" nillable="true" minOccurs="0" />
        <xs:element name="default_extractor" type="importsqlcommandextractor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="target" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uniqueconstraintschemaupdatestrategy" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fileexporter" >
      <xs:sequence>
        <xs:element name="writer" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectionhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="importscriptexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablemetadata" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="catalog" type="xs:string" />
        <xs:element name="schema" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="columns" type="xs:anyType" />
        <xs:element name="foreignkeys" type="xs:anyType" />
        <xs:element name="indexes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedproviderconnectionhelper" >
      <xs:sequence>
        <xs:element name="cfg" type="xs:anyType" />
        <xs:element name="serviceregistry" type="standardserviceregistryimpl" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemaexport" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="default_import_file" type="xs:string" />
        <xs:element name="GeneratedName" type="connectionhelper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlstatementlogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlexceptionhelper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="classloaderservice" nillable="true" minOccurs="0" />
        <xs:element name="dropsql" type="xs:string" />
        <xs:element name="createsql" type="xs:string" />
        <xs:element name="importfiles" type="xs:string" />
        <xs:element name="exceptions" type="xs:anyType" />
        <xs:element name="GeneratedName" type="formatter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="importsqlcommandextractor" nillable="true" minOccurs="0" />
        <xs:element name="outputfile" type="xs:string" />
        <xs:element name="delimiter" type="xs:string" />
        <xs:element name="haltonerror" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exporter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemaupdatecommand" >
      <xs:sequence>
        <xs:element name="sql" type="xs:string" />
        <xs:element name="quiet" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemavalidatortask" >
      <xs:complexContent>
       <xs:extension base="matchingtask">
         <xs:sequence>
          <xs:element name="filesets" type="xs:anyType" />
          <xs:element name="properties" type="file" nillable="true" minOccurs="0" />
          <xs:element name="configuration" type="file" nillable="true" minOccurs="0" />
          <xs:element name="implicitnamingstrategy" type="xs:string" />
          <xs:element name="physicalnamingstrategy" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexmetadata" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="columns" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="databaseexporter" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="connectionhelper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlexceptionhelper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="statement" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="importsqlcommandextractor" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiplelinessqlcommandextractor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemaupdate" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbcconnectionaccess" nillable="true" minOccurs="0" />
        <xs:element name="exceptions" type="xs:anyType" />
        <xs:element name="outputfile" type="xs:string" />
        <xs:element name="delimiter" type="xs:string" />
        <xs:element name="GeneratedName" type="formatter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnmetadata" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="typename" type="xs:string" />
        <xs:element name="columnsize" type="xs:long" />
        <xs:element name="decimaldigits" type="xs:long" />
        <xs:element name="isnullable" type="xs:string" />
        <xs:element name="typecode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemavalidator" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="metadata" type="metadataimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbcconnectionaccess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singlelinesqlcommandextractor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemaupdatetask" >
      <xs:complexContent>
       <xs:extension base="matchingtask">
         <xs:sequence>
          <xs:element name="filesets" type="xs:anyType" />
          <xs:element name="properties" type="file" nillable="true" minOccurs="0" />
          <xs:element name="configuration" type="file" nillable="true" minOccurs="0" />
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="quiet" type="xs:anyType" />
          <xs:element name="text" type="xs:anyType" />
          <xs:element name="haltonerror" type="xs:anyType" />
          <xs:element name="delimiter" type="xs:string" />
          <xs:element name="implicitnamingstrategy" type="xs:string" />
          <xs:element name="physicalnamingstrategy" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaexporttask" >
      <xs:complexContent>
       <xs:extension base="matchingtask">
         <xs:sequence>
          <xs:element name="filesets" type="xs:anyType" />
          <xs:element name="properties" type="file" nillable="true" minOccurs="0" />
          <xs:element name="configuration" type="file" nillable="true" minOccurs="0" />
          <xs:element name="output" type="file" nillable="true" minOccurs="0" />
          <xs:element name="quiet" type="xs:anyType" />
          <xs:element name="text" type="xs:anyType" />
          <xs:element name="drop" type="xs:anyType" />
          <xs:element name="create" type="xs:anyType" />
          <xs:element name="haltonerror" type="xs:anyType" />
          <xs:element name="delimiter" type="xs:string" />
          <xs:element name="implicitnamingstrategy" type="xs:string" />
          <xs:element name="physicalnamingstrategy" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="suppliedconnectionproviderconnectionhelper" >
      <xs:sequence>
        <xs:element name="provider" type="connectionprovider" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="toggleautocommit" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="suppliedconnectionhelper" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="toggleautocommit" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instrumenttask" >
      <xs:complexContent>
       <xs:extension base="basicinstrumentationtask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicinstrumentationtask" >
      <xs:complexContent>
       <xs:extension base="task">
         <xs:sequence>
          <xs:element name="logger" type="xs:anyType" />
          <xs:element name="filesets" type="list" nillable="true" minOccurs="0" />
          <xs:element name="extended" type="xs:anyType" />
          <xs:element name="//deprecatedoption...verbose" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardindexexporter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemacreatorimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targetfileimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="delimiter" type="xs:string" />
        <xs:element name="GeneratedName" type="formatter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targetstdoutimpl" >
      <xs:sequence>
        <xs:element name="delimiter" type="xs:string" />
        <xs:element name="GeneratedName" type="formatter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardforeignkeyexporter" >
      <xs:sequence>
        <xs:element name="column_mismatch_msg" type="xs:string" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardsequenceexporter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemamigratorimpl" >
      <xs:sequence>
        <xs:element name="uniqueconstraintstrategy" type="uniqueconstraintschemaupdatestrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateschemamanagementtool" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standarduniquekeyexporter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemamanagementtoolinitiator" >
      <xs:sequence>
        <xs:element name="instance" type="schemamanagementtoolinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemavalidatorimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardauxiliarydatabaseobjectexporter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targetdatabaseimpl" >
      <xs:sequence>
        <xs:element name="connectionaccess" type="jdbcconnectionaccess" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="statement" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardtableexporter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemadropperimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exporter" >
      <xs:complexContent>
       <xs:extension base="exportable>">
         <xs:sequence>
          <xs:element name="no_commands" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemadropper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemamanagementtool" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemacreator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="target" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemamigrator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemavalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemamanagementexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequenceinformationextractornoopimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="sequenceinformationextractornoopimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceinformationextractorh2databaseimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="sequenceinformationextractorh2databaseimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extractioncontextimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbcenvironment" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbcconnectionaccess" nillable="true" minOccurs="0" />
        <xs:element name="registeredtableaccess" type="xs:anyType" />
        <xs:element name="defaultcatalogname" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="defaultschemaname" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="jdbc" type="xs:anyType" />
        <xs:element name="jdbc" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columninformationimpl" >
      <xs:sequence>
        <xs:element name="containing" type="tableinformation" nillable="true" minOccurs="0" />
        <xs:element name="column" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="typecode" type="xs:long" />
        <xs:element name="typename" type="xs:string" />
        <xs:element name="columnsize" type="xs:long" />
        <xs:element name="decimaldigits" type="xs:long" />
        <xs:element name="nullable" type="truthvalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="databaseinformationimpl" >
      <xs:sequence>
        <xs:element name="extractor" type="informationextractor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="extractioncontext" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbcenvironment" nillable="true" minOccurs="0" />
        <xs:element name="sequenceinformationmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceinformationimpl" >
      <xs:sequence>
        <xs:element name="sequencename" type="qualifiedsequencename" nillable="true" minOccurs="0" />
        <xs:element name="incrementsize" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="informationextractorjdbcdatabasemetadataimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="tabletypes" type="xs:string" />
        <xs:element name="extraphysicaltabletypes" type="xs:string" />
        <xs:element name="GeneratedName" type="extractioncontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceinformationextractorlegacyimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="sequenceinformationextractorlegacyimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreignkeyinformationimpl" >
      <xs:sequence>
        <xs:element name="fk" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="columnmappinglist" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexinformationimpl" >
      <xs:sequence>
        <xs:element name="index" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="columnlist" type="columninformation" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tableinformationimpl" >
      <xs:sequence>
        <xs:element name="extractor" type="informationextractor" nillable="true" minOccurs="0" />
        <xs:element name="tablename" type="qualifiedtablename" nillable="true" minOccurs="0" />
        <xs:element name="physicaltable" type="xs:anyType" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="primarykey" type="primarykeyinformation" nillable="true" minOccurs="0" />
        <xs:element name="foreignkeys" type="xs:anyType" />
        <xs:element name="indexes" type="xs:anyType" />
        <xs:element name="//toavoidmultipledbreadssinceprimarykeycanbenull.wasprimarykeyloaded" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primarykeyinformationimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="identifier" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="columninformation" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extractioncontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexinformation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columninformation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="informationextractor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceinformation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tableinformation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreignkeyinformation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequenceinformationextractor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primarykeyinformation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemaextractionexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="databaseinformation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryparameterexception" >
      <xs:complexContent>
       <xs:extension base="queryexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resourceclosedexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="query" >
      <xs:complexContent>
       <xs:extension base="basicquerycontract">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transientobjectexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statelesssessionbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baselineattributeinformation" >
      <xs:sequence>
        <xs:element name="lazy" type="xs:anyType" />
        <xs:element name="insertable" type="xs:anyType" />
        <xs:element name="updateable" type="xs:anyType" />
        <xs:element name="strategy" type="valuegeneration" nillable="true" minOccurs="0" />
        <xs:element name="nullable" type="xs:anyType" />
        <xs:element name="dirtycheckable" type="xs:anyType" />
        <xs:element name="versionable" type="xs:anyType" />
        <xs:element name="GeneratedName" type="cascadestyle" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="fetchmode" nillable="true" minOccurs="0" />
        <xs:element name="checkable" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicmapinstantiator" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="isinstanceentitynames" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationvaluegeneration" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuegeneration" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instantiator" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tuplizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractnonidentifierattribute" >
      <xs:complexContent>
       <xs:extension base="abstractattribute">
         <xs:sequence>
          <xs:element name="source" type="attributesource" nillable="true" minOccurs="0" />
          <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="attributenumber" type="xs:long" />
          <xs:element name="attributeinformation" type="baselineattributeinformation" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuegenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardproperty" >
      <xs:complexContent>
       <xs:extension base="abstractnonidentifierattribute">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pojoinstantiator" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="constructor" nillable="true" minOccurs="0" />
        <xs:element name="mapped" type="xs:anyType" />
        <xs:element name="transientoptimizer" type="xs:anyType" />
        <xs:element name="embeddedidentifier" type="xs:anyType" />
        <xs:element name="proxyinterface" type="xs:anyType" />
        <xs:element name="isabstract" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractattribute" >
      <xs:sequence>
        <xs:element name="attributename" type="xs:string" />
        <xs:element name="attribute" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicmapentitytuplizer" >
      <xs:complexContent>
       <xs:extension base="abstractentitytuplizer">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitybasedbasicattribute" >
      <xs:complexContent>
       <xs:extension base="abstractentitybasedattribute">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentitytuplizer" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="//todo:currentlykeepsgettersandsetters(insteadofpropertyaccessors)becauseofthewaygetgetter()andgetsetter()areimplementedcurrentlyyuck!" type="entitymetamodel" nillable="true" minOccurs="0" />
        <xs:element name="id" type="getter" nillable="true" minOccurs="0" />
        <xs:element name="id" type="setter" nillable="true" minOccurs="0" />
        <xs:element name="s" type="getter" nillable="true" minOccurs="0" />
        <xs:element name="s" type="setter" nillable="true" minOccurs="0" />
        <xs:element name="propertyspan" type="xs:long" />
        <xs:element name="hascustomaccessors" type="xs:anyType" />
        <xs:element name="GeneratedName" type="instantiator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="proxyfactory" nillable="true" minOccurs="0" />
        <xs:element name="identifiermappertype" type="compositetype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractentitybasedattribute" >
      <xs:complexContent>
       <xs:extension base="abstractnonidentifierattribute">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymetamodel" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="no_version_indx" type="xs:long" />
          <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="persister" type="abstractentitypersister" nillable="true" minOccurs="0" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="rootname" type="xs:string" />
          <xs:element name="" type="entitytype" nillable="true" minOccurs="0" />
          <xs:element name="identifierattribute" type="identifierproperty" nillable="true" minOccurs="0" />
          <xs:element name="versioned" type="xs:anyType" />
          <xs:element name="propertyspan" type="xs:long" />
          <xs:element name="versionpropertyindex" type="xs:long" />
          <xs:element name="properties" type="nonidentifierattribute" nillable="true" minOccurs="0" />
          <xs:element name="propertynames" type="xs:string" />
          <xs:element name="propertys" type="type" nillable="true" minOccurs="0" />
          <xs:element name="propertylaziness" type="xs:anyType" />
          <xs:element name="propertyupdateability" type="xs:anyType" />
          <xs:element name="nonlazypropertyupdateability" type="xs:anyType" />
          <xs:element name="propertycheckability" type="xs:anyType" />
          <xs:element name="propertyinsertability" type="xs:anyType" />
          <xs:element name="propertynullability" type="xs:anyType" />
          <xs:element name="propertyversionability" type="xs:anyType" />
          <xs:element name="s" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//valuegenerations~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~haspreinsertgeneratedvalues" type="xs:anyType" />
          <xs:element name="haspreupdategeneratedvalues" type="xs:anyType" />
          <xs:element name="hasinsertgeneratedvalues" type="xs:anyType" />
          <xs:element name="hasupdategeneratedvalues" type="xs:anyType" />
          <xs:element name="inmemoryvaluegenerationstrategies" type="inmemoryvaluegenerationstrategy" nillable="true" minOccurs="0" />
          <xs:element name="indatabasevaluegenerationstrategies" type="indatabasevaluegenerationstrategy" nillable="true" minOccurs="0" />
          <xs:element name="propertyindexes" type="xs:anyType" />
          <xs:element name="hascollections" type="xs:anyType" />
          <xs:element name="hasmutableproperties" type="xs:anyType" />
          <xs:element name="haslazyproperties" type="xs:anyType" />
          <xs:element name="hasnonidentifierpropertynamedid" type="xs:anyType" />
          <xs:element name="naturalidpropertynumbers" type="xs:long" />
          <xs:element name="hasimmutablenaturalid" type="xs:anyType" />
          <xs:element name="hascacheablenaturalid" type="xs:anyType" />
          <xs:element name="//notbecauseproxyfactorycreationcanfaillazy" type="xs:anyType" />
          <xs:element name="hascascades" type="xs:anyType" />
          <xs:element name="mutable" type="xs:anyType" />
          <xs:element name="isabstract" type="xs:anyType" />
          <xs:element name="selectbeforeupdate" type="xs:anyType" />
          <xs:element name="dynamicupdate" type="xs:anyType" />
          <xs:element name="dynamicinsert" type="xs:anyType" />
          <xs:element name="" type="optimisticlockstyle" nillable="true" minOccurs="0" />
          <xs:element name="polymorphic" type="xs:anyType" />
          <xs:element name="//superclassentity-namesuperclass" type="xs:string" />
          <xs:element name="explicitpolymorphism" type="xs:anyType" />
          <xs:element name="inherited" type="xs:anyType" />
          <xs:element name="hassubclasses" type="xs:anyType" />
          <xs:element name="subclassentitynames" type="set" nillable="true" minOccurs="0" />
          <xs:element name="entitynamebyinheritenceclass" type="map" nillable="true" minOccurs="0" />
          <xs:element name="" type="entitymode" nillable="true" minOccurs="0" />
          <xs:element name="" type="entitytuplizer" nillable="true" minOccurs="0" />
          <xs:element name="instrumentationmetadata" type="entityinstrumentationmetadata" nillable="true" minOccurs="0" />
          <xs:element name="lazyloadingbytecodeenhanced" type="xs:anyType" />
          <xs:element name="no_gen_pair" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitytuplizer" >
      <xs:complexContent>
       <xs:extension base="tuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitytuplizerfactory" >
      <xs:complexContent>
       <xs:extension base="entitytuplizer>>">
         <xs:sequence>
          <xs:element name="entity_tup_ctor_sig" type="xs:anyType" />
          <xs:element name="defaultimplclassbymode" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonpojoinstrumentationmetadata" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="errormsg" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitybasedassociationattribute" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="joinable" nillable="true" minOccurs="0" />
          <xs:element name="" type="hydratedcompoundvaluehandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitybasedcompositionattribute" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionproperty" >
      <xs:complexContent>
       <xs:extension base="abstractnonidentifierattribute">
         <xs:sequence>
          <xs:element name="unsavedvalue" type="versionvalue" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pojoentitytuplizer" >
      <xs:complexContent>
       <xs:extension base="abstractentitytuplizer">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="mapped" type="xs:anyType" />
          <xs:element name="proxyinterface" type="xs:anyType" />
          <xs:element name="lifecycleimplementor" type="xs:anyType" />
          <xs:element name="lazypropertynames" type="xs:anyType" />
          <xs:element name="optimizer" type="reflectionoptimizer" nillable="true" minOccurs="0" />
          <xs:element name="isinstrumented" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indatabasevaluegenerationstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="creationtimestampgeneration" >
      <xs:sequence>
        <xs:element name="generator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationtiming" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inmemoryvaluegenerationstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestampgenerators" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="property" >
      <xs:complexContent>
       <xs:extension base="attribute">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vmvaluegeneration" >
      <xs:complexContent>
       <xs:extension base="valuegenerator<?>>">
         <xs:sequence>
          <xs:element name="" type="generationtiming" nillable="true" minOccurs="0" />
          <xs:element name="constructor" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifierproperty" >
      <xs:complexContent>
       <xs:extension base="abstractattribute">
         <xs:sequence>
          <xs:element name="virtual" type="xs:anyType" />
          <xs:element name="embedded" type="xs:anyType" />
          <xs:element name="unsavedvalue" type="identifiervalue" nillable="true" minOccurs="0" />
          <xs:element name="" type="identifiergenerator" nillable="true" minOccurs="0" />
          <xs:element name="identifierassignedbyinsert" type="xs:anyType" />
          <xs:element name="hasidentifiermapper" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcomponenttuplizer" >
      <xs:sequence>
        <xs:element name="s" type="getter" nillable="true" minOccurs="0" />
        <xs:element name="s" type="setter" nillable="true" minOccurs="0" />
        <xs:element name="propertyspan" type="xs:long" />
        <xs:element name="GeneratedName" type="instantiator" nillable="true" minOccurs="0" />
        <xs:element name="hascustomaccessors" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositionbasedcompositionattribute" >
      <xs:complexContent>
       <xs:extension base="abstractcompositionattribute">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pojocomponenttuplizer" >
      <xs:complexContent>
       <xs:extension base="abstractcomponenttuplizer">
         <xs:sequence>
          <xs:element name="component" type="xs:anyType" />
          <xs:element name="optimizer" type="reflectionoptimizer" nillable="true" minOccurs="0" />
          <xs:element name="parent" type="getter" nillable="true" minOccurs="0" />
          <xs:element name="parent" type="setter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicmapcomponenttuplizer" >
      <xs:complexContent>
       <xs:extension base="abstractcomponenttuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositebasedbasicattribute" >
      <xs:complexContent>
       <xs:extension base="abstractnonidentifierattribute">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentmetamodel" >
      <xs:sequence>
        <xs:element name="//todo:willneedreferencetosessionfactorytofullycompletehhh-1907//sessionfactoryimplementorsessionfactoryrole" type="xs:string" />
        <xs:element name="iskey" type="xs:anyType" />
        <xs:element name="properties" type="standardproperty" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitymode" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="componenttuplizer" nillable="true" minOccurs="0" />
        <xs:element name="//cachedforefficiency...propertyspan" type="xs:long" />
        <xs:element name="propertyindexes" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componenttuplizer" >
      <xs:complexContent>
       <xs:extension base="tuplizer,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcompositionattribute" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="columnstartposition" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositebasedassociationattribute" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="subattributenumber" type="xs:long" />
          <xs:element name="" type="associationkey" nillable="true" minOccurs="0" />
          <xs:element name="" type="joinable" nillable="true" minOccurs="0" />
          <xs:element name="" type="hydratedcompoundvaluehandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componenttuplizerfactory" >
      <xs:complexContent>
       <xs:extension base="componenttuplizer>>">
         <xs:sequence>
          <xs:element name="component_tup_ctor_sig" type="xs:anyType" />
          <xs:element name="defaultimplclassbymode" type="xs:anyType" />
          <xs:element name="" type="classloaderaccess" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generatedvaluegeneration" >
      <xs:sequence>
        <xs:element name="timing" type="generationtiming" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attribute" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifierattribute" >
      <xs:complexContent>
       <xs:extension base="attribute,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updatetimestampgeneration" >
      <xs:sequence>
        <xs:element name="generator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonidentifierattribute" >
      <xs:complexContent>
       <xs:extension base="attribute,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifierloadaccess" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourceregistry" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourceregistrystandardimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="xref" type="xs:anyType" />
        <xs:element name="unassociatedresultsets" type="xs:anyType" />
        <xs:element name="blobs" type="xs:anyType" />
        <xs:element name="clobs" type="xs:anyType" />
        <xs:element name="nclobs" type="xs:anyType" />
        <xs:element name="lastquery" type="statement" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="logicalconnectionmanagedimpl" >
      <xs:complexContent>
       <xs:extension base="abstractlogicalconnectionimplementor">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="jdbcconnectionaccess" nillable="true" minOccurs="0" />
          <xs:element name="transientobserver" type="jdbcobserver" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="sqlexceptionhelper" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="connectionreleasemode" nillable="true" minOccurs="0" />
          <xs:element name="transientphysical" type="xs:anyType" />
          <xs:element name="closed" type="xs:anyType" />
          <xs:element name="initiallyautocommit" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="logicalconnectionprovidedimpl" >
      <xs:complexContent>
       <xs:extension base="abstractlogicalconnectionimplementor">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="transientprovided" type="xs:anyType" />
          <xs:element name="initiallyautocommit" type="xs:anyType" />
          <xs:element name="closed" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlogicalconnectionimplementor" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="status" type="transactionstatus" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="resourceregistry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="logicalconnection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="physicaljdbctransaction" >
      <xs:complexContent>
       <xs:extension base="jdbcresourcetransaction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcobserver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statementinspector" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="logicalconnectionimplementor" >
      <xs:complexContent>
       <xs:extension base="logicalconnection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcsessionowner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcsessioncontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionrequiredforjoinexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtatransactionadaptertransactionmanagerimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="initiator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedflushchecker" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="registeredsynchronization" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="synchronizationcallbackcoordinator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronizationcallbackcoordinator" >
      <xs:complexContent>
       <xs:extension base="synchronization">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="synchronizationcallbacktarget" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aftercompletionaction" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="exceptionmapper" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtatransactionadapterusertransactionimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="initiator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtaplatforminaccessibleexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtaisolationdelegate" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="connectionaccess" type="jdbcconnectionaccess" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlexceptionhelper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statustranslator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtatransactioncoordinatorimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="transactioncoordinatorbuilder" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="transactioncoordinatorowner" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jtaplatform" nillable="true" minOccurs="0" />
        <xs:element name="autojointransactions" type="xs:anyType" />
        <xs:element name="preferusertransactions" type="xs:anyType" />
        <xs:element name="performjtathreadtracking" type="xs:anyType" />
        <xs:element name="synchronizationregistered" type="xs:anyType" />
        <xs:element name="callbackcoordinator" type="synchronizationcallbackcoordinator" nillable="true" minOccurs="0" />
        <xs:element name="physicaltransactiondelegate" type="xs:anyType" />
        <xs:element name="synchronizationregistry" type="synchronizationregistrystandardimpl" nillable="true" minOccurs="0" />
        <xs:element name="timeout" type="xs:long" />
        <xs:element name="transientobservers" type="transactionobserver" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtatransactionadapter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtatransactioncoordinatorbuilderimpl" >
      <xs:sequence>
        <xs:element name="short_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcresourcetransactionaccess" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcresourcetransaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcisolationdelegate" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="connectionaccess" type="jdbcconnectionaccess" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlexceptionhelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcresourcelocaltransactioncoordinatorimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="transactioncoordinatorbuilder" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbcresourcetransactionaccess" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="transactioncoordinatorowner" nillable="true" minOccurs="0" />
        <xs:element name="synchronizationregistry" type="synchronizationregistrystandardimpl" nillable="true" minOccurs="0" />
        <xs:element name="physicaltransactiondelegate" type="xs:anyType" />
        <xs:element name="timeout" type="xs:long" />
        <xs:element name="transientobservers" type="transactionobserver" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcresourcelocaltransactioncoordinatorbuilderimpl" >
      <xs:sequence>
        <xs:element name="short_name" type="xs:string" />
        <xs:element name="/***singletonaccess*/instance" type="jdbcresourcelocaltransactioncoordinatorbuilderimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronizationregistry" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullsynchronizationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localsynchronizationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactioncoordinator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactioncoordinatorbuilderinitiator" >
      <xs:sequence>
        <xs:element name="legacy_setting_name" type="xs:string" />
        <xs:element name="/***singletonaccess*/instance" type="transactioncoordinatorbuilderinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronizationregistrystandardimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="synchronizations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactioncoordinatorbuilder" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronizationregistryimplementor" >
      <xs:complexContent>
       <xs:extension base="synchronizationregistry">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactioncoordinatorowner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionstatus" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aliasedtuplesubsetresulttransformer" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aliastoentitymapresulttransformer" >
      <xs:complexContent>
       <xs:extension base="aliasedtuplesubsetresulttransformer">
         <xs:sequence>
          <xs:element name="instance" type="aliastoentitymapresulttransformer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="passthroughresulttransformer" >
      <xs:complexContent>
       <xs:extension base="basictransformeradapter">
         <xs:sequence>
          <xs:element name="instance" type="passthroughresulttransformer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tuplesubsetresulttransformer" >
      <xs:complexContent>
       <xs:extension base="resulttransformer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="distinctresulttransformer" >
      <xs:complexContent>
       <xs:extension base="basictransformeradapter">
         <xs:sequence>
          <xs:element name="instance" type="distinctresulttransformer" nillable="true" minOccurs="0" />
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tolistresulttransformer" >
      <xs:complexContent>
       <xs:extension base="basictransformeradapter">
         <xs:sequence>
          <xs:element name="instance" type="tolistresulttransformer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transformers" >
      <xs:sequence>
        <xs:element name="fromaliastovalues/entities*/alias_to_entity_map" type="aliastoentitymapresulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="*/to_list" type="tolistresulttransformer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basictransformeradapter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="distinctrootentityresulttransformer" >
      <xs:sequence>
        <xs:element name="instance" type="distinctrootentityresulttransformer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aliastobeanresulttransformer" >
      <xs:complexContent>
       <xs:extension base="aliasedtuplesubsetresulttransformer">
         <xs:sequence>
          <xs:element name="//implnote:duetothedelayedpopulationofsetters(setterscached//forperformance),wereallycannotproperlydefineequalityfor//thistransformerresult" type="xs:anyType" />
          <xs:element name="isinitialized" type="xs:anyType" />
          <xs:element name="aliases" type="xs:string" />
          <xs:element name="s" type="setter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheableresulttransformer" >
      <xs:complexContent>
       <xs:extension base="t[]>">
         <xs:sequence>
          <xs:element name="//wouldbenicetobeabletohavethisclassextend//,butthedefaultconstructor//is(asitshouldbeforasingleton)actual_transformer" type="passthroughresulttransformer" nillable="true" minOccurs="0" />
          <xs:element name="tuplelength" type="xs:long" />
          <xs:element name="tuplesubsetlength" type="xs:long" />
          <xs:element name="includeintuple" type="xs:anyType" />
          <xs:element name="includeransformindex" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aliastobeanconstructorresulttransformer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="constructor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rootentityresulttransformer" >
      <xs:complexContent>
       <xs:extension base="basictransformeradapter">
         <xs:sequence>
          <xs:element name="instance" type="rootentityresulttransformer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resulttransformer" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="calendartimetype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<calendar>">
         <xs:sequence>
          <xs:element name="instance" type="calendartimetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longtype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="longtype" nillable="true" minOccurs="0" />
          <xs:element name="zero" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singlecolumntype" >
      <xs:complexContent>
       <xs:extension base="type">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifierbagtype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="maptype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="characterarrayclobtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<character[]>">
         <xs:sequence>
          <xs:element name="instance" type="characterarrayclobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigintegertype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="bigintegertype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specialonetoonetype" >
      <xs:complexContent>
       <xs:extension base="onetoonetype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customtype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="usertype" nillable="true" minOccurs="0" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="types" type="xs:long" />
          <xs:element name="dictateds" type="size" nillable="true" minOccurs="0" />
          <xs:element name="defaults" type="size" nillable="true" minOccurs="0" />
          <xs:element name="customlogging" type="xs:anyType" />
          <xs:element name="registrationkeys" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="currencytype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="currencytype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectiontype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="not_null_collection" type="xs:anyType" />
          <xs:element name="unfetched_collection" type="xs:anyType" />
          <xs:element name="typescope" type="xs:anyType" />
          <xs:element name="role" type="xs:string" />
          <xs:element name="foreignkeypropertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderedmaptype" >
      <xs:complexContent>
       <xs:extension base="maptype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidbinarytype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<uuid>">
         <xs:sequence>
          <xs:element name="instance" type="uuidbinarytype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="imagetype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="imagetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timetype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="timetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<class>">
         <xs:sequence>
          <xs:element name="instance" type="classtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clobtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<clob>">
         <xs:sequence>
          <xs:element name="instance" type="clobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="anytype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="scope" type="xs:anyType" />
          <xs:element name="identifier" type="type" nillable="true" minOccurs="0" />
          <xs:element name="discriminator" type="type" nillable="true" minOccurs="0" />
          <xs:element name="property_names" type="xs:string" />
          <xs:element name="nullability" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivecharacterarrayclobtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<char[]>">
         <xs:sequence>
          <xs:element name="instance" type="characterarrayclobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositecustomtype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="usertype" type="compositeusertype" nillable="true" minOccurs="0" />
          <xs:element name="registrationkeys" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="customlogging" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonetype" >
      <xs:complexContent>
       <xs:extension base="entitytype">
         <xs:sequence>
          <xs:element name="foreignkeytype" type="foreignkeydirection" nillable="true" minOccurs="0" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="s" type="size" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeydirection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basictype" >
      <xs:complexContent>
       <xs:extension base="type">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="characterarraytype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<character[]>">
         <xs:sequence>
          <xs:element name="instance" type="characterarraytype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="procedureparameterextractionaware" >
      <xs:complexContent>
       <xs:extension base="type">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chararraytype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<char[]>">
         <xs:sequence>
          <xs:element name="instance" type="chararraytype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timezonetype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="timezonetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="materializedclobtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<string>">
         <xs:sequence>
          <xs:element name="instance" type="materializedclobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="literaltype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedcomponenttype" >
      <xs:complexContent>
       <xs:extension base="componenttype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="charactertype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="charactertype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializabletoblobtype" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
          <xs:element name="class_name" type="xs:string" />
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wrapperbinarytype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="wrapperbinarytype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresuuidtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<uuid>">
         <xs:sequence>
          <xs:element name="instance" type="postgresuuidtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typeresolver" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="basictyperegistry" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="typefactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="booleantype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="booleantype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderedsettype" >
      <xs:complexContent>
       <xs:extension base="settype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="characterarraynclobtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<character[]>">
         <xs:sequence>
          <xs:element name="instance" type="characterarraynclobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="type" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nclobtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<nclob>">
         <xs:sequence>
          <xs:element name="instance" type="nclobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardbasictypes" >
      <xs:sequence>
        <xs:element name="sql_type_descriptors" type="sqltypedescriptor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkboolean}tojdbc{@linkjava.sql.types#bitbit}.**@see*/boolean" type="booleantype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkboolean}tojdbc{@linkjava.sql.types#integerinteger}.**@see*/numeric_boolean" type="numericbooleantype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkboolean}tojdbc{@linkjava.sql.types#charchar(1)}(using't'/'f').**@see*/true_false" type="truefalsetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkboolean}tojdbc{@linkjava.sql.types#charchar(1)}(using'y'/'n').**@see*/yes_no" type="yesnotype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkbyte}tojdbc{@linkjava.sql.types#tinyinttinyint}.*/byte" type="bytetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkshort}tojdbc{@linkjava.sql.types#smallintsmallint}.**@see*/short" type="shorttype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkinteger}tojdbc{@linkjava.sql.types#integerinteger}.**@see*/integer" type="integertype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linklong}tojdbc{@linkjava.sql.types#bigintbigint}.**@see*/long" type="longtype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkfloat}tojdbc{@linkjava.sql.types#floatfloat}.**@see*/float" type="floattype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkdouble}tojdbc{@linkjava.sql.types#doubledouble}.**@see*/double" type="doubletype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.math.biginteger}tojdbc{@linkjava.sql.types#numericnumeric}.**@see*/big_integer" type="bigintegertype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.math.bigdecimal}tojdbc{@linkjava.sql.types#numericnumeric}.**@see*/big_decimal" type="bigdecimaltype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkcharacter}tojdbc{@linkjava.sql.types#charchar(1)}.**@see*/character" type="charactertype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkstring}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/string" type="stringtype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.net.url}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/url" type="urltype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.date}({@linkjava.sql.time})tojdbc*{@linkjava.sql.types#timetime}.**@see*/time" type="timetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.date}({@linkjava.sql.date})tojdbc*{@linkjava.sql.types#datedate}.**@seetimetype*/date" type="datetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.date}({@linkjava.sql.timestamp})tojdbc*{@linkjava.sql.types#timestamptimestamp}.**@seetimetype*/timestamp" type="timestamptype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.calendar}tojdbc*{@linkjava.sql.types#timestamptimestamp}.**@see*/calendar" type="calendartype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.calendar}tojdbc*{@linkjava.sql.types#datedate}.**@see*/calendar_date" type="calendardatetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkclass}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/class" type="classtype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.locale}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/locale" type="localetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.currency}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/currency" type="currencytype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.timezone}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/timezone" type="timezonetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.uuid}tojdbc{@linkjava.sql.types#binarybinary}.**@see*/uuid_binary" type="uuidbinarytype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.uuid}tojdbc{@linkjava.sql.types#charchar}.**@see*/uuid_char" type="uuidchartype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc{@linkjava.sql.types#varbinaryvarbinary}.**@see*/binary" type="binarytype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc{@linkjava.sql.types#varbinaryvarbinary}.**@see*/wrapper_binary" type="wrapperbinarytype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc{@linkjava.sql.types#longvarbinarylongvarbinary}.**@see*@see#materialized_blob*/image" type="imagetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.sql.blob}tojdbc{@linkjava.sql.types#blobblob}.**@see*@see#materialized_blob*/blob" type="blobtype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc{@linkjava.sql.types#blobblob}.**@see*@see#materialized_blob*@see#image*/materialized_blob" type="materializedblobtype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/char_array" type="chararraytype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc*{@linkjava.sql.types#varcharvarchar}.**@see*/character_array" type="characterarraytype" nillable="true" minOccurs="0" />
        <xs:element name="*similartoa{@link#materialized_clob}**@see*/text" type="texttype" nillable="true" minOccurs="0" />
        <xs:element name="*similartoa{@link#materialized_nclob}**@see*/ntext" type="ntexttype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.sql.clob}tojdbc{@linkjava.sql.types#clobclob}.**@see*@see#materialized_clob*/clob" type="clobtype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.sql.nclob}tojdbc{@linkjava.sql.types#nclobnclob}.**@see*@see#materialized_nclob*/nclob" type="nclobtype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkstring}tojdbc{@linkjava.sql.types#clobclob}.**@see*@see#materialized_clob*@see#text*/materialized_clob" type="materializedclobtype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkstring}tojdbc{@linkjava.sql.types#nclobnclob}.**@see*@see#materialized_clob*@see#ntext*/materialized_nclob" type="materializednclobtype" nillable="true" minOccurs="0" />
        <xs:element name="*seeespeciallythediscussionwrt{@linkclassloader}determinationon{@link}**@see*/serializable" type="serializabletype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringrepresentabletype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="urltype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<url>">
         <xs:sequence>
          <xs:element name="instance" type="urltype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="settype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiertype" >
      <xs:complexContent>
       <xs:extension base="type">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraytype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
          <xs:element name="element" type="xs:anyType" />
          <xs:element name="array" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binarytype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="binarytype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="calendartype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="calendartype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="texttype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<string>">
         <xs:sequence>
          <xs:element name="instance" type="texttype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listtype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytetype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="bytetype" nillable="true" minOccurs="0" />
          <xs:element name="zero" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigdecimaltype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<bigdecimal>">
         <xs:sequence>
          <xs:element name="instance" type="bigdecimaltype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="characternchartype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="characternchartype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metatype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="registration_keys" type="xs:string" />
          <xs:element name="base" type="type" nillable="true" minOccurs="0" />
          <xs:element name="discriminatorvaluestoentitynamemap" type="xs:anyType" />
          <xs:element name="entitynametodiscriminatorvaluemap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="materializedblobtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="materializedblobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="yesnotype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="yesnotype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestamptype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="timestamptype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discriminatortype" >
      <xs:complexContent>
       <xs:extension base="identifiertype<t>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="adaptedimmutabletype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<t>">
         <xs:sequence>
          <xs:element name="basemutabletype" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datetype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="datetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customcollectiontype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
          <xs:element name="usertype" type="usercollectiontype" nillable="true" minOccurs="0" />
          <xs:element name="customlogging" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="materializednclobtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<string>">
         <xs:sequence>
          <xs:element name="instance" type="materializednclobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsinglecolumnstandardbasictype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrapperoptionscontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="realtypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="realtypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqltypedescriptor" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nchartypedescriptor" >
      <xs:complexContent>
       <xs:extension base="nvarchartypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="nchartypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integertypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="integertypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="smallinttypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="smallinttypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nationalizedtypemappings" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="/***singletonaccess*/instance" type="nationalizedtypemappings" nillable="true" minOccurs="0" />
        <xs:element name="nationalizedcodebynonnationalized" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqltypedescriptorregistry" >
      <xs:sequence>
        <xs:element name="instance" type="sqltypedescriptorregistry" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="descriptormap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nclobtypedescriptor" >
      <xs:sequence>
        <xs:element name="default" type="nclobtypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="nclob_binding" type="nclobtypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="stream_binding" type="nclobtypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longvarchartypedescriptor" >
      <xs:complexContent>
       <xs:extension base="varchartypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="longvarchartypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbctypefamilyinformation" >
      <xs:sequence>
        <xs:element name="instance" type="jdbctypefamilyinformation" nillable="true" minOccurs="0" />
        <xs:element name="typecodetofamilymap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bittypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="bittypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chartypedescriptor" >
      <xs:complexContent>
       <xs:extension base="varchartypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="chartypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clobtypedescriptor" >
      <xs:sequence>
        <xs:element name="default" type="clobtypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="clob_binding" type="clobtypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="stream_binding" type="clobtypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="stream_binding_extracting" type="clobtypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="biginttypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="biginttypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datetypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="datetypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tinyinttypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="tinyinttypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbctypejavaclassmappings" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="instance" type="jdbctypejavaclassmappings" nillable="true" minOccurs="0" />
        <xs:element name="javaclasstojdbctypecodemap" type="xs:anyType" />
        <xs:element name="jdbctypecodetojavaclassmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longnvarchartypedescriptor" >
      <xs:complexContent>
       <xs:extension base="nvarchartypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="longnvarchartypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blobtypedescriptor" >
      <xs:sequence>
        <xs:element name="default" type="blobtypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="primitive_array_binding" type="blobtypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="blob_binding" type="blobtypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="stream_binding" type="blobtypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="varbinarytypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="varbinarytypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longvarbinarytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="varbinarytypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="longvarbinarytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="numerictypedescriptor" >
      <xs:complexContent>
       <xs:extension base="decimaltypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="numerictypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="varchartypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="varchartypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="binarytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="varbinarytypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="binarytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doubletypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="doubletypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="decimaltypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="decimaltypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicextractor" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="javadescriptor" type="j" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="sqldescriptor" type="sqltypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nvarchartypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="nvarchartypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="floattypedescriptor" >
      <xs:complexContent>
       <xs:extension base="realtypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="floattypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicbinder" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="bind_msg_template" type="xs:string" />
        <xs:element name="null_bind_msg_template" type="xs:string" />
        <xs:element name="javadescriptor" type="j" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="sqldescriptor" type="sqltypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="booleantypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="booleantypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestamptypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="timestamptypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timetypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="timetypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wrapperoptions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valueextractor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbctypenamemapper" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="jdbc_type_map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clobtypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<clob>">
         <xs:sequence>
          <xs:element name="instance" type="clobtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="floattypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<float>">
         <xs:sequence>
          <xs:element name="instance" type="floattypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="javatypedescriptorregistry" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<t>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="instance" type="javatypedescriptorregistry" nillable="true" minOccurs="0" />
          <xs:element name="descriptorsbyclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="calendartypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<calendar>">
         <xs:sequence>
          <xs:element name="instance" type="calendartypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="calendardatetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<calendar>">
         <xs:sequence>
          <xs:element name="instance" type="calendardatetypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbctimetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<date>">
         <xs:sequence>
          <xs:element name="instance" type="jdbctimetypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="time_format" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classtypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<class>">
         <xs:sequence>
          <xs:element name="instance" type="classtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutabilityplan" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraymutabilityplan" >
      <xs:complexContent>
       <xs:extension base="mutablemutabilityplan<t>">
         <xs:sequence>
          <xs:element name="instance" type="arraymutabilityplan" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="characterarraytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<character[]>">
         <xs:sequence>
          <xs:element name="instance" type="characterarraytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttypedescriptor" >
      <xs:sequence>
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="mutabilityplan" type="xs:anyType" />
        <xs:element name="comparator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blobtypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<blob>">
         <xs:sequence>
          <xs:element name="instance" type="blobtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="shorttypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<short>">
         <xs:sequence>
          <xs:element name="instance" type="shorttypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigdecimaltypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<bigdecimal>">
         <xs:sequence>
          <xs:element name="instance" type="bigdecimaltypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializabletypedescriptor" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<date>">
         <xs:sequence>
          <xs:element name="instance" type="datetypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="date_format" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="urltypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<url>">
         <xs:sequence>
          <xs:element name="instance" type="urltypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integertypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<integer>">
         <xs:sequence>
          <xs:element name="instance" type="integertypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivebytearraytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="primitivebytearraytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="calendartimetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<calendar>">
         <xs:sequence>
          <xs:element name="instance" type="calendartimetypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcdatetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<date>">
         <xs:sequence>
          <xs:element name="instance" type="jdbcdatetypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="date_format" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<byte>">
         <xs:sequence>
          <xs:element name="instance" type="bytetypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="javatypedescriptor" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumjavatypedescriptor" >
      <xs:complexContent>
       <xs:extension base="enum>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="booleantypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<boolean>">
         <xs:sequence>
          <xs:element name="instance" type="booleantypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="actervaluetrue" type="xs:anyType" />
          <xs:element name="actervaluefalse" type="xs:anyType" />
          <xs:element name="actervaluetruelc" type="xs:anyType" />
          <xs:element name="valuetrue" type="xs:string" />
          <xs:element name="valuefalse" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigintegertypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<biginteger>">
         <xs:sequence>
          <xs:element name="instance" type="bigintegertypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datahelper" >
      <xs:sequence>
        <xs:element name="/***thesizeofthebufferwewillusetodeserializelargerstreams*/buffer_size" type="xs:long" />
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbctimestamptypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<date>">
         <xs:sequence>
          <xs:element name="instance" type="jdbctimestamptypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="timestamp_format" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="currencytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<currency>">
         <xs:sequence>
          <xs:element name="instance" type="currencytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubletypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<double>">
         <xs:sequence>
          <xs:element name="instance" type="doubletypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutablemutabilityplan" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primitivecharacterarraytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<char[]>">
         <xs:sequence>
          <xs:element name="instance" type="primitivecharacterarraytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timezonetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<timezone>">
         <xs:sequence>
          <xs:element name="instance" type="timezonetypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longtypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<long>">
         <xs:sequence>
          <xs:element name="instance" type="longtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringtypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<string>">
         <xs:sequence>
          <xs:element name="instance" type="stringtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidtypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<uuid>">
         <xs:sequence>
          <xs:element name="instance" type="uuidtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytearraytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="bytearraytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nclobtypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<nclob>">
         <xs:sequence>
          <xs:element name="instance" type="nclobtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="charactertypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<character>">
         <xs:sequence>
          <xs:element name="instance" type="charactertypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="immutablemutabilityplan" >
      <xs:sequence>
        <xs:element name="instance" type="immutablemutabilityplan" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<locale>">
         <xs:sequence>
          <xs:element name="instance" type="localetypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="incomparablecomparator" >
      <xs:sequence>
        <xs:element name="instance" type="incomparablecomparator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valuebinder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributeconvertermutabilityplanimpl" >
      <xs:complexContent>
       <xs:extension base="mutablemutabilityplan<t>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attributeconvertertypeadapter" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<t>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="name_prefix" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="description" type="xs:string" />
          <xs:element name="modeltype" type="xs:anyType" />
          <xs:element name="jdbctype" type="xs:anyType" />
          <xs:element name="attributeconverter" type="xs:anyType" />
          <xs:element name="mutabilityplan" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributeconvertersqltypedescriptoradapter" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="converter" type="xs:anyType" />
        <xs:element name="delegate" type="sqltypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="intermediate" type="javatypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doubletype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<double>">
         <xs:sequence>
          <xs:element name="instance" type="doubletype" nillable="true" minOccurs="0" />
          <xs:element name="zero" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortedmaptype" >
      <xs:complexContent>
       <xs:extension base="maptype">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivecharacterarraynclobtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<char[]>">
         <xs:sequence>
          <xs:element name="instance" type="characterarrayclobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="numericbooleantype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="numericbooleantype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrappedmaterializedblobtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="wrappedmaterializedblobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="calendardatetype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<calendar>">
         <xs:sequence>
          <xs:element name="instance" type="calendardatetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="associationtype" >
      <xs:complexContent>
       <xs:extension base="type">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objecttype" >
      <xs:complexContent>
       <xs:extension base="anytype">
         <xs:sequence>
          <xs:element name="/***singletonaccess*/instance" type="objecttype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basictyperegistry" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="registry" type="xs:anyType" />
        <xs:element name="locked" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortedsettype" >
      <xs:complexContent>
       <xs:extension base="settype">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ntexttype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<string>">
         <xs:sequence>
          <xs:element name="instance" type="ntexttype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componenttype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="typescope" type="xs:anyType" />
          <xs:element name="propertynames" type="xs:string" />
          <xs:element name="propertys" type="type" nillable="true" minOccurs="0" />
          <xs:element name="propertystrategies" type="valuegeneration" nillable="true" minOccurs="0" />
          <xs:element name="propertynullability" type="xs:anyType" />
          <xs:element name="propertyspan" type="xs:long" />
          <xs:element name="cascade" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="joinedfetch" type="fetchmode" nillable="true" minOccurs="0" />
          <xs:element name="iskey" type="xs:anyType" />
          <xs:element name="hasnotnullproperty" type="xs:anyType" />
          <xs:element name="" type="entitymode" nillable="true" minOccurs="0" />
          <xs:element name="" type="componenttuplizer" nillable="true" minOccurs="0" />
          <xs:element name="candoextraction" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dbtimestamptype" >
      <xs:complexContent>
       <xs:extension base="timestamptype">
         <xs:sequence>
          <xs:element name="instance" type="dbtimestamptype" nillable="true" minOccurs="0" />
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumtype" >
      <xs:complexContent>
       <xs:extension base="enum>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="enum" type="xs:string" />
          <xs:element name="named" type="xs:string" />
          <xs:element name="type" type="xs:string" />
          <xs:element name="enumclass" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sqltype" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializabletype" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
          <xs:element name="instance" type="xs:anyType" />
          <xs:element name="serializableclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integertype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<integer>">
         <xs:sequence>
          <xs:element name="instance" type="integertype" nillable="true" minOccurs="0" />
          <xs:element name="zero" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidchartype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<uuid>">
         <xs:sequence>
          <xs:element name="instance" type="uuidchartype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringtype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="stringtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositetype" >
      <xs:complexContent>
       <xs:extension base="type">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="floattype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<float>">
         <xs:sequence>
          <xs:element name="instance" type="floattype" nillable="true" minOccurs="0" />
          <xs:element name="zero" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="truefalsetype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="truefalsetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitytype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="scope" type="xs:anyType" />
          <xs:element name="associatedentityname" type="xs:string" />
          <xs:element name="uniquekeypropertyname" type="xs:string" />
          <xs:element name="eager" type="xs:anyType" />
          <xs:element name="unwrapproxy" type="xs:anyType" />
          <xs:element name="referencetoprimarykey" type="xs:anyType" />
          <xs:element name="/***cachedbecauseofperformance**@see#getidentifier(sessionimplementor)*@see#getidentifier(mapping)*/transientvolatileassociatedidentifier" type="type" nillable="true" minOccurs="0" />
          <xs:element name="/***cachedbecauseofperformance**@see#getassociated*/transientvolatileassociated" type="entitypersister" nillable="true" minOccurs="0" />
          <xs:element name="transientreturned" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonetype" >
      <xs:complexContent>
       <xs:extension base="entitytype">
         <xs:sequence>
          <xs:element name="ignorenotfound" type="xs:anyType" />
          <xs:element name="islogicalonetoone" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typefactory" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="typescope" type="xs:anyType" />
          <xs:element name="//todo:canabewrappedinunmodifiableinanyway?empty_" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivetype" >
      <xs:complexContent>
       <xs:extension base="literaltype<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="shorttype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="shorttype" nillable="true" minOccurs="0" />
          <xs:element name="zero" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versiontype" >
      <xs:complexContent>
       <xs:extension base="type">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localetype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<locale>">
         <xs:sequence>
          <xs:element name="instance" type="localetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringnvarchartype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="stringnvarchartype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttype" >
      <xs:sequence>
        <xs:element name="legacy_dictated_" type="size" nillable="true" minOccurs="0" />
        <xs:element name="//tomatchlegacybehaviorlegacy_default_" type="size" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blobtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<blob>">
         <xs:sequence>
          <xs:element name="instance" type="blobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractstandardbasictype" >
      <xs:sequence>
        <xs:element name="//tomatchlegacybehaviordefault_" type="size" nillable="true" minOccurs="0" />
        <xs:element name="dictated" type="size" nillable="true" minOccurs="0" />
        <xs:element name="//don'tusehere.needtoinitializeafter-the-fact//bydynamicparameterizedtypes." type="sqltypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="javatypedescriptor" type="xs:anyType" />
        <xs:element name="sqltypes" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bagtype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generationtime" >
      <xs:sequence>
        <xs:element name="equivalent" type="generationtiming" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexcolumn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tuplizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicupdate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazycollection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rowid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notfoundaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columns" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazytoone" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="where" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheconcurrencystrategy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="accesstype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="source" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlocktype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="target" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generated" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filters" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalidcache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tuplizers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wherejointable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderby" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namednativequery" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesstype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectbeforeupdate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="creationtimestamp" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paramdef" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqldeleteall" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatetimestamp" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joincolumnorformula" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedquery" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namednativequeries" >
      <xs:complexContent>
       <xs:extension base="the">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchmode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchprofile" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchsize" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nationalized" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sourcetype" >
      <xs:sequence>
        <xs:element name="typename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valuegenerationtype" >
      <xs:complexContent>
       <xs:extension base="annotationvaluegeneration<?>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlupdate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqldelete" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="index" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinformula" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterdef" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascade" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flushmodetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="any" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listindexbase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persister" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterdefs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generatortype" >
      <xs:complexContent>
       <xs:extension base="valuegenerator<?>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchprofiles" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlinsert" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sorttype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sort" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterjointable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazycollectionoption" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreignkey" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectiontype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedef" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultcheckstyle" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="type" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfragmentalias" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columntransformer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columndefault" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formula" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="polymorphismtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedqueries" >
      <xs:complexContent>
       <xs:extension base="the">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnsorformulas" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeytype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortcomparator" >
      <xs:complexContent>
       <xs:extension base="comparator<?>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ondelete" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedefs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachemodetype" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="cachemode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discriminatoroptions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlock" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryhints" >
      <xs:sequence>
        <xs:element name="/***thecachemodetouse.**@seeorg.hibernate.query#setcachemode*@seeorg.hibernate.sqlquery#setcachemode*/cache_mode" type="xs:string" />
        <xs:element name="/***thecacheregiontouse.**@seeorg.hibernate.query#setcacheregion*@seeorg.hibernate.sqlquery#setcacheregion*/cache_region" type="xs:string" />
        <xs:element name="/***arethequeryresultscacheable?**@seeorg.hibernate.query#setcacheable*@seeorg.hibernate.sqlquery#setcacheable*/cacheable" type="xs:string" />
        <xs:element name="/***isthequerycallable?note:onlyvalidfornamednativesqlqueries.*/callable" type="xs:string" />
        <xs:element name="/***definesacommenttobeappliedtothesqlsenttothedatabase.**@seeorg.hibernate.query#setcomment*@seeorg.hibernate.sqlquery#setcomment*/comment" type="xs:string" />
        <xs:element name="/***definesthejdbcfetchsizetouse.**@seeorg.hibernate.query#setfetchsize*@seeorg.hibernate.sqlquery#setfetchsize*/fetch_size" type="xs:string" />
        <xs:element name="/***theflushmodetoassociatewiththeexecutionofthequery.**@seeorg.hibernate.query#setflushmode*@seeorg.hibernate.sqlquery#setflushmode*@seeorg.hibernate.session#setflushmode*/flush_mode" type="xs:string" />
        <xs:element name="/***shouldentitiesreturnedfromthequerybesetinreadonlymode?**@seeorg.hibernate.query#setreadonly*@seeorg.hibernate.sqlquery#setreadonly*@seeorg.hibernate.session#setreadonly*/read_only" type="xs:string" />
        <xs:element name=".**@seeorg.hibernate.query#settimeout*@seeorg.hibernate.sqlquery#settimeout*/timeout_hibernate" type="xs:string" />
        <xs:element name=".*/timeout_jpa" type="xs:string" />
        <xs:element name="*acceptsa{@linkjavax.persistence.lockmodetype}ora{@linkorg.hibernate.lockmode}*/native_lockmode" type="xs:string" />
        <xs:element name="/***hintprovidinga"fetchgraph"entitygraph.attributesexplicitlyspecifiedasattributenodesaretreatedas*fetchtype.eager(viajoinfetchorsubsequentselect).**note:currently,attributesthatarenotspecifiedaretreatedasfetchtype.lazyorfetchtype.eagerdepending*ontheattribute'sdefinitioninmetadata,ratherthanforcingfetchtype.lazy.*/fetchgraph" type="xs:string" />
        <xs:element name="/***hintprovidinga"loadgraph"entitygraph.attributesexplicitlyspecifiedasattributenodesaretreatedas*fetchtype.eager(viajoinfetchorsubsequentselect).attributesthatarenotspecifiedaretreatedas*fetchtype.lazyorfetchtype.eagerdependingontheattribute'sdefinitioninmetadata*/loadgraph" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discriminatorformula" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notfound" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterjointables" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="check" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazytooneoption" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columntransformers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlocking" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anymetadef" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metavalue" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericgenerators" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributeaccessor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronize" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetch" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicinsert" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortnatural" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="table" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoany" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ondeleteaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anymetadefs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="polymorphism" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tables" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessioneventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nomorereturnsexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="output" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetoutput" >
      <xs:complexContent>
       <xs:extension base="output">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetoutputimpl" >
      <xs:sequence>
        <xs:element name="results" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outputsimpl" >
      <xs:complexContent>
       <xs:extension base="customloader">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="context" type="resultcontext" nillable="true" minOccurs="0" />
          <xs:element name="jdbcstatement" type="xs:anyType" />
          <xs:element name="loader" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updatecountoutputimpl" >
      <xs:sequence>
        <xs:element name="updatecount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatecountoutput" >
      <xs:complexContent>
       <xs:extension base="output">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="outputs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sybaseanywheredialect" >
      <xs:complexContent>
       <xs:extension base="sybasedialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mimersqldialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="national_char_length" type="xs:long" />
          <xs:element name="binary_max_length" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresql94dialect" >
      <xs:complexContent>
       <xs:extension base="postgresql92dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="frontbasedialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserver2012dialect" >
      <xs:complexContent>
       <xs:extension base="sqlserver2008dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mckoidialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interbasedialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="limit_handler" type="abstractlimithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="progressdialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hsqldialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="/***versionis180for1.8.0or200for2.0.0*/hsqldbversion" type="xs:long" />
          <xs:element name="" type="limithandler" nillable="true" minOccurs="0" />
          <xs:element name="extracter_18" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
          <xs:element name="/***hsqldb2.0messageshavechanged*messagesmaybelocalized-thereforeusethecommon,non-localeelement"table:"*/extracter_20" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracle9idialect" >
      <xs:complexContent>
       <xs:extension base="oracle8idialect">
         <xs:sequence>
          <xs:element name="limit_handler" type="abstractlimithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracle8idialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="limit_handler" type="abstractlimithandler" nillable="true" minOccurs="0" />
          <xs:element name="param_list_size_limit" type="xs:long" />
          <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identitycolumnsupportimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oracle12cgetgeneratedkeysdelegate" >
      <xs:complexContent>
       <xs:extension base="getgeneratedkeysdelegate">
         <xs:sequence>
          <xs:element name="keycolumns" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identitycolumnsupport" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oracle12cidentitycolumnsupport" >
      <xs:complexContent>
       <xs:extension base="identitycolumnsupportimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getgeneratedkeysdelegate" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="persister" type="postinsertidentitypersister" nillable="true" minOccurs="0" />
          <xs:element name="" type="dialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultcolumnreferencestrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derbytensevendialect" >
      <xs:complexContent>
       <xs:extension base="derbytensixdialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2390dialect" >
      <xs:complexContent>
       <xs:extension base="db2dialect">
         <xs:sequence>
          <xs:element name="limit_handler" type="abstractlimithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2400dialect" >
      <xs:complexContent>
       <xs:extension base="db2dialect">
         <xs:sequence>
          <xs:element name="limit_handler" type="abstractlimithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracle12cdialect" >
      <xs:complexContent>
       <xs:extension base="oracle10gdialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cubriddialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hanarowstoredialect" >
      <xs:complexContent>
       <xs:extension base="abstracthanadialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ingres10dialect" >
      <xs:complexContent>
       <xs:extension base="ingres9dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typenames" >
      <xs:sequence>
        <xs:element name="defaults" type="xs:anyType" />
        <xs:element name="weighted" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postgresqldialect" >
      <xs:complexContent>
       <xs:extension base="postgresql82dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresplusdialect" >
      <xs:complexContent>
       <xs:extension base="postgresqldialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datadirectoracle9dialect" >
      <xs:complexContent>
       <xs:extension base="oracle9dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pointbasedialect" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.dialect.dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hanacolumnstoredialect" >
      <xs:complexContent>
       <xs:extension base="abstracthanadialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ingresdialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cubridlimithandler" >
      <xs:complexContent>
       <xs:extension base="abstractlimithandler">
         <xs:sequence>
          <xs:element name="instance" type="cubridlimithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="limithandler" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlserver2005limithandler" >
      <xs:complexContent>
       <xs:extension base="abstractlimithandler">
         <xs:sequence>
          <xs:element name="select" type="xs:string" />
          <xs:element name="select_with_space" type="xs:string" />
          <xs:element name="from" type="xs:string" />
          <xs:element name="distinct" type="xs:string" />
          <xs:element name="order_by" type="xs:string" />
          <xs:element name="alias_" type="xs:anyType" />
          <xs:element name="//flagindicatingwhethertop(?)expressionhasbeenaddedtotheoriginalquery.topadded" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="firstlimithandler" >
      <xs:complexContent>
       <xs:extension base="abstractlimithandler">
         <xs:sequence>
          <xs:element name="instance" type="firstlimithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toplimithandler" >
      <xs:complexContent>
       <xs:extension base="abstractlimithandler">
         <xs:sequence>
          <xs:element name="supportsvariablelimit" type="xs:anyType" />
          <xs:element name="bindlimitparametersfirst" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacylimithandler" >
      <xs:complexContent>
       <xs:extension base="abstractlimithandler">
         <xs:sequence>
          <xs:element name="" type="dialect" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sql2008standardlimithandler" >
      <xs:complexContent>
       <xs:extension base="abstractlimithandler">
         <xs:sequence>
          <xs:element name="instance" type="sql2008standardlimithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="limithelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nooplimithandler" >
      <xs:complexContent>
       <xs:extension base="abstractlimithandler">
         <xs:sequence>
          <xs:element name="instance" type="nooplimithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlimithandler" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oracletypeshelper" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***singletonaccess*/instance" type="oracletypeshelper" nillable="true" minOccurs="0" />
        <xs:element name="oracle_types_class_name" type="xs:string" />
        <xs:element name="deprecated_oracle_types_class_name" type="xs:string" />
        <xs:element name="oraclecursortypesqltype" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="db2uniquedelegate" >
      <xs:complexContent>
       <xs:extension base="defaultuniquedelegate">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultuniquedelegate" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uniquedelegate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="informixuniquedelegate" >
      <xs:complexContent>
       <xs:extension base="defaultuniquedelegate">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="teradata14dialect" >
      <xs:complexContent>
       <xs:extension base="teradatadialect">
         <xs:sequence>
          <xs:element name="/***constructor*/teraindexexporter" type="standardindexexporter" nillable="true" minOccurs="0" />
          <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracthanadialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="limit_handler" type="abstractlimithandler" nillable="true" minOccurs="0" />
          <xs:element name="//theandnforhanaareslightly//changedfromthestandardones.thehanajdbcdrivercurrentlyclosesany//streampassedinvia//preparedstatement.setcharacterstream(int,reader,long)//afterthestreamhasbeenprocessed.thiscausesproblemslaterifweare//usingnon-contexuallobcreationandhanathenclosesourstringreader.//seetestcaseloblocatortesthana_clob_stream_binding" type="clobtypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="hana_nclob_stream_binding" type="nclobtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracledialect" >
      <xs:complexContent>
       <xs:extension base="oracle9dialect">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracle10gdialect" >
      <xs:complexContent>
       <xs:extension base="oracle9idialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="templaterenderer" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="template" type="xs:string" />
        <xs:element name="chunks" type="xs:string" />
        <xs:element name="paramindexes" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractansitrimemulationfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardjdbcescapefunction" >
      <xs:complexContent>
       <xs:extension base="standardsqlfunction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="noargsqlfunction" >
      <xs:sequence>
        <xs:element name="return" type="type" nillable="true" minOccurs="0" />
        <xs:element name="hasparenthesesifnoarguments" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfunctiontemplate" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="renderer" type="templaterenderer" nillable="true" minOccurs="0" />
        <xs:element name="hasparenthesesifnoargs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardsqlfunction" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="registered" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="varargssqlfunction" >
      <xs:sequence>
        <xs:element name="begin" type="xs:string" />
        <xs:element name="sep" type="xs:string" />
        <xs:element name="end" type="xs:string" />
        <xs:element name="registered" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfunctionregistry" >
      <xs:sequence>
        <xs:element name="functionmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nvlfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trimfunctiontemplate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derbyconcatfunction" >
      <xs:sequence>
        <xs:element name="cast_string_transformer" type="xs:anyType" />
        <xs:element name="no_transform_string_transformer" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="castfunction" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="castfunction" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="staticprecisionfsptimestampfunction" >
      <xs:complexContent>
       <xs:extension base="noargsqlfunction">
         <xs:sequence>
          <xs:element name="rendered" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="avgwithargumentcastfunction" >
      <xs:complexContent>
       <xs:extension base="standardansisqlaggregationfunctions.avgfunction">
         <xs:sequence>
          <xs:element name="casttype" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="positionsubstringfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ansitrimfunction" >
      <xs:complexContent>
       <xs:extension base="trimfunctiontemplate">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ansitrimemulationfunction" >
      <xs:complexContent>
       <xs:extension base="abstractansitrimemulationfunction">
         <xs:sequence>
          <xs:element name="/***thedefault{@codeltrim}functionname*/ltrim" type="xs:string" />
          <xs:element name="/***thedefault{@codertrim}functionname*/rtrim" type="xs:string" />
          <xs:element name="/***thedefault{@codereplace}functionname*/replace" type="xs:string" />
          <xs:element name="/***theplaceholderusedtorepresentwhitespace*/space_placeholder" type="xs:string" />
          <xs:element name="/***thesqlfunctiontemplatepatternforthetrimmingleadingspaces*/leading_space_trim_template" type="xs:string" />
          <xs:element name="/***thesqlfunctiontemplatepatternforthetrimmingtrailingspaces*/trailing_space_trim_template" type="xs:string" />
          <xs:element name="/***thesqlfunctiontemplatepatternforthetrimmingbothleadingandtrailingspaces*/both_space_trim_template" type="xs:string" />
          <xs:element name="/***thesqlfunctiontemplatepatternforthetrimmingbothleadingandtrailingspaces,withtheoptionalfromkeyword.*differentbecauseweneedtoskipthefromkeywordinthesqlfunctiontemplateprocessing*/both_space_trim_from_template" type="xs:string" />
          <xs:element name="*/leading_trim_template" type="xs:string" />
          <xs:element name="*note:essentiallythesameseriesofcallsasoutlinedin{@link#leading_trim_template}exceptthathere,*insteadofleft-trimmingtheaddedspaces,weright-trimthemtoremovethemfromtheendofthetext.*/trailing_trim_template" type="xs:string" />
          <xs:element name="*note:again,wehaveaseriesofcallsthatisessentiallythesameasoutlinedin{@link#leading_trim_template}*exceptthathereweperformbothleft(leading)andright(trailing)trimming.*/both_trim_template" type="xs:string" />
          <xs:element name="leadingspacetrim" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="trailingspacetrim" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="bothspacetrim" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="bothspacetrimfrom" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="leadingtrim" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="trailingtrim" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="bothtrim" type="sqlfunction" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="convertfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalparenthesisfunction" >
      <xs:complexContent>
       <xs:extension base="standardsqlfunction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardansisqlaggregationfunctions" >
      <xs:complexContent>
       <xs:extension base="standardsqlfunction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="charindexfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sybase11dialect" >
      <xs:complexContent>
       <xs:extension base="sybasedialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysql5dialect" >
      <xs:complexContent>
       <xs:extension base="mysqldialect">
         <xs:sequence>
          <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresql82dialect" >
      <xs:complexContent>
       <xs:extension base="postgresql81dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobmergestrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postgresql92dialect" >
      <xs:complexContent>
       <xs:extension base="postgresql9dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="informixdialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="" type="uniquedelegate" nillable="true" minOccurs="0" />
          <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttransactsqldialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresql81dialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="limit_handler" type="abstractlimithandler" nillable="true" minOccurs="0" />
          <xs:element name="/***constraint-nameextractorforpostgresconstraintviolationexceptions.*orginallycontributedbydennybartelt.*/extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sybasedialect" >
      <xs:complexContent>
       <xs:extension base="abstracttransactsqldialect">
         <xs:sequence>
          <xs:element name="param_list_size_limit" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverdialect" >
      <xs:complexContent>
       <xs:extension base="abstracttransactsqldialect">
         <xs:sequence>
          <xs:element name="param_list_size_limit" type="xs:long" />
          <xs:element name="" type="limithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserver2008dialect" >
      <xs:complexContent>
       <xs:extension base="sqlserver2005dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cache71dialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="limithandler" type="toplimithandler" nillable="true" minOccurs="0" />
          <xs:element name="/***thecache.*/extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestendialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derbytenfivedialect" >
      <xs:complexContent>
       <xs:extension base="derbydialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqldialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="limit_handler" type="limithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserver2005dialect" >
      <xs:complexContent>
       <xs:extension base="sqlserverdialect">
         <xs:sequence>
          <xs:element name="max_length" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dialect" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***definesadefaultbatchsizeconstant*/default_batch_size" type="xs:string" />
        <xs:element name="/***definesa"nobatching"batchsizeconstant*/no_batch" type="xs:string" />
        <xs:element name="/***charactersusedasopeningforquotingsqlidentifiers*/quote" type="xs:string" />
        <xs:element name="/***charactersusedasclosingforquotingsqlidentifiers*/closed_quote" type="xs:string" />
        <xs:element name="GeneratedName" type="typenames" nillable="true" minOccurs="0" />
        <xs:element name="hibernate" type="typenames" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="sqlfunctions" type="xs:anyType" />
        <xs:element name="sqlkeywords" type="xs:anyType" />
        <xs:element name="GeneratedName" type="uniquedelegate" nillable="true" minOccurs="0" />
        <xs:element name="/***thelegacybehaviorofhibernate.lobsarenotprocessedbymerge*/legacy_lob_merge_strategy" type="lobmergestrategy" nillable="true" minOccurs="0" />
        <xs:element name="/***mergestrategybasedontransferringcontentsbasedonstreams.*/stream_xfer_lob_merge_strategy" type="lobmergestrategy" nillable="true" minOccurs="0" />
        <xs:element name="/***mergestrategybasedoncreatinganewloblocator.*/new_locator_lob_merge_strategy" type="lobmergestrategy" nillable="true" minOccurs="0" />
        <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
        <xs:element name="//ddlsupport~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~tableexporter" type="standardtableexporter" nillable="true" minOccurs="0" />
        <xs:element name="sequenceexporter" type="standardsequenceexporter" nillable="true" minOccurs="0" />
        <xs:element name="indexexporter" type="standardindexexporter" nillable="true" minOccurs="0" />
        <xs:element name="foreignkeyexporter" type="standardforeignkeyexporter" nillable="true" minOccurs="0" />
        <xs:element name="uniquekeyexporter" type="standarduniquekeyexporter" nillable="true" minOccurs="0" />
        <xs:element name="auxiliaryobjectexporter" type="standardauxiliarydatabaseobjectexporter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mysqlmyisamdialect" >
      <xs:complexContent>
       <xs:extension base="mysqldialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sybasease15dialect" >
      <xs:complexContent>
       <xs:extension base="sybasedialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracle9dialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="param_list_size_limit" type="xs:long" />
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnaliasextractor" >
      <xs:sequence>
        <xs:element name="/***anextractorwhichuses{@linkresultsetmetadata#getcolumnlabel}*/column_label_extractor" type="columnaliasextractor" nillable="true" minOccurs="0" />
        <xs:element name="/***anextractorwhichuses{@linkresultsetmetadata#getcolumnname}*/column_name_extractor" type="columnaliasextractor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdatastoredialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysql57innodbdialect" >
      <xs:complexContent>
       <xs:extension base="mysql5innodbdialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derbydialect" >
      <xs:complexContent>
       <xs:extension base="db2dialect">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="driverversionmajor" type="xs:long" />
          <xs:element name="driverversionminor" type="xs:long" />
          <xs:element name="" type="limithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="firebirddialect" >
      <xs:complexContent>
       <xs:extension base="interbasedialect">
         <xs:sequence>
          <xs:element name="limit_handler" type="abstractlimithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlinnodbdialect" >
      <xs:complexContent>
       <xs:extension base="mysqldialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresql9dialect" >
      <xs:complexContent>
       <xs:extension base="postgresql82dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="h2dialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="limit_handler" type="abstractlimithandler" nillable="true" minOccurs="0" />
          <xs:element name="querysequence" type="xs:string" />
          <xs:element name="" type="sequenceinformationextractor" nillable="true" minOccurs="0" />
          <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysql5innodbdialect" >
      <xs:complexContent>
       <xs:extension base="mysql5dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ingres9dialect" >
      <xs:complexContent>
       <xs:extension base="ingresdialect">
         <xs:sequence>
          <xs:element name="limit_handler" type="limithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sapdbdialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derbytensixdialect" >
      <xs:complexContent>
       <xs:extension base="derbytenfivedialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rdmsos2200dialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="limit_handler" type="abstractlimithandler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sybasease157dialect" >
      <xs:complexContent>
       <xs:extension base="sybasease15dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="teradatadialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="param_list_size_limit" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pessimisticentitylockexception" >
      <xs:complexContent>
       <xs:extension base="lockingstrategyexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pessimisticwriteupdatelockingstrategy" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pessimisticwriteselectlockingstrategy" >
      <xs:complexContent>
       <xs:extension base="abstractselectlockingstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectlockingstrategy" >
      <xs:complexContent>
       <xs:extension base="abstractselectlockingstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pessimisticreadupdatelockingstrategy" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pessimisticreadselectlockingstrategy" >
      <xs:complexContent>
       <xs:extension base="abstractselectlockingstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updatelockingstrategy" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlockingstrategy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pessimisticforceincrementlockingstrategy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockingstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockingstrategyexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractselectlockingstrategy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="waitforeversql" type="xs:string" />
        <xs:element name="nowaitsql" type="xs:string" />
        <xs:element name="skiplockedsql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticentitylockexception" >
      <xs:complexContent>
       <xs:extension base="lockingstrategyexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticforceincrementlockingstrategy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="db2dialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="limit_handler" type="abstractlimithandler" nillable="true" minOccurs="0" />
          <xs:element name="" type="uniquedelegate" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidloadaccess" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedsessioncontext" >
      <xs:complexContent>
       <xs:extension base="abstractcurrentsessioncontext">
         <xs:sequence>
          <xs:element name="context_tl" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtasessioncontext" >
      <xs:complexContent>
       <xs:extension base="abstractcurrentsessioncontext">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="currentsessionmap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="threadlocalsessioncontext" >
      <xs:complexContent>
       <xs:extension base="abstractcurrentsessioncontext">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="session_proxy_interfaces" type="xs:anyType" />
          <xs:element name="/***athreadlocalmaintainingcurrentsessionsforthegivenexecutionthread.*theactualthreadlocalvariableisajava.util.maptoaccountfor*thepossibilityformultiplesessionfactoryinstancesbeingusedduringexecution*ofthegiventhread.*/context_tl" type="map" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tenantidentifiermismatchexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcurrentsessioncontext" >
      <xs:sequence>
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="currenttenantidentifierresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="currentsessioncontext" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonuniqueresultexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicquerycontract" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectionreleasemode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryloader" >
      <xs:complexContent>
       <xs:extension base="basicloader">
         <xs:sequence>
          <xs:element name="/***thequerytranslatorthatisdelegatingtothisobject.*/querytranslator" type="querytranslatorimpl" nillable="true" minOccurs="0" />
          <xs:element name="entitypersisters" type="queryable" nillable="true" minOccurs="0" />
          <xs:element name="entityaliases" type="xs:string" />
          <xs:element name="sqlaliases" type="xs:string" />
          <xs:element name="sqlaliassuffixes" type="xs:string" />
          <xs:element name="includeinselect" type="xs:anyType" />
          <xs:element name="collectionsuffixes" type="xs:string" />
          <xs:element name="hasscalars" type="xs:anyType" />
          <xs:element name="scalarcolumnnames" type="xs:string" />
          <xs:element name="sqlresultsqueryreturns" type="type" nillable="true" minOccurs="0" />
          <xs:element name="sqlaliasbyentityalias" type="xs:anyType" />
          <xs:element name="ownerassociationtypes" type="entitytype" nillable="true" minOccurs="0" />
          <xs:element name="owners" type="xs:long" />
          <xs:element name="entityeagerpropertyfetches" type="xs:anyType" />
          <xs:element name="collectionowners" type="xs:long" />
          <xs:element name="collectionpersisters" type="queryablecollection" nillable="true" minOccurs="0" />
          <xs:element name="selectlength" type="xs:long" />
          <xs:element name="" type="aggregatedselectexpression" nillable="true" minOccurs="0" />
          <xs:element name="queryreturnaliases" type="xs:string" />
          <xs:element name="defaults" type="lockmode" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinwalker" >
      <xs:sequence>
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="associations" type="list" nillable="true" minOccurs="0" />
        <xs:element name="visitedassociationkeys" type="set" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="loadqueryinfluencers" nillable="true" minOccurs="0" />
        <xs:element name="suffixes" type="xs:string" />
        <xs:element name="collectionsuffixes" type="xs:string" />
        <xs:element name="persisters" type="loadable" nillable="true" minOccurs="0" />
        <xs:element name="owners" type="xs:long" />
        <xs:element name="ownerassociationtypes" type="entitytype" nillable="true" minOccurs="0" />
        <xs:element name="s" type="collectionpersister" nillable="true" minOccurs="0" />
        <xs:element name="collectionowners" type="xs:long" />
        <xs:element name="aliases" type="xs:string" />
        <xs:element name="GeneratedName" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="array" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scalarcollectioncriteriainfoprovider" >
      <xs:sequence>
        <xs:element name="role" type="xs:string" />
        <xs:element name="persister" type="queryablecollection" nillable="true" minOccurs="0" />
        <xs:element name="helper" type="sessionfactoryhelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriajoinwalker" >
      <xs:complexContent>
       <xs:extension base="abstractentityjoinwalker">
         <xs:sequence>
          <xs:element name="//todo:addacriteriaimplementorinterface//thisclassdependsdirectlyuponcriteriaimplintheimplpackage...translator" type="criteriaquerytranslator" nillable="true" minOccurs="0" />
          <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
          <xs:element name="results" type="type" nillable="true" minOccurs="0" />
          <xs:element name="includeinresultrow" type="xs:anyType" />
          <xs:element name="useraliases" type="xs:string" />
          <xs:element name="useraliaslist" type="xs:anyType" />
          <xs:element name="resulttypelist" type="type" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="includeinresultrowlist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriainfoprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitycriteriainfoprovider" >
      <xs:sequence>
        <xs:element name="persister" type="queryable" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaquerytranslator" >
      <xs:sequence>
        <xs:element name="root_sql_alias" type="xs:string" />
        <xs:element name="outerquerytranslator" type="criteriaquery" nillable="true" minOccurs="0" />
        <xs:element name="rootcriteria" type="criteriaimpl" nillable="true" minOccurs="0" />
        <xs:element name="rootentityname" type="xs:string" />
        <xs:element name="rootsqlalias" type="xs:string" />
        <xs:element name="criteriainfomap" type="xs:anyType" />
        <xs:element name="namecriteriainfomap" type="xs:anyType" />
        <xs:element name="criteriasqlaliasmap" type="xs:anyType" />
        <xs:element name="aliascriteriamap" type="xs:anyType" />
        <xs:element name="associationpathcriteriamap" type="xs:anyType" />
        <xs:element name="associationpathjointypesmap" type="xs:anyType" />
        <xs:element name="withclausemap" type="xs:anyType" />
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="helper" type="sessionfactoryhelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criterialoader" >
      <xs:complexContent>
       <xs:extension base="outerjoinloader">
         <xs:sequence>
          <xs:element name="//todo:thisclassdependsdirectlyuponcriteriaimpl,//intheimplpackage...addacriteriaimplementor//interface//note:unlikeallotherloaders,thisoneisnot//multithreaded,orcacheable!!translator" type="criteriaquerytranslator" nillable="true" minOccurs="0" />
          <xs:element name="queryspaces" type="xs:anyType" />
          <xs:element name="results" type="type" nillable="true" minOccurs="0" />
          <xs:element name="useraliases" type="xs:string" />
          <xs:element name="includeinresultrow" type="xs:anyType" />
          <xs:element name="resultrowlength" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentcollectioncriteriainfoprovider" >
      <xs:sequence>
        <xs:element name="persister" type="queryablecollection" nillable="true" minOccurs="0" />
        <xs:element name="subtypes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicloader" >
      <xs:complexContent>
       <xs:extension base="loader">
         <xs:sequence>
          <xs:element name="no_suffix" type="xs:string" />
          <xs:element name="descriptors" type="entityaliases" nillable="true" minOccurs="0" />
          <xs:element name="collectiondescriptors" type="collectionaliases" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchfetchstyle" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outerjoinableassociation" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertypath" nillable="true" minOccurs="0" />
        <xs:element name="joinabletype" type="associationtype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="joinable" nillable="true" minOccurs="0" />
        <xs:element name="//belongtootherpersisterlhsalias" type="xs:string" />
        <xs:element name="lhscolumns" type="xs:string" />
        <xs:element name="rhsalias" type="xs:string" />
        <xs:element name="rhscolumns" type="xs:string" />
        <xs:element name="GeneratedName" type="jointype" nillable="true" minOccurs="0" />
        <xs:element name="on" type="xs:string" />
        <xs:element name="enabledfilters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="hasrestriction" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultentityaliases" >
      <xs:sequence>
        <xs:element name="suffixedkeycolumns" type="xs:string" />
        <xs:element name="suffixedversioncolumn" type="xs:string" />
        <xs:element name="suffixedpropertycolumns" type="xs:string" />
        <xs:element name="suffixeddiscriminatorcolumn" type="xs:string" />
        <xs:element name="suffix" type="xs:string" />
        <xs:element name="rowidalias" type="xs:string" />
        <xs:element name="userprovidedaliases" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnentityaliases" >
      <xs:complexContent>
       <xs:extension base="defaultentityaliases">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionaliases" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="afterloadaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outerjoinloader" >
      <xs:complexContent>
       <xs:extension base="basicloader">
         <xs:sequence>
          <xs:element name="persisters" type="loadable" nillable="true" minOccurs="0" />
          <xs:element name="s" type="collectionpersister" nillable="true" minOccurs="0" />
          <xs:element name="collectionowners" type="xs:long" />
          <xs:element name="aliases" type="xs:string" />
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
          <xs:element name="array" type="lockmode" nillable="true" minOccurs="0" />
          <xs:element name="owners" type="xs:long" />
          <xs:element name="ownerassociationtypes" type="entitytype" nillable="true" minOccurs="0" />
          <xs:element name="sql" type="xs:string" />
          <xs:element name="suffixes" type="xs:string" />
          <xs:element name="collectionsuffixes" type="xs:string" />
          <xs:element name="" type="loadqueryinfluencers" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loader" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="debug_enabled" type="xs:anyType" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="volatile" type="columnnamecache" nillable="true" minOccurs="0" />
        <xs:element name="referencecachingenabled" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlqueryparser" >
      <xs:sequence>
        <xs:element name="hibernate_placeholder_prefix" type="xs:string" />
        <xs:element name="domain_placeholder" type="xs:string" />
        <xs:element name="catalog_placeholder" type="xs:string" />
        <xs:element name="schema_placeholder" type="xs:string" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="originalquery" type="xs:string" />
        <xs:element name="context" type="xs:anyType" />
        <xs:element name="namedparameters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="aliasesfound" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlqueryreturnprocessor" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="no_returns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" />
        <xs:element name="queryreturns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" />
        <xs:element name="//listpersisters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="alias2owneralias" type="map" nillable="true" minOccurs="0" />
        <xs:element name="alias2persister" type="xs:anyType" />
        <xs:element name="alias2suffix" type="map" nillable="true" minOccurs="0" />
        <xs:element name="alias2collectionpersister" type="xs:anyType" />
        <xs:element name="alias2collectionsuffix" type="map" nillable="true" minOccurs="0" />
        <xs:element name="entitypropertyresults" type="map" nillable="true" minOccurs="0" />
        <xs:element name="collectionpropertyresults" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//listscalartypes" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="//listcollectionowneraliases" type="xs:long" />
        <xs:element name="collectionsuffixseed" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlcustomquery" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
        <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
        <xs:element name="namedparameterbindpoints" type="map" nillable="true" minOccurs="0" />
        <xs:element name="customqueryreturns" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scalarreturn" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="columnalias" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customloader" >
      <xs:complexContent>
       <xs:extension base="loader">
         <xs:sequence>
          <xs:element name="//currently*not*cachableifautodiscovertypesisineffect(e.g."select*...")sql" type="xs:string" />
          <xs:element name="queryspaces" type="xs:anyType" />
          <xs:element name="namedparameterbindpoints" type="map" nillable="true" minOccurs="0" />
          <xs:element name="entitypersisters" type="queryable" nillable="true" minOccurs="0" />
          <xs:element name="entiytowners" type="xs:long" />
          <xs:element name="" type="entityaliases" nillable="true" minOccurs="0" />
          <xs:element name="collectionpersisters" type="queryablecollection" nillable="true" minOccurs="0" />
          <xs:element name="collectionowners" type="xs:long" />
          <xs:element name="" type="collectionaliases" nillable="true" minOccurs="0" />
          <xs:element name="s" type="lockmode" nillable="true" minOccurs="0" />
          <xs:element name="includeinresultrow" type="xs:anyType" />
          <xs:element name="sqlaliases//stringsqlaliassuffixesrowprocessor" type="resultrowprocessor" nillable="true" minOccurs="0" />
          <xs:element name="results" type="type" nillable="true" minOccurs="0" />
          <xs:element name="transformeraliases" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonuniquediscoveredsqlaliasexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rootreturn" >
      <xs:complexContent>
       <xs:extension base="nonscalarreturn">
         <xs:sequence>
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="" type="entityaliases" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customquery" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityfetchreturn" >
      <xs:complexContent>
       <xs:extension base="fetchreturn">
         <xs:sequence>
          <xs:element name="" type="entityaliases" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constructorresultcolumnprocessor" >
      <xs:sequence>
        <xs:element name="target" type="xs:anyType" />
        <xs:element name="scalarprocessors" type="scalarresultcolumnprocessor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="constructor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcresultmetadata" >
      <xs:sequence>
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchreturn" >
      <xs:complexContent>
       <xs:extension base="nonscalarreturn">
         <xs:sequence>
          <xs:element name="owner" type="nonscalarreturn" nillable="true" minOccurs="0" />
          <xs:element name="ownerproperty" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonscalarreturn" >
      <xs:sequence>
        <xs:element name="alias" type="xs:string" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultrowprocessor" >
      <xs:sequence>
        <xs:element name="hasscalars" type="xs:anyType" />
        <xs:element name="columnprocessors" type="resultcolumnprocessor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scalarresultcolumnprocessor" >
      <xs:sequence>
        <xs:element name="position" type="xs:long" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionfetchreturn" >
      <xs:complexContent>
       <xs:extension base="fetchreturn">
         <xs:sequence>
          <xs:element name="" type="collectionaliases" nillable="true" minOccurs="0" />
          <xs:element name="element" type="entityaliases" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="return" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columncollectionaliases" >
      <xs:sequence>
        <xs:element name="keyaliases" type="xs:string" />
        <xs:element name="indexaliases" type="xs:string" />
        <xs:element name="elementaliases" type="xs:string" />
        <xs:element name="identifieralias" type="xs:string" />
        <xs:element name="userprovidedaliases" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonscalarresultcolumnprocessor" >
      <xs:sequence>
        <xs:element name="position" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constructorreturn" >
      <xs:sequence>
        <xs:element name="target" type="xs:anyType" />
        <xs:element name="scalars" type="scalarreturn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionreturn" >
      <xs:complexContent>
       <xs:extension base="nonscalarreturn">
         <xs:sequence>
          <xs:element name="ownerentityname" type="xs:string" />
          <xs:element name="ownerproperty" type="xs:string" />
          <xs:element name="" type="collectionaliases" nillable="true" minOccurs="0" />
          <xs:element name="element" type="entityaliases" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultcolumnprocessor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generatedcollectionaliases" >
      <xs:sequence>
        <xs:element name="suffix" type="xs:string" />
        <xs:element name="keyaliases" type="xs:string" />
        <xs:element name="indexaliases" type="xs:string" />
        <xs:element name="elementaliases" type="xs:string" />
        <xs:element name="identifieralias" type="xs:string" />
        <xs:element name="userprovidedaliases" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityjoinwalker" >
      <xs:complexContent>
       <xs:extension base="abstractentityjoinwalker">
         <xs:sequence>
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
          <xs:element name="compositekeymanytoonetargetindices" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uniqueentityloader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicbatchingentityloaderbuilder" >
      <xs:complexContent>
       <xs:extension base="batchingentityloaderbuilder">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="instance" type="dynamicbatchingentityloaderbuilder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacybatchingentityloaderbuilder" >
      <xs:complexContent>
       <xs:extension base="abstractbatchingentityloaderbuilder">
         <xs:sequence>
          <xs:element name="instance" type="legacybatchingentityloaderbuilder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbatchingentityloaderbuilder" >
      <xs:complexContent>
       <xs:extension base="batchingentityloaderbuilder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractloadplanbasedentityloader" >
      <xs:complexContent>
       <xs:extension base="abstractloadplanbasedloader">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="entitypersister" type="outerjoinloadable" nillable="true" minOccurs="0" />
          <xs:element name="uniquekey" type="type" nillable="true" minOccurs="0" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="loadquery" type="loadquerydetails" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityloader" >
      <xs:complexContent>
       <xs:extension base="abstractloadplanbasedentityloader">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchingentityloader" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityloader" >
      <xs:complexContent>
       <xs:extension base="abstractentityloader">
         <xs:sequence>
          <xs:element name="batchloader" type="xs:anyType" />
          <xs:element name="compositekeymanytoonetargetindices" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadeentityloader" >
      <xs:complexContent>
       <xs:extension base="abstractentityloader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchingentityloader" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="legacybatchingentityloaderbuilder" >
      <xs:complexContent>
       <xs:extension base="batchingentityloaderbuilder">
         <xs:sequence>
          <xs:element name="instance" type="legacybatchingentityloaderbuilder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentityloader" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="persister" type="outerjoinloadable" nillable="true" minOccurs="0" />
          <xs:element name="uniquekey" type="type" nillable="true" minOccurs="0" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionelementloader" >
      <xs:complexContent>
       <xs:extension base="outerjoinloader">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="persister" type="outerjoinloadable" nillable="true" minOccurs="0" />
          <xs:element name="key" type="type" nillable="true" minOccurs="0" />
          <xs:element name="index" type="type" nillable="true" minOccurs="0" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadeentityjoinwalker" >
      <xs:complexContent>
       <xs:extension base="abstractentityjoinwalker">
         <xs:sequence>
          <xs:element name="cascadeaction" type="cascadingaction" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="paddedbatchingentityloaderbuilder" >
      <xs:complexContent>
       <xs:extension base="batchingentityloaderbuilder">
         <xs:sequence>
          <xs:element name="instance" type="paddedbatchingentityloaderbuilder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchingentityloaderbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplebagfetchexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="bagroles" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyjoinwalker" >
      <xs:complexContent>
       <xs:extension base="collectionjoinwalker">
         <xs:sequence>
          <xs:element name="onetomanypersister" type="queryablecollection" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbatchingcollectioninitializerbuilder" >
      <xs:complexContent>
       <xs:extension base="batchingcollectioninitializerbuilder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchingcollectioninitializer" >
      <xs:sequence>
        <xs:element name="collectionpersister" type="queryablecollection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionloader" >
      <xs:complexContent>
       <xs:extension base="abstractloadplanbasedcollectioninitializer">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractloadplanbasedcollectioninitializer" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="collectionpersister" type="queryablecollection" nillable="true" minOccurs="0" />
          <xs:element name="loadquery" type="loadquerydetails" nillable="true" minOccurs="0" />
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacybatchingcollectioninitializerbuilder" >
      <xs:complexContent>
       <xs:extension base="abstractbatchingcollectioninitializerbuilder">
         <xs:sequence>
          <xs:element name="instance" type="legacybatchingcollectioninitializerbuilder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchingcollectioninitializer" >
      <xs:sequence>
        <xs:element name="collectionpersister" type="queryablecollection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicbatchingcollectioninitializerbuilder" >
      <xs:complexContent>
       <xs:extension base="batchingcollectioninitializerbuilder">
         <xs:sequence>
          <xs:element name="instance" type="dynamicbatchingcollectioninitializerbuilder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacybatchingcollectioninitializerbuilder" >
      <xs:complexContent>
       <xs:extension base="batchingcollectioninitializerbuilder">
         <xs:sequence>
          <xs:element name="instance" type="legacybatchingcollectioninitializerbuilder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectioninitializer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basiccollectionloader" >
      <xs:complexContent>
       <xs:extension base="collectionloader">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiccollectionjoinwalker" >
      <xs:complexContent>
       <xs:extension base="collectionjoinwalker">
         <xs:sequence>
          <xs:element name="collectionpersister" type="queryablecollection" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionjoinwalker" >
      <xs:complexContent>
       <xs:extension base="joinwalker">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subselectonetomanyloader" >
      <xs:complexContent>
       <xs:extension base="onetomanyloader">
         <xs:sequence>
          <xs:element name="keys" type="xs:anyType" />
          <xs:element name="s" type="type" nillable="true" minOccurs="0" />
          <xs:element name="values" type="xs:anyType" />
          <xs:element name="namedparameters" type="xs:anyType" />
          <xs:element name="namedparameterlocmap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subselectcollectionloader" >
      <xs:complexContent>
       <xs:extension base="basiccollectionloader">
         <xs:sequence>
          <xs:element name="keys" type="xs:anyType" />
          <xs:element name="s" type="type" nillable="true" minOccurs="0" />
          <xs:element name="values" type="xs:anyType" />
          <xs:element name="namedparameters" type="xs:anyType" />
          <xs:element name="namedparameterlocmap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="paddedbatchingcollectioninitializerbuilder" >
      <xs:complexContent>
       <xs:extension base="batchingcollectioninitializerbuilder">
         <xs:sequence>
          <xs:element name="instance" type="paddedbatchingcollectioninitializerbuilder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyloader" >
      <xs:complexContent>
       <xs:extension base="collectionloader">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionloader" >
      <xs:complexContent>
       <xs:extension base="outerjoinloader">
         <xs:sequence>
          <xs:element name="collectionpersister" type="queryablecollection" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchingcollectioninitializerbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityaliases" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedparametercontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querybuildingparameters" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectstatementbuilder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="selectclause" type="xs:anyType" />
        <xs:element name="fromclause" type="xs:anyType" />
        <xs:element name="//builderouterjoinsafterfromouterjoinsafterfrom" type="xs:string" />
        <xs:element name="whereclause" type="xs:anyType" />
        <xs:element name="//builderouterjoinsafterwhereouterjoinsafterwhere" type="xs:string" />
        <xs:element name="orderbyclause" type="xs:anyType" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="GeneratedName" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="guesstimatedbuffersize" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractloadplanbasedloader" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="columnnamecache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionreferencealiasesimpl" >
      <xs:sequence>
        <xs:element name="tablealias" type="xs:string" />
        <xs:element name="manytomanyassociationtablealias" type="xs:string" />
        <xs:element name="GeneratedName" type="collectionaliases" nillable="true" minOccurs="0" />
        <xs:element name="entityelementaliases" type="entityreferencealiases" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadqueryjoinandfetchprocessor" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="aliasresolutioncontext" type="aliasresolutioncontextimpl" nillable="true" minOccurs="0" />
        <xs:element name="buildingparameters" type="querybuildingparameters" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchingloadquerydetailsfactory" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="batchingloadquerydetailsfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanyloadquerydetails" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionloadquerydetails">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="roothelper" >
      <xs:complexContent>
       <xs:extension base="return>">
         <xs:sequence>
          <xs:element name="/***singletonaccess*/instance" type="roothelper" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractloadquerydetails" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="loadplan" nillable="true" minOccurs="0" />
        <xs:element name="keycolumnnames" type="xs:string" />
        <xs:element name="root" type="return" nillable="true" minOccurs="0" />
        <xs:element name="queryprocessor" type="loadqueryjoinandfetchprocessor" nillable="true" minOccurs="0" />
        <xs:element name="sqlstatement" type="xs:string" />
        <xs:element name="GeneratedName" type="resultsetprocessor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchstats" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcollectionloadquerydetails" >
      <xs:complexContent>
       <xs:extension base="abstractloadquerydetails">
         <xs:sequence>
          <xs:element name="" type="collectionreferencealiases" nillable="true" minOccurs="0" />
          <xs:element name="" type="readercollector" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiccollectionloadquerydetails" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionloadquerydetails">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityreferencealiasesimpl" >
      <xs:sequence>
        <xs:element name="tablealias" type="xs:string" />
        <xs:element name="columnaliases" type="entityaliases" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityloadquerydetails" >
      <xs:complexContent>
       <xs:extension base="abstractloadquerydetails">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="entityreferencealiases" nillable="true" minOccurs="0" />
          <xs:element name="" type="readercollector" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aliasresolutioncontextimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="//usedtogenerateuniqueselectionvaluealiases(column/formularenames)currentaliassuffix" type="xs:long" />
        <xs:element name="//usedtogenerateuniquetablealiasescurrenttablealiassuffix" type="xs:long" />
        <xs:element name="entityreferencealiasesmap" type="xs:anyType" />
        <xs:element name="collectionreferencealiasesmap" type="xs:anyType" />
        <xs:element name="queryspaceuidtosqltablealiasmap" type="xs:anyType" />
        <xs:element name="compositequeryspaceuidtosqltablealiasmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadquerydetails" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aliasresolutioncontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityreferencealiases" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockmoderesolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionreferencealiases" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityreturnreader" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="entityreturn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractrowreader" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="entityreferenceinitializers" type="entityreferenceinitializer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="arrayreferenceinitializers" type="collectionreferenceinitializer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="collectionreferenceinitializers" type="collectionreferenceinitializer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="entityinitializerbyentityreference" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetprocessorimpl" >
      <xs:complexContent>
       <xs:extension base="loadplanvisitationstrategyadapter">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="loadplan" nillable="true" minOccurs="0" />
          <xs:element name="" type="rowreader" nillable="true" minOccurs="0" />
          <xs:element name="hadsubselectfetches" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetprocessingcontextimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="loadplan" nillable="true" minOccurs="0" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="shoulduseoptionalentityinformation" type="xs:anyType" />
        <xs:element name="forcefetchlazyattributes" type="xs:anyType" />
        <xs:element name="shouldreturnproxies" type="xs:anyType" />
        <xs:element name="GeneratedName" type="queryparameters" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="namedparametercontext" nillable="true" minOccurs="0" />
        <xs:element name="hadsubselectfetches" type="xs:anyType" />
        <xs:element name="currentrowhydratedentityregistrationlist" type="hydratedentityregistration" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="subselectloadableentitykeymap" type="xs:anyType" />
        <xs:element name="hydratedentityregistrationlist" type="hydratedentityregistration" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="identifierresolutioncontextmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityreferenceinitializerimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entityreference" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entityreferencealiases" nillable="true" minOccurs="0" />
        <xs:element name="isreturn" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetprocessorhelper" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="resultsetprocessorhelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionreferenceinitializerimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="collectionreference" nillable="true" minOccurs="0" />
        <xs:element name="aliases" type="collectionreferencealiases" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionreturnreader" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="collectionreturn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hydratedentityregistration" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="entityreference" nillable="true" minOccurs="0" />
        <xs:element name="key" type="entitykey" nillable="true" minOccurs="0" />
        <xs:element name="instance" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="returnreader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetprocessingcontext" >
      <xs:complexContent>
       <xs:extension base="lockmoderesolver">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetprocessor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rowreader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scrollableresultsetprocessor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionreferenceinitializer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityreferenceinitializer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readercollector" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadplan" >
      <xs:complexContent>
       <xs:extension base="return>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="anyattributefetch" >
      <xs:complexContent>
       <xs:extension base="fetch,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetch" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidirectionalentityreference" >
      <xs:complexContent>
       <xs:extension base="entityreference">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryspace" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityreturn" >
      <xs:complexContent>
       <xs:extension base="entityreference,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="return" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositefetch" >
      <xs:complexContent>
       <xs:extension base="fetch,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityidentifierdescription" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionreturn" >
      <xs:complexContent>
       <xs:extension base="collectionreference,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="join" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributefetch" >
      <xs:complexContent>
       <xs:extension base="fetch">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionqueryspace" >
      <xs:complexContent>
       <xs:extension base="queryspace">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchsource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryspaceuidnotregisteredexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeattributefetch" >
      <xs:complexContent>
       <xs:extension base="compositefetch,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositequeryspace" >
      <xs:complexContent>
       <xs:extension base="queryspace">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionfetchableelement" >
      <xs:complexContent>
       <xs:extension base="fetchsource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityfetch" >
      <xs:complexContent>
       <xs:extension base="attributefetch,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryspaces" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityreference" >
      <xs:complexContent>
       <xs:extension base="fetchsource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityqueryspace" >
      <xs:complexContent>
       <xs:extension base="queryspace">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionfetchableindex" >
      <xs:complexContent>
       <xs:extension base="fetchsource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionreference" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scalarreturn" >
      <xs:complexContent>
       <xs:extension base="return">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joindefinedbymetadata" >
      <xs:complexContent>
       <xs:extension base="join">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionattributefetch" >
      <xs:complexContent>
       <xs:extension base="attributefetch,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeattributefetchimpl" >
      <xs:complexContent>
       <xs:extension base="abstractcompositefetch">
         <xs:sequence>
          <xs:element name="source" type="fetchsource" nillable="true" minOccurs="0" />
          <xs:element name="fetchedattribute" type="attributedefinition" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractanyreference" >
      <xs:sequence>
        <xs:element name="no_es" type="fetch" nillable="true" minOccurs="0" />
        <xs:element name="no_bidirectional_entity_references" type="bidirectionalentityreference" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="propertypath" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionfetchableelementcompositegraph" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="collectionreference" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityattributefetchimpl" >
      <xs:complexContent>
       <xs:extension base="abstractentityreference">
         <xs:sequence>
          <xs:element name="" type="fetchsource" nillable="true" minOccurs="0" />
          <xs:element name="fetchedattribute" type="attributedefinition" nillable="true" minOccurs="0" />
          <xs:element name="" type="fetchstrategy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionreturnimpl" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionreference">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractexpandingfetchsource" >
      <xs:sequence>
        <xs:element name="no_es" type="fetch" nillable="true" minOccurs="0" />
        <xs:element name="no_bidirectional_entity_references" type="bidirectionalentityreference" nillable="true" minOccurs="0" />
        <xs:element name="queryspace" type="expandingqueryspace" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="propertypath" nillable="true" minOccurs="0" />
        <xs:element name="fetches" type="fetch" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="bidirectionalentityreferences" type="bidirectionalentityreference" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcompositefetch" >
      <xs:complexContent>
       <xs:extension base="abstractcompositereference">
         <xs:sequence>
          <xs:element name="fetch_strategy" type="fetchstrategy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="scalarreturnimpl" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcompositeentityidentifierdescription" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="entityreference" nillable="true" minOccurs="0" />
          <xs:element name="identifiertype" type="compositetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionfetchableindexentitygraph" >
      <xs:complexContent>
       <xs:extension base="abstractentityreference">
         <xs:sequence>
          <xs:element name="" type="collectionreference" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcollectionreference" >
      <xs:sequence>
        <xs:element name="collectionqueryspace" type="expandingcollectionqueryspace" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="propertypath" nillable="true" minOccurs="0" />
        <xs:element name="index" type="collectionfetchableindex" nillable="true" minOccurs="0" />
        <xs:element name="element" type="collectionfetchableelement" nillable="true" minOccurs="0" />
        <xs:element name="allowelementjoin" type="xs:anyType" />
        <xs:element name="allowindexjoin" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionfetchableelementanygraph" >
      <xs:complexContent>
       <xs:extension base="abstractanyreference">
         <xs:sequence>
          <xs:element name="" type="collectionreference" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcompositereference" >
      <xs:complexContent>
       <xs:extension base="abstractexpandingfetchsource">
         <xs:sequence>
          <xs:element name="allowcollectionfetches" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalentityreferenceimpl" >
      <xs:sequence>
        <xs:element name="target" type="entityreference" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="propertypath" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionfetchableindexanygraph" >
      <xs:complexContent>
       <xs:extension base="abstractanyreference">
         <xs:sequence>
          <xs:element name="" type="collectionreference" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentityreference" >
      <xs:complexContent>
       <xs:extension base="abstractexpandingfetchsource">
         <xs:sequence>
          <xs:element name="identifierdescription" type="entityidentifierdescription" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="encapsulatedentityidentifierdescription" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonencapsulatedentityidentifierdescription" >
      <xs:complexContent>
       <xs:extension base="abstractcompositeentityidentifierdescription">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityreturnimpl" >
      <xs:complexContent>
       <xs:extension base="abstractentityreference">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionfetchableelemententitygraph" >
      <xs:complexContent>
       <xs:extension base="abstractentityreference">
         <xs:sequence>
          <xs:element name="" type="collectionreference" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionfetchableindexcompositegraph" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="collectionreference" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nestedcompositeattributefetchimpl" >
      <xs:complexContent>
       <xs:extension base="abstractcompositefetch">
         <xs:sequence>
          <xs:element name="source" type="fetchsource" nillable="true" minOccurs="0" />
          <xs:element name="fetched" type="attributedefinition" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionattributefetchimpl" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionreference">
         <xs:sequence>
          <xs:element name="fetchsource" type="expandingfetchsource" nillable="true" minOccurs="0" />
          <xs:element name="fetchedattribute" type="attributedefinition" nillable="true" minOccurs="0" />
          <xs:element name="" type="fetchstrategy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleentityidentifierdescriptionimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anyattributefetchimpl" >
      <xs:complexContent>
       <xs:extension base="abstractanyreference">
         <xs:sequence>
          <xs:element name="" type="fetchsource" nillable="true" minOccurs="0" />
          <xs:element name="fetchedattribute" type="associationattributedefinition" nillable="true" minOccurs="0" />
          <xs:element name="" type="fetchstrategy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadplanimpl" >
      <xs:complexContent>
       <xs:extension base="return>">
         <xs:sequence>
          <xs:element name="returns" type="xs:anyType" />
          <xs:element name="" type="queryspaces" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="arelazyattributesforcefetched" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentitygraphvisitationstrategy" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="/***thejpa2.1spec'sentitygraphonlydefines_when_toloadanattribute,itdoesn'tdefine_how_toloadit*soi'mherejustmakinganassumptionthatwhenitiseager,thenweusejoin,andwhenitislazy,thenweuseselect.**note:thismaybechangedinthenearfurther,thoughatmihavenoideahowthiswillbechangedto:)*--stliu*/default_eager" type="fetchstrategy" nillable="true" minOccurs="0" />
          <xs:element name="default_lazy" type="fetchstrategy" nillable="true" minOccurs="0" />
          <xs:element name="" type="loadqueryinfluencers" nillable="true" minOccurs="0" />
          <xs:element name="//queuecontainingentity/subgraphstobevisited.graphstack" type="graphnodeimplementor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="//queuecontainingattributesbeingvisited,usedeventuallytodeterminethefetchstrategy.attributestack" type="attributenodeimplementor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="attributemapstack" type="xs:anyType" />
          <xs:element name="root" type="entityreturn" nillable="true" minOccurs="0" />
          <xs:element name="" type="lockmode" nillable="true" minOccurs="0" />
          <xs:element name="non_exist_attribute_node" type="attributenodeimplementor" nillable="true" minOccurs="0" />
          <xs:element name="non_exist_subgraph_node" type="graphnodeimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadestyleloadplanbuildingassociationvisitationstrategy" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="eager" type="fetchstrategy" nillable="true" minOccurs="0" />
          <xs:element name="delayed" type="fetchstrategy" nillable="true" minOccurs="0" />
          <xs:element name="cascadeactiontomatch" type="cascadingaction" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractloadplanbuildingassociationvisitationstrategy" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="mdc_key" type="xs:string" />
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="queryspaces" type="queryspacesimpl" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="fetchsourcestack" type="expandingfetchsource" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="//collections~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~collectionreferencestack" type="collectionreference" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="current" type="propertypath" nillable="true" minOccurs="0" />
        <xs:element name="fetchedassociationkeysourcemap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadgraphloadplanbuildingstrategy" >
      <xs:complexContent>
       <xs:extension base="abstractentitygraphvisitationstrategy">
         <xs:sequence>
          <xs:element name="rootentitygraph" type="graphnodeimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchstyleloadplanbuildingassociationvisitationstrategy" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="loadqueryinfluencers" nillable="true" minOccurs="0" />
          <xs:element name="" type="lockmode" nillable="true" minOccurs="0" />
          <xs:element name="root" type="return" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchgraphloadplanbuildingstrategy" >
      <xs:complexContent>
       <xs:extension base="abstractentitygraphvisitationstrategy">
         <xs:sequence>
          <xs:element name="rootentitygraph" type="graphnodeimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractexpandingsourcequeryspace" >
      <xs:complexContent>
       <xs:extension base="abstractqueryspace">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityqueryspaceimpl" >
      <xs:complexContent>
       <xs:extension base="abstractexpandingsourcequeryspace">
         <xs:sequence>
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositepropertymapping" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="compositetype" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="propertymapping" nillable="true" minOccurs="0" />
        <xs:element name="parentpropertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryspacesimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="roots" type="queryspace" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="queryspacebyuid" type="xs:anyType" />
        <xs:element name="//expandingqueryspacesimpl~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~implicituidbase" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinhelper" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="joinhelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryspacehelper" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="queryspacehelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinimpl" >
      <xs:sequence>
        <xs:element name="lefthandside" type="queryspace" nillable="true" minOccurs="0" />
        <xs:element name="righthandside" type="queryspace" nillable="true" minOccurs="0" />
        <xs:element name="lhspropertyname" type="xs:string" />
        <xs:element name="rhscolumnnames" type="xs:string" />
        <xs:element name="righthandsiderequired" type="xs:anyType" />
        <xs:element name="joinedproperty" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionqueryspaceimpl" >
      <xs:complexContent>
       <xs:extension base="abstractqueryspace">
         <xs:sequence>
          <xs:element name="persister" type="collectionpersister" nillable="true" minOccurs="0" />
          <xs:element name="elementjoin" type="joindefinedbymetadata" nillable="true" minOccurs="0" />
          <xs:element name="indexjoin" type="joindefinedbymetadata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositequeryspaceimpl" >
      <xs:complexContent>
       <xs:extension base="abstractexpandingsourcequeryspace">
         <xs:sequence>
          <xs:element name="compositesubpropertymapping" type="compositepropertymapping" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractqueryspace" >
      <xs:sequence>
        <xs:element name="uid" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="queryspaces" type="expandingqueryspaces" nillable="true" minOccurs="0" />
        <xs:element name="canjoinsberequired" type="xs:anyType" />
        <xs:element name="joins" type="join" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryspacetreeprinter" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="queryspacetreeprinter" nillable="true" minOccurs="0" />
        <xs:element name="detaildepthoffset" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expandingentityidentifierdescription" >
      <xs:complexContent>
       <xs:extension base="entityidentifierdescription,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expandingqueryspace" >
      <xs:complexContent>
       <xs:extension base="queryspace">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metamodeldrivenloadplanbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expandingentityqueryspace" >
      <xs:complexContent>
       <xs:extension base="entityqueryspace,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="returngraphtreeprinter" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="returngraphtreeprinter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expandingcollectionqueryspace" >
      <xs:complexContent>
       <xs:extension base="collectionqueryspace,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="treeprinterhelper" >
      <xs:sequence>
        <xs:element name="/***thenumberofcharacterstoindent.*/indentation" type="xs:long" />
        <xs:element name="/***singletonaccess*/instance" type="treeprinterhelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadplantreeprinter" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="/***singletonaccess*/instance" type="loadplantreeprinter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadplanbuildingassociationvisitationstrategy" >
      <xs:complexContent>
       <xs:extension base="associationvisitationstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadplanbuildingcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expandingqueryspaces" >
      <xs:complexContent>
       <xs:extension base="queryspaces">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expandingfetchsource" >
      <xs:complexContent>
       <xs:extension base="fetchsource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expandingcompositequeryspace" >
      <xs:complexContent>
       <xs:extension base="compositequeryspace,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertypath" >
      <xs:sequence>
        <xs:element name="identifier_mapper_property" type="xs:string" />
        <xs:element name="parent" type="propertypath" nillable="true" minOccurs="0" />
        <xs:element name="property" type="xs:string" />
        <xs:element name="fullpath" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractentityjoinwalker" >
      <xs:complexContent>
       <xs:extension base="joinwalker">
         <xs:sequence>
          <xs:element name="persister" type="outerjoinloadable" nillable="true" minOccurs="0" />
          <xs:element name="alias" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyaccessbuildingexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getter" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enhancedgettermethodimpl" >
      <xs:sequence>
        <xs:element name="empty" type="xs:anyType" />
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="container" type="xs:anyType" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="getter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessserializationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="settermethodimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="container" type="xs:anyType" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="setter" type="xs:anyType" />
        <xs:element name="isprimitive" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyaccess" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setterfieldimpl" >
      <xs:complexContent>
       <xs:extension base="abstractfieldserialform">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setter" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="builtinpropertyaccessstrategies" >
      <xs:sequence>
        <xs:element name="externalname" type="xs:string" />
        <xs:element name="strategy" type="propertyaccessstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enhancedsettermethodimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="container" type="xs:anyType" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="setter" type="xs:anyType" />
        <xs:element name="isprimitive" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getterfieldimpl" >
      <xs:complexContent>
       <xs:extension base="abstractfieldserialform">
         <xs:sequence>
          <xs:element name="container" type="xs:anyType" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategyresolver" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gettermethodimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="container" type="xs:anyType" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="getter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessembeddedimpl" >
      <xs:sequence>
        <xs:element name="strategy" type="propertyaccessstrategyembeddedimpl" nillable="true" minOccurs="0" />
        <xs:element name="getter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessenhancedimpl" >
      <xs:sequence>
        <xs:element name="strategy" type="propertyaccessstrategyenhancedimpl" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="getter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="setter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategyresolverinitiator" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="propertyaccessstrategyresolverinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategyfieldimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="propertyaccessstrategyfieldimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractfieldserialform" >
      <xs:sequence>
        <xs:element name="declaring" type="xs:anyType" />
        <xs:element name="fieldname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategymixedimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="propertyaccessstrategymixedimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategyresolverstandardimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serviceregistry" nillable="true" minOccurs="0" />
        <xs:element name="service" type="strategyselector" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessbasicimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="strategy" type="propertyaccessstrategybasicimpl" nillable="true" minOccurs="0" />
        <xs:element name="getter" type="gettermethodimpl" nillable="true" minOccurs="0" />
        <xs:element name="setter" type="settermethodimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategybasicimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="propertyaccessstrategybasicimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategychainedimpl" >
      <xs:sequence>
        <xs:element name="chain" type="propertyaccessstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategyindexbackrefimpl" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategynoopimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="propertyaccessstrategynoopimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategyembeddedimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="propertyaccessstrategyembeddedimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategymapimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="propertyaccessstrategymapimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategyenhancedimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="propertyaccessstrategyenhancedimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessmapimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="getter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="setter" nillable="true" minOccurs="0" />
        <xs:element name="strategy" type="propertyaccessstrategymapimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessfieldimpl" >
      <xs:sequence>
        <xs:element name="strategy" type="propertyaccessstrategyfieldimpl" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="getter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="setter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessmixedimpl" >
      <xs:sequence>
        <xs:element name="strategy" type="propertyaccessstrategymixedimpl" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="getter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="setter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessstrategybackrefimpl" >
      <xs:sequence>
        <xs:element name="/***aplaceholderforapropertyvalue,indicatingthat*wedon'tknowthevalueofthebackreference*/unknown" type="xs:anyType" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="session" >
      <xs:complexContent>
       <xs:extension base="sharedsessioncontract,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplenaturalidloadaccess" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integratorserviceimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="integrators" type="integrator" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integrator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integratorservice" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="servicecontributingintegrator" >
      <xs:complexContent>
       <xs:extension base="integrator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionsubqueryfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionproperties" >
      <xs:sequence>
        <xs:element name="hql_collection_properties" type="map" nillable="true" minOccurs="0" />
        <xs:element name="collection_index_lower" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="holderinstantiator" >
      <xs:sequence>
        <xs:element name="noop_instantiator" type="holderinstantiator" nillable="true" minOccurs="0" />
        <xs:element name="transformer" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="queryreturnaliases" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytranslatorfactoryinitiator" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***singletonaccess*/instance" type="querytranslatorfactoryinitiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hqlparser" >
      <xs:complexContent>
       <xs:extension base="the">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="" type="parseerrorhandler" nillable="true" minOccurs="0" />
          <xs:element name="printer" type="astprinter" nillable="true" minOccurs="0" />
          <xs:element name="//handletracelogging~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~tracedepth" type="xs:long" />
          <xs:element name="treatmap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqlastfactory" >
      <xs:complexContent>
       <xs:extension base="astfactory">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqltoken" >
      <xs:complexContent>
       <xs:extension base="antlr.commontoken">
         <xs:sequence>
          <xs:element name="/***trueifthistokencouldbeanidentifier.*/possibleid" type="xs:anyType" />
          <xs:element name="/***theprevioustokentype.*/tokentype" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typediscriminatormetadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parametertranslationsimpl" >
      <xs:sequence>
        <xs:element name="namedparameters" type="xs:anyType" />
        <xs:element name="ordinalparameters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicexecutor" >
      <xs:sequence>
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="persister" type="queryable" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
        <xs:element name="parameterspecifications" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteexecutor" >
      <xs:complexContent>
       <xs:extension base="basicexecutor">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="deletes" type="xs:anyType" />
          <xs:element name="parameterspecifications" type="parameterspecification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multitabledeleteexecutor" >
      <xs:sequence>
        <xs:element name="deletehandler" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multitableupdateexecutor" >
      <xs:sequence>
        <xs:element name="updatehandler" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statementexecutor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidwithclauseexception" >
      <xs:complexContent>
       <xs:extension base="querysyntaxexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlastfactory" >
      <xs:complexContent>
       <xs:extension base="astfactory">
         <xs:sequence>
          <xs:element name="walker" type="hqlsqlwalker" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="errorcounter" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="hql" type="xs:string" />
        <xs:element name="errorlist" type="xs:anyType" />
        <xs:element name="recognitionexceptions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidpathexception" >
      <xs:complexContent>
       <xs:extension base="semanticexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querysyntaxexception" >
      <xs:complexContent>
       <xs:extension base="queryexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="errorreporter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hqllexer" >
      <xs:complexContent>
       <xs:extension base="the">
         <xs:sequence>
          <xs:element name="possibleid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlgenerator" >
      <xs:complexContent>
       <xs:extension base="sqlgeneratorbase">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="regression_style_cross_joins" type="xs:anyType" />
          <xs:element name="/***allappendinvocationsonthebufshouldgothroughthisoutputinstancevariable.*thevalueofthisvariablemaybetemporarilysubstitutedbysqlfunctionprocessingcode*tocatchgeneratedarguments.*thisisbecausesqlfunctiontemplatesneedargumentsasseparatestringchunks*thatwillbeassembledintothetargetdialect-specificfunctioncall.*/writer" type="xs:anyType" />
          <xs:element name="" type="parseerrorhandler" nillable="true" minOccurs="0" />
          <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="outputstack" type="xs:anyType" />
          <xs:element name="printer" type="astprinter" nillable="true" minOccurs="0" />
          <xs:element name="collectedparameters" type="parameterspecification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="//handletracelogging~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~tracedepth" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="astquerytranslatorfactory" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***singletonaccess*/instance" type="astquerytranslatorfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytranslatorimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="queryidentifier" type="xs:string" />
        <xs:element name="hql" type="xs:string" />
        <xs:element name="shallowquery" type="xs:anyType" />
        <xs:element name="tokenreplacements" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//todo:thisisonlyneededduringcompilation..canweeliminatetheinstvar?enabledfilters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="compiled" type="xs:anyType" />
        <xs:element name="GeneratedName" type="queryloader" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="statementexecutor" nillable="true" minOccurs="0" />
        <xs:element name="sqlast" type="statement" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
        <xs:element name="paramtranslations" type="parametertranslations" nillable="true" minOccurs="0" />
        <xs:element name="collectedparameterspecifications" type="parameterspecification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="entitygraphqueryhint" nillable="true" minOccurs="0" />
        <xs:element name="sql_token_printer" type="astprinter" nillable="true" minOccurs="0" />
        <xs:element name="hql_token_printer" type="astprinter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parseerrorhandler" >
      <xs:complexContent>
       <xs:extension base="errorreporter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqlsqlwalker" >
      <xs:complexContent>
       <xs:extension base="hqlsqlbasewalker">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="" type="querytranslatorimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="hqlparser" nillable="true" minOccurs="0" />
          <xs:element name="" type="sessionfactoryhelper" nillable="true" minOccurs="0" />
          <xs:element name="tokenreplacements" type="map" nillable="true" minOccurs="0" />
          <xs:element name="" type="aliasgenerator" nillable="true" minOccurs="0" />
          <xs:element name="" type="literalprocessor" nillable="true" minOccurs="0" />
          <xs:element name="" type="parseerrorhandler" nillable="true" minOccurs="0" />
          <xs:element name="printer" type="astprinter" nillable="true" minOccurs="0" />
          <xs:element name="collectionfilterrole" type="xs:string" />
          <xs:element name="current" type="fromclause" nillable="true" minOccurs="0" />
          <xs:element name="" type="selectclause" nillable="true" minOccurs="0" />
          <xs:element name="selectexpressionsbyresultvariable" type="xs:anyType" />
          <xs:element name="queryspaces" type="xs:anyType" />
          <xs:element name="parametercount" type="xs:long" />
          <xs:element name="namedparameters" type="map" nillable="true" minOccurs="0" />
          <xs:element name="parameters" type="parameterspecification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="numberofparametersinsetclause" type="xs:long" />
          <xs:element name="positionalparametercount" type="xs:long" />
          <xs:element name="assignmentspecifications" type="xs:anyType" />
          <xs:element name="implied" type="jointype" nillable="true" minOccurs="0" />
          <xs:element name="inentitygraph" type="xs:anyType" />
          <xs:element name="//handletracelogging~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~tracedepth" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detailedsemanticexception" >
      <xs:complexContent>
       <xs:extension base="semanticexception">
         <xs:sequence>
          <xs:element name="cause" type="xs:anyType" />
          <xs:element name="showcausemessage" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unaryoperatornode" >
      <xs:complexContent>
       <xs:extension base="operatornode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentjoin" >
      <xs:complexContent>
       <xs:extension base="fromelement">
         <xs:sequence>
          <xs:element name="componentpath" type="xs:string" />
          <xs:element name="componenttype" type="compositetype" nillable="true" minOccurs="0" />
          <xs:element name="componentproperty" type="xs:string" />
          <xs:element name="columns" type="xs:string" />
          <xs:element name="columnsfragment" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binarylogicoperatornode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapvaluenode" >
      <xs:complexContent>
       <xs:extension base="abstractmapcomponentnode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertstatement" >
      <xs:complexContent>
       <xs:extension base="abstractstatement">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractrestrictablestatement" >
      <xs:complexContent>
       <xs:extension base="abstractstatement">
         <xs:sequence>
          <xs:element name="" type="fromclause" nillable="true" minOccurs="0" />
          <xs:element name="whereclause" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlnode" >
      <xs:complexContent>
       <xs:extension base="node">
         <xs:sequence>
          <xs:element name="/***theoriginaltextforthenode,mostlyfordebugging.*/originaltext" type="xs:string" />
          <xs:element name="/***thedataofthisnode.nullfor'no'.*/data" type="type" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapentrynode" >
      <xs:complexContent>
       <xs:extension base="abstractmapcomponentnode">
         <xs:sequence>
          <xs:element name="scalarcolumnindex" type="xs:long" />
          <xs:element name="//size" type="list" nillable="true" minOccurs="0" />
          <xs:element name="aliases" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="initializeablenode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inlogicoperatornode" >
      <xs:complexContent>
       <xs:extension base="binarylogicoperatornode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binaryoperatornode" >
      <xs:complexContent>
       <xs:extension base="operatornode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fromclause" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="root_level" type="xs:long" />
          <xs:element name="level" type="xs:long" />
          <xs:element name="fromelements" type="fromelement" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="fromelementbyclassalias" type="xs:anyType" />
          <xs:element name="fromelementbytablealias" type="xs:anyType" />
          <xs:element name="fromelementsbypath" type="xs:anyType" />
          <xs:element name="/***alloftheimplicitfromxxxjoinyyyelementsthatarethedestinationofacollection.thesearecreatedfrom*indexoperatorsoncollectionpropertyreferences.*/collectionjoinfromelementsbypath" type="map" nillable="true" minOccurs="0" />
          <xs:element name="/***pointertotheparentfromclause,ifthereisone.*/parent" type="fromclause" nillable="true" minOccurs="0" />
          <xs:element name="/***collectionoffromclausesofwhichthisistheparent.*/childfromclauses" type="fromclause" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***countsthefromelementsastheyareadded.*/fromelementcounter" type="xs:long" />
          <xs:element name="/***impliedfromelementstoaddontotheendofthefromclause.*/impliedelements" type="list" nillable="true" minOccurs="0" />
          <xs:element name="fromelementpredicate" type="xs:anyType" />
          <xs:element name="projectionlistpredicate" type="xs:anyType" />
          <xs:element name="collectionfetchpredicate" type="xs:anyType" />
          <xs:element name="explicitfrompredicate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="literalnode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
          <xs:element name="expected" type="type" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="isnulllogicoperatornode" >
      <xs:complexContent>
       <xs:extension base="abstractnullnesschecknode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parametercontainer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identnode" >
      <xs:complexContent>
       <xs:extension base="fromreferencenode">
         <xs:sequence>
          <xs:element name="nakedpropertyref" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="restrictablestatement" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbyclause" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unaryarithmeticnode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="javaconstantnode" >
      <xs:complexContent>
       <xs:extension base="node">
         <xs:sequence>
          <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="constantexpression" type="xs:string" />
          <xs:element name="constantvalue" type="xs:anyType" />
          <xs:element name="heuristic" type="type" nillable="true" minOccurs="0" />
          <xs:element name="expected" type="type" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="displayablenode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dotnode" >
      <xs:complexContent>
       <xs:extension base="fromreferencenode">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="/////////////////////////////////////////////////////////////////////////////usedonlyforregressiontesting!!!!////todo:obviouslygetridofallthisjunk)///////////////////////////////////////////////////////////////////////////usethetastyleimplicitjoins" type="xs:anyType" />
          <xs:element name="regressionstylejoinsuppression" type="xs:anyType" />
          <xs:element name="def_illegal_coll_deref_excp_builder" type="xs:anyType" />
          <xs:element name="illegal_coll_deref_excp_builder" type="xs:anyType" />
          <xs:element name="/***theidentifierthatisthenameoftheproperty.*/propertyname" type="xs:string" />
          <xs:element name="/***thefullpath,totherootaliasofthisdotnode.*/path" type="xs:string" />
          <xs:element name="/***theunresolvedpropertypathrelativetothisdotnode.*/propertypath" type="xs:string" />
          <xs:element name="columns" type="xs:string" />
          <xs:element name="/***thetypeofjointocreate.defaultisaninnerjoin.*/" type="jointype" nillable="true" minOccurs="0" />
          <xs:element name="/***fetchjoinornot.*/fetch" type="xs:anyType" />
          <xs:element name="/***thetypeofdereferencethathapened*/" type="xs:anyType" />
          <xs:element name="impliedjoin" type="fromelement" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expectedtypeawarenode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletestatement" >
      <xs:complexContent>
       <xs:extension base="abstractrestrictablestatement">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="impliedfromelement" >
      <xs:complexContent>
       <xs:extension base="fromelement">
         <xs:sequence>
          <xs:element name="/***trueifthisfromelementwasimpliedfromapathinthefromclause,butnot*explicitlydeclardinthefromclause.*/impliedinfromclause" type="xs:anyType" />
          <xs:element name="/***trueifthisimpliedfromelementshouldbeincludedintheprojectionlist.*/inprojectionlist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultvariablerefnode" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
          <xs:element name="" type="selectexpression" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="betweenoperatornode" >
      <xs:complexContent>
       <xs:extension base="sqlnode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="intoclause" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
          <xs:element name="persister" type="queryable" nillable="true" minOccurs="0" />
          <xs:element name="columnspec" type="xs:string" />
          <xs:element name="s" type="type" nillable="true" minOccurs="0" />
          <xs:element name="discriminated" type="xs:anyType" />
          <xs:element name="explicitidinsertion" type="xs:anyType" />
          <xs:element name="explicitversioninsertion" type="xs:anyType" />
          <xs:element name="componentids" type="set" nillable="true" minOccurs="0" />
          <xs:element name="explicitcomponentids" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqlsqlwalkernode" >
      <xs:complexContent>
       <xs:extension base="sqlnode">
         <xs:sequence>
          <xs:element name="/***apointerbacktothephase2processor.*/walker" type="hqlsqlwalker" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactoryawarenode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:complexContent>
       <xs:extension base="antlr.commonast">
         <xs:sequence>
          <xs:element name="filename" type="xs:string" />
          <xs:element name="line" type="xs:long" />
          <xs:element name="column" type="xs:long" />
          <xs:element name="textlength" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fromreferencenode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="" type="fromelement" nillable="true" minOccurs="0" />
          <xs:element name="resolved" type="xs:anyType" />
          <xs:element name="root_level" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfragment" >
      <xs:complexContent>
       <xs:extension base="node">
         <xs:sequence>
          <xs:element name="" type="joinfragment" nillable="true" minOccurs="0" />
          <xs:element name="" type="fromelement" nillable="true" minOccurs="0" />
          <xs:element name="//parametercontainerimpl~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~embeddedparameters" type="parameterspecification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractnullnesschecknode" >
      <xs:complexContent>
       <xs:extension base="unarylogicoperatornode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionfunction" >
      <xs:complexContent>
       <xs:extension base="methodnode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="isnotnulllogicoperatornode" >
      <xs:complexContent>
       <xs:extension base="abstractnullnesschecknode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fromelementtype" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="fromelement" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitytype" nillable="true" minOccurs="0" />
        <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="queryablecollection" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="collectionpropertymapping" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="joinsequence" nillable="true" minOccurs="0" />
        <xs:element name="collectionsuffix" type="xs:string" />
        <xs:element name="indexcollectionselectorparamspec" type="parameterspecification" nillable="true" minOccurs="0" />
        <xs:element name="treatasdeclarations" type="xs:anyType" />
        <xs:element name="special_many2many_treatment_function_names" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionpropertyreference" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplecasenode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractstatement" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameternode" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
          <xs:element name="" type="parameterspecification" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractselectexpression" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
          <xs:element name="alias" type="xs:string" />
          <xs:element name="scalarcolumnindex" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unarylogicoperatornode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="functionnode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectexpressionimpl" >
      <xs:complexContent>
       <xs:extension base="fromreferencenode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectexpressionlist" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
          <xs:element name="parameterpositions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binaryarithmeticoperatornode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fromelement" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="classname" type="xs:string" />
          <xs:element name="classalias" type="xs:string" />
          <xs:element name="tablealias" type="xs:string" />
          <xs:element name="collectiontablealias" type="xs:string" />
          <xs:element name="" type="fromclause" nillable="true" minOccurs="0" />
          <xs:element name="includesubclasses" type="xs:anyType" />
          <xs:element name="collectionjoin" type="xs:anyType" />
          <xs:element name="origin" type="fromelement" nillable="true" minOccurs="0" />
          <xs:element name="columns" type="xs:string" />
          <xs:element name="role" type="xs:string" />
          <xs:element name="fetch" type="xs:anyType" />
          <xs:element name="isallpropertyfetch" type="xs:anyType" />
          <xs:element name="filter" type="xs:anyType" />
          <xs:element name="sequence" type="xs:long" />
          <xs:element name="usefromfragment" type="xs:anyType" />
          <xs:element name="initialized" type="xs:anyType" />
          <xs:element name="elementtype" type="fromelementtype" nillable="true" minOccurs="0" />
          <xs:element name="usewherefragment" type="xs:anyType" />
          <xs:element name="destinations" type="fromelement" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="manytomany" type="xs:anyType" />
          <xs:element name="withclausefragment" type="xs:string" />
          <xs:element name="withclausejoinalias" type="xs:string" />
          <xs:element name="dereferencedbysuperclassproperty" type="xs:anyType" />
          <xs:element name="dereferencedbysubclassproperty" type="xs:anyType" />
          <xs:element name="discriminator_property_name" type="xs:string" />
          <xs:element name="" type="typediscriminatormetadata" nillable="true" minOccurs="0" />
          <xs:element name="//parametercontainerimpl~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~embeddedparameters" type="parameterspecification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="castfunctionnode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
          <xs:element name="dialectcastfunction" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="expression" type="node" nillable="true" minOccurs="0" />
          <xs:element name="typenode" type="identnode" nillable="true" minOccurs="0" />
          <xs:element name="cast" type="type" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractmapcomponentnode" >
      <xs:complexContent>
       <xs:extension base="fromreferencenode">
         <xs:sequence>
          <xs:element name="map" type="fromelement" nillable="true" minOccurs="0" />
          <xs:element name="columns" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="methodnode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="methodname" type="xs:string" />
          <xs:element name="" type="fromelement" nillable="true" minOccurs="0" />
          <xs:element name="selectcolumns" type="xs:string" />
          <xs:element name="function" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="inselect" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aggregatedselectexpression" >
      <xs:complexContent>
       <xs:extension base="selectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignmentspecification" >
      <xs:sequence>
        <xs:element name="tablenames" type="set" nillable="true" minOccurs="0" />
        <xs:element name="hqlparameters" type="parameterspecification" nillable="true" minOccurs="0" />
        <xs:element name="eq" type="xs:anyType" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="sqlassignment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatestatement" >
      <xs:complexContent>
       <xs:extension base="abstractrestrictablestatement">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querynode" >
      <xs:complexContent>
       <xs:extension base="abstractrestrictablestatement">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="" type="orderbyclause" nillable="true" minOccurs="0" />
          <xs:element name="scalarcolumnindex" type="xs:long" />
          <xs:element name="alias" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fromelementfactory" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="fromclause" nillable="true" minOccurs="0" />
        <xs:element name="origin" type="fromelement" nillable="true" minOccurs="0" />
        <xs:element name="path" type="xs:string" />
        <xs:element name="classalias" type="xs:string" />
        <xs:element name="columns" type="xs:string" />
        <xs:element name="implied" type="xs:anyType" />
        <xs:element name="inelementsfunction" type="xs:anyType" />
        <xs:element name="collection" type="xs:anyType" />
        <xs:element name="GeneratedName" type="queryablecollection" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="collectiontype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregatenode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="" type="sqlfunction" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="operatornode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resolvablenode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="booleanliteralnode" >
      <xs:complexContent>
       <xs:extension base="literalnode">
         <xs:sequence>
          <xs:element name="expected" type="type" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pathnode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectexpression" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchedcasenode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constructornode" >
      <xs:complexContent>
       <xs:extension base="selectexpressionlist">
         <xs:sequence>
          <xs:element name="resulttype" type="xs:anyType" />
          <xs:element name="" type="constructor" nillable="true" minOccurs="0" />
          <xs:element name="constructorarguments" type="type" nillable="true" minOccurs="0" />
          <xs:element name="ismap" type="xs:anyType" />
          <xs:element name="islist" type="xs:anyType" />
          <xs:element name="aggregatedaliases" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statement" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="countnode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexnode" >
      <xs:complexContent>
       <xs:extension base="fromreferencenode">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectclause" >
      <xs:complexContent>
       <xs:extension base="selectexpressionlist">
         <xs:sequence>
          <xs:element name="prepared" type="xs:anyType" />
          <xs:element name="scalarselect" type="xs:anyType" />
          <xs:element name="fromelementsforload" type="list" nillable="true" minOccurs="0" />
          <xs:element name="alreadyrenderedidentifiers" type="list" nillable="true" minOccurs="0" />
          <xs:element name="sqlresultsqueryreturns" type="type" nillable="true" minOccurs="0" />
          <xs:element name="columnnames" type="xs:string" />
          <xs:element name="collectionfromelements" type="list" nillable="true" minOccurs="0" />
          <xs:element name="aliases" type="xs:string" />
          <xs:element name="columnnamesstartpositions" type="xs:long" />
          <xs:element name="//currentlywecanonlyhaveone..." type="aggregatedselectexpression" nillable="true" minOccurs="0" />
          <xs:element name="version2_sql" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeyentityfromelement" >
      <xs:complexContent>
       <xs:extension base="fromelement">
         <xs:sequence>
          <xs:element name="usethetajoin" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeynode" >
      <xs:complexContent>
       <xs:extension base="abstractmapcomponentnode">
         <xs:sequence>
          <xs:element name="" type="mapkeyentityfromelement" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pathhelper" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aliasgenerator" >
      <xs:sequence>
        <xs:element name="next" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="literalprocessor" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="/***inwhatformatshouldfloatanddoubleliteralvaluesbesenttothedatabase?*/decimal_literal_format" type="xs:anyType" />
        <xs:element name="walker" type="hqlsqlwalker" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinprocessor" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="walker" type="hqlsqlwalker" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="syntheticandfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astiterator" >
      <xs:sequence>
        <xs:element name="next" type="xs:anyType" />
        <xs:element name="parents" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nodetraverser" >
      <xs:sequence>
        <xs:element name="strategy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="syntheticandfactory" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="hqlsqlwalker" nillable="true" minOccurs="0" />
        <xs:element name="thetajoins" type="xs:anyType" />
        <xs:element name="filters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astappender" >
      <xs:sequence>
        <xs:element name="parent" type="xs:anyType" />
        <xs:element name="l" type="xs:anyType" />
        <xs:element name="factory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astparentsfirstiterator" >
      <xs:sequence>
        <xs:element name="next" type="xs:anyType" />
        <xs:element name="tree" type="xs:anyType" />
        <xs:element name="parents" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astprinter" >
      <xs:sequence>
        <xs:element name="tokentypenamecache" type="map" nillable="true" minOccurs="0" />
        <xs:element name="showclassnames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryhelper" >
      <xs:sequence>
        <xs:element name="sfi" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="collectionpropertymappingbyrole" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytranslatorimpl" >
      <xs:complexContent>
       <xs:extension base="basicloader">
         <xs:sequence>
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="no_return_aliases" type="xs:string" />
          <xs:element name="queryidentifier" type="xs:string" />
          <xs:element name="query" type="xs:string" />
          <xs:element name="type" type="map" nillable="true" minOccurs="0" />
          <xs:element name="collections" type="map" nillable="true" minOccurs="0" />
          <xs:element name="returnedtypes" type="list" nillable="true" minOccurs="0" />
          <xs:element name="fromtypes" type="list" nillable="true" minOccurs="0" />
          <xs:element name="scalartypes" type="list" nillable="true" minOccurs="0" />
          <xs:element name="namedparameters" type="map" nillable="true" minOccurs="0" />
          <xs:element name="aliasnames" type="map" nillable="true" minOccurs="0" />
          <xs:element name="onetooneownernames" type="map" nillable="true" minOccurs="0" />
          <xs:element name="uniquekeyownerreferences" type="map" nillable="true" minOccurs="0" />
          <xs:element name="decoratedpropertypings" type="map" nillable="true" minOccurs="0" />
          <xs:element name="scalarselecttokens" type="list" nillable="true" minOccurs="0" />
          <xs:element name="wheretokens" type="list" nillable="true" minOccurs="0" />
          <xs:element name="havingtokens" type="list" nillable="true" minOccurs="0" />
          <xs:element name="joins" type="map" nillable="true" minOccurs="0" />
          <xs:element name="orderbytokens" type="list" nillable="true" minOccurs="0" />
          <xs:element name="groupbytokens" type="list" nillable="true" minOccurs="0" />
          <xs:element name="queryspaces" type="xs:anyType" />
          <xs:element name="entitiestofetch" type="set" nillable="true" minOccurs="0" />
          <xs:element name="pathaliases" type="map" nillable="true" minOccurs="0" />
          <xs:element name="pathjoins" type="map" nillable="true" minOccurs="0" />
          <xs:element name="persisters" type="queryable" nillable="true" minOccurs="0" />
          <xs:element name="owners" type="xs:long" />
          <xs:element name="ownerassociationtypes" type="entitytype" nillable="true" minOccurs="0" />
          <xs:element name="names" type="xs:string" />
          <xs:element name="includeinselect" type="xs:anyType" />
          <xs:element name="selectlength" type="xs:long" />
          <xs:element name="returns" type="type" nillable="true" minOccurs="0" />
          <xs:element name="actualreturns" type="type" nillable="true" minOccurs="0" />
          <xs:element name="scalarcolumnnames" type="xs:string" />
          <xs:element name="tokenreplacements" type="map" nillable="true" minOccurs="0" />
          <xs:element name="namecount" type="xs:long" />
          <xs:element name="parametercount" type="xs:long" />
          <xs:element name="distinct" type="xs:anyType" />
          <xs:element name="compiled" type="xs:anyType" />
          <xs:element name="sql" type="xs:string" />
          <xs:element name="holder" type="xs:anyType" />
          <xs:element name="holder" type="constructor" nillable="true" minOccurs="0" />
          <xs:element name="hasscalars" type="xs:anyType" />
          <xs:element name="shallowquery" type="xs:anyType" />
          <xs:element name="superquery" type="querytranslatorimpl" nillable="true" minOccurs="0" />
          <xs:element name="collectionpersister" type="queryablecollection" nillable="true" minOccurs="0" />
          <xs:element name="collectionownercolumn" type="xs:long" />
          <xs:element name="collectionownername" type="xs:string" />
          <xs:element name="fetchname" type="xs:string" />
          <xs:element name="suffixes" type="xs:string" />
          <xs:element name="enabledfilters" type="map" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="havingparser" >
      <xs:complexContent>
       <xs:extension base="whereparser">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parserhelper" >
      <xs:sequence>
        <xs:element name="hql_variable_prefix" type="xs:string" />
        <xs:element name="hql_separators" type="xs:string" />
        <xs:element name="hql_separators_" type="xs:anyType" />
        <xs:element name="//notice:no"or.sincetheyarepartof(compound)identifierspath_separators" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fromparser" >
      <xs:sequence>
        <xs:element name="peparser" type="pathexpressionparser" nillable="true" minOccurs="0" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="afterin" type="xs:anyType" />
        <xs:element name="afteras" type="xs:anyType" />
        <xs:element name="afterclass" type="xs:anyType" />
        <xs:element name="expectingjoin" type="xs:anyType" />
        <xs:element name="expectingin" type="xs:anyType" />
        <xs:element name="expectingas" type="xs:anyType" />
        <xs:element name="afterjointype" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jointype" nillable="true" minOccurs="0" />
        <xs:element name="afterfetch" type="xs:anyType" />
        <xs:element name="//supportcollectionmemberdeclarations//e.g."fromcustomerc,in(c.orders)aso"memberdeclarations" type="xs:anyType" />
        <xs:element name="expectingpathexpression" type="xs:anyType" />
        <xs:element name="aftermemberdeclarations" type="xs:anyType" />
        <xs:element name="collectionname" type="xs:string" />
        <xs:element name="join_types" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="whereparser" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="pathexpressionparser" nillable="true" minOccurs="0" />
        <xs:element name="//tokensthatcloseasubexpressionexpression_terminators" type="xs:anyType" />
        <xs:element name="//tokensthatopenasubexpressionexpression_openers" type="xs:anyType" />
        <xs:element name="//tokensthatwouldindicateasubexpressionisabooleanexpressionboolean_operators" type="xs:anyType" />
        <xs:element name="negations" type="xs:anyType" />
        <xs:element name="//handlesthingslike://aandborc//aand(borc)//notaandnotb//not(aandb)//xbetweenyandz(overloaded"and")//xin(a,b,c)(overloadedbrackets)//notnota//aisnotnull(overloaded"not")//etc......//andexpressionslike//foo" type="xs:anyType" />
        <xs:element name="negated" type="xs:anyType" />
        <xs:element name="insubselect" type="xs:anyType" />
        <xs:element name="bracketssinceselect" type="xs:long" />
        <xs:element name="subselect" type="xs:anyType" />
        <xs:element name="expectingpathcontinuation" type="xs:anyType" />
        <xs:element name="expectingindex" type="xs:long" />
        <xs:element name="//thefollowingvariablesarestacksthatkeepinformationabouteachsubexpression//inthelistofnestedsubexpressionswearecurrentlyprocessing.//wereanoddorevennumberofnotsencounterednots" type="xs:anyType" />
        <xs:element name="//thejoinstringbuiltupbycompoundpathsinsidethisexpressionjoins" type="xs:anyType" />
        <xs:element name="//aflagindicatingifthesubexpressionisknowntobebooleanbooleantests" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbyparser" >
      <xs:sequence>
        <xs:element name="//thisusesabutnoticethatcompoundpathsarenotvalid,//onlybarenamesandsimplepaths://selectpfrompinclasseg.personorderbyp.name,p.address,p//thereasonforthisissqldoesn'tletyousortbyanexpressionyouare//notreturningintheresultset." type="pathexpressionparser" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classicquerytranslatorfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectparser" >
      <xs:sequence>
        <xs:element name="//todo:arithmeticexpressions,multiplenewfoo(...)count_modifiers" type="xs:anyType" />
        <xs:element name="aggregatefunctokenlist" type="xs:anyType" />
        <xs:element name="ready" type="xs:anyType" />
        <xs:element name="aggregate" type="xs:anyType" />
        <xs:element name="first" type="xs:anyType" />
        <xs:element name="afternew" type="xs:anyType" />
        <xs:element name="insidenew" type="xs:anyType" />
        <xs:element name="aggregateaddselectscalar" type="xs:anyType" />
        <xs:element name="holder" type="xs:anyType" />
        <xs:element name="pathexpressionparser" type="selectpathexpressionparser" nillable="true" minOccurs="0" />
        <xs:element name="aggregate" type="pathexpressionparser" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clauseparser" >
      <xs:sequence>
        <xs:element name="child" type="parser" nillable="true" minOccurs="0" />
        <xs:element name="selecttokens" type="xs:anyType" />
        <xs:element name="cacheselecttokens" type="xs:anyType" />
        <xs:element name="byexpected" type="xs:anyType" />
        <xs:element name="parencount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preprocessingparser" >
      <xs:sequence>
        <xs:element name="hql_operators" type="xs:anyType" />
        <xs:element name="replacements" type="map" nillable="true" minOccurs="0" />
        <xs:element name="quoted" type="xs:anyType" />
        <xs:element name="quotedstring" type="xs:anyType" />
        <xs:element name="parser" type="clauseparser" nillable="true" minOccurs="0" />
        <xs:element name="lasttoken" type="xs:string" />
        <xs:element name="currentcollectionprop" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pathexpressionparser" >
      <xs:sequence>
        <xs:element name="//todo:thisclassdoestoomanythings!weneedadifferent//kindofpathexpressionparserforeachofthediffferent//waysinwhichpathexpressionscanoccur//weshouldactuallyreworkthisclasstonotimplementparser//andjustprocesspathexpressionsinthemostconvenientway.//theclassisnowwaytocomplex!dotcount" type="xs:long" />
        <xs:element name="currentname" type="xs:string" />
        <xs:element name="currentproperty" type="xs:string" />
        <xs:element name="onetooneownername" type="xs:string" />
        <xs:element name="owner" type="associationtype" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="xs:string" />
        <xs:element name="collectionname" type="xs:string" />
        <xs:element name="collectionownername" type="xs:string" />
        <xs:element name="collectionrole" type="xs:string" />
        <xs:element name="componentpath" type="xs:anyType" />
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="path" type="xs:anyType" />
        <xs:element name="ignoreinitialjoin" type="xs:anyType" />
        <xs:element name="continuation" type="xs:anyType" />
        <xs:element name="//defaultmode" type="jointype" nillable="true" minOccurs="0" />
        <xs:element name="usethetastylejoin" type="xs:anyType" />
        <xs:element name="current" type="propertymapping" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="joinsequence" nillable="true" minOccurs="0" />
        <xs:element name="expectingcollectionindex" type="xs:anyType" />
        <xs:element name="collectionelements" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupbyparser" >
      <xs:sequence>
        <xs:element name="//thisisbasicallyacopy/pasteoforderbyparser...mightbeworthrefactoring//thisusesabutnoticethatcompoundpathsarenotvalid,//onlybarenamesandsimplepaths://selectpfrompinclasseg.persongroupbyp.name,p.address,p//thereasonforthisissqldoesn'tletyousortbyanexpressionyouare//notreturningintheresultset." type="pathexpressionparser" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectpathexpressionparser" >
      <xs:complexContent>
       <xs:extension base="pathexpressionparser">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="frompathexpressionparser" >
      <xs:complexContent>
       <xs:extension base="pathexpressionparser">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parser" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryexecutionrequestexception" >
      <xs:complexContent>
       <xs:extension base="queryexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namegenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querysplitter" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="before_class_tokens" type="xs:anyType" />
        <xs:element name="not_after_class_tokens" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filtertranslator" >
      <xs:complexContent>
       <xs:extension base="querytranslator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querytranslatorfactory" >
      <xs:complexContent>
       <xs:extension base="service">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parametertranslations" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytranslator" >
      <xs:sequence>
        <xs:element name="error_cannot_fetch_with_iterate" type="xs:string" />
        <xs:element name="error_named_parameter_does_not_appear" type="xs:string" />
        <xs:element name="error_cannot_determine_type" type="xs:string" />
        <xs:element name="error_cannot_format_literal" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstracttablebasedbulkidhandler" >
      <xs:sequence>
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="walker" type="hqlsqlwalker" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenttablebulkidstrategy" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="short_name" type="xs:string" />
          <xs:element name="drop_id_tables" type="xs:string" />
          <xs:element name="schema" type="xs:string" />
          <xs:element name="catalog" type="xs:string" />
          <xs:element name="catalog" type="identifier" nillable="true" minOccurs="0" />
          <xs:element name="schema" type="identifier" nillable="true" minOccurs="0" />
          <xs:element name="dropidtables" type="xs:anyType" />
          <xs:element name="droptablestatements" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="helper" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="helper" nillable="true" minOccurs="0" />
        <xs:element name="session_id_column_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preparationcontextimpl" >
      <xs:sequence>
        <xs:element name="creationstatements" type="xs:anyType" />
        <xs:element name="dropstatements" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatehandlerimpl" >
      <xs:complexContent>
       <xs:extension base="tablebasedupdatehandlerimpl">
         <xs:sequence>
          <xs:element name="" type="idtableinfo" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idtableinfoimpl" >
      <xs:sequence>
        <xs:element name="idtablename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletehandlerimpl" >
      <xs:complexContent>
       <xs:extension base="tablebaseddeletehandlerimpl">
         <xs:sequence>
          <xs:element name="" type="idtableinfo" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractmultitablebulkidstrategyimpl" >
      <xs:complexContent>
       <xs:extension base="idtableinfo,">
         <xs:sequence>
          <xs:element name="" type="idtablesupport" nillable="true" minOccurs="0" />
          <xs:element name="idtableinfomap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idtableinfo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="globaltemporarytablebulkidstrategy" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="drop_id_tables" type="xs:string" />
          <xs:element name="short_name" type="xs:string" />
          <xs:element name="" type="afteruseaction" nillable="true" minOccurs="0" />
          <xs:element name="dropidtables" type="xs:anyType" />
          <xs:element name="droptablestatements" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preparationcontextimpl" >
      <xs:sequence>
        <xs:element name="creationstatements" type="xs:anyType" />
        <xs:element name="dropstatements" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idtableinfoimpl" >
      <xs:sequence>
        <xs:element name="idtablename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idtableinfoimpl" >
      <xs:sequence>
        <xs:element name="idtablename" type="xs:string" />
        <xs:element name="creationstatement" type="xs:string" />
        <xs:element name="dropstatement" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="helper" >
      <xs:complexContent>
       <xs:extension base="abstractwork">
         <xs:sequence>
          <xs:element name="/***singletonaccess*/instance" type="helper" nillable="true" minOccurs="0" />
          <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="warning_handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localtemporarytablebulkidstrategy" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="short_name" type="xs:string" />
          <xs:element name="" type="afteruseaction" nillable="true" minOccurs="0" />
          <xs:element name="ddltransactionhandling" type="temptableddltransactionhandling" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="afteruseaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multitablebulkidstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablebasedupdatehandlerimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="targetedpersister" type="queryable" nillable="true" minOccurs="0" />
          <xs:element name="idinsertselect" type="xs:string" />
          <xs:element name="idselectparameterspecifications" type="parameterspecification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="updates" type="xs:string" />
          <xs:element name="assignments" type="parameterspecification" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idtablesupport" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idtablehelper" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="/***singletonaccess*/instance" type="idtablehelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablebaseddeletehandlerimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="targetedpersister" type="queryable" nillable="true" minOccurs="0" />
          <xs:element name="idinsertselect" type="xs:string" />
          <xs:element name="idselectparameterspecifications" type="parameterspecification" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="deletes" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idtablesupportstandardimpl" >
      <xs:sequence>
        <xs:element name="/***singletonaccess*/instance" type="idtablesupportstandardimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertynotfoundexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="invalidmappingexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
          <xs:element name="path" type="xs:string" />
          <xs:element name="type" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryobserver" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sharedsessioncontract" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typemismatchexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stalestateexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidcachestatistics" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionstatistics" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statisticsinitiator" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="instance" type="statisticsinitiator" nillable="true" minOccurs="0" />
        <xs:element name="/***namesthe{@linkstatisticsfactory}touse.recognizesbothaclassnameaswellasaninstanceof*{@linkstatisticsfactory}.*/stats_builder" type="xs:string" />
        <xs:element name="default_stats_builder" type="statisticsfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="categorizedstatistics" >
      <xs:sequence>
        <xs:element name="categoryname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentcollectionstatisticsimpl" >
      <xs:complexContent>
       <xs:extension base="categorizedstatistics">
         <xs:sequence>
          <xs:element name="loadcount" type="xs:anyType" />
          <xs:element name="fetchcount" type="xs:anyType" />
          <xs:element name="updatecount" type="xs:anyType" />
          <xs:element name="removecount" type="xs:anyType" />
          <xs:element name="recreatecount" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="concurrentquerystatisticsimpl" >
      <xs:complexContent>
       <xs:extension base="categorizedstatistics">
         <xs:sequence>
          <xs:element name="cachehitcount" type="xs:anyType" />
          <xs:element name="cachemisscount" type="xs:anyType" />
          <xs:element name="cacheputcount" type="xs:anyType" />
          <xs:element name="executioncount" type="xs:anyType" />
          <xs:element name="executionrowcount" type="xs:anyType" />
          <xs:element name="executionmaxtime" type="xs:anyType" />
          <xs:element name="executionmintime" type="xs:anyType" />
          <xs:element name="totalexecutiontime" type="xs:anyType" />
          <xs:element name="read" type="xs:anyType" />
          <xs:element name="write" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="concurrententitystatisticsimpl" >
      <xs:complexContent>
       <xs:extension base="categorizedstatistics">
         <xs:sequence>
          <xs:element name="loadcount" type="xs:anyType" />
          <xs:element name="updatecount" type="xs:anyType" />
          <xs:element name="insertcount" type="xs:anyType" />
          <xs:element name="deletecount" type="xs:anyType" />
          <xs:element name="fetchcount" type="xs:anyType" />
          <xs:element name="optimisticfailurecount" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionstatisticsimpl" >
      <xs:sequence>
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentsecondlevelcachestatisticsimpl" >
      <xs:complexContent>
       <xs:extension base="categorizedstatistics">
         <xs:sequence>
          <xs:element name="transient" type="region" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="entityregionaccessstrategy" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="collectionregionaccessstrategy" nillable="true" minOccurs="0" />
          <xs:element name="hitcount" type="xs:anyType" />
          <xs:element name="misscount" type="xs:anyType" />
          <xs:element name="putcount" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="concurrentstatisticsimpl" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="volatileisstatisticsenabled" type="xs:anyType" />
        <xs:element name="volatilestarttime" type="xs:long" />
        <xs:element name="sessionopencount" type="xs:anyType" />
        <xs:element name="sessionclosecount" type="xs:anyType" />
        <xs:element name="flushcount" type="xs:anyType" />
        <xs:element name="connectcount" type="xs:anyType" />
        <xs:element name="preparestatementcount" type="xs:anyType" />
        <xs:element name="closestatementcount" type="xs:anyType" />
        <xs:element name="entityloadcount" type="xs:anyType" />
        <xs:element name="entityupdatecount" type="xs:anyType" />
        <xs:element name="entityinsertcount" type="xs:anyType" />
        <xs:element name="entitydeletecount" type="xs:anyType" />
        <xs:element name="entityfetchcount" type="xs:anyType" />
        <xs:element name="collectionloadcount" type="xs:anyType" />
        <xs:element name="collectionupdatecount" type="xs:anyType" />
        <xs:element name="collectionremovecount" type="xs:anyType" />
        <xs:element name="collectionrecreatecount" type="xs:anyType" />
        <xs:element name="collectionfetchcount" type="xs:anyType" />
        <xs:element name="secondlevelcachehitcount" type="xs:anyType" />
        <xs:element name="secondlevelcachemisscount" type="xs:anyType" />
        <xs:element name="secondlevelcacheputcount" type="xs:anyType" />
        <xs:element name="naturalidcachehitcount" type="xs:anyType" />
        <xs:element name="naturalidcachemisscount" type="xs:anyType" />
        <xs:element name="naturalidcacheputcount" type="xs:anyType" />
        <xs:element name="naturalidqueryexecutioncount" type="xs:anyType" />
        <xs:element name="naturalidqueryexecutionmaxtime" type="xs:anyType" />
        <xs:element name="volatilenaturalidqueryexecutionmaxtimeregion" type="xs:string" />
        <xs:element name="queryexecutioncount" type="xs:anyType" />
        <xs:element name="queryexecutionmaxtime" type="xs:anyType" />
        <xs:element name="volatilequeryexecutionmaxtimequery" type="xs:string" />
        <xs:element name="querycachehitcount" type="xs:anyType" />
        <xs:element name="querycachemisscount" type="xs:anyType" />
        <xs:element name="querycacheputcount" type="xs:anyType" />
        <xs:element name="updatetimestampscachehitcount" type="xs:anyType" />
        <xs:element name="updatetimestampscachemisscount" type="xs:anyType" />
        <xs:element name="updatetimestampscacheputcount" type="xs:anyType" />
        <xs:element name="committedtransactioncount" type="xs:anyType" />
        <xs:element name="transactioncount" type="xs:anyType" />
        <xs:element name="optimisticfailurecount" type="xs:anyType" />
        <xs:element name="/***naturalidcachestatisticsperregion*/naturalidcachestatistics" type="xs:anyType" />
        <xs:element name="/***secondlevelcachestatisticsperregion*/secondlevelcachestatistics" type="xs:anyType" />
        <xs:element name="/***entitystatisticspername*/entitystatistics" type="xs:anyType" />
        <xs:element name="/***collectionstatisticspername*/collectionstatistics" type="xs:anyType" />
        <xs:element name="/***entitystatisticsperquerystring(hqlorsql)*/querystatistics" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentnaturalidcachestatisticsimpl" >
      <xs:complexContent>
       <xs:extension base="categorizedstatistics">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="transient" type="region" nillable="true" minOccurs="0" />
          <xs:element name="transientaccessstrategy" type="naturalidregionaccessstrategy" nillable="true" minOccurs="0" />
          <xs:element name="hitcount" type="xs:anyType" />
          <xs:element name="misscount" type="xs:anyType" />
          <xs:element name="putcount" type="xs:anyType" />
          <xs:element name="executioncount" type="xs:anyType" />
          <xs:element name="executionmaxtime" type="xs:anyType" />
          <xs:element name="executionmintime" type="xs:anyType" />
          <xs:element name="totalexecutiontime" type="xs:anyType" />
          <xs:element name="read" type="xs:anyType" />
          <xs:element name="write" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondlevelcachestatistics" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statistics" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitystatistics" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statisticsimplementor" >
      <xs:complexContent>
       <xs:extension base="statistics,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statisticsfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querystatistics" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionstatistics" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aftertransactioncompletionprocess" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="executable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beforetransactioncompletionprocess" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionaction" >
      <xs:sequence>
        <xs:element name="transientpersister" type="collectionpersister" nillable="true" minOccurs="0" />
        <xs:element name="transientsession" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="collection" type="persistentcollection" nillable="true" minOccurs="0" />
        <xs:element name="key" type="xs:anyType" />
        <xs:element name="collectionrole" type="xs:string" />
        <xs:element name="aftertransactionprocess" type="aftertransactioncompletionprocess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delayedpostinsertidentifier" >
      <xs:sequence>
        <xs:element name="sequence" type="xs:anyType" />
        <xs:element name="identifier" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionremoveaction" >
      <xs:complexContent>
       <xs:extension base="collectionaction">
         <xs:sequence>
          <xs:element name="affectedowner" type="xs:anyType" />
          <xs:element name="emptysnapshot" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityupdateaction" >
      <xs:complexContent>
       <xs:extension base="entityaction">
         <xs:sequence>
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="previousstate" type="xs:anyType" />
          <xs:element name="previousversion" type="xs:anyType" />
          <xs:element name="dirtyfields" type="xs:long" />
          <xs:element name="hasdirtycollection" type="xs:anyType" />
          <xs:element name="rowid" type="xs:anyType" />
          <xs:element name="previousnaturalidvalues" type="xs:anyType" />
          <xs:element name="nextversion" type="xs:anyType" />
          <xs:element name="cacheentry" type="xs:anyType" />
          <xs:element name="lock" type="softlock" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityidentityinsertaction" >
      <xs:complexContent>
       <xs:extension base="abstractentityinsertaction">
         <xs:sequence>
          <xs:element name="isdelayed" type="xs:anyType" />
          <xs:element name="delayed" type="entitykey" nillable="true" minOccurs="0" />
          <xs:element name="" type="entitykey" nillable="true" minOccurs="0" />
          <xs:element name="generatedid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentityinsertaction" >
      <xs:complexContent>
       <xs:extension base="entityaction">
         <xs:sequence>
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="isversionincrementdisabled" type="xs:anyType" />
          <xs:element name="isexecuted" type="xs:anyType" />
          <xs:element name="aretransientreferencesnullified" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityincrementversionprocess" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="entry" type="entityentry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orphanremovalaction" >
      <xs:complexContent>
       <xs:extension base="entitydeleteaction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitydeleteaction" >
      <xs:complexContent>
       <xs:extension base="entityaction">
         <xs:sequence>
          <xs:element name="version" type="xs:anyType" />
          <xs:element name="iscascadedeleteenabled" type="xs:anyType" />
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="lock" type="softlock" nillable="true" minOccurs="0" />
          <xs:element name="naturalidvalues" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityverifyversionprocess" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="entry" type="entityentry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bulkoperationcleanupaction" >
      <xs:sequence>
        <xs:element name="affectedtablespaces" type="xs:anyType" />
        <xs:element name="entitycleanups" type="xs:anyType" />
        <xs:element name="collectioncleanups" type="xs:anyType" />
        <xs:element name="naturalidcleanups" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionrecreateaction" >
      <xs:complexContent>
       <xs:extension base="collectionaction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionupdateaction" >
      <xs:complexContent>
       <xs:extension base="collectionaction">
         <xs:sequence>
          <xs:element name="emptysnapshot" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityinsertaction" >
      <xs:complexContent>
       <xs:extension base="abstractentityinsertaction">
         <xs:sequence>
          <xs:element name="version" type="xs:anyType" />
          <xs:element name="cacheentry" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unresolvedentityinsertactions" >
      <xs:sequence>
        <xs:element name="log" type="coremessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="init_size" type="xs:long" />
        <xs:element name="dependenciesbyaction" type="xs:anyType" />
        <xs:element name="dependentactionsbytransiententity" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityaction" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="transientinstance" type="xs:anyType" />
        <xs:element name="transientsession" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="transientpersister" type="entitypersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queuedoperationcollectionaction" >
      <xs:complexContent>
       <xs:extension base="collectionaction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="staleobjectstateexception" >
      <xs:complexContent>
       <xs:extension base="stalestateexception">
         <xs:sequence>
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="identifier" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlockexception" >
      <xs:complexContent>
       <xs:extension base="optimisticentitylockexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="scrollmode" >
      <xs:sequence>
        <xs:element name="resultsettype" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="persistent" type="xs:anyType" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="wassetter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
</xs:schema> 