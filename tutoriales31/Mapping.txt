ClassDiagram.Class>> AbstractAuditingEntity =>=>=> RelationalSchema.Table>> abstractauditingentity;
ClassDiagram.Class>> Authority =>=>=> RelationalSchema.Table>> authority;
ClassDiagram.Class>> PersistentAuditEvent =>=>=> RelationalSchema.Table>> persistentauditevent;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Attribut>> AbstractAuditingEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> abstractauditingentity.serialversionuid;
ClassDiagram.Attribut>> AbstractAuditingEntity.createdby:String =>=>=> RelationalSchema.Column>> abstractauditingentity.createdby;
ClassDiagram.Attribut>> AbstractAuditingEntity.createddate:ZonedDateTime =>=>=> RelationalSchema.Column>> abstractauditingentity.createddate;
ClassDiagram.Attribut>> AbstractAuditingEntity.lastmodifiedby:String =>=>=> RelationalSchema.Column>> abstractauditingentity.lastmodifiedby;
ClassDiagram.Attribut>> AbstractAuditingEntity.lastmodifieddate:ZonedDateTime =>=>=> RelationalSchema.Column>> abstractauditingentity.lastmodifieddate;
ClassDiagram.Attribut>> Authority.serialversionuid:long =>=>=> RelationalSchema.Column>> authority.serialversionuid;
ClassDiagram.Attribut>> Authority.name:String =>=>=> RelationalSchema.Column>> authority.name PRIMARY KEY;
ClassDiagram.Attribut>> PersistentAuditEvent.id:Long =>=>=> RelationalSchema.Column>> persistentauditevent.id PRIMARY KEY;
ClassDiagram.Attribut>> PersistentAuditEvent.principal:String =>=>=> RelationalSchema.Column>> persistentauditevent.principal;
ClassDiagram.Attribut>> PersistentAuditEvent.auditeventdate:LocalDateTime =>=>=> RelationalSchema.Column>> persistentauditevent.auditeventdate;
ClassDiagram.Attribut>> PersistentAuditEvent.auditeventtype:String =>=>=> RelationalSchema.Column>> persistentauditevent.auditeventtype;
ClassDiagram.Attribut>> PersistentAuditEvent.data:Map<String,String> =>=>=> RelationalSchema.Column>> persistentauditevent.data;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.login:String =>=>=> RelationalSchema.Column>> user.login;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.activated:boolean =>=>=> RelationalSchema.Column>> user.activated;
ClassDiagram.Attribut>> User.langkey:String =>=>=> RelationalSchema.Column>> user.langkey;
ClassDiagram.Attribut>> User.imageurl:String =>=>=> RelationalSchema.Column>> user.imageurl;
ClassDiagram.Attribut>> User.activationkey:String =>=>=> RelationalSchema.Column>> user.activationkey;
ClassDiagram.Attribut>> User.resetkey:String =>=>=> RelationalSchema.Column>> user.resetkey;
ClassDiagram.Attribut>> User.resetdate:ZonedDateTime =>=>=> RelationalSchema.Column>> user.resetdate;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>Authority: jhi_user_authority(user_id:User [PK] #FK to User,authority_name:Authority [PK] #FK to Authority);
