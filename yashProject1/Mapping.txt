ClassDiagram.Class>> Technology =>=>=> RelationalSchema.Table>> technology;
ClassDiagram.Class>> Salary =>=>=> RelationalSchema.Table>> salary;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Attribut>> Technology.id:Integer =>=>=> RelationalSchema.Column>> technology.id PRIMARY KEY;
ClassDiagram.Attribut>> Technology.technologyname:String =>=>=> RelationalSchema.Column>> technology.technologyname;
ClassDiagram.Attribut>> Technology.//@manytoone//@joincolumn(name:Integer =>=>=> RelationalSchema.Column>> technology.//@manytoone//@joincolumn(name;
ClassDiagram.Attribut>> Salary.id:Integer =>=>=> RelationalSchema.Column>> salary.id PRIMARY KEY;
ClassDiagram.Attribut>> Salary.//@notemptysalary:Integer =>=>=> RelationalSchema.Column>> salary.//@notemptysalary;
ClassDiagram.Attribut>> Department.id:Integer =>=>=> RelationalSchema.Column>> department.id PRIMARY KEY;
ClassDiagram.Attribut>> Department.departmentname:String =>=>=> RelationalSchema.Column>> department.departmentname;
ClassDiagram.Attribut>> Employee.id:Long =>=>=> RelationalSchema.Column>> employee.id PRIMARY KEY;
ClassDiagram.Attribut>> Employee.name:String =>=>=> RelationalSchema.Column>> employee.name;
ClassDiagram.Attribut>> Employee.designation:String =>=>=> RelationalSchema.Column>> employee.designation;
ClassDiagram.Attribut>> Employee.expertise:String =>=>=> RelationalSchema.Column>> employee.expertise;
ClassDiagram.Attribut>> Employee.createdat:Date =>=>=> RelationalSchema.Column>> employee.createdat;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>salary represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>department represented by ClassDiagram.Atrribute>>department_id;
One-To-Many relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>List<Technology>;
