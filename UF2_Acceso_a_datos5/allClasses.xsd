<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="mappingtools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="triple" >
      <xs:sequence>
        <xs:element name="obj1" type="xs:anyType" />
        <xs:element name="obj2" type="xs:anyType" />
        <xs:element name="obj3" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflectiontools" >
      <xs:sequence>
        <xs:element name="gettercache" type="xs:anyType" />
        <xs:element name="settercache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutableboolean" >
      <xs:sequence>
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="argumentstools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutableinteger" >
      <xs:sequence>
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentreferencehashmap" >
      <xs:complexContent>
       <xs:extension base="abstractmap<k,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/*----------------constants--------------*/default_key_type" type="xs:anyType" />
          <xs:element name="default_value_type" type="xs:anyType" />
          <xs:element name="/***thedefaultinitialcapacityforthistable,*usedwhennototherwisespecifiedinaconstructor.*/default_initial_capacity" type="xs:long" />
          <xs:element name="/***thedefaultloadfactorforthistable,usedwhennot*otherwisespecifiedinaconstructor.*/default_load_factor" type="xs:double" />
          <xs:element name="/***thedefaultconcurrencylevelforthistable,usedwhennot*otherwisespecifiedinaconstructor.*/default_concurrency_level" type="xs:long" />
          <xs:element name="/***themaximumcapacity,usedifahighervalueisimplicitly*specifiedbyeitheroftheconstructorswitharguments.must*beapoweroftwo<" type="xs:long" />
          <xs:element name="/***themaximumnumberofsegmentstoallowusedtobound*constructorarguments.*///slightlyconservativemax_segments" type="xs:long" />
          <xs:element name="/***numberofunsynchronizedretriesinsizeandcontainsvalue*methodsbeforeresortingtolocking.thisisusedtoavoid*unboundedretriesiftablesundergocontinuousmodification*whichwouldmakeitimpossibletoobtainanaccurateresult.*/retries_before_lock" type="xs:long" />
          <xs:element name="/*----------------fields--------------*//***maskvalueforindexingosegments.theupperbitsofa*key'shashcodeareusedtochoosethesegment.*/segmentmask" type="xs:long" />
          <xs:element name="/***shiftvalueforindexingwithinsegments.*/segmentshift" type="xs:long" />
          <xs:element name="segments" type="xs:anyType" />
          <xs:element name="identitycomparisons" type="xs:anyType" />
          <xs:element name="transientkeyset" type="xs:anyType" />
          <xs:element name="entryset" type="xs:anyType" />
          <xs:element name="transientvalues" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringtools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameters" >
      <xs:sequence>
        <xs:element name="and" type="xs:string" />
        <xs:element name="or" type="xs:string" />
        <xs:element name="/***mainaliasoftheentity.*/alias" type="xs:string" />
        <xs:element name="/***connectivebetweentheseparameters-"and"or"or".*/connective" type="xs:string" />
        <xs:element name="/***forusebytheparametergenerator.mustbethesameinall"child"(andparent)parameters.*/queryparamcounter" type="mutableinteger" nillable="true" minOccurs="0" />
        <xs:element name="/***alistofsub-parameters(parameterswithadifferentconnective).*/subparameters" type="parameters" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***alistofnegatedparameters.*/negatedparameters" type="parameters" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***alistofcompletewhere-expressions.*/expressions" type="xs:anyType" />
        <xs:element name="localqueryparamvalues" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querybuilder" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="/***forusebyaliasgenerator(incaseanaliasisnotprovidedbytheuser).*/aliascounter" type="mutableinteger" nillable="true" minOccurs="0" />
        <xs:element name="/***forusebyparametergenerator,in{@linkparameters}.thiscountermustbe*thesameinallparametersandsub-queriesofthisquery.*/paramcounter" type="mutableinteger" nillable="true" minOccurs="0" />
        <xs:element name="/***main"where"forthisquery.*/root" type="parameters" nillable="true" minOccurs="0" />
        <xs:element name="froms" type="xs:anyType" />
        <xs:element name="orders" type="xs:anyType" />
        <xs:element name="/***alistofcompleteprojectiondefinitions:eitherasolepropertyname,orafunction(propertyname).*/projections" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arraystools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="graphtopologicalsort" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="topologicalsort" >
      <xs:sequence>
        <xs:element name="sorted" type="xs:anyType" />
        <xs:element name="time" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vertex" >
      <xs:sequence>
        <xs:element name="epesentation" type="xs:anyType" />
        <xs:element name="neighbours" type="xs:anyType" />
        <xs:element name="starttime" type="xs:long" />
        <xs:element name="endtime" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="graphdefiner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pair" >
      <xs:sequence>
        <xs:element name="obj1" type="xs:anyType" />
        <xs:element name="obj2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityxmlmappingdata" >
      <xs:sequence>
        <xs:element name="mainxmlmapping" type="xs:anyType" />
        <xs:element name="additionalxmlmappings" type="xs:anyType" />
        <xs:element name="/***thexmlthatmapstheclass.therootcanbeoneofthefolowings:*class,subclass,union-subclass,joined-subclass*/classmapping" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritancetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toonerelationmetadatagenerator" >
      <xs:sequence>
        <xs:element name="maingenerator" type="auditmetadatagenerator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditentitynameregister" >
      <xs:sequence>
        <xs:element name="auditentitynames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentmetadatagenerator" >
      <xs:sequence>
        <xs:element name="maingenerator" type="auditmetadatagenerator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditmetadatagenerator" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="cfg" type="xs:anyType" />
          <xs:element name="globalcfg" type="globalconfiguration" nillable="true" minOccurs="0" />
          <xs:element name="verentcfg" type="auditentitiesconfiguration" nillable="true" minOccurs="0" />
          <xs:element name="" type="auditstrategy" nillable="true" minOccurs="0" />
          <xs:element name="revisioninforelationmapping" type="xs:anyType" />
          <xs:element name="/**generatorsfordifferentkindsofpropertyvalues/types.*/" type="basicmetadatagenerator" nillable="true" minOccurs="0" />
          <xs:element name="" type="componentmetadatagenerator" nillable="true" minOccurs="0" />
          <xs:element name="" type="idmetadatagenerator" nillable="true" minOccurs="0" />
          <xs:element name="" type="toonerelationmetadatagenerator" nillable="true" minOccurs="0" />
          <xs:element name="entitiesconfigurations" type="xs:anyType" />
          <xs:element name="notauditedentitiesconfigurations" type="xs:anyType" />
          <xs:element name="" type="auditentitynameregister" nillable="true" minOccurs="0" />
          <xs:element name="entitiesjoins" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicmetadatagenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatatools" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querygeneratorbuilder" >
      <xs:sequence>
        <xs:element name="globalcfg" type="globalconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="verentcfg" type="auditentitiesconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="auditstrategy" nillable="true" minOccurs="0" />
        <xs:element name="referencingiddata" type="middleiddata" nillable="true" minOccurs="0" />
        <xs:element name="auditmiddleentityname" type="xs:string" />
        <xs:element name="iddatas" type="middleiddata" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentauditedpropertiesreader" >
      <xs:complexContent>
       <xs:extension base="auditedpropertiesreader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classauditingdata" >
      <xs:sequence>
        <xs:element name="properties" type="xs:anyType" />
        <xs:element name="secondarytabledictionary" type="xs:anyType" />
        <xs:element name="GeneratedName" type="audittable" nillable="true" minOccurs="0" />
        <xs:element name="/***trueiftheclassisauditedglobally(thishelpstocoverthecaseswhentherearenofieldsintheclass,*butit'sstillaudited).*/defaultaudited" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditedpropertiesreader" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="defaultstore" type="modificationstore" nillable="true" minOccurs="0" />
          <xs:element name="" type="persistentpropertiessource" nillable="true" minOccurs="0" />
          <xs:element name="" type="auditedpropertiesholder" nillable="true" minOccurs="0" />
          <xs:element name="globalcfg" type="globalconfiguration" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="propertynameprefix" type="xs:string" />
          <xs:element name="propertyaccessedpersistentproperties" type="xs:anyType" />
          <xs:element name="fieldaccessedpersistentproperties" type="xs:anyType" />
          <xs:element name="default_audit_join_table" type="auditjointable" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentpropertiessource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditedpropertiesholder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationsmetadatareader" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="globalcfg" type="globalconfiguration" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="pc" type="xs:anyType" />
          <xs:element name="*method.*/auditdata" type="classauditingdata" nillable="true" minOccurs="0" />
          <xs:element name="default" type="audittable" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentauditingdata" >
      <xs:complexContent>
       <xs:extension base="propertyauditingdata">
         <xs:sequence>
          <xs:element name="properties" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyauditingdata" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="beanname" type="xs:string" />
        <xs:element name="store" type="modificationstore" nillable="true" minOccurs="0" />
        <xs:element name="mapkey" type="xs:string" />
        <xs:element name="jointable" type="auditjointable" nillable="true" minOccurs="0" />
        <xs:element name="accesstype" type="xs:string" />
        <xs:element name="auditjointableoverrides" type="auditoverride" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="relationtargetauditmode" nillable="true" minOccurs="0" />
        <xs:element name="auditmappedby" type="xs:string" />
        <xs:element name="positionmappedby" type="xs:string" />
        <xs:element name="forceinsertable" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionmetadatagenerator" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="maingenerator" type="auditmetadatagenerator" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="propertyvalue" type="xs:anyType" />
        <xs:element name="currentmapper" type="compositemapperbuilder" nillable="true" minOccurs="0" />
        <xs:element name="referencingentityname" type="xs:string" />
        <xs:element name="xmlmappingdata" type="entityxmlmappingdata" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="propertyauditingdata" nillable="true" minOccurs="0" />
        <xs:element name="referencing" type="entityconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="/***nullifthiscollectionisn'tarelationtoanotherentity.*/referencedentityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idmetadatagenerator" >
      <xs:sequence>
        <xs:element name="maingenerator" type="auditmetadatagenerator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="audittabledata" >
      <xs:sequence>
        <xs:element name="auditentityname" type="xs:string" />
        <xs:element name="audittablename" type="xs:string" />
        <xs:element name="schema" type="xs:string" />
        <xs:element name="catalog" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="globalconfiguration" >
      <xs:sequence>
        <xs:element name="//shouldarevisionbegeneratedwhenanot-ownedrelationfieldchangesgeneraterevisionsforcollections" type="xs:anyType" />
        <xs:element name="//shouldtheoptimisticlockingpropertyofanentitybeconsideredunversioneddonotauditoptimisticlockingfield" type="xs:anyType" />
        <xs:element name="//shouldentitydatabestoredwhenitisdeletedstoredataatdelete" type="xs:anyType" />
        <xs:element name="//thedefaultnameoftheschemaofaudittables.defaultschemaname" type="xs:string" />
        <xs:element name="//thedefaultnameofthecatalogoftheaudittables.defaultcatalogname" type="xs:string" />
        <xs:element name="(selectmax(e2.p)wheree2.p2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditconfiguration" >
      <xs:sequence>
        <xs:element name="globalcfg" type="globalconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="auditentcfg" type="auditentitiesconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="auditprocessmanager" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="auditstrategy" nillable="true" minOccurs="0" />
        <xs:element name="entcfg" type="entitiesconfigurations" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="revisioninfoquerycreator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="revisioninfonumberreader" nillable="true" minOccurs="0" />
        <xs:element name="cfgs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classesauditingdata" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="entitynametoauditingdata" type="xs:anyType" />
        <xs:element name="persistentclasstoauditingdata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitiesconfigurator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisioninfoconfiguration" >
      <xs:sequence>
        <xs:element name="revisioninfoentityname" type="xs:string" />
        <xs:element name="revisioninfoiddata" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="revisioninfotimestampdata" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="revisioninfotimestamp" type="xs:anyType" />
        <xs:element name="globalcfg" type="globalconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="revisionproptype" type="xs:string" />
        <xs:element name="revisionpropsqltype" type="xs:string" />
        <xs:element name="GeneratedName" type="revisioninfogenerator" nillable="true" minOccurs="0" />
        <xs:element name="revisioninfoxmlmapping" type="xs:anyType" />
        <xs:element name="GeneratedName" type="revisioninfoquerycreator" nillable="true" minOccurs="0" />
        <xs:element name="revisioninforelationmapping" type="xs:anyType" />
        <xs:element name="GeneratedName" type="revisioninfonumberreader" nillable="true" minOccurs="0" />
        <xs:element name="revisioninfoentityname" type="xs:string" />
        <xs:element name="revisioninfoclass" type="xs:anyType" />
        <xs:element name="revisioninfotimestampdata" type="propertydata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditentitiesconfiguration" >
      <xs:sequence>
        <xs:element name="audittableprefix" type="xs:string" />
        <xs:element name="audittablesuffix" type="xs:string" />
        <xs:element name="auditstrategyname" type="xs:string" />
        <xs:element name="originalidpropname" type="xs:string" />
        <xs:element name="revisionfieldname" type="xs:string" />
        <xs:element name="revisionnumberpath" type="xs:string" />
        <xs:element name="revisionpropbasepath" type="xs:string" />
        <xs:element name="revisiontypepropname" type="xs:string" />
        <xs:element name="revisiontypeproptype" type="xs:string" />
        <xs:element name="revisioninfoentityname" type="xs:string" />
        <xs:element name="customaudittablesnames" type="xs:anyType" />
        <xs:element name="revisionendfieldname" type="xs:string" />
        <xs:element name="revisionendtimestampenabled" type="xs:anyType" />
        <xs:element name="revisionendtimestampfieldname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentclassgraphdefiner" >
      <xs:sequence>
        <xs:element name="cfg" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisionentity" >
      <xs:complexContent>
       <xs:extension base="revisionlistener>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditoverride" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaconfigurationtaskwithenvers" >
      <xs:complexContent>
       <xs:extension base="jpaconfigurationtask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configurationtaskwithenvers" >
      <xs:complexContent>
       <xs:extension base="configurationtask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationconfigurationtaskwithenvers" >
      <xs:complexContent>
       <xs:extension base="annotationconfigurationtask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditreaderfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondaryaudittables" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditmappedby" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notauditedexception" >
      <xs:complexContent>
       <xs:extension base="auditexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="revisiondoesnotexistexception" >
      <xs:complexContent>
       <xs:extension base="auditexception">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="revision" type="xs:anyType" />
          <xs:element name="" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationtargetauditmode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditoverrides" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultrevisionentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisioninfogenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultrevisioninfogenerator" >
      <xs:complexContent>
       <xs:extension base="revisionlistener>">
         <xs:sequence>
          <xs:element name="revisioninfoentityname" type="xs:string" />
          <xs:element name="listener" type="revisionlistener" nillable="true" minOccurs="0" />
          <xs:element name="revisiontimestamp" type="xs:anyType" />
          <xs:element name="timestampasdate" type="xs:anyType" />
          <xs:element name="revisioninfoclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="revisioninfonumberreader" >
      <xs:sequence>
        <xs:element name="revisionid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisioninfoquerycreator" >
      <xs:sequence>
        <xs:element name="revisiondatequery" type="xs:string" />
        <xs:element name="revisionnumberfordatequery" type="xs:string" />
        <xs:element name="revisionsquery" type="xs:string" />
        <xs:element name="timestampasdate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditquery" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyauditprojection" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="function" type="xs:string" />
        <xs:element name="distinct" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriatools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notauditexpression" >
      <xs:sequence>
        <xs:element name="criterion" type="auditcriterion" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisiontypeauditexpression" >
      <xs:sequence>
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditproperty" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditcriterion" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="betweenauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="lo" type="xs:anyType" />
        <xs:element name="hi" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditrelatedid" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiereqauditexpression" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="equals" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditdisjunction" >
      <xs:sequence>
        <xs:element name="criterions" type="auditcriterion" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditconjunction" >
      <xs:sequence>
        <xs:element name="criterions" type="auditcriterion" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="values" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="otherpropertyname" type="xs:string" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relatedauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="equals" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="logicalauditexpression" >
      <xs:sequence>
        <xs:element name="lhs" type="auditcriterion" nillable="true" minOccurs="0" />
        <xs:element name="rhs" type="auditcriterion" nillable="true" minOccurs="0" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregatedauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="mode" type="xs:anyType" />
        <xs:element name="criterions" type="auditcriterion" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extendablecriterion" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notnullauditexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertynamegetter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="originalidpropertyname" >
      <xs:sequence>
        <xs:element name="idpropertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisiontypepropertyname" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisionpropertypropertyname" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisionnumberpropertyname" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitypropertyname" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditorder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyauditorder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertynamegetter" nillable="true" minOccurs="0" />
        <xs:element name="asc" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitiesatrevisionquery" >
      <xs:complexContent>
       <xs:extension base="abstractauditquery">
         <xs:sequence>
          <xs:element name="revision" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="revisionsofentityquery" >
      <xs:complexContent>
       <xs:extension base="abstractauditquery">
         <xs:sequence>
          <xs:element name="selectentitiesonly" type="xs:anyType" />
          <xs:element name="selectdeletedentities" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractauditquery" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="entityinstantiator" nillable="true" minOccurs="0" />
        <xs:element name="criterions" type="auditcriterion" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="entityclassname" type="xs:string" />
        <xs:element name="versionsentityname" type="xs:string" />
        <xs:element name="qb" type="querybuilder" nillable="true" minOccurs="0" />
        <xs:element name="hasprojection" type="xs:anyType" />
        <xs:element name="hasorder" type="xs:anyType" />
        <xs:element name="vercfg" type="auditconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="versionsreader" type="auditreaderimplementor" nillable="true" minOccurs="0" />
        <xs:element name="//querypropertiesmaxresults" type="xs:anyType" />
        <xs:element name="firstresult" type="xs:anyType" />
        <xs:element name="cacheable" type="xs:anyType" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="timeout" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditquerycreator" >
      <xs:sequence>
        <xs:element name="auditcfg" type="auditconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="auditreaderimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="audittable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisionlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultauditstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validtimeauditstrategy" >
      <xs:complexContent>
       <xs:extension base="validityauditstrategy">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validityauditstrategy" >
      <xs:sequence>
        <xs:element name="/***fortherevisionentityfieldannotatedwith@revisiontimestamp*/revisiontimestamp" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditjointable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditreader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modificationstore" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditprocessmanager" >
      <xs:sequence>
        <xs:element name="auditprocesses" type="xs:anyType" />
        <xs:element name="GeneratedName" type="revisioninfogenerator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workunitmergevisitor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delworkunit" >
      <xs:complexContent>
       <xs:extension base="abstractauditworkunit">
         <xs:sequence>
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="propertynames" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditworkunit" >
      <xs:complexContent>
       <xs:extension base="workunitmergevisitor,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fakebidirectionalrelationworkunit" >
      <xs:complexContent>
       <xs:extension base="abstractauditworkunit">
         <xs:sequence>
          <xs:element name="fakerelationchanges" type="xs:anyType" />
          <xs:element name="/**theworkunitresponsibleforgeneratingthe"raw"entitydatatobesaved.*/nestedworkunit" type="auditworkunit" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="workunitmergedispatcher" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modworkunit" >
      <xs:complexContent>
       <xs:extension base="abstractauditworkunit">
         <xs:sequence>
          <xs:element name="data" type="xs:anyType" />
          <xs:element name="changes" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentcollectionchangeworkunit" >
      <xs:complexContent>
       <xs:extension base="abstractauditworkunit">
         <xs:sequence>
          <xs:element name="collectionchanges" type="persistentcollectionchangedata" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="referencingpropertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractauditworkunit" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="vercfg" type="auditconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="GeneratedName" type="auditstrategy" nillable="true" minOccurs="0" />
        <xs:element name="performeddata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addworkunit" >
      <xs:complexContent>
       <xs:extension base="abstractauditworkunit">
         <xs:sequence>
          <xs:element name="data" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionchangeworkunit" >
      <xs:complexContent>
       <xs:extension base="abstractauditworkunit">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditprocess" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="revisioninfogenerator" nillable="true" minOccurs="0" />
        <xs:element name="session" type="xs:anyType" />
        <xs:element name="workunits" type="auditworkunit" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="undoqueue" type="auditworkunit" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="usedids" type="xs:anyType" />
        <xs:element name="revisiondata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondaryaudittable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="audited" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationdescription" >
      <xs:sequence>
        <xs:element name="frompropertyname" type="xs:string" />
        <xs:element name="GeneratedName" type="relationtype" nillable="true" minOccurs="0" />
        <xs:element name="toentityname" type="xs:string" />
        <xs:element name="mappedbypropertyname" type="xs:string" />
        <xs:element name="GeneratedName" type="idmapper" nillable="true" minOccurs="0" />
        <xs:element name="fakebidirectionalrelationmapper" type="propertymapper" nillable="true" minOccurs="0" />
        <xs:element name="fakebidirectionalrelationindexmapper" type="propertymapper" nillable="true" minOccurs="0" />
        <xs:element name="insertable" type="xs:anyType" />
        <xs:element name="bidirectional" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitiesconfigurations" >
      <xs:sequence>
        <xs:element name="entitiesconfigurations" type="xs:anyType" />
        <xs:element name="notauditedentitiesconfigurations" type="xs:anyType" />
        <xs:element name="entitynamesforversionsentitynames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idmappingdata" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="idmapper" nillable="true" minOccurs="0" />
        <xs:element name="//mappingwhichwillbeusedtogeneratetheentityxmlmapping" type="xs:anyType" />
        <xs:element name="//mappingwhichwillbeusedtogeneratereferencestotheentityinrelatedentitiesxmlrelationmapping" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisiontypetype" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="sql_types" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertydata" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="/***nameofthepropertyinthebean.*/beanname" type="xs:string" />
        <xs:element name="accesstype" type="xs:string" />
        <xs:element name="store" type="modificationstore" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityconfiguration" >
      <xs:sequence>
        <xs:element name="versionsentityname" type="xs:string" />
        <xs:element name="/***holdstheclassnameforinstantiationtheconfiguredentity*/entityclassname" type="xs:string" />
        <xs:element name="GeneratedName" type="idmappingdata" nillable="true" minOccurs="0" />
        <xs:element name="propertymapper" type="extendedpropertymapper" nillable="true" minOccurs="0" />
        <xs:element name="relations" type="xs:anyType" />
        <xs:element name="parententityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityinstantiator" >
      <xs:sequence>
        <xs:element name="vercfg" type="auditconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="versionsreader" type="auditreaderimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclasspropertymapper" >
      <xs:sequence>
        <xs:element name="main" type="extendedpropertymapper" nillable="true" minOccurs="0" />
        <xs:element name="parentmapper" type="extendedpropertymapper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositemapperbuilder" >
      <xs:complexContent>
       <xs:extension base="simplemapperbuilder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipropertymapper" >
      <xs:sequence>
        <xs:element name="properties" type="xs:anyType" />
        <xs:element name="propertydatas" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplemapperbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcompositeidmapper" >
      <xs:complexContent>
       <xs:extension base="abstractidmapper">
         <xs:sequence>
          <xs:element name="ids" type="xs:anyType" />
          <xs:element name="compositeidclass" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractidmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleidmapperbuilder" >
      <xs:complexContent>
       <xs:extension base="idmapper,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipleidmapper" >
      <xs:complexContent>
       <xs:extension base="abstractcompositeidmapper">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singleidmapper" >
      <xs:complexContent>
       <xs:extension base="abstractidmapper">
         <xs:sequence>
          <xs:element name="" type="propertydata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryparameterdata" >
      <xs:sequence>
        <xs:element name="flatentitypropertyname" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedidmapper" >
      <xs:complexContent>
       <xs:extension base="abstractcompositeidmapper">
         <xs:sequence>
          <xs:element name="id" type="propertydata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentpropertymapper" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="delegate" type="multipropertymapper" nillable="true" minOccurs="0" />
        <xs:element name="componentclassname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertymapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extendedpropertymapper" >
      <xs:complexContent>
       <xs:extension base="propertymapper,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentcollectionchangedata" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="data" type="xs:anyType" />
        <xs:element name="changedelement" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortedmapcollectionmapper" >
      <xs:complexContent>
       <xs:extension base="mapcollectionmapper<sortedmap>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonenotowningmapper" >
      <xs:sequence>
        <xs:element name="owningreferencepropertyname" type="xs:string" />
        <xs:element name="owningentityname" type="xs:string" />
        <xs:element name="GeneratedName" type="propertydata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapcollectionmapper" >
      <xs:complexContent>
       <xs:extension base="map>">
         <xs:sequence>
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
          <xs:element name="indexcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="middlecomponentdata" >
      <xs:sequence>
        <xs:element name="componentmapper" type="middlecomponentmapper" nillable="true" minOccurs="0" />
        <xs:element name="componentindex" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractdelegatesessionimplementor" >
      <xs:sequence>
        <xs:element name="delegate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortedsetproxy" >
      <xs:complexContent>
       <xs:extension base="collectionproxy<u,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionproxy" >
      <xs:complexContent>
       <xs:extension base="collection<u>>">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="transientinitializor" type="xs:anyType" />
          <xs:element name="delegae" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setproxy" >
      <xs:complexContent>
       <xs:extension base="collectionproxy<u,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortedmapproxy" >
      <xs:complexContent>
       <xs:extension base="k,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="initializor" type="xs:anyType" />
          <xs:element name="delegate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapproxy" >
      <xs:complexContent>
       <xs:extension base="k,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="initializor" type="xs:anyType" />
          <xs:element name="delegate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listproxy" >
      <xs:complexContent>
       <xs:extension base="collectionproxy<u,">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="initializor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapcollectioninitializor" >
      <xs:complexContent>
       <xs:extension base="map>">
         <xs:sequence>
          <xs:element name="collectionclass" type="xs:anyType" />
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
          <xs:element name="indexcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortedmapcollectioninitializor" >
      <xs:complexContent>
       <xs:extension base="mapcollectioninitializor<sortedmap>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortedsetcollectioninitializor" >
      <xs:complexContent>
       <xs:extension base="basiccollectioninitializor<sortedset>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listcollectioninitializor" >
      <xs:complexContent>
       <xs:extension base="abstractcollectioninitializor<list>">
         <xs:sequence>
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
          <xs:element name="indexcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcollectioninitializor" >
      <xs:sequence>
        <xs:element name="versionsreader" type="auditreaderimplementor" nillable="true" minOccurs="0" />
        <xs:element name="querygenerator" type="relationquerygenerator" nillable="true" minOccurs="0" />
        <xs:element name="primarykey" type="xs:anyType" />
        <xs:element name="revision" type="xs:anyType" />
        <xs:element name="GeneratedName" type="entityinstantiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basiccollectioninitializor" >
      <xs:complexContent>
       <xs:extension base="collection>">
         <xs:sequence>
          <xs:element name="collectionclass" type="xs:anyType" />
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraycollectioninitializor" >
      <xs:complexContent>
       <xs:extension base="abstractcollectioninitializor<object[]>">
         <xs:sequence>
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
          <xs:element name="indexcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="toonedelegatesessionimplementor" >
      <xs:complexContent>
       <xs:extension base="abstractdelegatesessionimplementor">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="versionsreader" type="auditreaderimplementor" nillable="true" minOccurs="0" />
          <xs:element name="entityclass" type="xs:anyType" />
          <xs:element name="entityid" type="xs:anyType" />
          <xs:element name="revision" type="xs:anyType" />
          <xs:element name="entcfg" type="entitiesconfigurations" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcollectionmapper" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
          <xs:element name="" type="commoncollectionmapperdata" nillable="true" minOccurs="0" />
          <xs:element name="collectionclass" type="xs:anyType" />
          <xs:element name="proxyconstructor" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortedsetcollectionmapper" >
      <xs:complexContent>
       <xs:extension base="basiccollectionmapper<sortedset>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listcollectionmapper" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionmapper<list>">
         <xs:sequence>
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
          <xs:element name="indexcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiccollectionmapper" >
      <xs:complexContent>
       <xs:extension base="collection>">
         <xs:sequence>
          <xs:element name="elementcomponentdata" type="middlecomponentdata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="twoentityquerygenerator" >
      <xs:sequence>
        <xs:element name="query" type="xs:string" />
        <xs:element name="referencingiddata" type="middleiddata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oneentityquerygenerator" >
      <xs:sequence>
        <xs:element name="query" type="xs:string" />
        <xs:element name="referencingiddata" type="middleiddata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relationquerygenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oneauditentityquerygenerator" >
      <xs:sequence>
        <xs:element name="query" type="xs:string" />
        <xs:element name="referencingiddata" type="middleiddata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threeentityquerygenerator" >
      <xs:sequence>
        <xs:element name="query" type="xs:string" />
        <xs:element name="referencingiddata" type="middleiddata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="twoentityoneauditedquerygenerator" >
      <xs:sequence>
        <xs:element name="query" type="xs:string" />
        <xs:element name="referencingiddata" type="middleiddata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tooneidmapper" >
      <xs:sequence>
        <xs:element name="delegate" type="idmapper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="referencedentityname" type="xs:string" />
        <xs:element name="noninsertablefake" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middlesimplecomponentmapper" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="verentcfg" type="auditentitiesconfiguration" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middlerelatedcomponentmapper" >
      <xs:sequence>
        <xs:element name="relatediddata" type="middleiddata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middlecomponentmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middlemapkeypropertycomponentmapper" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="accesstype" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middlestraightcomponentmapper" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middledummycomponentmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middlemapkeyidcomponentmapper" >
      <xs:sequence>
        <xs:element name="verentcfg" type="auditentitiesconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="related" type="idmapper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commoncollectionmapperdata" >
      <xs:sequence>
        <xs:element name="verentcfg" type="auditentitiesconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="versionsmiddleentityname" type="xs:string" />
        <xs:element name="collectionreferencing" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="referencingiddata" type="middleiddata" nillable="true" minOccurs="0" />
        <xs:element name="querygenerator" type="relationquerygenerator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middleiddata" >
      <xs:sequence>
        <xs:element name="originalmapper" type="idmapper" nillable="true" minOccurs="0" />
        <xs:element name="prefixedmapper" type="idmapper" nillable="true" minOccurs="0" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="auditentityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singlepropertymapper" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertydata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisiontype" >
      <xs:sequence>
        <xs:element name="representation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisiontimestamp" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditeventlistener" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="vercfg" type="auditconfiguration" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notaudited" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditreaderimpl" >
      <xs:sequence>
        <xs:element name="vercfg" type="auditconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="firstlevelcache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditreaderimplementor" >
      <xs:complexContent>
       <xs:extension base="auditreader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="firstlevelcache" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="cache" type="xs:anyType" />
        <xs:element name="entitynamecache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisionnumber" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="envershibernatetooltask" >
      <xs:complexContent>
       <xs:extension base="hibernatetooltask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="copyright" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="surname" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="streetname" type="xs:string" />
        <xs:element name="housenumber" type="xs:anyType" />
        <xs:element name="flatnumber" type="xs:anyType" />
        <xs:element name="persons" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testconsole" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclasspropertiesaudited2mappings.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unionallauditedmappings.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedpropertiesauditedmappings.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclasspropertiesauditedmappings.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedallauditedmappings.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unionpropertiesauditedmappings.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclassallauditedmappings.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedpropertiesaudited2mappings.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unionpropertiesaudited2mappings.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ehcache-test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractsessiontest" >
      <xs:sequence>
        <xs:element name="config" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="auditreader" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unversionedoptimisticlockingfieldentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str" type="xs:string" />
        <xs:element name="optlocking" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unversionedoptimisticlockingfield" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertiestestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionsproperties" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanycache" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querycache" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonecache" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateseclvlquerycache" >
      <xs:complexContent>
       <xs:extension base="abstractsessiontest">
         <xs:sequence>
          <xs:element name="query_cache_region" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childauditing" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childingentity" >
      <xs:complexContent>
       <xs:extension base="parentingentity">
         <xs:sequence>
          <xs:element name="number" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="referencedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="referencing" type="parentingentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="referenced" type="referencedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="polymorphiccollection" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed_id1" type="xs:anyType" />
          <xs:element name="c_id" type="xs:anyType" />
          <xs:element name="p_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="email" type="xs:string" />
        <xs:element name="addresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address1" type="xs:string" />
        <xs:element name="GeneratedName" type="contact" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notownedbidirectional" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="pc_id" type="xs:long" />
          <xs:element name="a1_id" type="xs:long" />
          <xs:element name="a2_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personalcontact" >
      <xs:complexContent>
       <xs:extension base="contact">
         <xs:sequence>
          <xs:element name="firstname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentauditing" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discriminatorformulatest" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="parentaudit" type="xs:anyType" />
          <xs:element name="childver1" type="childentity" nillable="true" minOccurs="0" />
          <xs:element name="childver2" type="childentity" nillable="true" minOccurs="0" />
          <xs:element name="parentver1" type="parententity" nillable="true" minOccurs="0" />
          <xs:element name="parentver2" type="parententity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classtypeentity" >
      <xs:sequence>
        <xs:element name="parent_type" type="xs:string" />
        <xs:element name="child_type" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childentity" >
      <xs:complexContent>
       <xs:extension base="parententity">
         <xs:sequence>
          <xs:element name="specificdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parententity" >
      <xs:sequence>
        <xs:element name="discriminator_query" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="typeid" type="xs:long" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childentity" >
      <xs:complexContent>
       <xs:extension base="parententity">
         <xs:sequence>
          <xs:element name="number" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childreferencing" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="re_id1" type="xs:anyType" />
          <xs:element name="re_id2" type="xs:anyType" />
          <xs:element name="c_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="referencedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="referencing" type="childingentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childingentity" >
      <xs:complexContent>
       <xs:extension base="parentnotingentity">
         <xs:sequence>
          <xs:element name="number" type="xs:long" />
          <xs:element name="referenced" type="referencedentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentnotingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childauditing" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="referencedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="referencing" type="parentingentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="polymorphiccollection" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed_id1" type="xs:anyType" />
          <xs:element name="c_id" type="xs:anyType" />
          <xs:element name="p_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childingentity" >
      <xs:complexContent>
       <xs:extension base="parentingentity">
         <xs:sequence>
          <xs:element name="number" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="referenced" type="referencedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="email" type="xs:string" />
        <xs:element name="addresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address1" type="xs:string" />
        <xs:element name="GeneratedName" type="contact" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personalcontact" >
      <xs:complexContent>
       <xs:extension base="contact">
         <xs:sequence>
          <xs:element name="firstname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notownedbidirectional" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="pc_id" type="xs:long" />
          <xs:element name="a1_id" type="xs:long" />
          <xs:element name="a2_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childingentity" >
      <xs:complexContent>
       <xs:extension base="parentnotingentity">
         <xs:sequence>
          <xs:element name="number" type="xs:long" />
          <xs:element name="referenced" type="referencedentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentnotingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="referencedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="referencing" type="childingentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childreferencing" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="re_id1" type="xs:anyType" />
          <xs:element name="re_id2" type="xs:anyType" />
          <xs:element name="c_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentauditing" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childentity" >
      <xs:complexContent>
       <xs:extension base="parententity">
         <xs:sequence>
          <xs:element name="number" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childnullauditing" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="referencedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="referencing" type="parentingentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="polymorphiccollection" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed_id1" type="xs:anyType" />
          <xs:element name="c_id" type="xs:anyType" />
          <xs:element name="p_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="referenced" type="referencedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childingentity" >
      <xs:complexContent>
       <xs:extension base="parentingentity">
         <xs:sequence>
          <xs:element name="number" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setentity" >
      <xs:complexContent>
       <xs:extension base="abstractsetentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsetentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="entities" type="abstractcontainedentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unidirectionaldoubleabstract" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="cce1_id" type="xs:long" />
          <xs:element name="cse1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcontainedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="containedentity" >
      <xs:complexContent>
       <xs:extension base="abstractcontainedentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentauditing" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childauditing" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childentity" >
      <xs:complexContent>
       <xs:extension base="parententity">
         <xs:sequence>
          <xs:element name="number" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="referencedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="referencing" type="childingentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentnotingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childreferencing" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="re_id1" type="xs:anyType" />
          <xs:element name="re_id2" type="xs:anyType" />
          <xs:element name="c_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childingentity" >
      <xs:complexContent>
       <xs:extension base="parentnotingentity">
         <xs:sequence>
          <xs:element name="number" type="xs:long" />
          <xs:element name="referenced" type="referencedentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emptychildauditing" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="emptychildentity" >
      <xs:complexContent>
       <xs:extension base="parententity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address1" type="xs:string" />
        <xs:element name="GeneratedName" type="contact" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="email" type="xs:string" />
        <xs:element name="addresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personalcontact" >
      <xs:complexContent>
       <xs:extension base="contact">
         <xs:sequence>
          <xs:element name="firstname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notownedbidirectional" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="pc_id" type="xs:long" />
          <xs:element name="a1_id" type="xs:long" />
          <xs:element name="a2_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childprimarykeyjoinauditing" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childprimarykeyjoinentity" >
      <xs:complexContent>
       <xs:extension base="parententity">
         <xs:sequence>
          <xs:element name="number" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitiveadddelete" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dates" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobs" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobserializabletestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="obj" type="serobject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobserializables" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializabletestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="obj" type="serobject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enums" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="enum1" type="xs:anyType" />
        <xs:element name="enum2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serobject" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializables" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datetestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="lob" type="xs:string" />
        <xs:element name="lob" type="xs:anyType" />
        <xs:element name="lob" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validityauditstrategyrevendtestcustomrevent" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="revendtimestampcolumname" type="xs:string" />
          <xs:element name="p1_id" type="xs:anyType" />
          <xs:element name="p2_id" type="xs:anyType" />
          <xs:element name="c1_1_id" type="xs:anyType" />
          <xs:element name="c1_2_id" type="xs:anyType" />
          <xs:element name="c2_1_id" type="xs:anyType" />
          <xs:element name="c2_2_id" type="xs:anyType" />
          <xs:element name="revisions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validityauditstrategyrevendtstest" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="revendtimestampcolumname" type="xs:string" />
          <xs:element name="p1_id" type="xs:anyType" />
          <xs:element name="p2_id" type="xs:anyType" />
          <xs:element name="c1_1_id" type="xs:anyType" />
          <xs:element name="c1_2_id" type="xs:anyType" />
          <xs:element name="c2_1_id" type="xs:anyType" />
          <xs:element name="c2_2_id" type="xs:anyType" />
          <xs:element name="revisions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validityauditstrategymanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ing_id" type="xs:anyType" />
          <xs:element name="ed_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="icomponent" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interfacescomponents" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="component1" >
      <xs:sequence>
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componenttestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="comp1" type="icomponent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setrefingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="isetrefedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setrefedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interfacesrelation" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="isetrefedentity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unionpropertiesauditedtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonauditedimplementor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="nonauditedimplementordata" type="xs:string" />
        <xs:element name="numerito" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedpropertiesauditedtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclasspropertiesauditedtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpropertiesauditedtest" >
      <xs:sequence>
        <xs:element name="ai_id" type="xs:long" />
        <xs:element name="nai_id" type="xs:long" />
        <xs:element name="numerito" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditedimplementor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="auditedimplementordata" type="xs:string" />
        <xs:element name="numerito" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractallauditedtest" >
      <xs:sequence>
        <xs:element name="ai_id" type="xs:long" />
        <xs:element name="nai_id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclassallauditedtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditedimplementor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="auditedimplementordata" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unionallauditedtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedallauditedtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonauditedimplementor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="nonauditedimplementordata" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unionpropertiesaudited2test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonauditedimplementor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="nonauditedimplementordata" type="xs:string" />
        <xs:element name="numerito" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclasspropertiesaudited2test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditedimplementor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="auditedimplementordata" type="xs:string" />
        <xs:element name="numerito" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedpropertiesaudited2test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpropertiesaudited2test" >
      <xs:sequence>
        <xs:element name="ai_id" type="xs:long" />
        <xs:element name="nai_id" type="xs:long" />
        <xs:element name="numerito" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basictestentity4" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str1" type="xs:string" />
        <xs:element name="str2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unversionedproperty" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unversionedpropertieschange" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basictestentity1" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str1" type="xs:string" />
        <xs:element name="1" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="globalversioned" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullproperties" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simple" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basictestentity3" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str1" type="xs:string" />
        <xs:element name="str2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notversioned" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="delete" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basictestentity2" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str1" type="xs:string" />
        <xs:element name="str2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manyoperationsintransaction" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singleoperationintransaction" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notauditedtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str1" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditedtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str1" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auditreaderapitest" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readentitywhitentitynametest" >
      <xs:complexContent>
       <xs:extension base="abstractonesessiontest{">
         <xs:sequence>
          <xs:element name="id_pers1" type="xs:long" />
          <xs:element name="id_pers2" type="xs:long" />
          <xs:element name="id_pers3" type="xs:long" />
          <xs:element name="1_1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="1_2" type="person" nillable="true" minOccurs="0" />
          <xs:element name="1_3" type="person" nillable="true" minOccurs="0" />
          <xs:element name="currentpers1" type="person" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readentitywithauditedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractonesessiontest{">
         <xs:sequence>
          <xs:element name="id_car1" type="xs:long" />
          <xs:element name="id_car2" type="xs:long" />
          <xs:element name="current1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="current1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="id_pers1" type="xs:long" />
          <xs:element name="1_1" type="car" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="owners" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readentityassociatedauditedtest" >
      <xs:complexContent>
       <xs:extension base="abstractonesessiontest{">
         <xs:sequence>
          <xs:element name="id_car1" type="xs:long" />
          <xs:element name="id_car2" type="xs:long" />
          <xs:element name="current1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="id_pers1" type="xs:long" />
          <xs:element name="id_pers2" type="xs:long" />
          <xs:element name="current1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="1" type="person" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="owner" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readentityassociatednotauditedtest" >
      <xs:complexContent>
       <xs:extension base="abstractonesessiontest">
         <xs:sequence>
          <xs:element name="id_car1" type="xs:long" />
          <xs:element name="id_car2" type="xs:long" />
          <xs:element name="id_pers1" type="xs:long" />
          <xs:element name="id_pers2" type="xs:long" />
          <xs:element name="1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="2" type="car" nillable="true" minOccurs="0" />
          <xs:element name="1_1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="2" type="person" nillable="true" minOccurs="0" />
          <xs:element name="current1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="current1" type="car" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="owner" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readentitywithauditedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractonesessiontest{">
         <xs:sequence>
          <xs:element name="id_car1" type="xs:long" />
          <xs:element name="id_car2" type="xs:long" />
          <xs:element name="current1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="current1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="id_pers1" type="xs:long" />
          <xs:element name="1_1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="1_1" type="person" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="owners" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readentitywithauditedmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractonesessiontest{">
         <xs:sequence>
          <xs:element name="id_car1" type="xs:long" />
          <xs:element name="id_car2" type="xs:long" />
          <xs:element name="id_pers1" type="xs:long" />
          <xs:element name="1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="1" type="car" nillable="true" minOccurs="0" />
          <xs:element name="1_1" type="person" nillable="true" minOccurs="0" />
          <xs:element name="1_2" type="car" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="cars" type="car" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="owners" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeids" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="id2" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="id3" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="id4" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="id5" type="embidwithcustomtype" nillable="true" minOccurs="0" />
          <xs:element name="id6" type="embidwithcustomtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytooneidnotaudited" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="manytoonenotauditedembid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositedateid" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="dateembid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dateid" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ternarymap" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="int1_id" type="xs:anyType" />
          <xs:element name="int2_id" type="xs:anyType" />
          <xs:element name="map1_id" type="xs:anyType" />
          <xs:element name="map2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ternarymapflush" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="int1_id" type="xs:anyType" />
          <xs:element name="int2_id" type="xs:anyType" />
          <xs:element name="map1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ternarymapentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicbiowned" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="o1_1_id" type="xs:anyType" />
          <xs:element name="o1_2_id" type="xs:anyType" />
          <xs:element name="o2_1_id" type="xs:anyType" />
          <xs:element name="o2_2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicsametable" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="p1_id" type="xs:anyType" />
          <xs:element name="p2_id" type="xs:anyType" />
          <xs:element name="c1_1_id" type="xs:anyType" />
          <xs:element name="c1_2_id" type="xs:anyType" />
          <xs:element name="c2_1_id" type="xs:anyType" />
          <xs:element name="c2_2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicset" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicunilist" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="m2mindexedlistnotauditedtarget" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="itnae1_id" type="xs:anyType" />
          <xs:element name="itnae2_id" type="xs:anyType" />
          <xs:element name="uste1" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
          <xs:element name="uste2" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicuniset" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="m2mrelationnotauditedtarget" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="tnae1_id" type="xs:anyType" />
          <xs:element name="tnae2_id" type="xs:anyType" />
          <xs:element name="uste1_id" type="xs:anyType" />
          <xs:element name="uste2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicunimap" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="coll1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiclist" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicmap" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicwherejointable" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ite1_1_id" type="xs:anyType" />
          <xs:element name="ite1_2_id" type="xs:anyType" />
          <xs:element name="ite2_1_id" type="xs:anyType" />
          <xs:element name="ite2_2_id" type="xs:anyType" />
          <xs:element name="wjte1_id" type="xs:anyType" />
          <xs:element name="wjte2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detailsubclass2" >
      <xs:complexContent>
       <xs:extension base="detailsubclass">
         <xs:sequence>
          <xs:element name="str3" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detailsubclass" >
      <xs:complexContent>
       <xs:extension base="detailsuperclass">
         <xs:sequence>
          <xs:element name="str2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detailsuperclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="masters" type="master" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="master" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="str" type="xs:string" />
        <xs:element name="items" type="detailsubclass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanyinversetosuperclasstest" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="m1_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customcomparatorentitytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
          <xs:element name="id4" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="exceptionlistener" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customnolistener" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customcolumnmapping" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="exceptionlistenerreventity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customdate" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longrevnumberreventity" >
      <xs:sequence>
        <xs:element name="customid" type="xs:long" />
        <xs:element name="customtimestamp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listenerreventity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:long" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testexceptionrevisionlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longrevnumber" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customboxedreventity" >
      <xs:sequence>
        <xs:element name="customid" type="xs:anyType" />
        <xs:element name="customtimestamp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longreventityinheritancechildauditing" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listener" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="custompropertyaccess" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customboxed" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="custom" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritedreventity" >
      <xs:complexContent>
       <xs:extension base="defaultrevisionentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inherited" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testrevisionlistener" >
      <xs:sequence>
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositecustom" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ccte_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parametrizedcustom" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="pcte_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditedallmappedsuperclass" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
        <xs:element name="otherstr" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notauditedsubclassentity" >
      <xs:complexContent>
       <xs:extension base="auditedallmappedsuperclass">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="notauditedstr" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditedallsubclassentity" >
      <xs:complexContent>
       <xs:extension base="auditedallmappedsuperclass	">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="subauditedstr" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditedmethodmappedsuperclass" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
        <xs:element name="otherstr" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notauditedsubclassentity" >
      <xs:complexContent>
       <xs:extension base="auditedmethodmappedsuperclass">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="notauditedstr" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryingwithproxyobjecttest" >
      <xs:complexContent>
       <xs:extension base="abstractsessiontest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auditedcollectionproxytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id_listrefedentity1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxyidentifier" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="tnae1" type="targetnotauditedentity" nillable="true" minOccurs="0" />
          <xs:element name="uste1" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractflushtest" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubleflushaddmod" >
      <xs:complexContent>
       <xs:extension base="abstractflushtest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubleflushmoddel" >
      <xs:complexContent>
       <xs:extension base="abstractflushtest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manualflush" >
      <xs:complexContent>
       <xs:extension base="abstractflushtest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubleflushadddel" >
      <xs:complexContent>
       <xs:extension base="abstractflushtest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubleflushmodmod" >
      <xs:complexContent>
       <xs:extension base="abstractflushtest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionofcomponents" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="components" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
          <xs:element name="id4" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyincomponent" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="otmcte_id1" type="xs:anyType" />
          <xs:element name="ste_id1" type="xs:anyType" />
          <xs:element name="ste_id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytooneincomponent" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="mtocte_id1" type="xs:anyType" />
          <xs:element name="ste_id1" type="xs:anyType" />
          <xs:element name="ste_id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notauditedmanytooneincomponent" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="mtocte_id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultvaluecomponents" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="id0" type="xs:anyType" />
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
          <xs:element name="id4" type="xs:anyType" />
          <xs:element name="id5" type="xs:anyType" />
          <xs:element name="id6" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readwriteexpressionchange" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="height_inches" type="xs:double" />
          <xs:element name="height_centimeters" type="xs:double" />
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="staff" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="sizeininches" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicsecondary" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondarymulidtestentity" >
      <xs:sequence>
        <xs:element name="id1" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
        <xs:element name="s1" type="xs:string" />
        <xs:element name="s2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embidsecondary" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id" type="embid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mulidsecondary" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id" type="mulid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondaryembidtestentity" >
      <xs:sequence>
        <xs:element name="id" type="embid" nillable="true" minOccurs="0" />
        <xs:element name="s1" type="xs:string" />
        <xs:element name="s2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namingsecondary" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondarynamingtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="s1" type="xs:string" />
        <xs:element name="s2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondarytestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="s1" type="xs:string" />
        <xs:element name="s2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringlist" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="sle1_id" type="xs:anyType" />
          <xs:element name="sle2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringmap" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="sme1_id" type="xs:anyType" />
          <xs:element name="sme2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumset" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="sse1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionchangerevisiontest" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionchangetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcollectionchangetest" >
      <xs:complexContent>
       <xs:extension base="abstractsessiontest">
         <xs:sequence>
          <xs:element name="personid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="name" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="names" type="name" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionchangenorevisiontest" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionchangetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentmapkeyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="idmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentmapkey" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="cmke_id" type="xs:anyType" />
          <xs:element name="cte1_id" type="xs:anyType" />
          <xs:element name="cte2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idmapkey" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="imke_id" type="xs:anyType" />
          <xs:element name="ste1_id" type="xs:anyType" />
          <xs:element name="ste2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idmapkeyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="idmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringset" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="sse1_id" type="xs:anyType" />
          <xs:element name="sse2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicsetwithembid" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="ed2_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="ing1_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="ing2_id" type="embid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiccollection" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="refingmapkeyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="reference" type="refedmapkeyentity" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidirectionalmapkey" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicset" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicjoincolumnset" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="coll1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicdetachedlist" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="coll1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicdetachedsetwithembid" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="str1_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="str2_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="coll1_id" type="embid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datachangesdetachedset" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="coll1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubledetachedset" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="coll1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritanceindexedjoincolumnbidirectionallist" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ed3_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnbidirectionallist" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicdetachedset" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="str2_id" type="xs:anyType" />
          <xs:element name="coll1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexedjoincolumnbidirectionallist" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ed3_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnbidirectionallistwithinheritance" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicdetachedsetwithmulid" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="str1_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="str2_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="coll1_id" type="mulid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doublejoincolumnbidirectionallist" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_1_id" type="xs:anyType" />
          <xs:element name="ed2_1_id" type="xs:anyType" />
          <xs:element name="ed1_2_id" type="xs:anyType" />
          <xs:element name="ed2_2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiclist" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="refedmapkeyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="idmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicsetwithmulid" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="ed2_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="ing1_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="ing2_id" type="mulid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicsetwithnullsdelete" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
          <xs:element name="ing3_id" type="xs:anyType" />
          <xs:element name="ing4_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inversesidechanges" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detailsubclass2" >
      <xs:complexContent>
       <xs:extension base="detailsubclass">
         <xs:sequence>
          <xs:element name="str3" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyinversetosuperclasstest" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="m1_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detailsuperclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parent" type="master" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detailsubclass" >
      <xs:complexContent>
       <xs:extension base="detailsuperclass">
         <xs:sequence>
          <xs:element name="str2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="master" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="str" type="xs:string" />
        <xs:element name="items" type="detailsubclass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtatransaction" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtaexceptionlistener" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectional" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="biembidrefedentity" >
      <xs:sequence>
        <xs:element name="id" type="embid" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="referencing" type="biembidrefingentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bimulidrefedentity" >
      <xs:sequence>
        <xs:element name="id1" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="referencing" type="bimulidrefingentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="biembidrefingentity" >
      <xs:sequence>
        <xs:element name="id" type="embid" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="biembidrefedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bimulidrefingentity" >
      <xs:sequence>
        <xs:element name="id1" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="bimulidrefedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embidbidirectional" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="ed2_id" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="ing1_id" type="embid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mulidbidirectional" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="ed2_id" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="ing1_id" type="mulid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectional2" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="birefingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="birefedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidirectionalnonulls" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="birefedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="referencing" type="birefingentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unidirectionalwithnulls" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectional" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ed2_id" type="xs:anyType" />
          <xs:element name="ed3_id" type="xs:anyType" />
          <xs:element name="ed4_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
          <xs:element name="ing2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unirefingmulidentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="embidtestentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unirefingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="unirefedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unidirectionalmulidwithnulls" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ei" type="embid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unirefedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sameidtestentity1" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str1" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sameids" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sameidtestentity2" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str1" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializingcollection" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed1_id" type="xs:anyType" />
          <xs:element name="ing1_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="immutableclassaccesstype" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="" type="country" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldaccesstypeentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldaccesstype" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyaccesstypeentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="idset" type="xs:anyType" />
        <xs:element name="dataset" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccesstype" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mixedaccesstypeentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="dataset" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedaccesstype" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="code" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonenotinsertable" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="mto_id1" type="xs:anyType" />
          <xs:element name="type_id1" type="xs:anyType" />
          <xs:element name="type_id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonenotinsertableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="number" type="xs:anyType" />
        <xs:element name="type" type="notinsertableentitytype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notinsertableentitytype" >
      <xs:sequence>
        <xs:element name="typeid" type="xs:anyType" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notinsertable" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notinsertabletestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="datacopy" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wikipage" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="content" type="xs:string" />
        <xs:element name="links" type="xs:anyType" />
        <xs:element name="images" type="wikiimage" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wikiimage" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="changinghashcode" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="pageid" type="xs:long" />
          <xs:element name="imageid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationnotauditedtarget" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="tnae1_id" type="xs:anyType" />
          <xs:element name="tnae2_id" type="xs:anyType" />
          <xs:element name="uste1_id" type="xs:anyType" />
          <xs:element name="uste2_id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="maximalizepropertyquery" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mulidonetomanyquery" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="id2" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="id3" type="mulid" nillable="true" minOccurs="0" />
          <xs:element name="id4" type="mulid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embidonetomanyquery" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="id2" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="id3" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="id4" type="embid" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullpropertyquery" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="idsimplepropertynull" type="xs:anyType" />
          <xs:element name="idsimplepropertynotnull" type="xs:anyType" />
          <xs:element name="idmulticolumnreferencetoparentnull" type="embid" nillable="true" minOccurs="0" />
          <xs:element name="idreferencetoparentnotnull" type="xs:anyType" />
          <xs:element name="idparent" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbylimitquery" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
          <xs:element name="id4" type="xs:anyType" />
          <xs:element name="id5" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deletedentities" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customreventityquery" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="timestamp" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aggregatequery" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="storedeleteddata" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplequery" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
          <xs:element name="id3" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="revisionconstraintquery" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="greetingpo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="thegreeting" type="xs:string" />
        <xs:element name="greetingset" type="greetingsetpo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="greetingsetpo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="greetings" type="greetingpo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidirectionalreference" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="set1_id" type="xs:long" />
          <xs:element name="set2_id" type="xs:long" />
          <xs:element name="g1_id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionsjointablerangetestentity" >
      <xs:complexContent>
       <xs:extension base="		versionsjointablerangetestentitysuperclass">
         <xs:sequence>
          <xs:element name="value" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detachednamingtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="collection" type="strtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicnaming" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="id1" type="xs:anyType" />
          <xs:element name="id2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionsjointablerangetestalternateentity" >
      <xs:complexContent>
       <xs:extension base="		versionsjointablerangetestentitysuperclass">
         <xs:sequence>
          <xs:element name="alternatevalue" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="quotedfieldstest" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="qfeid1" type="xs:long" />
          <xs:element name="qfeid2" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="quotedfieldsentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data1" type="xs:string" />
        <xs:element name="data2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionsjointablenaming" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="uni1_id" type="xs:anyType" />
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="middle_versions_entity_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyunidirectionalnaming" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="uni1_id" type="xs:anyType" />
          <xs:element name="str1_id" type="xs:anyType" />
          <xs:element name="middle_versions_entity_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionsjointablerangecomponenttestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="/***anembeddedcomponent,containingalistof*{@linkversionsjointablerangetestentity}-instances.*/component1" type="versionsjointablerangetestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***anembeddedcomponent,containingalistof*{@linkversionsjointablerangetestalternateentity}-instances.*/component2" type="versionsjointablerangetestalternateentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="/***anembeddedcomponent,containingalistofnotaudited*{@linkversionsjointablerangetestalternateentity}-instances.*/component3" type="component1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinnamingrefingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="joinnamingrefedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namingtestentity1" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinnamingrefedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reffering" type="joinnamingrefingentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionsjointabletestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="collection" type="strtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinmulidnamingrefingentity" >
      <xs:sequence>
        <xs:element name="id1" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="joinmulidnamingrefedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinmulidnamingrefedentity" >
      <xs:sequence>
        <xs:element name="id1" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reffering" type="joinmulidnamingrefingentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinembidnamingrefedentity" >
      <xs:sequence>
        <xs:element name="id" type="embidnaming" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reffering" type="joinembidnamingrefingentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinembidnaming" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed_id1" type="embidnaming" nillable="true" minOccurs="0" />
          <xs:element name="ed_id2" type="embidnaming" nillable="true" minOccurs="0" />
          <xs:element name="ing_id1" type="embidnaming" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mulidnaming" >
      <xs:sequence>
        <xs:element name="id1" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embidnaming" >
      <xs:sequence>
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinembidnamingrefingentity" >
      <xs:sequence>
        <xs:element name="id" type="embidnaming" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="joinembidnamingrefedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinmulidnaming" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed_id1" type="mulidnaming" nillable="true" minOccurs="0" />
          <xs:element name="ed_id2" type="mulidnaming" nillable="true" minOccurs="0" />
          <xs:element name="ing_id1" type="mulidnaming" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinnaming" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="ed_id1" type="xs:anyType" />
          <xs:element name="ed_id2" type="xs:anyType" />
          <xs:element name="ing_id1" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionsjointablerangecomponentnamingtest" >
      <xs:complexContent>
       <xs:extension base="		abstractentitytest">
         <xs:sequence>
          <xs:element name="vjrcte_id" type="xs:anyType" />
          <xs:element name="vjtrte_id" type="xs:anyType" />
          <xs:element name="vjtrtae_id1" type="xs:anyType" />
          <xs:element name="/*theauditjointablesweexpect*/component_1_audit_join_table_name" type="xs:string" />
          <xs:element name="component_2_audit_join_table_name" type="xs:string" />
          <xs:element name="/*theauditjointablesthatshouldnotbethere*/unmodified_component_1_audit_join_table_name" type="xs:string" />
          <xs:element name="unmodified_component_2_audit_join_table_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionsjointablerangecomponent" >
      <xs:complexContent>
       <xs:extension base="versionsjointablerangetestentitysuperclass>">
         <xs:sequence>
          <xs:element name="range" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionsjointablerangetestentitysuperclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="genericvalue" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="revisionfordate" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="timestamp1" type="xs:long" />
          <xs:element name="timestamp2" type="xs:long" />
          <xs:element name="timestamp3" type="xs:long" />
          <xs:element name="timestamp4" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentitytest" >
      <xs:sequence>
        <xs:element name="emf" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="auditreader" nillable="true" minOccurs="0" />
        <xs:element name="cfg" type="xs:anyType" />
        <xs:element name="audited" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listrefingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="listrefedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setrefedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reffering" type="setrefingentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionrefingentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="collectionrefedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doublelistjoincolumnbidirectionalrefingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references1" type="doublelistjoincolumnbidirectionalrefedentity1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="references2" type="doublelistjoincolumnbidirectionalrefedentity2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setrefcollentityembid" >
      <xs:sequence>
        <xs:element name="id" type="embid" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="collection" type="embidtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setrefcollentitymulid" >
      <xs:sequence>
        <xs:element name="id1" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="collection" type="mulidtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listjoincolumnbidirectionalinheritancerefedparententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="parentdata" type="xs:string" />
        <xs:element name="owner" type="listjoincolumnbidirectionalinheritancerefingentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doublelistjoincolumnbidirectionalrefedentity2" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="owner" type="doublelistjoincolumnbidirectionalrefingentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setrefcollentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="collection" type="strtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listjoincolumnbidirectionalrefedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="owner" type="listjoincolumnbidirectionalrefingentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexedlistjoincolumnbidirectionalrefedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="position" type="xs:anyType" />
        <xs:element name="owner" type="indexedlistjoincolumnbidirectionalrefingentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childindexedlistjoincolumnbidirectionalrefingentity" >
      <xs:complexContent>
       <xs:extension base="parentindexedlistjoincolumnbidirectionalrefingentity">
         <xs:sequence>
          <xs:element name="data2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listjoincolumnbidirectionalrefingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references" type="listjoincolumnbidirectionalrefedentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setjoincolumnrefcollentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="collection" type="strtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doublesetrefcollentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="collection" type="strtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="collection2" type="strtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexedlistjoincolumnbidirectionalrefingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references" type="indexedlistjoincolumnbidirectionalrefedentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listjoincolumnbidirectionalinheritancerefingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references" type="listjoincolumnbidirectionalinheritancerefedparententity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listjoincolumnbidirectionalinheritancerefedchildentity" >
      <xs:complexContent>
       <xs:extension base="listjoincolumnbidirectionalinheritancerefedparententity">
         <xs:sequence>
          <xs:element name="childdata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listrefcollentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="collection" type="strtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doublelistjoincolumnbidirectionalrefedentity1" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="owner" type="doublelistjoincolumnbidirectionalrefingentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setrefingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="setrefedentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setrefedembidentity" >
      <xs:sequence>
        <xs:element name="id" type="embid" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reffering" type="setrefingembidentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setrefedmulidentity" >
      <xs:sequence>
        <xs:element name="id1" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reffering" type="setrefingmulidentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setrefingembidentity" >
      <xs:sequence>
        <xs:element name="id" type="embid" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="setrefedembidentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setrefingmulidentity" >
      <xs:sequence>
        <xs:element name="id1" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="setrefedmulidentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listrefedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reffering" type="listrefingentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionrefedentity" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reffering" type="collectionrefingentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapownedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="referencing" type="mapowningentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listownedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="referencing" type="listowningentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listowningentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references" type="listownedentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setownedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="referencing" type="setowningentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listbiowning2entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references" type="listbiowning1entity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listbiowning1entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references" type="listbiowning2entity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapowningentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setowningentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references" type="setownedentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child1entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="child1data" type="xs:string" />
        <xs:element name="parents" type="parententity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="parentdata" type="xs:string" />
        <xs:element name="children1" type="child1entity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="children2" type="child2entity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child2entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="child2data" type="xs:string" />
        <xs:element name="parents" type="parententity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortedsetentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="sortedset" type="strtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="sortedmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="m2mtargetnotauditedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references" type="unversionedstrtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listunientity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references" type="strtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="m2mindexedlisttargetnotauditedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references" type="unversionedstrtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapunientity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setunientity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references" type="strtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wherejointableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="references1" type="intnoautoidtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="references2" type="intnoautoidtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
        <xs:element name="prop1" type="xs:string" />
        <xs:element name="prop2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositecustomtypeentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="component" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositetestusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parametrizedcustomtypeentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parametrizedtestusertype" >
      <xs:sequence>
        <xs:element name="types" type="xs:long" />
        <xs:element name="param1" type="xs:string" />
        <xs:element name="param2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targetnotauditedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="reference" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strtestentitycomparator" >
      <xs:sequence>
        <xs:element name="instance" type="strtestentitycomparator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumsetentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="enums1" type="xs:anyType" />
        <xs:element name="enums2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringlistentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="strings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringmapentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="strings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringsetentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="strings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strinttestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str1" type="xs:string" />
        <xs:element name="number" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultvaluecomponenttestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="comp1" type="defaultvaluecomponent1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentsettestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="comps" type="component1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultvaluecomponent1" >
      <xs:sequence>
        <xs:element name="str1" type="xs:string" />
        <xs:element name="comp2" type="defaultvaluecomponent2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componenttestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="comp1" type="component1" nillable="true" minOccurs="0" />
        <xs:element name="comp2" type="component2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component2" >
      <xs:sequence>
        <xs:element name="str5" type="xs:string" />
        <xs:element name="str6" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonecomponenttestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="comp1" type="manytoonecomponent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notauditedmanytoonecomponenttestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="comp1" type="notauditedmanytoonecomponent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notauditedmanytoonecomponent" >
      <xs:sequence>
        <xs:element name="entity" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonecomponent" >
      <xs:sequence>
        <xs:element name="entity" type="strtestentity" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanycomponenttestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="comp1" type="onetomanycomponent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanycomponent" >
      <xs:sequence>
        <xs:element name="entities" type="strtestentity" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component1" >
      <xs:sequence>
        <xs:element name="str1" type="xs:string" />
        <xs:element name="str2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultvaluecomponent2" >
      <xs:sequence>
        <xs:element name="str1" type="xs:string" />
        <xs:element name="str2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="intnoautoidtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="number" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inttestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="number" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customreventitycolumnmapping" >
      <xs:sequence>
        <xs:element name="customid" type="xs:long" />
        <xs:element name="customtimestamp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customdatereventity" >
      <xs:sequence>
        <xs:element name="customid" type="xs:long" />
        <xs:element name="timestamp" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customreventity" >
      <xs:sequence>
        <xs:element name="customid" type="xs:long" />
        <xs:element name="customtimestamp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custompropertyaccessreventity" >
      <xs:sequence>
        <xs:element name="customid" type="xs:long" />
        <xs:element name="customtimestamp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customdatareventity" >
      <xs:sequence>
        <xs:element name="customid" type="xs:long" />
        <xs:element name="customtimestamp" type="xs:long" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primitivetestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="number2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dateidtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:dateTime" />
        <xs:element name="str1" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dateembid" >
      <xs:sequence>
        <xs:element name="x" type="xs:dateTime" />
        <xs:element name="y" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embidtestentity" >
      <xs:sequence>
        <xs:element name="id" type="embid" nillable="true" minOccurs="0" />
        <xs:element name="str1" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonenotauditedembid" >
      <xs:sequence>
        <xs:element name="id" type="unversionedstrtestentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositedateidtestentity" >
      <xs:sequence>
        <xs:element name="id" type="dateembid" nillable="true" minOccurs="0" />
        <xs:element name="str1" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mulid" >
      <xs:sequence>
        <xs:element name="id1" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customenumusertype" >
      <xs:sequence>
        <xs:element name="sql_types" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embidwithcustomtypetestentity" >
      <xs:sequence>
        <xs:element name="id" type="embidwithcustomtype" nillable="true" minOccurs="0" />
        <xs:element name="str1" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embidwithcustomtype" >
      <xs:sequence>
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="GeneratedName" type="customenum" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embid" >
      <xs:sequence>
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customenum" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mulidtestentity" >
      <xs:sequence>
        <xs:element name="id1" type="xs:anyType" />
        <xs:element name="id2" type="xs:anyType" />
        <xs:element name="str1" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytooneidnotauditedtestentity" >
      <xs:sequence>
        <xs:element name="id" type="manytoonenotauditedembid" nillable="true" minOccurs="0" />
        <xs:element name="data" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unversionedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="data1" type="xs:string" />
        <xs:element name="data2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unversionedstrtestentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="str" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractonesessiontest" >
      <xs:sequence>
        <xs:element name="config" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="auditreader" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtools" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstractentitytest">
         <xs:sequence>
          <xs:element name="starttime" type="xs:long" />
          <xs:element name="runtotal" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="complexinsertperformance" >
      <xs:complexContent>
       <xs:extension base="abstractperformancetest">
         <xs:sequence>
          <xs:element name="number_inserts" type="xs:long" />
          <xs:element name="idcounter" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rootentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data1" type="xs:string" />
        <xs:element name="data2" type="xs:string" />
        <xs:element name="number1" type="xs:anyType" />
        <xs:element name="number2" type="xs:anyType" />
        <xs:element name="1" type="xs:dateTime" />
        <xs:element name="child1" type="childentity1" nillable="true" minOccurs="0" />
        <xs:element name="child2" type="childentity1" nillable="true" minOccurs="0" />
        <xs:element name="child3" type="childentity1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childentity1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="child1" type="childentity2" nillable="true" minOccurs="0" />
        <xs:element name="child2" type="childentity2" nillable="true" minOccurs="0" />
        <xs:element name="data1" type="xs:string" />
        <xs:element name="data2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childentity2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="number" type="xs:anyType" />
        <xs:element name="strings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="insertsperformance" >
      <xs:complexContent>
       <xs:extension base="abstractperformancetest">
         <xs:sequence>
          <xs:element name="number_inserts" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertsonetransactionperformance" >
      <xs:complexContent>
       <xs:extension base="abstractperformancetest">
         <xs:sequence>
          <xs:element name="number_inserts" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updatesperformance" >
      <xs:complexContent>
       <xs:extension base="abstractperformancetest">
         <xs:sequence>
          <xs:element name="number_updates" type="xs:long" />
          <xs:element name="number_entities" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="ids" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="allperformance" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hsqltest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="surname" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="streetname" type="xs:string" />
        <xs:element name="housenumber" type="xs:anyType" />
        <xs:element name="flatnumber" type="xs:anyType" />
        <xs:element name="persons" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
</xs:schema> 