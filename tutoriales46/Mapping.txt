ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> WebsiteUser =>=>=> RelationalSchema.Table>> websiteuser;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Class>> Library =>=>=> RelationalSchema.Table>> library;
ClassDiagram.Class>> Subject =>=>=> RelationalSchema.Table>> subject;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Attribut>> User.id:long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> WebsiteUser.id:long =>=>=> RelationalSchema.Column>> websiteuser.id PRIMARY KEY;
ClassDiagram.Attribut>> WebsiteUser.name:String =>=>=> RelationalSchema.Column>> websiteuser.name;
ClassDiagram.Attribut>> WebsiteUser.email:String =>=>=> RelationalSchema.Column>> websiteuser.email;
ClassDiagram.Attribut>> Address.id:long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.location:String =>=>=> RelationalSchema.Column>> address.location;
ClassDiagram.Attribut>> Author.id:long =>=>=> RelationalSchema.Column>> author.id PRIMARY KEY;
ClassDiagram.Attribut>> Author.name:String =>=>=> RelationalSchema.Column>> author.name;
ClassDiagram.Attribut>> Library.id:long =>=>=> RelationalSchema.Column>> library.id PRIMARY KEY;
ClassDiagram.Attribut>> Library.name:String =>=>=> RelationalSchema.Column>> library.name;
ClassDiagram.Attribut>> Subject.id:long =>=>=> RelationalSchema.Column>> subject.id PRIMARY KEY;
ClassDiagram.Attribut>> Subject.name:String =>=>=> RelationalSchema.Column>> subject.name;
ClassDiagram.Attribut>> Book.id:long =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.title:String =>=>=> RelationalSchema.Column>> book.title;
ClassDiagram.Attribut>> Book.isbn:String =>=>=> RelationalSchema.Column>> book.isbn;
One-To-One relationship between ClassDiagram.Class>>Address  to ClassDiagram.Class>>library represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Author  and ClassDiagram.Class>>list<book>: book_author(book_id:Author [PK] #FK to Author,author_id:list<book> [PK] #FK to list<book>);
One-To-One relationship between ClassDiagram.Class>>Library  to ClassDiagram.Class>>address represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Library  to ClassDiagram.Class>>List<Book>;
Many-To-One relationship from ClassDiagram.Class>>Book  to ClassDiagram.Class>>library represented by ClassDiagram.Atrribute>>GeneratedName;
