<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="hibernatequery" >
      <xs:complexContent>
       <xs:extension base="query">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateentitymanager" >
      <xs:complexContent>
       <xs:extension base="entitymanager">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interceptfieldclassfiletransformer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunittransactiontypehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceutilhelper" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pessimisticnumberparser" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachemodehelper" >
      <xs:sequence>
        <xs:element name="default_legacy_mode" type="xs:anyType" />
        <xs:element name="default_store_mode" type="xs:anyType" />
        <xs:element name="default_retrieve_mode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockmodetypehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loghelper" >
      <xs:sequence>
        <xs:element name="log" type="entitymanagermessagelogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerimpl" >
      <xs:complexContent>
       <xs:extension base="abstractentitymanagerimpl">
         <xs:sequence>
          <xs:element name="log" type="entitymanagermessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="open" type="xs:anyType" />
          <xs:element name="discardonclose" type="xs:anyType" />
          <xs:element name="sessioninterceptor" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymanagermessagelogger" >
      <xs:complexContent>
       <xs:extension base="coremessagelogger">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hemlogging" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationsourcefrommetadata" >
      <xs:sequence>
        <xs:element name="metadata" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="createanddropschemas" type="xs:anyType" />
        <xs:element name="creation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scripttargetoutputtourl" >
      <xs:complexContent>
       <xs:extension base="scripttargetoutputtowriter">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generationtarget" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationsource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scripttargetoutput" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scripttargetoutputtofile" >
      <xs:complexContent>
       <xs:extension base="scripttargetoutputtowriter">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generationtargettodatabase" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jdbcconnectioncontext" nillable="true" minOccurs="0" />
        <xs:element name="databaseaction" type="schemagenaction" nillable="true" minOccurs="0" />
        <xs:element name="jdbc" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scripttargetoutputtowriter" >
      <xs:sequence>
        <xs:element name="newline" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scriptsourceinputfromurl" >
      <xs:complexContent>
       <xs:extension base="scriptsourceinputfromreader">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpaschemagenerator" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scriptsourceinputfromfile" >
      <xs:complexContent>
       <xs:extension base="scriptsourceinputfromreader">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="scriptsourceinputfromreader" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcconnectioncontext" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="jdbc" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationtargettoscript" >
      <xs:sequence>
        <xs:element name="createscripttarget" type="scripttargetoutput" nillable="true" minOccurs="0" />
        <xs:element name="dropscripttarget" type="scripttargetoutput" nillable="true" minOccurs="0" />
        <xs:element name="scriptsaction" type="schemagenaction" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scriptsourceinput" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationsourcefromscript" >
      <xs:sequence>
        <xs:element name="inputsource" type="scriptsourceinput" nillable="true" minOccurs="0" />
        <xs:element name="scriptcommandextractor" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storedprocedurequeryimpl" >
      <xs:complexContent>
       <xs:extension base="basequeryimpl">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="procedureresult" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryimpl" >
      <xs:complexContent>
       <xs:extension base="abstractqueryimpl<x>">
         <xs:sequence>
          <xs:element name="log" type="entitymanagermessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="query" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributeimpl" >
      <xs:complexContent>
       <xs:extension base="pluralattributeimpl<x,set<e>,e>">
         <xs:sequence>
          <xs:element name="elementtype" type="e" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metadatacontext" >
      <xs:sequence>
        <xs:element name="log" type="entitymanagermessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="sessionfactory" type="xs:anyType" />
        <xs:element name="knownmappedsuperclasses" type="xs:anyType" />
        <xs:element name="ignoreunsupported" type="xs:anyType" />
        <xs:element name="GeneratedName" type="attributefactory" nillable="true" minOccurs="0" />
        <xs:element name="entitytypes" type="xs:anyType" />
        <xs:element name="entitytypesbyentityname" type="xs:anyType" />
        <xs:element name="entitytypesbypersistentclass" type="xs:anyType" />
        <xs:element name="embeddables" type="xs:anyType" />
        <xs:element name="mappedsuperclassbymappedsuperclassmapping" type="xs:anyType" />
        <xs:element name="//thislistcontainsmappedsuperclassandentitytypesorderedbysuperclassfirstorderedmappings" type="xs:anyType" />
        <xs:element name="/***stackofpersistentclassbeingprocess.lastinthelististhehighestinthestack.*/stackofpersistentclassesbeingprocessed" type="xs:anyType" />
        <xs:element name="mappedsuperclasstypetopersistentclass" type="xs:anyType" />
        <xs:element name="processedmetamodelclasses" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singularattributeimpl" >
      <xs:complexContent>
       <xs:extension base="singularattributeimpl<x,y>">
         <xs:sequence>
          <xs:element name="isidentifier" type="xs:anyType" />
          <xs:element name="isversion" type="xs:anyType" />
          <xs:element name="isoptional" type="xs:anyType" />
          <xs:element name="attributetype" type="y" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitytypeimpl" >
      <xs:complexContent>
       <xs:extension base="abstractidentifiabletype<x>">
         <xs:sequence>
          <xs:element name="jpaentityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attributeimplementor" >
      <xs:complexContent>
       <xs:extension base="attribute<x,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperclasstypeimpl" >
      <xs:complexContent>
       <xs:extension base="abstractidentifiabletype<x>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="helper" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="sessionfactory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributefactory" >
      <xs:complexContent>
       <xs:extension base="attributemetadata<x,">
         <xs:sequence>
          <xs:element name="log" type="entitymanagermessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="context" type="metadatacontext" nillable="true" minOccurs="0" />
          <xs:element name="embedded" type="xs:anyType" />
          <xs:element name="virtualidentifier" type="xs:anyType" />
          <xs:element name="/***a{@linkmember}resolverfornormalattributes.*/normal" type="xs:anyType" />
          <xs:element name="identifier" type="xs:anyType" />
          <xs:element name="version" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractidentifiabletype" >
      <xs:complexContent>
       <xs:extension base="abstractmanagedtype.builder<x>">
         <xs:sequence>
          <xs:element name="hasidentifierproperty" type="xs:anyType" />
          <xs:element name="hasidclass" type="xs:anyType" />
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="idclassattributes" type="xs:anyType" />
          <xs:element name="isversioned" type="xs:anyType" />
          <xs:element name="version" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddabletypeimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="parent" type="abstractmanagedtype" nillable="true" minOccurs="0" />
          <xs:element name="hibernatetype" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttype" >
      <xs:sequence>
        <xs:element name="javatype" type="x" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="typename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractmanagedtype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="supertype" type="xs:anyType" />
          <xs:element name="declaredattributes" type="xs:anyType" />
          <xs:element name="declaredsingularattributes" type="xs:anyType" />
          <xs:element name="declaredpluralattributes" type="xs:anyType" />
          <xs:element name="locked" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metamodelimpl" >
      <xs:sequence>
        <xs:element name="log" type="entitymanagermessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="entities" type="xs:anyType" />
        <xs:element name="embeddables" type="xs:anyType" />
        <xs:element name="mappedsuperclasstypemap" type="xs:anyType" />
        <xs:element name="entitytypesbyentityname" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractattribute" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="javatype" type="y" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="declaringtype" type="x" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="transient" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapmember" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basictypeimpl" >
      <xs:sequence>
        <xs:element name="clazz" type="x" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerfactoryregistry" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="instance" type="entitymanagerfactoryregistry" nillable="true" minOccurs="0" />
        <xs:element name="entitymanagerfactorymap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerfactoryimpl" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="uuid_generator" type="xs:anyType" />
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="transientsessionfactory" type="xs:anyType" />
        <xs:element name="transienttransactiontype" type="xs:anyType" />
        <xs:element name="transientdiscardonclose" type="xs:anyType" />
        <xs:element name="transientsessioninterceptor" type="xs:anyType" />
        <xs:element name="transientcriteriabuilder" type="criteriabuilderimpl" nillable="true" minOccurs="0" />
        <xs:element name="transientmetamodel" type="metamodelimpl" nillable="true" minOccurs="0" />
        <xs:element name="transientutil" type="xs:anyType" />
        <xs:element name="properties" type="xs:anyType" />
        <xs:element name="entitymanagerfactoryname" type="xs:string" />
        <xs:element name="transientcache" type="xs:anyType" />
        <xs:element name="entitygraphs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enhancingclasstransformerimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionimpl" >
      <xs:sequence>
        <xs:element name="entitymanager" type="hibernateentitymanagerimplementor" nillable="true" minOccurs="0" />
        <xs:element name="tx" type="xs:anyType" />
        <xs:element name="rollbackonly" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strategyregistrationproviderlist" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="providerchecker" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="hibernate_provider_names" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="settings" >
      <xs:complexContent>
       <xs:extension base="interceptor>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bootstrap" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typecontributorlist" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerfactorybuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitdescriptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integratorprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistencexmlparser" >
      <xs:sequence>
        <xs:element name="log" type="entitymanagermessagelogger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="defaulttransactiontype" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="v21" type="xs:anyType" />
        <xs:element name="v2" type="xs:anyType" />
        <xs:element name="v1" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="settingsimpl" >
      <xs:complexContent>
       <xs:extension base="interceptor>">
         <xs:sequence>
          <xs:element name="transactiontype" type="xs:anyType" />
          <xs:element name="releaseresourcesoncloseenabled" type="xs:anyType" />
          <xs:element name="sessioninterceptorclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="helper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardjpascanenvironmentimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="persistenceunitdescriptor" nillable="true" minOccurs="0" />
        <xs:element name="explicitlylistedclassnames" type="xs:anyType" />
        <xs:element name="explicitlylistedmappingfiles" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitinfodescriptor" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parsedpersistencexmldescriptor" >
      <xs:sequence>
        <xs:element name="persistenceunitroot" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nonjtadatasource" type="xs:anyType" />
        <xs:element name="jtadatasource" type="xs:anyType" />
        <xs:element name="providerclassname" type="xs:string" />
        <xs:element name="transactiontype" type="xs:anyType" />
        <xs:element name="usequotedidentifiers" type="xs:anyType" />
        <xs:element name="excludeunlistedclasses" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="classes" type="xs:anyType" />
        <xs:element name="mappingfiles" type="xs:anyType" />
        <xs:element name="jarfileurls" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerfactorybuilderimpl" >
      <xs:complexContent>
       <xs:extension base="interceptor>">
         <xs:sequence>
          <xs:element name="log" type="entitymanagermessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//newsettings/***namesa{@linkintegratorprovider}*/integrator_provider" type="xs:string" />
          <xs:element name="/***namesa{@linkstrategyregistrationproviderlist}*/strategy_registration_providers" type="xs:string" />
          <xs:element name="/***namesa{@linktypecontributorlist}*/type_contributors" type="xs:string" />
          <xs:element name="/***namesajandex{@linkindex}instancetouse.*/jandex_index" type="xs:string" />
          <xs:element name="persistenceunit" type="persistenceunitdescriptor" nillable="true" minOccurs="0" />
          <xs:element name="//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//thingsbuiltinfirstphase,neededforsecondphase..configurationvalues" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="metamodelbuilder" type="xs:anyType" />
          <xs:element name="settings" type="settingsimpl" nillable="true" minOccurs="0" />
          <xs:element name="//phase2concerns~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~validatorfactory" type="xs:anyType" />
          <xs:element name="cdibeanmanager" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="metadata" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitygraphimpl" >
      <xs:complexContent>
       <xs:extension base="abstractgraphnode<t>">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="entitytype" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subgraphimpl" >
      <xs:complexContent>
       <xs:extension base="abstractgraphnode<t>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="subclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractgraphnode" >
      <xs:complexContent>
       <xs:extension base="x>">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="entitymanagerfactory" type="entitymanagerfactoryimpl" nillable="true" minOccurs="0" />
          <xs:element name="mutable" type="xs:anyType" />
          <xs:element name="attributenodemap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attributenodeimpl" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
          <xs:element name="entitymanagerfactory" type="entitymanagerfactoryimpl" nillable="true" minOccurs="0" />
          <xs:element name="attribute" type="xs:anyType" />
          <xs:element name="subgraphmap" type="xs:anyType" />
          <xs:element name="keysubgraphmap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterbind" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nulltypebindableparameterregistration" >
      <xs:complexContent>
       <xs:extension base="parameterregistration<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractqueryimpl" >
      <xs:complexContent>
       <xs:extension base="basequeryimpl">
         <xs:sequence>
          <xs:element name="jpalockmode" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterregistration" >
      <xs:complexContent>
       <xs:extension base="parameter<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateentitymanagerimplementor" >
      <xs:complexContent>
       <xs:extension base="hibernateentitymanager,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basequeryimpl" >
      <xs:complexContent>
       <xs:extension base="enum<t>>">
         <xs:sequence>
          <xs:element name="log" type="entitymanagermessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="entitymanager" type="hibernateentitymanagerimplementor" nillable="true" minOccurs="0" />
          <xs:element name="firstresult" type="xs:long" />
          <xs:element name="maxresults" type="xs:long" />
          <xs:element name="hints" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="//flushmode~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~jpaflushmode" type="xs:anyType" />
          <xs:element name="//parameters~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~parameterregistrations" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentitymanagerimpl" >
      <xs:complexContent>
       <xs:extension base="basictransformeradapter">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="log" type="entitymanagermessagelogger" nillable="true" minOccurs="0" />
          <xs:element name="entity_manager_specific_properties" type="xs:anyType" />
          <xs:element name="entitymanagerfactory" type="entitymanagerfactoryimpl" nillable="true" minOccurs="0" />
          <xs:element name="transienttx" type="transactionimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="transactiontype" type="xs:anyType" />
          <xs:element name="properties" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="criteriacompiler" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateentitymanagerfactoryaware" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiergeneratorstrategyprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateentitymanagerfactory" >
      <xs:complexContent>
       <xs:extension base="entitymanagerfactory,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryhints" >
      <xs:sequence>
        <xs:element name="/***thehintkeyforspecifyingaquerytimeoutperhibernateo/rm,whichdefinesthetimeoutinseconds.**use{@link#spec_hint_timeout}instead*/hint_timeout" type="xs:string" />
        <xs:element name="/***thehintkeyforspecifyingaquerytimeoutperjpa,whichdefinesthetimeoutinmilliseconds*/spec_hint_timeout" type="xs:string" />
        <xs:element name="/***thehintkeyforspecifyingacommentwhichistobeembeddedintothesqlsenttothedatabase.*/hint_comment" type="xs:string" />
        <xs:element name="/***thehintkeyforspecifyingajdbcfetchsize,usedwhenexecutingtheresultingsql.*/hint_fetch_size" type="xs:string" />
        <xs:element name="/***thehintkeyforspecifyingwhetherthequeryresultsshouldbecachedforthenext(cached)executionofthe*"samequery".*/hint_cacheable" type="xs:string" />
        <xs:element name="/***thehintkeyforspecifyingthenameofthecacheregion(withinhibernate'squeryresultcacheregion)*touseforstoringthequeryresults.*/hint_cache_region" type="xs:string" />
        <xs:element name="/***thehintkeyforspecifyingthatobjectsloadedintothepersistencecontextasaresultofthisqueryexecution*shouldbeassociatedwiththepersistencecontextasread-only.*/hint_readonly" type="xs:string" />
        <xs:element name="/***thehintkeyforspecifyingthecachemode({@linkorg.hibernate.cachemode})tobeineffectforthe*executionofthehintedquery.*/hint_cache_mode" type="xs:string" />
        <xs:element name="/***thehintkeyforspecifyingtheflushmode({@linkorg.hibernate.flushmode})tobeineffectforthe*executionofthehintedquery.*/hint_flush_mode" type="xs:string" />
        <xs:element name="hint_native_lockmode" type="xs:string" />
        <xs:element name="/***hintprovidinga"fetchgraph"entitygraph.attributesexplicitlyspecifiedasattributenodesaretreatedas*fetchtype.eager(viajoinfetchorsubsequentselect).**note:currently,attributesthatarenotspecifiedaretreatedasfetchtype.lazyorfetchtype.eagerdepending*ontheattribute'sdefinitioninmetadata,ratherthanforcingfetchtype.lazy.*/hint_fetchgraph" type="xs:string" />
        <xs:element name="/***hintprovidinga"loadgraph"entitygraph.attributesexplicitlyspecifiedasattributenodesaretreatedas*fetchtype.eager(viajoinfetchorsubsequentselect).attributesthatarenotspecifiedaretreatedas*fetchtype.lazyorfetchtype.eagerdependingontheattribute'sdefinitioninmetadata*/hint_loadgraph" type="xs:string" />
        <xs:element name="hints" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemagensource" >
      <xs:sequence>
        <xs:element name="externalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedparametervalue" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setjoinimplementor" >
      <xs:complexContent>
       <xs:extension base="joinimplementor<z,x>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querystructure" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
          <xs:element name="owner" type="xs:anyType" />
          <xs:element name="criteriabuilder" type="criteriabuilderimpl" nillable="true" minOccurs="0" />
          <xs:element name="issubquery" type="xs:anyType" />
          <xs:element name="distinct" type="xs:anyType" />
          <xs:element name="selection" type="xs:anyType" />
          <xs:element name="roots" type="xs:anyType" />
          <xs:element name="correlationroots" type="fromimplementor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="restriction" type="xs:anyType" />
          <xs:element name="groupings" type="xs:anyType" />
          <xs:element name="having" type="xs:anyType" />
          <xs:element name="subqueries" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderimpl" >
      <xs:sequence>
        <xs:element name="expression" type="xs:anyType" />
        <xs:element name="ascending" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionjoinimplementor" >
      <xs:complexContent>
       <xs:extension base="joinimplementor<z,x>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parametercontainer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listjoinimplementor" >
      <xs:complexContent>
       <xs:extension base="joinimplementor<z,x>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriadeleteimpl" >
      <xs:complexContent>
       <xs:extension base="abstractmanipulationcriteriaquery<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tupleelementimplementor" >
      <xs:complexContent>
       <xs:extension base="tupleelement<x>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expressionimplementor" >
      <xs:complexContent>
       <xs:extension base="selectionimplementor<t>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compoundselectionimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="isconstructor" type="xs:anyType" />
          <xs:element name="selectionitems" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitytypeexpression" >
      <xs:complexContent>
       <xs:extension base="expressionimpl<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binaryoperatorexpression" >
      <xs:complexContent>
       <xs:extension base="expression<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterexpressionimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="position" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="delegatedexpressionimpl" >
      <xs:complexContent>
       <xs:extension base="expressionimpl<t>">
         <xs:sequence>
          <xs:element name="wrapped" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="caseliteralexpression" >
      <xs:complexContent>
       <xs:extension base="literalexpression<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="searchedcaseexpression" >
      <xs:complexContent>
       <xs:extension base="r>">
         <xs:sequence>
          <xs:element name="//overridesthejavatypekeptontuple-implsothatwecanadjustitjavatype" type="xs:anyType" />
          <xs:element name="whenclauses" type="xs:anyType" />
          <xs:element name="otherwiseresult" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplecaseexpression" >
      <xs:complexContent>
       <xs:extension base="c>">
         <xs:sequence>
          <xs:element name="javatype" type="xs:anyType" />
          <xs:element name="expression" type="xs:anyType" />
          <xs:element name="whenclauses" type="xs:anyType" />
          <xs:element name="otherwiseresult" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttupleelement" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="originaljavatype" type="xs:anyType" />
          <xs:element name="javatype" type="x" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="alias" type="xs:string" />
          <xs:element name="valuehandler" type="x" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aggregationfunction" >
      <xs:complexContent>
       <xs:extension base="aggregationfunction<long>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="currenttimefunction" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicfunctionexpression" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="functionname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqrtfunction" >
      <xs:complexContent>
       <xs:extension base="number>">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterizedfunctionexpression" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="standard_jpa_function_names" type="xs:anyType" />
          <xs:element name="argumentexpressions" type="xs:anyType" />
          <xs:element name="isstandardjpafunction" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="functionexpression" >
      <xs:complexContent>
       <xs:extension base="expression<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="currenttimestampfunction" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lengthfunction" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="substringfunction" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="value" type="xs:anyType" />
          <xs:element name="start" type="xs:anyType" />
          <xs:element name="length" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lowerfunction" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="locatefunction" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="pattern" type="xs:anyType" />
          <xs:element name="string" type="xs:anyType" />
          <xs:element name="start" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="trimfunction" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="default_" type="xs:anyType" />
          <xs:element name="default_trim_" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="trimcharacter" type="xs:anyType" />
          <xs:element name="trimsource" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="absfunction" >
      <xs:complexContent>
       <xs:extension base="number>">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="castfunction" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="cast_name" type="xs:string" />
          <xs:element name="castsource" type="y" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="currentdatefunction" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="upperfunction" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="literalexpression" >
      <xs:complexContent>
       <xs:extension base="expressionimpl<t>">
         <xs:sequence>
          <xs:element name="literal" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="concatexpression" >
      <xs:complexContent>
       <xs:extension base="expressionimpl<string>">
         <xs:sequence>
          <xs:element name="string1" type="xs:anyType" />
          <xs:element name="string2" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectionimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="coalesceexpression" >
      <xs:complexContent>
       <xs:extension base="expressionimpl<t>">
         <xs:sequence>
          <xs:element name="expressions" type="xs:anyType" />
          <xs:element name="javatype" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expressionimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subquerycomparisonmodifierexpression" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="subquery" type="y" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullliteralexpression" >
      <xs:complexContent>
       <xs:extension base="expressionimpl<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sizeofcollectionexpression" >
      <xs:complexContent>
       <xs:extension base="collection>">
         <xs:sequence>
          <xs:element name="collectionpath" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listindexexpression" >
      <xs:complexContent>
       <xs:extension base="expressionimpl<integer>">
         <xs:sequence>
          <xs:element name="origin" type="pathimplementor" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unaryoperatorexpression" >
      <xs:complexContent>
       <xs:extension base="expression<t>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullifexpression" >
      <xs:complexContent>
       <xs:extension base="expressionimpl<t>">
         <xs:sequence>
          <xs:element name="primaryexpression" type="xs:anyType" />
          <xs:element name="secondaryexpression" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapentryexpression" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="origin" type="pathimplementor" nillable="true" minOccurs="0" />
          <xs:element name="attribute" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unaryarithmeticoperation" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="operand" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binaryarithmeticoperation" >
      <xs:complexContent>
       <xs:extension base="number>">
         <xs:sequence>
          <xs:element name="operator" type="xs:anyType" />
          <xs:element name="rhs" type="xs:anyType" />
          <xs:element name="lhs" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pathtypeexpression" >
      <xs:complexContent>
       <xs:extension base="expressionimpl<t>">
         <xs:sequence>
          <xs:element name="pathimpl" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="renderable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valuehandlerfactory" >
      <xs:complexContent>
       <xs:extension base="basevaluehandler<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pathsource" >
      <xs:complexContent>
       <xs:extension base="path<x>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractjoinimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="joinattribute" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="suppliedjoincondition" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributepath" >
      <xs:complexContent>
       <xs:extension base="abstractpathimpl<x>">
         <xs:sequence>
          <xs:element name="attribute" type="xs:anyType" />
          <xs:element name="persister" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractfromimpl" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
          <xs:element name="default_join_type" type="xs:anyType" />
          <xs:element name="joins" type="xs:anyType" />
          <xs:element name="fetches" type="xs:anyType" />
          <xs:element name="correlationparent" type="xs:anyType" />
          <xs:element name="joinscope" type="x" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rootimpl" >
      <xs:complexContent>
       <xs:extension base="abstractfromimpl<x,x>">
         <xs:sequence>
          <xs:element name="entitytype" type="x" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="allowjoins" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionattributejoin" >
      <xs:complexContent>
       <xs:extension base="e>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="setattributejoin" >
      <xs:complexContent>
       <xs:extension base="e>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeyhelpers" >
      <xs:complexContent>
       <xs:extension base="k>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pluralattributejoinsupport" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapattributejoin" >
      <xs:complexContent>
       <xs:extension base="v>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singularattributepath" >
      <xs:complexContent>
       <xs:extension base="abstractpathimpl<x>">
         <xs:sequence>
          <xs:element name="attribute" type="xs:anyType" />
          <xs:element name="managedtype" type="x" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpathimpl" >
      <xs:complexContent>
       <xs:extension base="x>>">
         <xs:sequence>
          <xs:element name="" type="pathsource" nillable="true" minOccurs="0" />
          <xs:element name="typeexpression" type="xs:anyType" />
          <xs:element name="attributepathregistry" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listattributejoin" >
      <xs:complexContent>
       <xs:extension base="e>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singularattributejoin" >
      <xs:complexContent>
       <xs:extension base="abstractjoinimpl<o,x>">
         <xs:sequence>
          <xs:element name="model" type="x" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="predicateimplementor" >
      <xs:complexContent>
       <xs:extension base="predicate,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inpredicate" >
      <xs:complexContent>
       <xs:extension base="t>">
         <xs:sequence>
          <xs:element name="expression" type="xs:anyType" />
          <xs:element name="values" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="comparisonpredicate" >
      <xs:complexContent>
       <xs:extension base="number>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="lefthandside" type="xs:anyType" />
          <xs:element name="righthandside" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitnumericexpressiontypedeterminer" >
      <xs:complexContent>
       <xs:extension base="number>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="memberofpredicate" >
      <xs:complexContent>
       <xs:extension base="collection<e>>">
         <xs:sequence>
          <xs:element name="elementexpression" type="e" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="collectionpath" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="isemptypredicate" >
      <xs:complexContent>
       <xs:extension base="collection>">
         <xs:sequence>
          <xs:element name="collectionpath" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="betweenpredicate" >
      <xs:complexContent>
       <xs:extension base="y>">
         <xs:sequence>
          <xs:element name="expression" type="xs:anyType" />
          <xs:element name="lowerbound" type="xs:anyType" />
          <xs:element name="upperbound" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="negatedpredicatewrapper" >
      <xs:complexContent>
       <xs:extension base="expressionimpl<boolean>">
         <xs:sequence>
          <xs:element name="predicate" type="predicateimplementor" nillable="true" minOccurs="0" />
          <xs:element name="negatedoperator" type="xs:anyType" />
          <xs:element name="negatedexpressions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="booleanassertionpredicate" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="expression" type="xs:anyType" />
          <xs:element name="assertedvalue" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsimplepredicate" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="no_expressions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="likepredicate" >
      <xs:complexContent>
       <xs:extension base="abstractsimplepredicate">
         <xs:sequence>
          <xs:element name="matchexpression" type="xs:anyType" />
          <xs:element name="pattern" type="xs:anyType" />
          <xs:element name="escapecharacter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="existspredicate" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="subquery" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpredicateimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicittruthvaluecheck" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="//todo:giventhatjpasupportsonlytrueandfalse,canthisbehandledjustwithnegation?booleanexpression" type="xs:anyType" />
          <xs:element name="" type="truthvalue" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="booleanexpressionpredicate" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="expression" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullnesspredicate" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="operand" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compoundpredicate" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="operator" type="xs:anyType" />
          <xs:element name="expressions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="booleanstaticassertionpredicate" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="assertedvalue" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="truthvalue" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interpretedparametermetadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="implicitparameterbinding" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compilablecriteria" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="renderingcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaquerytypequeryadapter" >
      <xs:sequence>
        <xs:element name="entitymanager" type="hibernateentitymanagerimplementor" nillable="true" minOccurs="0" />
        <xs:element name="jpqlquery" type="x" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="explicitparameterinfomap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitparameterinfo" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="position" type="xs:anyType" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriacompiler" >
      <xs:sequence>
        <xs:element name="entitymanager" type="hibernateentitymanagerimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriainterpretation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractmanipulationcriteriaquery" >
      <xs:sequence>
        <xs:element name="criteriabuilder" type="criteriabuilderimpl" nillable="true" minOccurs="0" />
        <xs:element name="root" type="xs:anyType" />
        <xs:element name="restriction" type="xs:anyType" />
        <xs:element name="subqueries" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fromimplementor" >
      <xs:complexContent>
       <xs:extension base="pathimplementor<x>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriabuilderimpl" >
      <xs:complexContent>
       <xs:extension base="comparable<?">
         <xs:sequence>
          <xs:element name="entitymanagerfactory" type="entitymanagerfactoryimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinimplementor" >
      <xs:complexContent>
       <xs:extension base="join<z,x>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractnode" >
      <xs:sequence>
        <xs:element name="criteriabuilder" type="criteriabuilderimpl" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectionimplementor" >
      <xs:complexContent>
       <xs:extension base="tupleelementimplementor<x>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriaqueryimpl" >
      <xs:complexContent>
       <xs:extension base="abstractnode">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="returntype" type="xs:anyType" />
          <xs:element name="querystructure" type="xs:anyType" />
          <xs:element name="orderspecs" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapjoinimplementor" >
      <xs:complexContent>
       <xs:extension base="joinimplementor<z,v>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterregistry" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaupdateimpl" >
      <xs:complexContent>
       <xs:extension base="abstractmanipulationcriteriaquery<t>">
         <xs:sequence>
          <xs:element name="assignments" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriasubqueryimpl" >
      <xs:complexContent>
       <xs:extension base="expressionimpl<t>">
         <xs:sequence>
          <xs:element name="parent" type="xs:anyType" />
          <xs:element name="querystructure" type="xs:anyType" />
          <xs:element name="wrappedselection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicpathusageexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="attribute" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="illegaldereferenceexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="" type="pathsource" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pathimplementor" >
      <xs:complexContent>
       <xs:extension base="expressionimplementor<x>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpaintegrator" >
      <xs:complexContent>
       <xs:extension base="cascadestyles.basecascadestyle">
         <xs:sequence>
          <xs:element name="jpa" type="listenerfactory" nillable="true" minOccurs="0" />
          <xs:element name="" type="callbackprocessor" nillable="true" minOccurs="0" />
          <xs:element name="callbackregistry" type="callbackregistryimpl" nillable="true" minOccurs="0" />
          <xs:element name="jpa_duplication_strategy" type="xs:anyType" />
          <xs:element name="cdi_listener_factory_class" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="callback" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="callbackregistry" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listenerfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardlistenerfactory" >
      <xs:sequence>
        <xs:element name="listenerinstances" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="callbackprocessor" >
      <xs:sequence>
        <xs:element name="callback_annotation_es" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanmanagerlistenerfactory" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="listeners" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="callbackregistryconsumer" >
      <xs:complexContent>
       <xs:extension base="hibernateentitymanagereventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitycallback" >
      <xs:sequence>
        <xs:element name="callback" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="legacycallbackprocessor" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="jpa" type="listenerfactory" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="useannotationannotatedbylistener" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="callbackregistryimpl" >
      <xs:sequence>
        <xs:element name="precreates" type="xs:anyType" />
        <xs:element name="postcreates" type="xs:anyType" />
        <xs:element name="preremoves" type="xs:anyType" />
        <xs:element name="postremoves" type="xs:anyType" />
        <xs:element name="preupdates" type="xs:anyType" />
        <xs:element name="postupdates" type="xs:anyType" />
        <xs:element name="postloads" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listenercallback" >
      <xs:sequence>
        <xs:element name="callback" type="xs:anyType" />
        <xs:element name="listenerinstance" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpadeleteeventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultdeleteeventlistener">
         <xs:sequence>
          <xs:element name="" type="callbackregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpapersisteventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultpersisteventlistener">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="" type="callbackregistry" nillable="true" minOccurs="0" />
          <xs:element name="persist_skiplazy" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpapostdeleteeventlistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="callbackregistry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpamergeeventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultmergeeventlistener">
         <xs:sequence>
          <xs:element name="" type="callbackregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpasaveeventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultsaveeventlistener">
         <xs:sequence>
          <xs:element name="" type="callbackregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpapostupdateeventlistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="callbackregistry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaautoflusheventlistener" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpaflusheventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultflusheventlistener">
         <xs:sequence>
          <xs:element name="instance" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpapostloadeventlistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="callbackregistry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaflushentityeventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultflushentityeventlistener">
         <xs:sequence>
          <xs:element name="" type="callbackregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpapersistonflusheventlistener" >
      <xs:complexContent>
       <xs:extension base="jpapersisteventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpasaveorupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultsaveorupdateeventlistener">
         <xs:sequence>
          <xs:element name="" type="callbackregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateentitymanagereventlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpapostinserteventlistener" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="callbackregistry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatepersistenceprovider" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="cache" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemagenaction" >
      <xs:sequence>
        <xs:element name="externalname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="availablesettings" >
      <xs:sequence>
        <xs:element name="*seejpa2sections9.4.3and8.2.1.4*/provider" type="xs:string" />
        <xs:element name="*seejpa2sections9.4.3and8.2.1.2*/transaction_type" type="xs:string" />
        <xs:element name="*seejpa2sections9.4.3and8.2.1.5*/jta_datasource" type="xs:string" />
        <xs:element name="*seejpa2sections9.4.3and8.2.1.5*/non_jta_datasource" type="xs:string" />
        <xs:element name="*seesection8.2.1.9*/jdbc_driver" type="xs:string" />
        <xs:element name="*seesection8.2.1.9*/jdbc_url" type="xs:string" />
        <xs:element name="*seesection8.2.1.9*/jdbc_user" type="xs:string" />
        <xs:element name="*seejpa2section8.2.1.9*/jdbc_password" type="xs:string" />
        <xs:element name="*seejpa2sections9.4.3and8.2.1.7*@seejavax.persistence.sharedcachemode*/shared_cache_mode" type="xs:string" />
        <xs:element name="*usedtoindicateiftheprovidershouldattempttoretrieverequesteddata*inthesharedcache.**@seejavax.persistence.cacheretrievemode*/shared_cache_retrieve_mode" type="xs:string" />
        <xs:element name="*usedtoindicateiftheprovidershouldattempttostoredataloadedfromthedatabase*inthesharedcache.**@seejavax.persistence.cachestoremode*/shared_cache_store_mode" type="xs:string" />
        <xs:element name="*seejpa2sections9.4.3and8.2.1.8*@seejavax.persistence.validationmode*/validation_mode" type="xs:string" />
        <xs:element name="/***usedtopassalonganydiscoveredvalidatorfactory.*/validation_factory" type="xs:string" />
        <xs:element name="*seejpa2sections8.2.1.9and3.4.4.3*/lock_scope" type="xs:string" />
        <xs:element name="*seejpa2sections8.2.1.9and3.4.4.3*/lock_timeout" type="xs:string" />
        <xs:element name="*seejpa2section8.2.1.9*/persist_validation_group" type="xs:string" />
        <xs:element name="*seejpa2section8.2.1.9*/update_validation_group" type="xs:string" />
        <xs:element name="*seejpa2section8.2.1.9*/remove_validation_group" type="xs:string" />
        <xs:element name="/***usedtopassalongthecdibeanmanager,ifany,tobeused.*/cdi_bean_manager" type="xs:string" />
        <xs:element name="**@seeschemagensource*/schema_gen_create_source" type="xs:string" />
        <xs:element name="**@seeschemagensource*/schema_gen_drop_source" type="xs:string" />
        <xs:element name="/***specifiesthecreatescriptfileaseithera{@linkjava.io.reader}configuredforreadingoftheddlscript*fileoradesignatingafile{@linkjava.net.url}fortheddlscript.**@see#schema_gen_create_source*@see#schema_gen_drop_script_source*/schema_gen_create_script_source" type="xs:string" />
        <xs:element name="/***specifiesthedropscriptfileaseithera{@linkjava.io.reader}configuredforreadingoftheddlscript*fileoradesignatingafile{@linkjava.net.url}fortheddlscript.**@see#schema_gen_drop_source*@see#schema_gen_create_script_source*/schema_gen_drop_script_source" type="xs:string" />
        <xs:element name="*ifnovalueisspecified,thedefaultis"none".**@seeschemagenaction*/schema_gen_database_action" type="xs:string" />
        <xs:element name="*ifnovalueisspecified,thedefaultis"none".**@seeschemagenaction*/schema_gen_scripts_action" type="xs:string" />
        <xs:element name="/***forcaseswherethe{@value#schema_gen_scripts_action}valueindicatesthatschemacreationcommandsshould*bewrittentoddlscriptfile,{@value#schema_gen_scripts_create_target}specifieseithera*{@linkjava.io.writer}configuredforoutputoftheddlscriptoraspecifyingthefileurlfortheddl*script.**@see#schema_gen_scripts_action*/schema_gen_scripts_create_target" type="xs:string" />
        <xs:element name="/***forcaseswherethe{@value#schema_gen_scripts_action}valueindicatesthatschemadropcommandsshould*bewrittentoddlscriptfile,{@value#schema_gen_scripts_drop_target}specifieseithera*{@linkjava.io.writer}configuredforoutputoftheddlscriptoraspecifyingthefileurlfortheddl*script.**@see#schema_gen_scripts_action*/schema_gen_scripts_drop_target" type="xs:string" />
        <xs:element name="/***specifieswhetherthepersistenceprovideristocreatethedatabaseschema(s)inadditiontocreating*databaseobjects(tables,sequences,constraints,etc).thevalueofthisbooleanpropertyshouldbeset*to{@codetrue}ifthepersistenceprovideristocreateschemasinthedatabaseortogenerateddlthat*contains"createschema"commands.ifthispropertyisnotsupplied(orisexplicitly{@codefalse}),the*providershouldnotattempttocreatedatabaseschemas.*/schema_gen_create_schemas" type="xs:string" />
        <xs:element name="*mayalsobeusedtodeterminethevaluesfor{@value#schema_gen_db_name},*{@value#schema_gen_db_major_version}and{@value#schema_gen_db_minor_version}.*/schema_gen_connection" type="xs:string" />
        <xs:element name="*additionallyspecifying{@value#schema_gen_db_major_version}and/or{@value#schema_gen_db_minor_version}*mayberequiredtounderstandexactlyhowtogeneratetherequiredschemacommands.**@see#schema_gen_db_major_version*@see#schema_gen_db_minor_version*/schema_gen_db_name" type="xs:string" />
        <xs:element name="/***specifiesthemajorversionoftheunderlyingdatabase,aswouldbereturnedby*{@linkjava.sql.databasemetadata#getdatabasemajorversion}forthetargetdatabase.thisvalueisusedto*helpmorepreciselydeterminehowtoperformschemagenerationtasksfortheunderlyingdatabaseincases*where{@value#schema_gen_db_name}doesnotprovideenoughdistinction.**@see#schema_gen_db_name*@see#schema_gen_db_minor_version*/schema_gen_db_major_version" type="xs:string" />
        <xs:element name="/***specifiestheminorversionoftheunderlyingdatabase,aswouldbereturnedby*{@linkjava.sql.databasemetadata#getdatabaseminorversion}forthetargetdatabase.thisvalueisusedto*helpmorepreciselydeterminehowtoperformschemagenerationtasksfortheunderlyingdatabaseincases*wheretecombinationof{@value#schema_gen_db_name}and{@value#schema_gen_db_major_version}doesnotprovide*enoughdistinction.**@see#schema_gen_db_name*@see#schema_gen_db_major_version*/schema_gen_db_minor_version" type="xs:string" />
        <xs:element name="*a"sqlloadscript"isascriptthatperformssomedatabaseinitialization(insert,etc).*/schema_gen_load_script_source" type="xs:string" />
        <xs:element name=".*///usetheorg.hibernateprefix.insteadofhibernate.asitisaqueryhintsequeryhintsalias_specific_lock_mode" type="xs:string" />
        <xs:element name="/***jarautodetectionartifactsclass,hbm**use{@linkorg.hibernate.cfg.availablesettings#scanner_discovery}instead*/autodetection" type="xs:string" />
        <xs:element name="/***cfg.xmlconfigurationfileused*/cfg_file" type="xs:string" />
        <xs:element name="*whereusageisthecachestrategyusedandregionthecacheregionname*/class_cache_prefix" type="xs:string" />
        <xs:element name="*whereusageisthecachestrategyusedandregionthecacheregionname*/collection_cache_prefix" type="xs:string" />
        <xs:element name="/***interceptorclassname,theclasshastohaveano-argconstructor*theinterceptorinstanceissharedamongstallentitymanagerofagivenentitymanagerfactory*/interceptor" type="xs:string" />
        <xs:element name="/***interceptorclassname,theclasshastohaveano-argconstructor*/session_interceptor" type="xs:string" />
        <xs:element name="/***sessionfactoryobserverclassname,theclassmusthaveano-argconstructor*/session_factory_observer" type="xs:string" />
        <xs:element name="/***namingstrategyclassname,theclasshastohaveano-argconstructor**use{@linkorg.hibernate.cfg.availablesettings#implicit_naming_strategy}*or{@linkorg.hibernate.cfg.availablesettings#physical_naming_strategy}instead*/naming_strategy" type="xs:string" />
        <xs:element name="/***identifiergeneratorstrategyproviderclassname,theclassmusthaveano-argconstructor*ifpossiblewaitofhibernate4.1andtheserviceregistry(mutableidentifiergeneratorstrategyservice)*/identifier_generator_strategy_provider" type="xs:string" />
        <xs:element name="f.q.c.n.eventlistener1,f.q.c.n.eventlistener12...*/event_listener_prefix" type="xs:string" />
        <xs:element name="'properties*/use_class_enhancer" type="xs:string" />
        <xs:element name="/***enabledirtytrackingfeatureinruntimebytecodeenhancement*/enhancer_enable_dirty_tracking" type="xs:string" />
        <xs:element name="/***enablelazyloadingfeatureinruntimebytecodeenhancement*/enhancer_enable_lazy_initialization" type="xs:string" />
        <xs:element name="/***enableassociationmanagementfeatureinruntimebytecodeenhancement*/enhancer_enable_association_management" type="xs:string" />
        <xs:element name="/***whetherornotdiscardpersistentcontextonentitymanager.close()*theejb3compliantanddefaultchoiceisfalse*/discard_pc_on_close" type="xs:string" />
        <xs:element name="/***considerthisasexperimental*itisnotrecommendedtosetupthisproperty,theconfigurationisstored*inthejndiinaserializedform**configurationgoingaway.*/configuration_jndi_name" type="xs:string" />
        <xs:element name="/***usedtodetermineflushmode.*///usetheorg.hibernateprefix.insteadofhibernate.asitisaqueryhintsequeryhintsflush_mode" type="xs:string" />
        <xs:element name="/***prefer{@linkorg.hibernate.cfg.availablesettings#scanner}instead*/scanner" type="xs:string" />
        <xs:element name="/***listofclassesnames*internaluseonly**wasneverintendedforexternaluse*/class_names" type="xs:string" />
        <xs:element name="/***listofannotatedpackages*internaluseonly**wasneverintendedforexternaluse*/package_names" type="xs:string" />
        <xs:element name="/***entitymanagerfactoryname*/entity_manager_factory_name" type="xs:string" />
        <xs:element name="/***use{@link#jpa_metamodel_population}instead.*/jpa_metamodel_generation" type="xs:string" />
        <xs:element name="*/jpa_metamodel_population" type="xs:string" />
        <xs:element name="/***listofclassesnames*internaluseonly*/xml_file_names" type="xs:string" />
        <xs:element name="hbxml_files" type="xs:string" />
        <xs:element name="loaded_classes" type="xs:string" />
        <xs:element name="/***deprecated**use{@linkorg.hibernate.cfg.availablesettings#jacc_context_id}instead*/jacc_context_id" type="xs:string" />
        <xs:element name="/***deprecated**use{@linkorg.hibernate.cfg.availablesettings#jacc_prefix}instead*/jacc_prefix" type="xs:string" />
        <xs:element name="/***deprecated**use{@linkorg.hibernate.cfg.availablesettings#jacc_enabled}instead*/jacc_enabled" type="xs:string" />
        <xs:element name="/***usedtopassalongthenameofthepersistenceunit.*/persistence_unit_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateentitymanagerimplementor" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiergeneratorstrategyprovider" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.jpa.spi.identifiergeneratorstrategyprovider">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryhints" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.jpa.queryhints">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentitymanagerimpl" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatequery" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.jpa.hibernatequery">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="scanner" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.boot.archive.scan.spi.scanner">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatepersistence" >
      <xs:complexContent>
       <xs:extension base="hibernatepersistenceprovider">
         <xs:sequence>
          <xs:element name="log" type="entitymanagermessagelogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basequeryimpl" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.jpa.spi.basequeryimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="availablesettings" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.jpa.availablesettings">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateentitymanagerfactory" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.jpa.hibernateentitymanagerfactory">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractqueryimpl" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.jpa.spi.abstractqueryimpl<x>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateentitymanager" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.jpa.hibernateentitymanager">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithcompositeid" >
      <xs:sequence>
        <xs:element name="id" type="compositeid" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="excludeunlistedclassestest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unlisteddatapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidrowvaluetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeid" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testingentitymanagerfactorygenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uncorrelatedsubquerytest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="correlatedsubquerytest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectcasetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parametertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tuplecriteriatest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapjointest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singularattributejointest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchandjointest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="implicitjointest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpathimpltest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="treatkeywordtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="mother" type="animal" nillable="true" minOccurs="0" />
        <xs:element name="father" type="animal" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querybuildertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manipulationcriteriatest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="name" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="aliases" type="alias" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonetype" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedtype" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="manytoonetype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="embeddedtype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentjointest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="thevalue" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alias" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="name" nillable="true" minOccurs="0" />
        <xs:element name="source" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="client" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="name" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentcriteriatest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumismembertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="roles" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclasspredicatetest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="widgetid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="division" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="widget" >
      <xs:sequence>
        <xs:element name="code" type="xs:string" />
        <xs:element name="division" type="xs:string" />
        <xs:element name="cost" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="helper" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="helperid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tool" >
      <xs:complexContent>
       <xs:extension base="helper">
         <xs:sequence>
          <xs:element name="cost" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="superclasscollectiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicsimplecasetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multitypedbasicattributesentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="somes" type="xs:anyType" />
        <xs:element name="somewrappeds" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onkeywordtest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elephant" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="predicatetest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
          <xs:element name="builder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="payment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="amount" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregationresulttest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
          <xs:element name="builder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="casttest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
          <xs:element name="quantity" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="date3type" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expressionstest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
          <xs:element name="builder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listindextest" >
      <xs:complexContent>
       <xs:extension base="abstractmetamodelspecifictest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiccriteriausagetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wall" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="width" type="xs:long" />
        <xs:element name="height" type="xs:long" />
        <xs:element name="color" type="xs:string" />
        <xs:element name="left" type="wall" nillable="true" minOccurs="0" />
        <xs:element name="right" type="wall" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriacompilingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpaschemageneratortest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="load_sql" type="xs:string" />
          <xs:element name="create_sql" type="xs:string" />
          <xs:element name="drop_sql" type="xs:string" />
          <xs:element name="schemagennumber" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="descr" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemacreatedroptest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronizationtypetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="example" type="item" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergemultipleentitycopiesdisallowedtest" >
      <xs:complexContent>
       <xs:extension base="mergemultipleentitycopiesdisallowedbydefaulttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:complexContent>
       <xs:extension base="pet">
         <xs:sequence>
          <xs:element name="numbones" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:complexContent>
       <xs:extension base="pet">
         <xs:sequence>
          <xs:element name="lives" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mail" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="from" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hoarder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="favorite" type="item" nillable="true" minOccurs="0" />
        <xs:element name="items" type="item" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="music" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="decorate" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="pet" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="race" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="competitors" type="competitor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergemultipleentitycopiesallowedtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dress" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="category" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergemultipleentitycopiesallowedloggedtest" >
      <xs:complexContent>
       <xs:extension base="mergemultipleentitycopiesallowedtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergemultipleentitycopiescustomtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="competitor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getreferencetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushmodetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergemultipleentitycopiesdisallowedbydefaulttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="names" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="colony" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pet" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="weight" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="empire" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="colonies" type="colony" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="refreshtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="b1list" type="b1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="b2list" type="b2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="b3list" type="b3" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="b4list" type="b4" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="b2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
        <xs:element name="c2list" type="c2" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadepersisttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
        <xs:element name="c1list" type="c1" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="b1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="competition" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="competitors" type="competitor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nooplistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitdescriptoradapter" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="kitchen" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="oven" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="incidentstatus" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="GeneratedName" type="incident" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oven" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="kitchen" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="incident" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="GeneratedName" type="incidentstatus" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="info" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="GeneratedName" type="spouse" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="somemappedsuperclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="totalprice" type="xs:double" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="creditcard" nillable="true" minOccurs="0" />
        <xs:element name="sample" type="lineitem" nillable="true" minOccurs="0" />
        <xs:element name="lineitems" type="lineitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="domen" type="xs:anyType" />
        <xs:element name="number" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="phones" type="phone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapentitylocal" >
      <xs:sequence>
        <xs:element name="shortname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:double" />
        <xs:element name="rating" type="xs:double" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="partnumber" type="xs:long" />
        <xs:element name="some" type="xs:anyType" />
        <xs:element name="some" type="xs:anyType" />
        <xs:element name="warehouse" type="xs:string" />
        <xs:element name="GeneratedName" type="shelflife" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="somemappedsuperclasssubclass" >
      <xs:complexContent>
       <xs:extension base="somemappedsuperclass">
         <xs:sequence>
          <xs:element name="thedata" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractmetamodelspecifictest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="entity3" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="embedded" type="embeddableentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workorderid" >
      <xs:sequence>
        <xs:element name="workorder" type="xs:string" />
        <xs:element name="plantid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="workordercomponentid" >
      <xs:complexContent>
       <xs:extension base="workorderid">
         <xs:sequence>
          <xs:element name="linenumber" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddableentity" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddableinsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="funkyextendedembeddedidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="workorder" >
      <xs:sequence>
        <xs:element name="id" type="workorderid" nillable="true" minOccurs="0" />
        <xs:element name="components" type="workordercomponent" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="workordercomponent" >
      <xs:sequence>
        <xs:element name="id" type="workordercomponentid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="workorder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shelflife" >
      <xs:sequence>
        <xs:element name="inception" type="xs:dateTime" />
        <xs:element name="sold" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapentity" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="localized" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alias" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="noop" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="customersnoop" type="customer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="customers" type="customer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedtypetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mixedidandidclasshandling" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperclasstypetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spouse" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="first" type="xs:string" />
        <xs:element name="maiden" type="xs:string" />
        <xs:element name="last" type="xs:string" />
        <xs:element name="snumber" type="xs:string" />
        <xs:element name="GeneratedName" type="info" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="entity2" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thing" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedsuperclasstype2test" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="country" type="xs:string" />
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:anyType" />
        <xs:element name="home" type="address" nillable="true" minOccurs="0" />
        <xs:element name="work" type="address" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="spouse" nillable="true" minOccurs="0" />
        <xs:element name="creditcards" type="creditcard" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="aliases" type="alias" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="aliasesnoop" type="alias" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thingwithquantity" >
      <xs:complexContent>
       <xs:extension base="thing">
         <xs:sequence>
          <xs:element name="quantity" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="creditcard" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="expires" type="xs:string" />
        <xs:element name="approved" type="xs:anyType" />
        <xs:element name="balance" type="xs:double" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="area" type="xs:string" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="types" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wallet" >
      <xs:sequence>
        <xs:element name="serial" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="marketentrance" type="xs:dateTime" />
        <xs:element name="brand" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pasta" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customscanner" >
      <xs:sequence>
        <xs:element name="isused" type="xs:anyType" />
        <xs:element name="delegate" type="scanner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="packagingtestcase" >
      <xs:complexContent>
       <xs:extension base="basecorefunctionaltestcase">
         <xs:sequence>
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="bundle" type="xs:anyType" />
          <xs:element name="packagetargetdir" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="scannertest" >
      <xs:complexContent>
       <xs:extension base="packagingtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jarvisitortest" >
      <xs:complexContent>
       <xs:extension base="packagingtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="packagedentitymanagertest" >
      <xs:complexContent>
       <xs:extension base="packagingtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseentitymanagerfunctionaltestcase" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="//implnote:hereweuse@beforeand@after(insteadof@beforeclassonceand@afterclassoncelikewedoin//basecorefunctionaltestcase)becausetheoldhemtestmethodologywastocreateanemfforeachtestmethod." type="xs:anyType" />
          <xs:element name="serviceregistry" type="xs:anyType" />
          <xs:element name="entitymanagerfactory" type="hibernateentitymanagerfactory" nillable="true" minOccurs="0" />
          <xs:element name="em" type="xs:anyType" />
          <xs:element name="isolatedems" type="xs:anyType" />
          <xs:element name="no_mappings" type="xs:string" />
          <xs:element name="no_classes" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notserializableclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="//usedforassertionsids" type="xs:anyType" />
        <xs:element name="//usedforassertionspostversion" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ofbirth" type="xs:dateTime" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="lastup" type="xs:dateTime" />
        <xs:element name="manualversion" type="xs:long" />
        <xs:element name="kittens" type="kitten" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querywithinparamlistandnamedentitygraphtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typedvalueparameterstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="docid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachedquerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datetimeparametertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="nowcal" type="xs:anyType" />
          <xs:element name="now" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="scalarresultnativequerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="salary" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addnamedquerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractor" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="company" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracleconstructorresultnativequerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constructorresultnativequerytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conference" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="extractiondocument" type="extractiondocumentinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extractiondocument" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="body" type="xs:anyType" />
        <xs:element name="documentinfo" type="extractiondocumentinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchtest2" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="son" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="troop2" >
      <xs:sequence>
        <xs:element name="/*fails:*/id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bottom" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="middle" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="top" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="middles" type="middle" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middle" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="top" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="bottom" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multilevelcascadetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="teacher" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="favorite" type="student" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="troop" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="soldiers" type="soldier" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="grandson" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="parent" type="son" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="song" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="author" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergewithtransientnoncascadedassociationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deleteorphantest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="soldier2" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="troop" type="troop2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multicirclejpacascadetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="b" nillable="true" minOccurs="0" />
          <xs:element name="" type="c" nillable="true" minOccurs="0" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
          <xs:element name="" type="e" nillable="true" minOccurs="0" />
          <xs:element name="" type="f" nillable="true" minOccurs="0" />
          <xs:element name="" type="g" nillable="true" minOccurs="0" />
          <xs:element name="skipcleanup" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="g" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="" type="b" nillable="true" minOccurs="0" />
          <xs:element name="fcollection" type="f" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bcollection" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="dcollection" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="f" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/ecollection" type="e" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
          <xs:element name="" type="g" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="/***nodocumentation*/gcollection" type="g" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="/***nodoumentation*/" type="c" nillable="true" minOccurs="0" />
          <xs:element name="/***noocumentation*/" type="d" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bcollection" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="c" nillable="true" minOccurs="0" />
          <xs:element name="" type="e" nillable="true" minOccurs="0" />
          <xs:element name="fcollection" type="f" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="e" >
      <xs:complexContent>
       <xs:extension base="abstractentity">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="dcollection" type="d" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="f" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detachandcontainstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="extractiondocumentinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lastmodified" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="conference" nillable="true" minOccurs="0" />
        <xs:element name="documents" type="extractiondocument" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soldier" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="troop" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="primary" type="teacher" nillable="true" minOccurs="0" />
        <xs:element name="favorite" type="teacher" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedsuperclasswithembeddedtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractaddressable" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:complexContent>
       <xs:extension base="abstractaddressable">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractattribute" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="productattributeid" >
      <xs:complexContent>
       <xs:extension base="abstractattributeid">
         <xs:sequence>
          <xs:element name="owner" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractattributeid" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedsuperclasswithentitywithidclasstest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="productattribute" >
      <xs:complexContent>
       <xs:extension base="abstractattribute">
         <xs:sequence>
          <xs:element name="owner" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractnameable" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedsuperclasswithattributestest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:complexContent>
       <xs:extension base="abstractnameable">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:complexContent>
       <xs:extension base="abstractproduct">
         <xs:sequence>
          <xs:element name="description" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractproduct" >
      <xs:sequence>
        <xs:element name="id" type="productid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedsuperclasswithembeddedidtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="productid" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validatorfactory2phaseinjectiontest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="vf" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanvalidationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cupholder" >
      <xs:sequence>
        <xs:element name="//(strategy" type="xs:anyType" />
        <xs:element name="radius" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryhintentitygraphtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicentitygraphtests" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="location" nillable="true" minOccurs="0" />
        <xs:element name="markets" type="market" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="phonenumbers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitygraphusingfetchgraphtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="market" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitygraphloadplanbuildertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="salary" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedentitygraphstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicormnamedentitygraphtest" >
      <xs:complexContent>
       <xs:extension base="abstractnamedentitygraphtest{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicannnamedentitygraphtest" >
      <xs:complexContent>
       <xs:extension base="abstractnamedentitygraphtest{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractnamedentitygraphtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitygraphtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="managers" type="manager" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="friends" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manager" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="upgradelocktest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querylockingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unversionedlock" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lock" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locktest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockable" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locktimeoutpropertytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="countentitywithcompositeidtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="washer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mouse" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
        <xs:element name="dot" type="xs:string" />
        <xs:element name="major" type="xs:long" />
        <xs:element name="minor" type="xs:long" />
        <xs:element name="micro" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lighter" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="otherincrementlistener" >
      <xs:sequence>
        <xs:element name="increment" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="incrementlistener" >
      <xs:sequence>
        <xs:element name="increment" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="money" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="applicationserver" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="version" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="morito" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scooter" >
      <xs:sequence>
        <xs:element name="model" type="xs:string" />
        <xs:element name="speed" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seat" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="airplane" >
      <xs:sequence>
        <xs:element name="serialnumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elephant" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="carpet" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bug" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="subject" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mouse1" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lighter1" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version1" >
      <xs:sequence>
        <xs:element name="dot" type="xs:string" />
        <xs:element name="major" type="xs:long" />
        <xs:element name="minor" type="xs:long" />
        <xs:element name="micro" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="applicationserver1" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="version1" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="incrementlistener1" >
      <xs:sequence>
        <xs:element name="increment" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="money1" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="otherincrementlistener1" >
      <xs:sequence>
        <xs:element name="increment" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="applicationserver" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="version" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="money" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="incrementlistener" >
      <xs:sequence>
        <xs:element name="increment" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="otherincrementlistener" >
      <xs:sequence>
        <xs:element name="increment" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lighter" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
        <xs:element name="dot" type="xs:string" />
        <xs:element name="major" type="xs:long" />
        <xs:element name="minor" type="xs:long" />
        <xs:element name="micro" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mouse" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="caipirinha" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bug" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="subject" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="descr" type="xs:string" />
        <xs:element name="intval" type="xs:anyType" />
        <xs:element name="distributors" type="distributor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="translation" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="into" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="countrychecker" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="callbackstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="exceptionlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="countrynamecheckerlistener" >
      <xs:sequence>
        <xs:element name="countries" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plant" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rythm" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="television" >
      <xs:complexContent>
       <xs:extension base="videosystem">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="control" type="remotecontrol" nillable="true" minOccurs="0" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="increaselistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitylistenerviaxmltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="journalinglistener" >
      <xs:sequence>
        <xs:element name="prepersistcount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="comments" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="firstonelistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="communicationsystem" >
      <xs:sequence>
        <xs:element name="communication" type="xs:long" />
        <xs:element name="isfirst" type="xs:anyType" />
        <xs:element name="islast" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="callbackanddirtytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingclassmorethanoncetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="videosystem" >
      <xs:complexContent>
       <xs:extension base="communicationsystem">
         <xs:sequence>
          <xs:element name="transientcounter" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="remotecontrol" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="creation" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="kitten" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="temporaltypetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ormversiontest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="imagereader" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="image" type="xs:anyType" />
        <xs:element name="text" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blobtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="distributor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerwithfilteredsessiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="regioncode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="/*@embedded@attributeoverrides({@attributeoverride(name" type="address" nillable="true" minOccurs="0" />
        <xs:element name="/*@embedded@attributeoverrides({@attributeoverride(name" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlattributeoverridetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="light" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="article" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="next" type="article" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaentitynametest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="counterlistener" >
      <xs:sequence>
        <xs:element name="insert" type="xs:long" />
        <xs:element name="update" type="xs:long" />
        <xs:element name="delete" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lighter" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="qualifier" >
      <xs:sequence>
        <xs:element name="qualifierid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="/*@embedded@attributeoverrides({@attributeoverride(name" type="address" nillable="true" minOccurs="0" />
        <xs:element name="/*@embedded@attributeoverrides({@attributeoverride(name" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="light" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlattributeoverridetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="article" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="next" type="article" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lighter" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fakedatasource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourceinjectiontest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceunitinfoimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="mappingfiles" type="xs:anyType" />
        <xs:element name="puroot" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fakedatasourceexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instrumentedclassloader" >
      <xs:complexContent>
       <xs:extension base="classloader">
         <xs:sequence>
          <xs:element name="entities" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithlazyproperty" >
      <xs:sequence>
        <xs:element name="pre_update_value" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="lazydata" type="xs:anyType" />
        <xs:element name="somefield" type="xs:string" />
        <xs:element name="updatelazyfieldinpreupdate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplerelation" >
      <xs:sequence>
        <xs:element name="blah" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testlazypropertyonpreupdateexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="executable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractexecutable" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="entitymanagerfactory" type="hibernateentitymanagerfactory" nillable="true" minOccurs="0" />
        <xs:element name="em" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptfieldclassfiletransformertest" >
      <xs:sequence>
        <xs:element name="entities" type="xs:anyType" />
        <xs:element name="loader" type="instrumentedclassloader" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//haveanadditionalattributethatwillensurethattheenhancedclasses//willseeallclassattributesofanentitywithoutcnfesrelations" type="simplerelation" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstracttransformingclassloaderinstrumenttestcase" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="isolater" type="xs:anyType" />
          <xs:element name="sig" type="xs:anyType" />
          <xs:element name="args" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="javassistinstrumentationtest" >
      <xs:complexContent>
       <xs:extension base="abstracttransformingclassloaderinstrumenttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitinfoadapter" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="//,cascade" type="feature" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="feature" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteonetomanyorphanstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="b" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetooneorphantest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="x" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranchenmodell" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="y" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranche" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tranchenmodell" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="tranchen" type="tranche" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="preisregelung" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="x" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletemultilevelorphanstest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tranche" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranchenmodell" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="y" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preisregelung" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="tranchenmodell" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="providerutiltest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="cache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="article" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="author" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:complexContent>
       <xs:extension base="copyrightablecontent">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getidentifiertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pessimisticnumberparserunittest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="author" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="isloadedtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceutilhelpertest" >
      <xs:complexContent>
       <xs:extension base="fieldaccessbeanbase">
         <xs:sequence>
          <xs:element name="cache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="umbrella" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="size" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="copyrightablecontent" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="author" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sickness" >
      <xs:sequence>
        <xs:element name="begintime" type="xs:dateTime" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="classification" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="settingsgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newbootprocesstest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="garden" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="flowers" type="flower" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="giant" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="height" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fooditem" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subthing" >
      <xs:complexContent>
       <xs:extension base="thing">
         <xs:sequence>
          <xs:element name="blah" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="withgenericcollection" >
      <xs:complexContent>
       <xs:extension base="object>">
         <xs:sequence>
          <xs:element name="id" type="xs:string" />
          <xs:element name="d" type="xs:double" />
          <xs:element name="parent" type="xs:anyType" />
          <xs:element name="children" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:complexContent>
       <xs:extension base="being>">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="siblings" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="address1" type="xs:string" />
        <xs:element name="address2" type="xs:string" />
        <xs:element name="city" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deskwithrawtype" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="employees" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatatest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:complexContent>
       <xs:extension base="being">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondmetadatatest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="staticmetadatatest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplemedicalhistory" >
      <xs:sequence>
        <xs:element name="lastup" type="xs:dateTime" />
        <xs:element name="patient" type="simpleperson" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="feline" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="color" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:complexContent>
       <xs:extension base="subthing">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="legnbr" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="house" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="rooms" type="room" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="roomsbyname" type="xs:anyType" />
        <xs:element name="roomsbysize" type="room" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thing" >
      <xs:sequence>
        <xs:element name="weight" type="xs:double" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleperson" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeewithrawtype" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="desks" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedmanytooneowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="house" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:complexContent>
       <xs:extension base="cattish">
         <xs:sequence>
          <xs:element name="nickname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fridge" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="brand" type="xs:string" />
        <xs:element name="temperature" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="room" >
      <xs:sequence>
        <xs:element name="length" type="xs:anyType" />
        <xs:element name="width" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cattish" >
      <xs:complexContent>
       <xs:extension base="feline">
         <xs:sequence>
          <xs:element name="hoursofsleep" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="being" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flower" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiergeneratorstrategyprovidertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cable" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="funkyexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="funkyidgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="funkyidentifiergeneratorprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryobservertest" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interceptortest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namingstrategyconfigurationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymanagerserializationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configurationobjectsettingtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localexceptioninterceptor" >
      <xs:complexContent>
       <xs:extension base="exceptioninterceptor">
         <xs:sequence>
          <xs:element name="local_exception_message" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="exceptioninterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
          <xs:element name="exception_message" type="xs:string" />
          <xs:element name="allowsave" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bell" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerfactoryserializationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persisterclassprovidertest" >
      <xs:complexContent>
       <xs:extension base="entitypersister>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brandname" type="xs:string" />
        <xs:element name="price" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnwithexplicitreferencetoprimarytabletest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="quotingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querytest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="salary" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lastupdatelistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testhelper" >
      <xs:sequence>
        <xs:element name="resolved_test_root_" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerfactoryunwraptest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymanagerfactoryclosedtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="music" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instrument" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="musician" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="favourite" type="music" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exceptiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="storedprocedureresultsetmappingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datetimeparametertest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="entitymanagerfactory" type="hibernateentitymanagerfactory" nillable="true" minOccurs="0" />
          <xs:element name="nowcal" type="xs:anyType" />
          <xs:element name="now" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpatckusagetest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="//todo:lookatwaystoallow"auxiliarydbobjects"tothedbviaemfbootstrapping.//publicstringfindoneuser_create_cmd" type="hibernateentitymanagerfactory" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationtest" >
      <xs:complexContent>
       <xs:extension base="abstractstoredproceduretest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractstoredproceduretest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ormtest" >
      <xs:complexContent>
       <xs:extension base="abstractstoredproceduretest{">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mynamingstrategy" >
      <xs:complexContent>
       <xs:extension base="physicalnamingstrategystandardimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionjoiningtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="synchronizationtypetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionrolledbackindifferentthreadtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flushandtransactiontest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionjoinhandlingchecker" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strawberry" >
      <xs:complexContent>
       <xs:extension base="fruit">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fruit" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritancetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nocacheableannotationentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitlycacheableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationtest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitlynoncacheableentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpacacheapiusagetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="total" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sharedcachemodestest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymanagertest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="daddy" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="nrofchildren" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postloadtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nocdiavailabletest" >
      <xs:complexContent>
       <xs:extension base="baseunittestcase">
         <xs:sequence>
          <xs:element name="excluded_packages" type="xs:string" />
          <xs:element name="isolater" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nocdiavailabletestdelegate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basiccditest" >
      <xs:complexContent>
       <xs:extension base="basecdiintegrationtest">
         <xs:sequence>
          <xs:element name="count" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basecdiintegrationtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="node" nillable="true" minOccurs="0" />
        <xs:element name="children" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persisttest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reptile" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="temperature" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mammal" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="mamalnbr" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergenewtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employees" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="findtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="numberednode" >
      <xs:complexContent>
       <xs:extension base="node">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="workload" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="load" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergetest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getloadtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="removeorderingtest" >
      <xs:complexContent>
       <xs:extension base="baseentitymanagerfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nopackageentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valid-orm-1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalid-orm-1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valid-orm-2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate.cfg" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="policyanddistribution.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="empty" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loremipsum" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classmappedmorethanonce.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentity.orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="qualifier.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate.cfg" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mouse.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mouse.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mouse.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elephant.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mouse1.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 