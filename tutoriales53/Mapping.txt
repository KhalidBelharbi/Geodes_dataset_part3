ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> Individual =>=>=> RelationalSchema.Table>> individual;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Attribut>> Employee.salary:BigDecimal =>=>=> RelationalSchema.Column>> employee.salary;
ClassDiagram.Attribut>> Student.id:Long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Customer.customerid:Long =>=>=> RelationalSchema.Column>> customer.customerid PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.lastname:String =>=>=> RelationalSchema.Column>> customer.lastname;
ClassDiagram.Attribut>> Customer.addresslist:List<Address> =>=>=> RelationalSchema.Column>> customer.addresslist;
ClassDiagram.Attribut>> Course.courseid:Long =>=>=> RelationalSchema.Column>> course.courseid PRIMARY KEY;
ClassDiagram.Attribut>> Course.name:String =>=>=> RelationalSchema.Column>> course.name;
ClassDiagram.Attribut>> Individual.id:Long =>=>=> RelationalSchema.Column>> individual.id PRIMARY KEY;
ClassDiagram.Attribut>> Individual.name:String =>=>=> RelationalSchema.Column>> individual.name;
ClassDiagram.Attribut>> Individual.lastname:String =>=>=> RelationalSchema.Column>> individual.lastname;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
One-To-Many relationship from ClassDiagram.Class>>Student  to ClassDiagram.Class>>List<Course>;
Many-To-One relationship from ClassDiagram.Class>>Course  to ClassDiagram.Class>>student represented by ClassDiagram.Atrribute>>GeneratedName;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Individual  ;
