ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> OrderDetail =>=>=> RelationalSchema.Table>> orderdetail;
ClassDiagram.Class>> Report =>=>=> RelationalSchema.Table>> report;
ClassDiagram.Attribut>> Order.id:Long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.address:String =>=>=> RelationalSchema.Column>> order.address;
ClassDiagram.Attribut>> Order.create:Date =>=>=> RelationalSchema.Column>> order.create;
ClassDiagram.Attribut>> Product.id:Integer =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.image:String =>=>=> RelationalSchema.Column>> product.image;
ClassDiagram.Attribut>> Product.price:Double =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> Product.create:Date =>=>=> RelationalSchema.Column>> product.create;
ClassDiagram.Attribut>> Product.available:Boolean =>=>=> RelationalSchema.Column>> product.available;
ClassDiagram.Attribut>> Category.id:String =>=>=> RelationalSchema.Column>> category.id PRIMARY KEY;
ClassDiagram.Attribut>> Category.name:String =>=>=> RelationalSchema.Column>> category.name;
ClassDiagram.Attribut>> Account.username:String =>=>=> RelationalSchema.Column>> account.username PRIMARY KEY;
ClassDiagram.Attribut>> Account.password:String =>=>=> RelationalSchema.Column>> account.password;
ClassDiagram.Attribut>> Account.fullname:String =>=>=> RelationalSchema.Column>> account.fullname;
ClassDiagram.Attribut>> Account.email:String =>=>=> RelationalSchema.Column>> account.email;
ClassDiagram.Attribut>> Account.photo:String =>=>=> RelationalSchema.Column>> account.photo;
ClassDiagram.Attribut>> Account.activated:boolean =>=>=> RelationalSchema.Column>> account.activated;
ClassDiagram.Attribut>> Account.admin:boolean =>=>=> RelationalSchema.Column>> account.admin;
ClassDiagram.Attribut>> OrderDetail.id:Long =>=>=> RelationalSchema.Column>> orderdetail.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderDetail.price:Double =>=>=> RelationalSchema.Column>> orderdetail.price;
ClassDiagram.Attribut>> OrderDetail.quantity:Integer =>=>=> RelationalSchema.Column>> orderdetail.quantity;
ClassDiagram.Attribut>> Report.group:Serializable =>=>=> RelationalSchema.Column>> report.group PRIMARY KEY;
ClassDiagram.Attribut>> Report.sum:Double =>=>=> RelationalSchema.Column>> report.sum;
ClassDiagram.Attribut>> Report.count:Long =>=>=> RelationalSchema.Column>> report.count;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>account represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>List<OrderDetail>;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<OrderDetail>;
One-To-Many relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>List<Product>;
One-To-Many relationship from ClassDiagram.Class>>Account  to ClassDiagram.Class>>List<Order>;
Many-To-One relationship from ClassDiagram.Class>>OrderDetail  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>OrderDetail  to ClassDiagram.Class>>order represented by ClassDiagram.Atrribute>>GeneratedName;
