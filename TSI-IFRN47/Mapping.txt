ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> BlogPost =>=>=> RelationalSchema.Table>> blogpost;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Attribut>> Person.id:Long =>=>=> RelationalSchema.Column>> person.id PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.surname:String =>=>=> RelationalSchema.Column>> person.surname;
ClassDiagram.Attribut>> Person.age:int =>=>=> RelationalSchema.Column>> person.age;
ClassDiagram.Attribut>> BlogPost.id:Long =>=>=> RelationalSchema.Column>> blogpost.id PRIMARY KEY;
ClassDiagram.Attribut>> BlogPost.title:String =>=>=> RelationalSchema.Column>> blogpost.title;
ClassDiagram.Attribut>> BlogPost.body:String =>=>=> RelationalSchema.Column>> blogpost.body;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.login:String =>=>=> RelationalSchema.Column>> user.login;
ClassDiagram.Attribut>> User.disabled:Boolean =>=>=> RelationalSchema.Column>> user.disabled;
Many-To-One relationship from ClassDiagram.Class>>BlogPost  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Set<BlogPost>;
