ClassDiagram.Class>> Producto =>=>=> RelationalSchema.Table>> producto;
ClassDiagram.Class>> ResetToken =>=>=> RelationalSchema.Table>> resettoken;
ClassDiagram.Class>> CompraProducto =>=>=> RelationalSchema.Table>> compraproducto;
ClassDiagram.Class>> Rol =>=>=> RelationalSchema.Table>> rol;
ClassDiagram.Class>> Menu =>=>=> RelationalSchema.Table>> menu;
ClassDiagram.Class>> Vendedor =>=>=> RelationalSchema.Table>> vendedor;
ClassDiagram.Class>> Venta =>=>=> RelationalSchema.Table>> venta;
ClassDiagram.Class>> Supervisor =>=>=> RelationalSchema.Table>> supervisor;
ClassDiagram.Class>> Usuario =>=>=> RelationalSchema.Table>> usuario;
ClassDiagram.Class>> Archivo =>=>=> RelationalSchema.Table>> archivo;
ClassDiagram.Class>> Cliente =>=>=> RelationalSchema.Table>> cliente;
ClassDiagram.Class>> Marca =>=>=> RelationalSchema.Table>> marca;
ClassDiagram.Attribut>> Producto.idproducto:Integer =>=>=> RelationalSchema.Column>> producto.idproducto PRIMARY KEY;
ClassDiagram.Attribut>> Producto.nombreproducto:String =>=>=> RelationalSchema.Column>> producto.nombreproducto;
ClassDiagram.Attribut>> Producto.descripcion:String =>=>=> RelationalSchema.Column>> producto.descripcion;
ClassDiagram.Attribut>> Producto.valor:Integer =>=>=> RelationalSchema.Column>> producto.valor;
ClassDiagram.Attribut>> ResetToken.id:Integer =>=>=> RelationalSchema.Column>> resettoken.id PRIMARY KEY;
ClassDiagram.Attribut>> ResetToken.token:String =>=>=> RelationalSchema.Column>> resettoken.token;
ClassDiagram.Attribut>> ResetToken.expiracion:LocalDateTime =>=>=> RelationalSchema.Column>> resettoken.expiracion;
ClassDiagram.Attribut>> CompraProducto.GeneratedName:Venta =>=>=> RelationalSchema.Column>> compraproducto.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> CompraProducto.GeneratedName:Producto =>=>=> RelationalSchema.Column>> compraproducto.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Rol.idrol:Integer =>=>=> RelationalSchema.Column>> rol.idrol PRIMARY KEY;
ClassDiagram.Attribut>> Rol.nombre:String =>=>=> RelationalSchema.Column>> rol.nombre;
ClassDiagram.Attribut>> Rol.descripcion:String =>=>=> RelationalSchema.Column>> rol.descripcion;
ClassDiagram.Attribut>> Menu.idmenu:Integer =>=>=> RelationalSchema.Column>> menu.idmenu PRIMARY KEY;
ClassDiagram.Attribut>> Menu.icono:String =>=>=> RelationalSchema.Column>> menu.icono;
ClassDiagram.Attribut>> Menu.nombre:String =>=>=> RelationalSchema.Column>> menu.nombre;
ClassDiagram.Attribut>> Menu.url:String =>=>=> RelationalSchema.Column>> menu.url;
ClassDiagram.Attribut>> Vendedor.idvendedor:Integer =>=>=> RelationalSchema.Column>> vendedor.idvendedor PRIMARY KEY;
ClassDiagram.Attribut>> Vendedor.nombrevendedor:String =>=>=> RelationalSchema.Column>> vendedor.nombrevendedor;
ClassDiagram.Attribut>> Vendedor.direccion:String =>=>=> RelationalSchema.Column>> vendedor.direccion;
ClassDiagram.Attribut>> Venta.idventa:Integer =>=>=> RelationalSchema.Column>> venta.idventa PRIMARY KEY;
ClassDiagram.Attribut>> Venta.costo:Integer =>=>=> RelationalSchema.Column>> venta.costo;
ClassDiagram.Attribut>> Venta.fecha_venta:LocalDateTime =>=>=> RelationalSchema.Column>> venta.fecha_venta;
ClassDiagram.Attribut>> Supervisor.idsupervisor:Integer =>=>=> RelationalSchema.Column>> supervisor.idsupervisor PRIMARY KEY;
ClassDiagram.Attribut>> Supervisor.nombresupervisor:String =>=>=> RelationalSchema.Column>> supervisor.nombresupervisor;
ClassDiagram.Attribut>> Supervisor.direccion:String =>=>=> RelationalSchema.Column>> supervisor.direccion;
ClassDiagram.Attribut>> Supervisor.telefono:String =>=>=> RelationalSchema.Column>> supervisor.telefono;
ClassDiagram.Attribut>> Usuario.idusuario:Integer =>=>=> RelationalSchema.Column>> usuario.idusuario PRIMARY KEY;
ClassDiagram.Attribut>> Usuario.username:String =>=>=> RelationalSchema.Column>> usuario.username;
ClassDiagram.Attribut>> Usuario.password:String =>=>=> RelationalSchema.Column>> usuario.password;
ClassDiagram.Attribut>> Usuario.enable:Boolean =>=>=> RelationalSchema.Column>> usuario.enable;
ClassDiagram.Attribut>> Archivo.idarchivo:Integer =>=>=> RelationalSchema.Column>> archivo.idarchivo PRIMARY KEY;
ClassDiagram.Attribut>> Archivo.filename:String =>=>=> RelationalSchema.Column>> archivo.filename;
ClassDiagram.Attribut>> Archivo.filetype:String =>=>=> RelationalSchema.Column>> archivo.filetype;
ClassDiagram.Attribut>> Archivo.value:byte =>=>=> RelationalSchema.Column>> archivo.value;
ClassDiagram.Attribut>> Cliente.idcliente:Integer =>=>=> RelationalSchema.Column>> cliente.idcliente PRIMARY KEY;
ClassDiagram.Attribut>> Cliente.nombrecliente:String =>=>=> RelationalSchema.Column>> cliente.nombrecliente;
ClassDiagram.Attribut>> Cliente.direccion:String =>=>=> RelationalSchema.Column>> cliente.direccion;
ClassDiagram.Attribut>> Cliente.telefono:String =>=>=> RelationalSchema.Column>> cliente.telefono;
ClassDiagram.Attribut>> Marca.idmarca:Integer =>=>=> RelationalSchema.Column>> marca.idmarca PRIMARY KEY;
ClassDiagram.Attribut>> Marca.descripcion:String =>=>=> RelationalSchema.Column>> marca.descripcion;
ClassDiagram.Attribut>> Marca.direccion:String =>=>=> RelationalSchema.Column>> marca.direccion;
ClassDiagram.Attribut>> Marca.ciudad:String =>=>=> RelationalSchema.Column>> marca.ciudad;
Many-To-One relationship from ClassDiagram.Class>>Producto  to ClassDiagram.Class>>marca represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>ResetToken  to ClassDiagram.Class>>usuario represented by ClassDiagram.Atrribute>>user;
Many-To-Many relationship between ClassDiagram.Class>>Menu  and ClassDiagram.Class>>list<rol>: menu_rol(id_menu:Menu [PK] #FK to Menu,id_rol:list<rol> [PK] #FK to list<rol>);
Many-To-One relationship from ClassDiagram.Class>>Vendedor  to ClassDiagram.Class>>supervisor represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Venta  to ClassDiagram.Class>>cliente represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Venta  to ClassDiagram.Class>>vendedor represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Usuario  and ClassDiagram.Class>>list<rol>: usuario_rol(id_usuario:Usuario [PK] #FK to Usuario,id_rol:list<rol> [PK] #FK to list<rol>);
