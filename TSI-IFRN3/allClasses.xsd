<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="sharedmetadatareaderfactorycontextinitializer" >
      <xs:sequence>
        <xs:element name="bean_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="couchbaseautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="anynestedcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onbootstraphostscondition" >
      <xs:complexContent>
       <xs:extension base="onpropertylistcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="couchbaseproperties" >
      <xs:sequence>
        <xs:element name="/***couchbasenodes(hostoripaddress)tobootstrapfrom.*/bootstraphosts" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="couchbaseconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="couchbaseproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="solrproperties" >
      <xs:sequence>
        <xs:element name="/***solrhost.ignoredif"zk-host"isset.*/host" type="xs:string" />
        <xs:element name="/***zookeeperhostaddressintheformhost:port.*/zkhost" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="solrautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springtransactionprovider" >
      <xs:sequence>
        <xs:element name="//basedonthejooq-spring-examplefromhttps://github.com/jooq/jooqtransactionmanager" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqldialectlookup" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jooqexceptiontranslator" >
      <xs:complexContent>
       <xs:extension base="defaultexecutelistener">
         <xs:sequence>
          <xs:element name="//basedonthejooq-spring-examplefromhttps://github.com/jooq/jooqger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jooqproperties" >
      <xs:sequence>
        <xs:element name="/***sqldialecttouse.auto-detectedbydefault.*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jooqautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springtransaction" >
      <xs:sequence>
        <xs:element name="//basedonthejooq-spring-examplefromhttps://github.com/jooq/jooq" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jackson2objectmapperbuildercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jacksonproperties" >
      <xs:sequence>
        <xs:element name="/***dateformatorafully-qualifieddateformatclassname.forinstance,*`yyyy-mm-ddhh:mm:ss`.*/dateformat" type="xs:string" />
        <xs:element name="/***jodadatetimeformat.ifnotconfigured,"date-format"isusedasa*fallbackifitisconfiguredwithaformat.*/jodadatetimeformat" type="xs:string" />
        <xs:element name="/***oneoftheconstantsonjackson'spropertynamingstrategy.canalsobea*fully-qualifiedclassnameofapropertynamingstrategysubclass.*/propertynamingstrategy" type="xs:string" />
        <xs:element name="visibility" type="xs:anyType" />
        <xs:element name="serialization" type="xs:anyType" />
        <xs:element name="deserialization" type="xs:anyType" />
        <xs:element name="mapper" type="xs:anyType" />
        <xs:element name="parser" type="xs:anyType" />
        <xs:element name="generator" type="xs:anyType" />
        <xs:element name="/***controlstheinclusionofpropertiesduringserialization.configuredwithoneof*thevaluesinjackson'senumeration.*/defaultpropertyinclusion" type="xs:anyType" />
        <xs:element name="/***timezoneusedwhenformattingdates.forinstance,"america/los_angeles"or*"gmt+10".*/" type="xs:anyType" />
        <xs:element name="/***usedforformatting.*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jacksonautoconfiguration" >
      <xs:sequence>
        <xs:element name="feature_defaults" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tomcatwebsocketreactivewebservercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="websocketreactiveautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="undertowwebsocketservletwebservercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tomcatwebsocketservletwebservercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="websocketservletautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jettywebsocketservletwebservercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="websocketmessagingautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mustachetemplateavailabilityprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mustacheautoconfiguration" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="mustache" type="mustacheproperties" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mustacheenvironmentcollector" >
      <xs:complexContent>
       <xs:extension base="defaultcollector">
         <xs:sequence>
          <xs:element name="environment" type="xs:anyType" />
          <xs:element name="propertyfetcher" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mustacheproperties" >
      <xs:complexContent>
       <xs:extension base="abstracttemplateviewresolverproperties">
         <xs:sequence>
          <xs:element name="default_prefix" type="xs:string" />
          <xs:element name="default_suffix" type="xs:string" />
          <xs:element name="/***prefixtoapplytotemplatenames.*/prefix" type="xs:string" />
          <xs:element name="/***suffixtoapplytotemplatenames.*/suffix" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mustacheresourcetemplateloader" >
      <xs:sequence>
        <xs:element name="prefix" type="xs:string" />
        <xs:element name="suffix" type="xs:string" />
        <xs:element name="charset" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mustachereactivewebconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mustacheservletwebconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enableautoconfiguration" >
      <xs:sequence>
        <xs:element name="enabled_override_property" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactorcoreproperties" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactorcoreautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonbautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cassandraproperties" >
      <xs:sequence>
        <xs:element name="/***keyspacenametouse.*/keyspacename" type="xs:string" />
        <xs:element name="/***nameofthecassandracluster.*/clustername" type="xs:string" />
        <xs:element name="/***clusternodeaddresses.*/contactpoints" type="xs:anyType" />
        <xs:element name="/***portofthecassandraserver.*/port" type="xs:long" />
        <xs:element name="/***loginuseroftheserver.*/username" type="xs:string" />
        <xs:element name="/***loginpasswordoftheserver.*/password" type="xs:string" />
        <xs:element name="/***supportedbythecassandrabinaryprotocol.*/" type="xs:anyType" />
        <xs:element name="/***queriesconsistencylevel.*/" type="xs:anyType" />
        <xs:element name="/***queriesserialconsistencylevel.*/serial" type="xs:anyType" />
        <xs:element name="/***queriesdefaultfetchsize.*/fetchsize" type="xs:long" />
        <xs:element name="/***socketoption:connectiontimeout.*/connecttimeout" type="xs:anyType" />
        <xs:element name="/***socketoption:readtimeout.*/readtimeout" type="xs:anyType" />
        <xs:element name="/***schemaactiontotakeatstartup.*/schemaaction" type="xs:string" />
        <xs:element name="/***enablesslsupport.*/ssl" type="xs:anyType" />
        <xs:element name="/***whethertoenablejmxreporting.defaulttofalseascassandrajmxreportingisnot*compatiblewithdropwizardmetrics.*/jmxenabled" type="xs:anyType" />
        <xs:element name="/***configuration.*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cassandraautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clusterbuildercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pathbasedtemplateavailabilityprovider" >
      <xs:complexContent>
       <xs:extension base="templateavailabilityproperties>">
         <xs:sequence>
          <xs:element name="classname" type="xs:string" />
          <xs:element name="propertiesclass" type="xs:anyType" />
          <xs:element name="propertyprefix" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="templateavailabilityproviders" >
      <xs:complexContent>
       <xs:extension base="templateavailabilityprovider>">
         <xs:sequence>
          <xs:element name="providers" type="templateavailabilityprovider" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="cache_limit" type="xs:long" />
          <xs:element name="none" type="templateavailabilityprovider" nillable="true" minOccurs="0" />
          <xs:element name="resolved" type="xs:anyType" />
          <xs:element name="cache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractviewresolverproperties" >
      <xs:sequence>
        <xs:element name="default_content_type" type="xs:anyType" />
        <xs:element name="default_" type="xs:anyType" />
        <xs:element name="/***whethertoenablemvcviewresolutionforthistechnology.*/enabled" type="xs:anyType" />
        <xs:element name="/***whethertoenabletemplatecaching.*/cache" type="xs:anyType" />
        <xs:element name="/***content-typevalue.*/contenttype" type="xs:anyType" />
        <xs:element name="/***templateencoding.*/" type="xs:anyType" />
        <xs:element name="viewnames" type="xs:string" />
        <xs:element name="/***whethertocheckthatthetemplateslocationexists.*/checktemplatelocation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstracttemplateviewresolverproperties" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="/***prefixthatgetsprependedtoviewnameswhenbuildingaurl.*/prefix" type="xs:string" />
          <xs:element name="/***suffixthatgetsappendedtoviewnameswhenbuildingaurl.*/suffix" type="xs:string" />
          <xs:element name="/***nameoftherequestcontextattributeforallviews.*/requestcontextattribute" type="xs:string" />
          <xs:element name="/***whetherallrequestattributesshouldbeaddedtothemodelpriortomergingwith*thetemplate.*/exposerequestattributes" type="xs:anyType" />
          <xs:element name="/***whetherallhttpsessionattributesshouldbeaddedtothemodelpriortomerging*withthetemplate.*/exposesessionattributes" type="xs:anyType" />
          <xs:element name="/***whetherhttpservletrequestattributesareallowedtooverride(hide)controller*generatedmodelattributesofthesamename.*/allowrequestoverride" type="xs:anyType" />
          <xs:element name="/***whethertoexposearequestcontextforusebyspring'smacrolibrary,underthe*name"springmacrorequestcontext".*/exposespringmacrohelpers" type="xs:anyType" />
          <xs:element name="/***whetherhttpsessionattributesareallowedtooverride(hide)controllergenerated*modelattributesofthesamename.*/allowsessionoverride" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="templatelocation" >
      <xs:sequence>
        <xs:element name="path" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="templateavailabilityprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourceinitializationconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jndidatasourceautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourcepoolmetadataprovidersconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcoperationsdependsonpostprocessor" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedparameterjdbcoperationsdependsonpostprocessor" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datasourceproperties" >
      <xs:complexContent>
       <xs:extension base="datasource>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="/***nameofthedatasource.defaultto"testdb"whenusinganembeddeddatabase.*/name" type="xs:string" />
          <xs:element name="/***whethertogeneratearandomdatasourcename.*/generateuniquename" type="xs:anyType" />
          <xs:element name="/***fullyqualifiednameoftheconnectionpoolimplementationtouse.bydefault,it*isauto-detectedfromtheclasspath.*/type" type="xs:anyType" />
          <xs:element name="/***fullyqualifiednameofthejdbcdriver.auto-detectedbasedontheurlbydefault.*/driverclassname" type="xs:string" />
          <xs:element name="/***jdbcurlofthedatabase.*/url" type="xs:string" />
          <xs:element name="/***loginusernameofthedatabase.*/username" type="xs:string" />
          <xs:element name="/***loginpasswordofthedatabase.*/password" type="xs:string" />
          <xs:element name="/***jndilocationofthedatasource.class,url,username&passwordareignoredwhen*set.*/jndiname" type="xs:string" />
          <xs:element name="/***initializethedatasourcewithavailableddlanddmlscripts.*/initializationmode" type="xs:anyType" />
          <xs:element name="/***platformtouseintheddlordmlscripts(suchasschema-${platform}.sqlor*data-${platform}.sql).*/platform" type="xs:string" />
          <xs:element name="/***schema(ddl)scriptresourcereferences.*/schema" type="xs:anyType" />
          <xs:element name="/***usernameofthedatabasetoexecuteddlscripts(ifdifferent).*/schemausername" type="xs:string" />
          <xs:element name="/***passwordofthedatabasetoexecuteddlscripts(ifdifferent).*/schemapassword" type="xs:string" />
          <xs:element name="/***data(dml)scriptresourcereferences.*/data" type="xs:anyType" />
          <xs:element name="/***usernameofthedatabasetoexecutedmlscripts(ifdifferent).*/datausername" type="xs:string" />
          <xs:element name="/***passwordofthedatabasetoexecutedmlscripts(ifdifferent).*/datapassword" type="xs:string" />
          <xs:element name="/***whethertostopifanerroroccurswhileinitializingthedatabase.*/continueonerror" type="xs:anyType" />
          <xs:element name="/***statementseparatorinsqlinitializationscripts.*/separator" type="xs:string" />
          <xs:element name="/***sqlscriptsencoding.*/sqlscriptencoding" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="uniquename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcproperties" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="template" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddeddatasourceconfiguration" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xadatasourceautoconfiguration" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourceschemacreatedevent" >
      <xs:complexContent>
       <xs:extension base="applicationevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datasourceconfiguration" >
      <xs:complexContent>
       <xs:extension base="datasource>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datasourceinitializerpostprocessor" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbctemplateautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourceinitializerinvoker" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="datasource" type="xs:anyType" />
        <xs:element name="properties" type="datasourceproperties" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="datasourceinitializer" nillable="true" minOccurs="0" />
        <xs:element name="initialized" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourcetransactionmanagerautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourcejmxconfiguration" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hikaridriverconfigurationfailureanalyzer" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="expected_message" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datasourceinitializer" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="properties" type="datasourceproperties" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourcebeancreationfailureanalyzer" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datasourceautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="anynestedcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="influxdbautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="influxdbokhttpclientbuilderprovider" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="influxdbproperties" >
      <xs:sequence>
        <xs:element name="/***urloftheinfluxdbinstancetowhichtoconnect.*/url" type="xs:string" />
        <xs:element name="/***loginuser.*/user" type="xs:string" />
        <xs:element name="/***loginpassword.*/password" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="importautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sendgridautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sendgridproperties" >
      <xs:sequence>
        <xs:element name="/***sendgridapikey.*/apikey" type="xs:string" />
        <xs:element name="/***configuration.*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groovytemplateproperties" >
      <xs:complexContent>
       <xs:extension base="abstracttemplateviewresolverproperties">
         <xs:sequence>
          <xs:element name="default_resource_loader_path" type="xs:string" />
          <xs:element name="default_prefix" type="xs:string" />
          <xs:element name="default_suffix" type="xs:string" />
          <xs:element name="default_request_context_attribute" type="xs:string" />
          <xs:element name="/***templatepath.*/resourceloaderpath" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="groovytemplateautoconfiguration" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groovytemplateavailabilityprovider" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceexceptiontranslationautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatejpaconfiguration" >
      <xs:complexContent>
       <xs:extension base="jpabaseconfiguration">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="jta_platform" type="xs:string" />
          <xs:element name="provider_disables_autocommit" type="xs:string" />
          <xs:element name="no_jta_platform_classes" type="xs:string" />
          <xs:element name="" type="hibernateproperties" nillable="true" minOccurs="0" />
          <xs:element name="defaultddlautoprovider" type="hibernatedefaultddlautoprovider" nillable="true" minOccurs="0" />
          <xs:element name="poolmetadataprovider" type="xs:anyType" />
          <xs:element name="hibernatepropertiescustomizers" type="hibernatepropertiescustomizer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpabaseconfiguration" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="properties" type="jpaproperties" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="beanfactory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaproperties" >
      <xs:sequence>
        <xs:element name="properties" type="xs:anyType" />
        <xs:element name="/***mappingresources(equivalentto"mapping-file"entriesinpersistence.xml).*/mappingresources" type="xs:anyType" />
        <xs:element name="/***nameofthetargetdatabasetooperateon,auto-detectedbydefault.canbe*alternativelysetusingthe"database"enum.*/databaseplatform" type="xs:string" />
        <xs:element name="/***targettooperateon,auto-detectedbydefault.canbealternativelyset*usingthe"platform"property.*/" type="xs:anyType" />
        <xs:element name="/***whethertoinitializetheschemaonstartup.*/generateddl" type="xs:anyType" />
        <xs:element name="/***whethertoenableloggingofsqlstatements.*/showsql" type="xs:anyType" />
        <xs:element name="/***registeropenentitymanagerinviewinterceptor.bindsajpaentitymanagertothe*threadfortheentireprocessingoftherequest.*/openinview" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateproperties" >
      <xs:sequence>
        <xs:element name="disabled_scanner_class" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="/***ddlmode.thisisactuallyashortcutforthe"hibernate.hbm2ddl.auto"property.*defaultsto"create-drop"whenusinganembeddeddatabaseandnoschemamanagerwas*detected.otherwise,defaultsto"none".*/ddlauto" type="xs:string" />
        <xs:element name="/***whethertousehibernate'sneweridentifiergeneratorforauto,tableandsequence.*thisisactuallyashortcutforthe"hibernate.id.new_generator_mappings"property.*whennotspecifiedwilldefaultto"true".*/usenewidgeneratormappings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatesettings" >
      <xs:sequence>
        <xs:element name="ddlauto" type="xs:anyType" />
        <xs:element name="hibernatepropertiescustomizers" type="hibernatepropertiescustomizer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourceinitializedpublisher" >
      <xs:complexContent>
       <xs:extension base="entitymanagerfactory>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="jpaproperties" nillable="true" minOccurs="0" />
          <xs:element name="" type="hibernateproperties" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatedefaultddlautoprovider" >
      <xs:sequence>
        <xs:element name="providers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="databaselookup" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="lookup" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatepropertiescustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatejpaautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymanagerfactorybuildercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aopautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hateoasproperties" >
      <xs:sequence>
        <xs:element name="/***whetherapplication/hal+jsonresponsesshouldbesenttorequeststhataccept*application/json.*/usehalasdefaultjsonmediatype" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hypermediaautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hypermediahttpmessageconverterconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurationmetadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nosuchbeandefinitionfailureanalyzer" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="beanfactory" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="report" type="conditionevaluationreport" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicbatchconfigurer" >
      <xs:sequence>
        <xs:element name="properties" type="batchproperties" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="transactionmanager" type="xs:anyType" />
        <xs:element name="GeneratedName" type="transactionmanagercustomizers" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpabatchconfigurer" >
      <xs:complexContent>
       <xs:extension base="basicbatchconfigurer">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobexecutionexitcodegenerator" >
      <xs:sequence>
        <xs:element name="executions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchautoconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="batchproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchdatasourceinitializer" >
      <xs:complexContent>
       <xs:extension base="abstractdatasourceinitializer">
         <xs:sequence>
          <xs:element name="properties" type="batchproperties" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joblaunchercommandlinerunner" >
      <xs:sequence>
        <xs:element name="/***thedefaultorderforthecommandlinerunner.*/default_order" type="xs:long" />
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="converter" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="jobnames" type="xs:string" />
        <xs:element name="jobs" type="xs:anyType" />
        <xs:element name="order" type="xs:long" />
        <xs:element name="publisher" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchconfigurerconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchproperties" >
      <xs:sequence>
        <xs:element name="default_schema_location" type="xs:string" />
        <xs:element name="/***pathtothesqlfiletousetoinitializethedatabaseschema.*/schema" type="xs:string" />
        <xs:element name="/***tableprefixforallthebatchmeta-datatables.*/tableprefix" type="xs:string" />
        <xs:element name="/***databaseschemainitializationmode.*/initializeschema" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobexecutionevent" >
      <xs:complexContent>
       <xs:extension base="applicationevent">
         <xs:sequence>
          <xs:element name="execution" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoconfigureafter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityscanner" >
      <xs:complexContent>
       <xs:extension base="annotation>...">
         <xs:sequence>
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityscan" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityscanpackages" >
      <xs:sequence>
        <xs:element name="bean" type="xs:string" />
        <xs:element name="none" type="entityscanpackages" nillable="true" minOccurs="0" />
        <xs:element name="packagenames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jmxautoconfiguration" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentawarenamingstrategy" >
      <xs:complexContent>
       <xs:extension base="metadatanamingstrategy">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="ensureuniqueruntimeobjectnames" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="backgroundpreinitializer" >
      <xs:sequence>
        <xs:element name="/***systempropertythatinstructsspringboothowtorunpreinitialization.whenthe*propertyissetto{@codetrue},nopre-initializationhappensandeachitemis*initializedintheforegroundasitneedsto.whenthepropertyis{@codefalse}*(default),preinitializationrunsinaseparatethreadinthebackground.*@since2.1.0*/ignore_backgroundpreinitializer_property_name" type="xs:string" />
        <xs:element name="preinitializationstarted" type="xs:anyType" />
        <xs:element name="preinitializationcomplete" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rabbitannotationdrivenconfiguration" >
      <xs:sequence>
        <xs:element name="messageconverter" type="xs:anyType" />
        <xs:element name="messagerecoverer" type="xs:anyType" />
        <xs:element name="retrytemplatecustomizers" type="rabbitretrytemplatecustomizer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="properties" type="rabbitproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rabbitproperties" >
      <xs:complexContent>
       <xs:extension base="amqpcontainer">
         <xs:sequence>
          <xs:element name="/***rabbitmqhost.*/host" type="xs:string" />
          <xs:element name="/***rabbitmqport.*/port" type="xs:long" />
          <xs:element name="/***loginusertoauthenticatetothebroker.*/username" type="xs:string" />
          <xs:element name="/***logintoauthenticateagainstthebroker.*/password" type="xs:string" />
          <xs:element name="/***configuration.*/" type="xs:anyType" />
          <xs:element name="/***virtualhosttousewhenconnectingtothebroker.*/virtualhost" type="xs:string" />
          <xs:element name="/***comma-separatedlistofaddressestowhichtheclientshouldconnect.*/addresses" type="xs:string" />
          <xs:element name="/***requestedheartbeattimeoutzerofornone.ifasuffixisnotspecified,*secondswillbeused.*/requestedheartbeat" type="xs:anyType" />
          <xs:element name="/***whethertoenablepublisherconfirms.*/publisherconfirms" type="xs:anyType" />
          <xs:element name="/***whethertoenablepublisherreturns.*/publisherreturns" type="xs:anyType" />
          <xs:element name="/***connectiontimeout.setittozerotowaitforever.*/connectiontimeout" type="xs:anyType" />
          <xs:element name="/***configuration.*/" type="xs:anyType" />
          <xs:element name="/***containerconfiguration.*/" type="xs:anyType" />
          <xs:element name="" type="template" nillable="true" minOccurs="0" />
          <xs:element name="parsedaddresses" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rabbitautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="directrabbitlistenercontainerfactoryconfigurer" >
      <xs:complexContent>
       <xs:extension base="		abstractrabbitlistenercontainerfactoryconfigurer<directrabbitlistenercontainerfactory>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplerabbitlistenercontainerfactoryconfigurer" >
      <xs:complexContent>
       <xs:extension base="		abstractrabbitlistenercontainerfactoryconfigurer<simplerabbitlistenercontainerfactory>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractrabbitlistenercontainerfactoryconfigurer" >
      <xs:complexContent>
       <xs:extension base="abstractrabbitlistenercontainerfactory<?>>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="retrytemplatecustomizers" type="rabbitretrytemplatecustomizer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="rabbitproperties" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rabbitretrytemplatecustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="retrytemplatefactory" >
      <xs:sequence>
        <xs:element name="customizers" type="rabbitretrytemplatecustomizer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurationpackages" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="bean" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flywaymigrationscriptmissingexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="locations" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flywaymigrationscriptmissingfailureanalyzer" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flywaymigrationstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flywayproperties" >
      <xs:sequence>
        <xs:element name="/***whethertoenableflyway.*/enabled" type="xs:anyType" />
        <xs:element name="/***whethertocheckthatmigrationscriptslocationexists.*/checklocation" type="xs:anyType" />
        <xs:element name="/***locationsofmigrationsscripts.cancontainthespecial"{vendor}"placeholderto*usevendor-specificlocations.*/locations" type="xs:anyType" />
        <xs:element name="/***encodingofsqlmigrations.*/encoding" type="xs:anyType" />
        <xs:element name="/***maximumnumberofretrieswhenattemptingtoconnecttothedatabase.*/connectretries" type="xs:long" />
        <xs:element name="/***schemenamesmanagedbyflyway(case-sensitive).*/schemas" type="xs:anyType" />
        <xs:element name="/***nameoftheschemaschemahistorytablethatwillbeusedbyflyway.*/table" type="xs:string" />
        <xs:element name="/***descriptiontotaganexistingschemawithwhenapplyingabaseline.*/baselinedescription" type="xs:string" />
        <xs:element name="/***versiontotaganexistingschemawithwhenexecutingbaseline.*/baselineversion" type="xs:string" />
        <xs:element name="/***usernamerecordedintheschemahistorytableashavingappliedthemigration.*/installedby" type="xs:string" />
        <xs:element name="placeholders" type="xs:anyType" />
        <xs:element name="/***prefixofplaceholdersinmigrationscripts.*/placeholderprefix" type="xs:string" />
        <xs:element name="/***suffixofplaceholdersinmigrationscripts.*/placeholdersuffix" type="xs:string" />
        <xs:element name="/***performplaceholderreplacementinmigrationscripts.*/placeholderreplacement" type="xs:anyType" />
        <xs:element name="/***filenameprefixforsqlmigrations.*/sqlmigrationprefix" type="xs:string" />
        <xs:element name="/***filenamesuffixforsqlmigrations.*/sqlmigrationsuffixes" type="xs:anyType" />
        <xs:element name="/***filenameseparatorforsqlmigrations.*/sqlmigrationseparator" type="xs:string" />
        <xs:element name="/***filenameprefixforrepeatablesqlmigrations.*/repeatablesqlmigrationprefix" type="xs:string" />
        <xs:element name="/***targetversionuptowhichmigrationsshouldbeconsidered.*/target" type="xs:string" />
        <xs:element name="/***jdbcurlofthedatabasetomigrate.ifnotset,theprimaryconfigureddatasource*isused.*/url" type="xs:string" />
        <xs:element name="/***loginuserofthedatabasetomigrate.*/user" type="xs:string" />
        <xs:element name="/***loginpasswordofthedatabasetomigrate.*/password" type="xs:string" />
        <xs:element name="/***sqlstatementstoexecutetoinitializeaconnectionimmediatelyafterobtaining*it.*/initsqls" type="xs:anyType" />
        <xs:element name="/***whethertoautomaticallycallbaselinewhenmigratinganon-emptyschema.*/baselineonmigrate" type="xs:anyType" />
        <xs:element name="/***whethertodisablecleaningofthedatabase.*/cleandisabled" type="xs:anyType" />
        <xs:element name="/***whethertoautomaticallycallcleanwhenavalidationerroroccurs.*/cleanonvalidationerror" type="xs:anyType" />
        <xs:element name="/***whethertogroupallpendingmigrationstogetherinthesametransactionwhen*applyingthem.*/group" type="xs:anyType" />
        <xs:element name="/***whethertoignoremissingmigrationswhenreadingtheschemahistorytable.*/ignoremissingmigrations" type="xs:anyType" />
        <xs:element name="/***whethertoignoreignoredmigrationswhenreadingtheschemahistorytable.*/ignoreignoredmigrations" type="xs:anyType" />
        <xs:element name="/***whethertoignorependingmigrationswhenreadingtheschemahistorytable.*/ignorependingmigrations" type="xs:anyType" />
        <xs:element name="/***whethertoignorefuturemigrationswhenreadingtheschemahistorytable.*/ignorefuturemigrations" type="xs:anyType" />
        <xs:element name="/***whethertoallowmixingtransactionalandnon-transactionalstatementswithinthe*samemigration.*/mixed" type="xs:anyType" />
        <xs:element name="/***whethertoallowmigrationstoberunoutoforder.*/outoforder" type="xs:anyType" />
        <xs:element name="/***whethertoskipdefaultcallbacks.iftrue,onlycustomcallbacksareused.*/skipdefaultcallbacks" type="xs:anyType" />
        <xs:element name="/***whethertoskipdefaultresolvers.iftrue,onlycustomresolversareused.*/skipdefaultresolvers" type="xs:anyType" />
        <xs:element name="/***whethertoautomaticallycallvalidatewhenperformingamigration.*/validateonmigrate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flywaydatasource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flywayconfigurationcustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flywaymigrationinitializer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="migrationstrategy" type="flywaymigrationstrategy" nillable="true" minOccurs="0" />
        <xs:element name="order" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flywayautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flywayschemamanagementprovider" >
      <xs:sequence>
        <xs:element name="flywayinstances" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurebefore" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectinfoautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="properties" type="projectinfoproperties" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectinfoproperties" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="git" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="importautoconfigurationimportselector" >
      <xs:complexContent>
       <xs:extension base="autoconfigurationimportselector">
         <xs:sequence>
          <xs:element name="annotation_names" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reactivewebserverfactoryconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactivewebserverfactorycustomizer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clienthttpconnectorautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webclientautoconfiguration" >
      <xs:sequence>
        <xs:element name="webclientbuilder" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clienthttpconnectorconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webclientcodeccustomizer" >
      <xs:sequence>
        <xs:element name="codeccustomizers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourcehandlerregistrationcustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourcechainresourcehandlerregistrationcustomizer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="resourceproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstracterrorwebexceptionhandler" >
      <xs:complexContent>
       <xs:extension base="void>">
         <xs:sequence>
          <xs:element name="/***currentlyduplicatedfromspringwebfluxhttpwebhandleradapter.*/disconnected_client_exceptions" type="xs:anyType" />
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="resourceproperties" nillable="true" minOccurs="0" />
          <xs:element name="" type="templateavailabilityproviders" nillable="true" minOccurs="0" />
          <xs:element name="messagereaders" type="xs:anyType" />
          <xs:element name="messagewriters" type="xs:anyType" />
          <xs:element name="viewresolvers" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="errorwebfluxautoconfiguration" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaulterrorwebexceptionhandler" >
      <xs:complexContent>
       <xs:extension base="abstracterrorwebexceptionhandler">
         <xs:sequence>
          <xs:element name="series_views" type="xs:anyType" />
          <xs:element name="" type="errorproperties" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="webfluxregistrations" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webfluxproperties" >
      <xs:sequence>
        <xs:element name="/***dateformattouse.forinstance,`dd/mm/yyyy`.*/dateformat" type="xs:string" />
        <xs:element name="/***pathpatternusedforresources.*/pathpattern" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactivewebserverfactoryautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webfluxautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="httphandlerautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onenabledresourcechaincondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="webjar_asset_locator" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourceproperties" >
      <xs:sequence>
        <xs:element name="classpath_resource_locations" type="xs:string" />
        <xs:element name=".*/locations" type="xs:string" />
        <xs:element name="/***whethertoenabledefaultresourcehandling.*/addmappings" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonenabledresourcechain" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resttemplateautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="nonenestedconditions">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="errorproperties" >
      <xs:sequence>
        <xs:element name="/***pathoftheerrorcontroller.*/path" type="xs:string" />
        <xs:element name="/***includethe"exception"attribute.*/includeexception" type="xs:anyType" />
        <xs:element name="/***whentoincludea"stacktrace"attribute.*/" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webconversionservice" >
      <xs:complexContent>
       <xs:extension base="defaultformattingconversionservice">
         <xs:sequence>
          <xs:element name="jsr_354_present" type="xs:anyType" />
          <xs:element name="joda_time_present" type="xs:anyType" />
          <xs:element name="dateformat" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jettywebserverfactorycustomizer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nettywebserverfactorycustomizer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedwebserverfactorycustomizerautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tomcatwebserverfactorycustomizer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="undertowwebserverfactorycustomizer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="servletwebserverfactorycustomizer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="servletwebserverfactoryconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultjerseyapplicationpath" >
      <xs:sequence>
        <xs:element name="applicationpath" type="xs:string" />
        <xs:element name="config" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipartautoconfiguration" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="multipartproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dispatcherservletregistrationbean" >
      <xs:complexContent>
       <xs:extension base="		servletregistrationbean<dispatcherservlet>">
         <xs:sequence>
          <xs:element name="path" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dispatcherservletpath" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tomcatservletwebserverfactorycustomizer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipartproperties" >
      <xs:sequence>
        <xs:element name="/***whethertoenablesupportofmultipartuploads.*/enabled" type="xs:anyType" />
        <xs:element name="/***intermediatelocationofuploadedfiles.*/location" type="xs:string" />
        <xs:element name="/***maxfilesize.*/maxfilesize" type="xs:anyType" />
        <xs:element name="/***maxrequestsize.*/maxrequestsize" type="xs:anyType" />
        <xs:element name="/***thresholdafterwhichfilesarewrittentodisk.*/filesizethreshold" type="xs:anyType" />
        <xs:element name="/***whethertoresolvethemultipartrequestlazilyatthetimeoffileorparameter*access.*/resolvelazily" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="servletwebserverfactoryautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="welcomepagehandlermapping" >
      <xs:complexContent>
       <xs:extension base="abstracturlhandlermapping">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="media_types_all" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="webmvcproperties" >
      <xs:sequence>
        <xs:element name="/***formattingstrategyformessagecodes.forinstance,`prefix_error_code`.*/messagecodesresolverformat" type="xs:anyType" />
        <xs:element name="/***touse.bydefault,thisisoverriddenbythe"accept-language"*header.*/" type="xs:anyType" />
        <xs:element name="/***definehowthelocaleshouldberesolved.*/" type="xs:anyType" />
        <xs:element name="/***dateformattouse.forinstance,`dd/mm/yyyy`.*/dateformat" type="xs:string" />
        <xs:element name="/***whethertodispatchtracerequeststotheframeworkservletdoservicemethod.*/dispatchtracerequest" type="xs:anyType" />
        <xs:element name="/***whethertodispatchoptionsrequeststotheframeworkservletdoservicemethod.*/dispatchoptionsrequest" type="xs:anyType" />
        <xs:element name="/***whetherthecontentofthe"default"modelshouldbeignoredduringredirect*scenarios.*/ignoredefaultmodelonredirect" type="xs:anyType" />
        <xs:element name="/***whethera"nohandlerfoundexception"shouldbethrownifnohandlerwasfoundto*processarequest.*/throwexceptionifnohandlerfound" type="xs:anyType" />
        <xs:element name="/***whethertoenablewarnloggingofexceptionsresolvedbya*"handlerexceptionresolver",exceptfor"defaulthandlerexceptionresolver".*/logresolvedexception" type="xs:anyType" />
        <xs:element name="/***pathpatternusedforresources.*/pathpattern" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="view" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsptemplateavailabilityprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaulterrorviewresolver" >
      <xs:sequence>
        <xs:element name="series_views" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="resourceproperties" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="templateavailabilityproviders" nillable="true" minOccurs="0" />
        <xs:element name="order" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicerrorcontroller" >
      <xs:complexContent>
       <xs:extension base="abstracterrorcontroller">
         <xs:sequence>
          <xs:element name="" type="errorproperties" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="errormvcautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="" type="serverproperties" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracterrorcontroller" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="errorviewresolvers" type="errorviewresolver" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="errorviewresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="httpencodingautoconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dispatcherservletautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="/*	*thebeannameforadispatcherservletthatwillbemappedtotherooturl"/"	*/default_dispatcher_servlet_bean_name" type="xs:string" />
          <xs:element name="/*	*thebeannameforaservletregistrationbeanforthedispatcherservlet"/"	*/default_dispatcher_servlet_registration_bean_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="webmvcautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="resourcehttprequesthandler">
         <xs:sequence>
          <xs:element name="default_prefix" type="xs:string" />
          <xs:element name="default_suffix" type="xs:string" />
          <xs:element name="servlet_locations" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="webmvcregistrations" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jerseyapplicationpath" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonmissingfilterbean" >
      <xs:complexContent>
       <xs:extension base="filter>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serverproperties" >
      <xs:sequence>
        <xs:element name="/***serverhttpport.*/port" type="xs:anyType" />
        <xs:element name="/***networkaddresstowhichtheservershouldbind.*/address" type="xs:anyType" />
        <xs:element name="error" type="errorproperties" nillable="true" minOccurs="0" />
        <xs:element name="/***whetherx-forwarded-*headersshouldbeappliedtothehttprequest.*/useforwardheaders" type="xs:anyType" />
        <xs:element name="/***valuetousefortheserverresponseheader(ifempty,noheaderissent).*/serverheader" type="xs:string" />
        <xs:element name="/***maximumsizeofthehttpmessageheader.*/maxhttpheadersize" type="xs:anyType" />
        <xs:element name="/***timethatconnectorswaitforanotherhttprequestbeforeclosingtheconnection.*whennotset,theconnector'scontainer-specificdefaultisused.useavalueof-1*toindicateno(thatis,aninfinite)timeout.*/connectiontimeout" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurationmetadataloader" >
      <xs:sequence>
        <xs:element name="path" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="h2consoleproperties" >
      <xs:sequence>
        <xs:element name="/***pathatwhichtheconsoleisavailable.*/path" type="xs:string" />
        <xs:element name="/***whethertoenabletheconsole.*/enabled" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="h2consoleautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtaautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bitronixjtaconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jndijtaconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtaproperties" >
      <xs:sequence>
        <xs:element name="/***transactionlogsdirectory.*/logdir" type="xs:string" />
        <xs:element name="/***transactionmanageruniqueidentifier.*/transactionmanagerid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="atomikosjtaconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionmanagercustomizers" >
      <xs:complexContent>
       <xs:extension base="platformtransactionmanagercustomizer<?>>">
         <xs:sequence>
          <xs:element name="customizers" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionproperties" >
      <xs:sequence>
        <xs:element name="/***defaulttransactiontimeout.ifasuffixisnotspecified,secondswillbe*used.*/defaulttimeout" type="xs:anyType" />
        <xs:element name="/***whethertorollbackoncommitfailures.*/rollbackoncommitfailure" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="platformtransactionmanagercustomizer" >
      <xs:complexContent>
       <xs:extension base="platformtransactionmanager>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integrationdatasourceinitializer" >
      <xs:complexContent>
       <xs:extension base="abstractdatasourceinitializer">
         <xs:sequence>
          <xs:element name="properties" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integrationproperties" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integrationautoconfigurationscanregistrar" >
      <xs:complexContent>
       <xs:extension base="integrationcomponentscanregistrar">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integrationautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="freemarkernonwebconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstractfreemarkerconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="freemarkerreactivewebconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstractfreemarkerconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="freemarkertemplateavailabilityprovider" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="freemarkerproperties" >
      <xs:complexContent>
       <xs:extension base="abstracttemplateviewresolverproperties">
         <xs:sequence>
          <xs:element name="default_template_loader_path" type="xs:string" />
          <xs:element name="default_prefix" type="xs:string" />
          <xs:element name="default_suffix" type="xs:string" />
          <xs:element name="settings" type="xs:anyType" />
          <xs:element name="templateloaderpath" type="xs:string" />
          <xs:element name="/***whethertopreferfilesystemaccessfortemplateloading.filesystemaccess*enableshotdetectionoftemplatechanges.*/preferfilesystemaccess" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractfreemarkerconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="freemarkerproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="freemarkerservletwebconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstractfreemarkerconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="freemarkerautoconfiguration" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="properties" type="freemarkerproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springbootapplication" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyplaceholderautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationpropertiesautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messagesourceproperties" >
      <xs:sequence>
        <xs:element name="/***comma-separatedlistofbasenames(essentiallyafully-qualifiedclasspath*location),eachfollowingtheresourcebundleconventionwithrelaxedsupportfor*slashbasedlocations.ifitdoesn'tcontainapackagequalifier(suchas*"org.mypackage"),itwillberesolvedfromtheclasspathroot.*/basename" type="xs:string" />
        <xs:element name="/***messagebundlesencoding.*/encoding" type="xs:anyType" />
        <xs:element name="/***loadedresourcebundlefilescache.whennotset,bundlesarecached*forever.ifasuffixisnotspecified,secondswillbeused.*/cache" type="xs:anyType" />
        <xs:element name="/***whethertofallbacktothesystemlocaleifnofilesforaspecificlocalehave*beenfound.ifthisisturnedoff,theonlyfallbackwillbethedefaultfile(e.g.*"messages.properties"forbasename"messages").*/fallbacktosystemlocale" type="xs:anyType" />
        <xs:element name="/***whethertoalwaysapplythemessageformatrules,parsingevenmessageswithout*arguments.*/alwaysusemessageformat" type="xs:anyType" />
        <xs:element name="/***whethertousethemessagecodeasthedefaultmessageinsteadofthrowinga*"nosuchmessageexception".recommendedduringdevelopmentonly.*/usecodeasdefaultmessage" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messagesourceautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="no_s" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoconfigurationsorter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="autoconfigurationmetadata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gsonproperties" >
      <xs:sequence>
        <xs:element name="/***whethertogeneratenonexecutablejsonbyprefixingtheoutputwithsomespecial*text.*/generatenonexecutablejson" type="xs:anyType" />
        <xs:element name="/***whethertoexcludeallfieldsfromconsiderationforserializationor*deserializationthatdonothavethe"expose"annotation.*/excludefieldswithoutexposeannotation" type="xs:anyType" />
        <xs:element name="/***whethertoserializenullfields.*/serializenulls" type="xs:anyType" />
        <xs:element name="/***whethertoenableserializationofcomplexmapkeys(i.e.non-primitives).*/enablecomplexmapkeyserialization" type="xs:anyType" />
        <xs:element name="/***whethertoexcludeinnerclassesduringserialization.*/disableinnerclassserialization" type="xs:anyType" />
        <xs:element name="/***serializationpolicyforlongandlongtypes.*/" type="xs:anyType" />
        <xs:element name="/***namingpolicythatshouldbeappliedtoanobject'sfieldduringserializationand*deserialization.*/" type="xs:anyType" />
        <xs:element name="/***whethertooutputserializedjsonthatfitsinapageforprettyprinting.*/prettyprinting" type="xs:anyType" />
        <xs:element name="/***whethertobelenientaboutparsingjsonthatdoesn'tconformtorfc4627.*/lenient" type="xs:anyType" />
        <xs:element name="',etc.*/disablehtmlescaping" type="xs:anyType" />
        <xs:element name="/***formattousewhenserializingdateobjects.*/dateformat" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gsonautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gsonbuildercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springapplicationadminjmxautoconfiguration" >
      <xs:sequence>
        <xs:element name="/***thepropertytousetocustomizethe{@codeobjectname}oftheapplicationadmin*mbean.*/jmx_name_property" type="xs:string" />
        <xs:element name="/***thedefault{@codeobjectname}oftheapplicationadminmbean.*/default_jmx_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurationexcludefilter" >
      <xs:sequence>
        <xs:element name="bean" type="xs:anyType" />
        <xs:element name="volatileautoconfigurations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quartzautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="quartzdatasource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quartzproperties" >
      <xs:sequence>
        <xs:element name="/***quartzjobstoretype.*/" type="jobstoretype" nillable="true" minOccurs="0" />
        <xs:element name="/***nameofthescheduler.*/schedulername" type="xs:string" />
        <xs:element name="/***whethertoautomaticallystarttheschedulerafterinitialization.*/autostartup" type="xs:anyType" />
        <xs:element name="/***delayafterwhichtheschedulerisstartedonceinitializationcompletes.setting*thispropertymakessenseifnojobsshouldberunbeforetheentireapplication*hasstartedup.*/startupdelay" type="xs:anyType" />
        <xs:element name="/***whethertowaitforrunningjobstocompleteonshutdown.*/waitforjobstocompleteonshutdown" type="xs:anyType" />
        <xs:element name="/***whetherconfiguredjobsshouldoverwriteexistingjobdefinitions.*/overwriteexistingjobs" type="xs:anyType" />
        <xs:element name="properties" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schedulerfactorybeancustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobstoretype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quartzdatasourceinitializer" >
      <xs:complexContent>
       <xs:extension base="abstractdatasourceinitializer">
         <xs:sequence>
          <xs:element name="properties" type="quartzproperties" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="taskschedulingproperties" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="/***prefixtouseforthenamesofnewlycreatedthreads.*/threadnameprefix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="taskexecutionproperties" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="/***prefixtouseforthenamesofnewlycreatedthreads.*/threadnameprefix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="taskexecutionautoconfiguration" >
      <xs:sequence>
        <xs:element name="/***beannameoftheapplication{@linktaskexecutor}.*/application_task_executor_bean_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="taskschedulingautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoproperties" >
      <xs:sequence>
        <xs:element name="/***defaultportusedwhentheconfiguredportis{@codenull}.*/default_port" type="xs:long" />
        <xs:element name="/***defaulturiusedwhentheconfigureduriis{@codenull}.*/default_uri" type="xs:string" />
        <xs:element name="/***mongoserverhost.cannotbesetwithuri.*/host" type="xs:string" />
        <xs:element name="/***mongoserverport.cannotbesetwithuri.*/port" type="xs:anyType" />
        <xs:element name="/***mongodatabaseuri.cannotbesetwithhost,portandcredentials.*/uri" type="xs:string" />
        <xs:element name="/***databasename.*/database" type="xs:string" />
        <xs:element name="/***authenticationdatabasename.*/authenticationdatabase" type="xs:string" />
        <xs:element name="/***gridfsdatabasename.*/gridfsdatabase" type="xs:string" />
        <xs:element name="/***loginuserofthemongoserver.cannotbesetwithuri.*/username" type="xs:string" />
        <xs:element name="password" type="xs:anyType" />
        <xs:element name="/***fullyqualifiednameofthefieldnamingstrategytouse.*/fieldnamingstrategy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedmongoproperties" >
      <xs:sequence>
        <xs:element name="/***versionofmongotouse.*/version" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="/***comma-separatedlistoffeaturestoenable.usesthedefaultsoftheconfigured*versionbydefault.*/features" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="downloadconfigbuildercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedmongoautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="ip4_loopback_address" type="xs:anyType" />
          <xs:element name="ip6_loopback_address" type="xs:anyType" />
          <xs:element name="properties" type="mongoproperties" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reactivemongoclientfactory" >
      <xs:sequence>
        <xs:element name="properties" type="mongoproperties" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="buildercustomizers" type="mongoclientsettingsbuildercustomizer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoreactiveautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoclientfactory" >
      <xs:sequence>
        <xs:element name="properties" type="mongoproperties" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoclientsettingsbuildercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurationimportevent" >
      <xs:complexContent>
       <xs:extension base="eventobject">
         <xs:sequence>
          <xs:element name="candidateconfigurations" type="xs:anyType" />
          <xs:element name="exclusions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jerseyproperties" >
      <xs:sequence>
        <xs:element name="/***jerseyintegration.*/" type="xs:anyType" />
        <xs:element name="init" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="/***paththatservesasthebaseurifortheapplication.ifspecified,overridesthe*valueof"@applicationpath".*/applicationpath" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourceconfigcustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfiguration" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="jersey" type="jerseyproperties" nillable="true" minOccurs="0" />
        <xs:element name="config" type="xs:anyType" />
        <xs:element name="customizers" type="resourceconfigcustomizer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thymeleafautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thymeleaftemplateavailabilityprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thymeleafproperties" >
      <xs:sequence>
        <xs:element name="default_encoding" type="xs:anyType" />
        <xs:element name="default_prefix" type="xs:string" />
        <xs:element name="default_suffix" type="xs:string" />
        <xs:element name="/***whethertocheckthatthetemplateexistsbeforerenderingit.*/checktemplate" type="xs:anyType" />
        <xs:element name="/***whethertocheckthatthetemplateslocationexists.*/checktemplatelocation" type="xs:anyType" />
        <xs:element name="/***prefixthatgetsprependedtoviewnameswhenbuildingaurl.*/prefix" type="xs:string" />
        <xs:element name="/***suffixthatgetsappendedtoviewnameswhenbuildingaurl.*/suffix" type="xs:string" />
        <xs:element name="/***templatemodetobeappliedtotemplates.seealsothymeleaf'stemplatemodeenum.*/mode" type="xs:string" />
        <xs:element name="/***templatefilesencoding.*/encoding" type="xs:anyType" />
        <xs:element name="/***whethertoenabletemplatecaching.*/cache" type="xs:anyType" />
        <xs:element name="/***orderofthetemplateresolverinthechain.bydefault,thetemplateresolveris*firstinthechain.orderstartat1andshouldonlybesetifyouhavedefined*additional"templateresolver"beans.*/templateresolverorder" type="xs:anyType" />
        <xs:element name="viewnames" type="xs:string" />
        <xs:element name="excludedviewnames" type="xs:string" />
        <xs:element name="/***enablethespringelcompilerinspringelexpressions.*/enablespringelcompiler" type="xs:anyType" />
        <xs:element name="/***whetherhiddenforminputsactingasmarkersforcheckboxesshouldberendered*beforethecheckboxelementitself.*/renderhiddenmarkersbeforecheckboxes" type="xs:anyType" />
        <xs:element name="/***whethertoenablethymeleafviewresolutionforwebframeworks.*/enabled" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionevaluationreportlogginglistener" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="applicationcontext" type="xs:anyType" />
        <xs:element name="report" type="conditionevaluationreport" nillable="true" minOccurs="0" />
        <xs:element name="forreport" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionevaluationreportmessage" >
      <xs:sequence>
        <xs:element name="message" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurationimportselector" >
      <xs:complexContent>
       <xs:extension base="group>">
         <xs:sequence>
          <xs:element name="empty_entry" type="xs:anyType" />
          <xs:element name="no_imports" type="xs:string" />
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="property_name_autoconfigure_exclude" type="xs:string" />
          <xs:element name="beanfactory" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="bean" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="liquibasedatasource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="liquibaseproperties" >
      <xs:sequence>
        <xs:element name="/***changelogconfigurationpath.*/changelog" type="xs:string" />
        <xs:element name="/***whethertocheckthatthechangeloglocationexists.*/checkchangeloglocation" type="xs:anyType" />
        <xs:element name="/***comma-separatedlistofruntimecontextstouse.*/contexts" type="xs:string" />
        <xs:element name="/***defaultdatabaseschema.*/defaultschema" type="xs:string" />
        <xs:element name="/***schematouseforliquibaseobjects.*/liquibaseschema" type="xs:string" />
        <xs:element name="/***tablespacetouseforliquibaseobjects.*/liquibasetablespace" type="xs:string" />
        <xs:element name="/***nameoftabletousefortrackingchangehistory.*/databasechangelogtable" type="xs:string" />
        <xs:element name="/***nameoftabletousefortrackingconcurrentliquibaseusage.*/databasechangeloglocktable" type="xs:string" />
        <xs:element name="/***whethertofirstdropthedatabaseschema.*/dropfirst" type="xs:anyType" />
        <xs:element name="/***whethertoenableliquibasesupport.*/enabled" type="xs:anyType" />
        <xs:element name="/***loginuserofthedatabasetomigrate.*/user" type="xs:string" />
        <xs:element name="/***loginpasswordofthedatabasetomigrate.*/password" type="xs:string" />
        <xs:element name="/***jdbcurlofthedatabasetomigrate.ifnotset,theprimaryconfigureddatasource*isused.*/url" type="xs:string" />
        <xs:element name="/***comma-separatedlistofruntimelabelstouse.*/labels" type="xs:string" />
        <xs:element name="parameters" type="xs:anyType" />
        <xs:element name="/***towhichrollbacksqliswrittenwhenanupdateisperformed.*/rollback" type="xs:anyType" />
        <xs:element name="/***whetherrollbackshouldbetestedbeforeupdateisperformed.*/testrollbackonupdate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourceclosingspringliquibase" >
      <xs:complexContent>
       <xs:extension base="springliquibase">
         <xs:sequence>
          <xs:element name="volatileclosedatasourceoncemigrated" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="liquibaseautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="liquibaseschemamanagementprovider" >
      <xs:sequence>
        <xs:element name="liquibaseinstances" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webservicesproperties" >
      <xs:sequence>
        <xs:element name="/***paththatservesasthebaseurifortheservices.*/path" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webservicesautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webservicetemplateautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onwsdllocationscondition" >
      <xs:complexContent>
       <xs:extension base="onpropertylistcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mailsenderjndiconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="mailproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mailsendervalidatorautoconfiguration" >
      <xs:sequence>
        <xs:element name="mailsender" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mailproperties" >
      <xs:sequence>
        <xs:element name="default_" type="xs:anyType" />
        <xs:element name="/***smtpserverhost.forinstance,`smtp.example.com`.*/host" type="xs:string" />
        <xs:element name="/***smtpserverport.*/port" type="xs:anyType" />
        <xs:element name="/***loginuserofthesmtpserver.*/username" type="xs:string" />
        <xs:element name="/***loginpasswordofthesmtpserver.*/password" type="xs:string" />
        <xs:element name="/***protocolusedbythesmtpserver.*/protocol" type="xs:string" />
        <xs:element name="/***defaultmimemessageencoding.*/defaultencoding" type="xs:anyType" />
        <xs:element name="properties" type="xs:anyType" />
        <xs:element name="/***sessionjndiname.whenset,takesprecedenceoverothersessionsettings.*/jndiname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mailsenderautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="anynestedcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mailsenderpropertiesconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurationimportlistener" >
      <xs:complexContent>
       <xs:extension base="eventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoconfigurationimportfilter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheproperties" >
      <xs:sequence>
        <xs:element name="/***cachetype.bydefault,auto-detectedaccordingtotheenvironment.*/type" type="cachetype" nillable="true" minOccurs="0" />
        <xs:element name="/***comma-separatedlistofcachenamestocreateifsupportedbytheunderlyingcache*manager.usually,thisdisablestheabilitytocreateadditionalcacheson-the-fly.*/cachenames" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="ehcache" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="infinispan" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jcachepropertiescustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rediscacheconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcastcacheconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachemanagercustomizers" >
      <xs:complexContent>
       <xs:extension base="cachemanagercustomizer<?>>">
         <xs:sequence>
          <xs:element name="customizers" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="noopcacheconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheconfigurations" >
      <xs:sequence>
        <xs:element name="mappings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachecondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericcacheconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplecacheconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="caffeinecacheconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachemanagercustomizer" >
      <xs:complexContent>
       <xs:extension base="cachemanager>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="couchbasecacheconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jcachemanagercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcastjcachecustomizationconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ehcachecacheconfiguration" >
      <xs:complexContent>
       <xs:extension base="resourcecondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="infinispancacheconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jcachecacheconfiguration" >
      <xs:complexContent>
       <xs:extension base="anynestedcondition">
         <xs:sequence>
          <xs:element name="bean" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="securitydataconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactivesecurityautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactiveuserdetailsserviceautoconfiguration" >
      <xs:sequence>
        <xs:element name="noop_password_prefix" type="xs:string" />
        <xs:element name="password_algorithm_" type="xs:anyType" />
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="staticresourcerequest" >
      <xs:sequence>
        <xs:element name="instance" type="staticresourcerequest" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pathrequest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securityfilterautoconfiguration" >
      <xs:sequence>
        <xs:element name="default_filter_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="websecurityenablerconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springbootwebsecurityconfiguration" >
      <xs:complexContent>
       <xs:extension base="websecurityconfigureradapter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jerseyrequestmatcherprovider" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="jerseyapplicationpath" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securityautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mvcrequestmatcherprovider" >
      <xs:sequence>
        <xs:element name="introspector" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pathrequest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="requestmatcherprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetailsserviceautoconfiguration" >
      <xs:sequence>
        <xs:element name="noop_password_prefix" type="xs:string" />
        <xs:element name="password_algorithm_" type="xs:anyType" />
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securityrequestmatcherproviderautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="staticresourcerequest" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="staticresourcerequest" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="staticresourcelocation" >
      <xs:sequence>
        <xs:element name="patterns" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securityproperties" >
      <xs:sequence>
        <xs:element name="/***orderappliedtothewebsecurityconfigureradapterthatisusedtoconfigurebasic*authenticationforapplicationendpos.ifyouwanttoaddyourown*authenticationforallorsomeofthoseendposthebestthingtodoistoadd*yourownwebsecurityconfigureradapterwithlowerorder.*/basic_auth_order" type="xs:long" />
        <xs:element name="/***orderappliedtothewebsecurityconfigurerthatignoresstandardresource*paths.*/ignored_order" type="xs:long" />
        <xs:element name="/***defaultorderofspringsecurity'sfilterintheservletcontainer(i.e.amongst*otherfiltersregisteredwiththecontainer).thereisnoconnectionbetweenthis*andthe{@code@order}onawebsecurityconfigurer.*/default_filter_order" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="user" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oauth2resourceserverwebsecurityconfiguration" >
      <xs:complexContent>
       <xs:extension base="websecurityconfigureradapter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oauth2resourceserverjwtconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oauth2resourceserverautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oauth2resourceserverproperties" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="issueruricondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactiveoauth2resourceserverautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactiveoauth2resourceserverwebsecurityconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactiveoauth2resourceserverjwkconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="oauth2resourceserverproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oauth2clientproperties" >
      <xs:sequence>
        <xs:element name="provider" type="xs:anyType" />
        <xs:element name="registration" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactiveoauth2clientautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="nonenestedconditions">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clientsconfiguredcondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="string_registration_map" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oauth2clientpropertiesregistrationadapter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oauth2clientautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oauth2clientregistrationrepositoryconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oauth2websecurityconfiguration" >
      <xs:complexContent>
       <xs:extension base="websecurityconfigureradapter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ldapproperties" >
      <xs:sequence>
        <xs:element name="default_port" type="xs:long" />
        <xs:element name="urls" type="xs:string" />
        <xs:element name="/***basesuffixfromwhichalloperationsshouldoriginate.*/base" type="xs:string" />
        <xs:element name="/***loginusernameoftheserver.*/username" type="xs:string" />
        <xs:element name="/***loginpasswordoftheserver.*/password" type="xs:string" />
        <xs:element name="/***whetherread-onlyoperationsshoulduseananonymousenvironment.*/anonymousreadonly" type="xs:anyType" />
        <xs:element name="baseenvironment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ldapautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedldapautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="property_source_name" type="xs:string" />
          <xs:element name="embeddedproperties" type="embeddedldapproperties" nillable="true" minOccurs="0" />
          <xs:element name="server" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedldapproperties" >
      <xs:sequence>
        <xs:element name="/***embeddedldapport.*/port" type="xs:long" />
        <xs:element name="/***embeddedldaps.*/" type="xs:anyType" />
        <xs:element name="/***listofbasedns.*/basedn" type="xs:anyType" />
        <xs:element name="/***schema(ldif)scriptresourcereference.*/ldif" type="xs:string" />
        <xs:element name="/***schema.*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cloudserviceconnectorsautoconfiguration" >
      <xs:sequence>
        <xs:element name="//cloudconfigurationneedstohappenearly(beforedata,mongoetc.)order" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractdependsonbeanfactorypostprocessor" >
      <xs:complexContent>
       <xs:extension base="factorybean<?>>">
         <xs:sequence>
          <xs:element name="beanclass" type="xs:anyType" />
          <xs:element name="factorybeanclass" type="xs:anyType" />
          <xs:element name="dependson" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="anynestedcondition" >
      <xs:complexContent>
       <xs:extension base="anynestedcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onpropertylistcondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="string_list" type="xs:anyType" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="messagebuilder" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionmessage" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="message" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onclasscondition" >
      <xs:complexContent>
       <xs:extension base="filteringspringbootcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onbeancondition" >
      <xs:complexContent>
       <xs:extension base="filteringspringbootcondition">
         <xs:sequence>
          <xs:element name="/***beandefinitionattributenameforfactorybeanstosignaltheirproducttype(if*knownanditcan'tbededucedfromthefactorybeanclass).*/factory_bean_object_type" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beantyperegistry" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="factory_bean_object_type" type="xs:string" />
          <xs:element name="bean_name" type="xs:string" />
          <xs:element name="beanfactory" type="xs:anyType" />
          <xs:element name="beantypes" type="xs:anyType" />
          <xs:element name="beandefinitions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onjndicondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonresource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonenestedconditions" >
      <xs:complexContent>
       <xs:extension base="noneofnestedconditions">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onjavacondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="jvm_version" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="allnestedconditions" >
      <xs:complexContent>
       <xs:extension base="allnestedconditions">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonnotwebapplication" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonjava" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onresourcecondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="default" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonproperty" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filteringspringbootcondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="bean" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionaloncloudplatform" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourcecondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="property" type="xs:string" />
          <xs:element name="resourcelocations" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oncloudplatformcondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonsinglecandidate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonjndi" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="searchstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonmissingbean" >
      <xs:complexContent>
       <xs:extension base="annotation>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionevaluationreport" >
      <xs:sequence>
        <xs:element name="bean_name" type="xs:string" />
        <xs:element name="ancestor_condition" type="xs:anyType" />
        <xs:element name="outcomes" type="xs:anyType" />
        <xs:element name="addedancestoroutcomes" type="xs:anyType" />
        <xs:element name="parent" type="conditionevaluationreport" nillable="true" minOccurs="0" />
        <xs:element name="exclusions" type="xs:anyType" />
        <xs:element name="unconditionalclasses" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onexpressioncondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onwebapplicationcondition" >
      <xs:complexContent>
       <xs:extension base="filteringspringbootcondition">
         <xs:sequence>
          <xs:element name="servlet_web_application_class" type="xs:string" />
          <xs:element name="reactive_web_application_class" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonmissingclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonexpression" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionoutcome" >
      <xs:sequence>
        <xs:element name="match" type="xs:anyType" />
        <xs:element name="message" type="conditionmessage" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionevaluationreportautoconfigurationimportlistener" >
      <xs:sequence>
        <xs:element name="beanfactory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractnestedcondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onpropertycondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonbean" >
      <xs:complexContent>
       <xs:extension base="annotation>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springbootcondition" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonwebapplication" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="kafkaautoconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="kafkaproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="kafkaproperties" >
      <xs:complexContent>
       <xs:extension base="hashmap<string,">
         <xs:sequence>
          <xs:element name="/***comma-delimitedlistofhost:portpairstouseforestablishingtheinitial*connectionstothekafkacluster.appliestoallcomponentsunlessoverridden.*/bootstrapservers" type="xs:anyType" />
          <xs:element name="/***idtopasstotheserverwhenmakingrequests.usedforserver-sidelogging.*/clientid" type="xs:string" />
          <xs:element name="properties" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="template" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="kafkaannotationdrivenconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="kafkaproperties" nillable="true" minOccurs="0" />
        <xs:element name="messageconverter" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="kafkatemplate" type="xs:anyType" />
        <xs:element name="transactionmanager" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="afterrollbackprocessor" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="kafkastreamsannotationdrivenconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="kafkaproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentkafkalistenercontainerfactoryconfigurer" >
      <xs:sequence>
        <xs:element name="properties" type="kafkaproperties" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="replytemplate" type="xs:anyType" />
        <xs:element name="transactionmanager" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="afterrollbackprocessor" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jacksonhttpmessageconvertersconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="codecsautoconfiguration" >
      <xs:sequence>
        <xs:element name="empty_mime_types" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="httpmessageconverters" >
      <xs:sequence>
        <xs:element name="non_replacing_converters" type="xs:anyType" />
        <xs:element name="converters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="httpproperties" >
      <xs:sequence>
        <xs:element name="/***whetherloggingof(potentiallysensitive)requestdetailsatdebugandtracelevel*isallowed.*/logrequestdetails" type="xs:anyType" />
        <xs:element name="/***httpproperties.*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="httpmessageconvertersautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="nonenestedconditions">
         <xs:sequence>
          <xs:element name="preferred_mapper_property" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gsonhttpmessageconvertersconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jsonbhttpmessageconvertersconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoconfigurationpackage" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigureorder" >
      <xs:sequence>
        <xs:element name="default_order" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcastinstancefactory" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcastclientconfiguration" >
      <xs:complexContent>
       <xs:extension base="hazelcastconfigresourcecondition">
         <xs:sequence>
          <xs:element name="config_system_property" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hazelcastclientfactory" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcastserverconfiguration" >
      <xs:complexContent>
       <xs:extension base="hazelcastconfigresourcecondition">
         <xs:sequence>
          <xs:element name="config_system_property" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hazelcastautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcastjpadependencyautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="allnestedconditions">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hazelcastproperties" >
      <xs:sequence>
        <xs:element name="/***thelocationoftheconfigurationfiletousetoinitializehazelcast.*/config" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcastconfigresourcecondition" >
      <xs:complexContent>
       <xs:extension base="resourcecondition">
         <xs:sequence>
          <xs:element name="configsystemproperty" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcsessiondatasourceinitializer" >
      <xs:complexContent>
       <xs:extension base="abstractdatasourceinitializer">
         <xs:sequence>
          <xs:element name="properties" type="jdbcsessionproperties" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="redissessionproperties" >
      <xs:sequence>
        <xs:element name="default_cleanup_cron" type="xs:string" />
        <xs:element name="/***namespaceforkeysusedtostoresessions.*/namespace" type="xs:string" />
        <xs:element name="/***sessionsflushmode.*/flushmode" type="xs:anyType" />
        <xs:element name="/***cronexpressionforexpiredsessioncleanupjob.*/cleanupcron" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionrepositoryfilterconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoreactivesessionconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reactivesessioncondition" >
      <xs:complexContent>
       <xs:extension base="abstractsessioncondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="noopreactivesessionconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonuniquesessionrepositoryexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="availablecandidates" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcsessionproperties" >
      <xs:sequence>
        <xs:element name="default_schema_location" type="xs:string" />
        <xs:element name="default_table_name" type="xs:string" />
        <xs:element name="default_cleanup_cron" type="xs:string" />
        <xs:element name="/***pathtothesqlfiletousetoinitializethedatabaseschema.*/schema" type="xs:string" />
        <xs:element name="/***nameofthedatabasetableusedtostoresessions.*/tablename" type="xs:string" />
        <xs:element name="/***cronexpressionforexpiredsessioncleanupjob.*/cleanupcron" type="xs:string" />
        <xs:element name="/***databaseschemainitializationmode.*/initializeschema" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcastsessionproperties" >
      <xs:sequence>
        <xs:element name="/***nameofthemapusedtostoresessions.*/mapname" type="xs:string" />
        <xs:element name="/***sessionsflushmode.*/flushmode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="noopsessionconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonuniquesessionrepositoryfailureanalyzer" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="redissessionconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hazelcastsessionconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="servletsessioncondition" >
      <xs:complexContent>
       <xs:extension base="abstractsessioncondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionrepositoryunavailableexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="" type="storetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcsessionconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="anynestedcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionproperties" >
      <xs:sequence>
        <xs:element name="/***sessionstoretype.*/" type="storetype" nillable="true" minOccurs="0" />
        <xs:element name="/***sessiontimeout.ifasuffixisnotspecified,secondswillbeused.*/timeout" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractsessioncondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionstoremappings" >
      <xs:sequence>
        <xs:element name="mappings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongosessionconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mongosessionproperties" >
      <xs:sequence>
        <xs:element name="/***collectionnameusedtostoresessions.*/collectionname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="redisreactivesessionconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validationautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primarydefaultvalidatorpostprocessor" >
      <xs:sequence>
        <xs:element name="/***thebeannameoftheauto-configuredvalidator.*/validator_bean_name" type="xs:string" />
        <xs:element name="beanfactory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validatoradapter" >
      <xs:sequence>
        <xs:element name="target" type="xs:anyType" />
        <xs:element name="existingbean" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ldaprepositoriesregistrar" >
      <xs:complexContent>
       <xs:extension base="abstractrepositoryconfigurationsourcesupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ldaprepositoriesautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymanagerfactorydependsonpostprocessor" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jparepositoriesautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="anynestedcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jparepositoriesautoconfigureregistrar" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="repositoryrestmvcautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="repositoryrestproperties" >
      <xs:sequence>
        <xs:element name="/***basepathtobeusedbyspringdataresttoexposerepositoryresources.*/basepath" type="xs:string" />
        <xs:element name="/***defaultsizeofpages.*/defaultpagesize" type="xs:anyType" />
        <xs:element name="/***maximumsizeofpages.*/maxpagesize" type="xs:anyType" />
        <xs:element name="/***nameoftheurlqueryparameterthatindicateswhatpagetoreturn.*/pageparamname" type="xs:string" />
        <xs:element name="/***nameoftheurlqueryparameterthatindicateshowmanyresultstoreturnat*once.*/limitparamname" type="xs:string" />
        <xs:element name="/***nameoftheurlqueryparameterthatindicateswhatdirectiontosort*results.*/sortparamname" type="xs:string" />
        <xs:element name="/***strategytousetodeterminewhichrepositoriesgetexposed.*/detectionstrategy" type="xs:anyType" />
        <xs:element name="/***contenttypetouseasadefaultwhennoneisspecified.*/default" type="xs:anyType" />
        <xs:element name="/***whethertoreturnaresponsebodyaftercreatinganentity.*/returnbodyoncreate" type="xs:anyType" />
        <xs:element name="/***whethertoreturnaresponsebodyafterupdatinganentity.*/returnbodyonupdate" type="xs:anyType" />
        <xs:element name="/***whethertoenableenumvaluetranslationthroughthespringdatarestdefault*resourcebundle.*/enableenumtranslation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springbootrepositoryrestconfigurer" >
      <xs:sequence>
        <xs:element name="objectmapperbuilder" type="xs:anyType" />
        <xs:element name="properties" type="repositoryrestproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="repositorytype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onrepositorytypecondition" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonrepositorytype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongodataautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="anynestedcondition">
         <xs:sequence>
          <xs:element name="properties" type="mongoproperties" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reactivestreamsmongoclientdependsonbeanfactorypostprocessor" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mongodataconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongorepositoriesautoconfigureregistrar" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mongoreactivedataautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoreactiverepositoriesautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoreactiverepositoriesautoconfigureregistrar" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mongorepositoriesautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoclientdependsonbeanfactorypostprocessor" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractrepositoryconfigurationsourcesupport" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcrepositoriesautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstractjdbcconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcrepositoriesautoconfigureregistrar" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springdatawebautoconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="springdatawebproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springdatawebproperties" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="solrrepositoriesregistrar" >
      <xs:complexContent>
       <xs:extension base="abstractrepositoryconfigurationsourcesupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="solrrepositoriesautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lettuceclientconfigurationbuildercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="redisrepositoriesautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="redisrepositoriesautoconfigureregistrar" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jedisclientconfigurationbuildercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="redisreactiveautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jedisconnectionconfiguration" >
      <xs:complexContent>
       <xs:extension base="redisconnectionconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="redisautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="redisproperties" >
      <xs:sequence>
        <xs:element name="/***databaseindexusedbytheconnectionfactory.*/database" type="xs:long" />
        <xs:element name="/***connectionurl.overrideshost,port,andpassword.userisignored.example:*redis://user:password@example.com:6379*/url" type="xs:string" />
        <xs:element name="/***redisserverhost.*/host" type="xs:string" />
        <xs:element name="/***loginpasswordoftheredisserver.*/password" type="xs:string" />
        <xs:element name="/***redisserverport.*/port" type="xs:long" />
        <xs:element name="/***whethertoenablesslsupport.*/ssl" type="xs:anyType" />
        <xs:element name="/***connectiontimeout.*/timeout" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="redisconnectionconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="redisproperties" nillable="true" minOccurs="0" />
        <xs:element name="sentinelconfiguration" type="xs:anyType" />
        <xs:element name="clusterconfiguration" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lettuceconnectionconfiguration" >
      <xs:complexContent>
       <xs:extension base="redisconnectionconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="couchbasereactiverepositoriesautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="couchbasereactivedataautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="couchbasedataproperties" >
      <xs:sequence>
        <xs:element name="/***automaticallycreateviewsandindexes.usethemeta-dataprovidedby*"@viewindexed","@n1qlprimaryindexed"and"@n1qlsecondaryindexed".*/autoindex" type="xs:anyType" />
        <xs:element name="/***toapplybydefaultongeneratedqueries.*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="couchbasereactiverepositoriesregistrar" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="couchbaseconfigureradapterconfiguration" >
      <xs:sequence>
        <xs:element name="configuration" type="couchbaseconfiguration" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="couchbaserepositoriesregistrar" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springbootcouchbasereactivedataconfiguration" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="properties" type="couchbasedataproperties" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springbootcouchbaseconfigurer" >
      <xs:sequence>
        <xs:element name="env" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="couchbaserepositoriesautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springbootcouchbasedataconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstractcouchbasedataconfiguration">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="properties" type="couchbasedataproperties" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="couchbasedataautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cassandrareactiverepositoriesautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cassandradataautoconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="cassandraproperties" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cassandrarepositoriesautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cassandrarepositoriesautoconfigureregistrar" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cassandrareactiverepositoriesautoconfigureregistrar" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cassandrareactivedataautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elasticsearchdataautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elasticsearchrepositoriesregistrar" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elasticsearchrepositoriesautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elasticsearchautoconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="elasticsearchproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elasticsearchproperties" >
      <xs:sequence>
        <xs:element name="/***elasticsearchclustername.*/clustername" type="xs:string" />
        <xs:element name="/***comma-separatedlistofclusternodeaddresses.*/clusternodes" type="xs:string" />
        <xs:element name="properties" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="neo4jrepositoriesautoconfigureregistrar" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="neo4jproperties" >
      <xs:sequence>
        <xs:element name="embedded_driver" type="xs:string" />
        <xs:element name="http_driver" type="xs:string" />
        <xs:element name="default_bolt_uri" type="xs:string" />
        <xs:element name="bolt_driver" type="xs:string" />
        <xs:element name="/***uriusedbythedriver.auto-detectedbydefault.*/uri" type="xs:string" />
        <xs:element name="/***loginuseroftheserver.*/username" type="xs:string" />
        <xs:element name="/***loginpasswordoftheserver.*/password" type="xs:string" />
        <xs:element name="/***autoindexmode.*/autoindex" type="xs:anyType" />
        <xs:element name="/***registeropensessioninviewinterceptor.bindsaneo4jsessiontothethreadforthe*entireprocessingoftherequest.",*/openinview" type="xs:anyType" />
        <xs:element name="/***whethertouseneo4jnativetypeswhereverpossible.*/usenativetypes" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="neo4jdataautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="neo4jbookmarkmanagementconfiguration" >
      <xs:sequence>
        <xs:element name="bookmark_manager_bean_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="neo4jrepositoriesautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jestautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="httpclientconfigbuildercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jestproperties" >
      <xs:sequence>
        <xs:element name="/***comma-separatedlistoftheelasticsearchinstancestouse.*/uris" type="xs:anyType" />
        <xs:element name="/***loginusername.*/username" type="xs:string" />
        <xs:element name="/***loginpassword.*/password" type="xs:string" />
        <xs:element name="/***whethertoenableconnectionrequestsfrommultipleexecutionthreads.*/multithreaded" type="xs:anyType" />
        <xs:element name="/***connectiontimeout.*/connectiontimeout" type="xs:anyType" />
        <xs:element name="/***readtimeout.*/readtimeout" type="xs:anyType" />
        <xs:element name="/***settings.*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="restclientbuildercustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="restclientautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="restclientproperties" >
      <xs:sequence>
        <xs:element name="/***comma-separatedlistoftheelasticsearchinstancestouse.*/uris" type="xs:anyType" />
        <xs:element name="/***credentialsusername.*/username" type="xs:string" />
        <xs:element name="/***credentialspassword.*/password" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurations" >
      <xs:complexContent>
       <xs:extension base="configurations">
         <xs:sequence>
          <xs:element name="sorter" type="autoconfigurationsorter" nillable="true" minOccurs="0" />
          <xs:element name="order" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jmsproperties" >
      <xs:sequence>
        <xs:element name="/***whetherthedefaultdestinationtypeistopic.*/pubsubdomain" type="xs:anyType" />
        <xs:element name="/***connectionfactoryjndiname.whenset,takesprecedencetoothersconnection*factoryauto-configurations.*/jndiname" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="template" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jmspoolconnectionfactoryproperties" >
      <xs:sequence>
        <xs:element name="/***whetherajmspoolconnectionfactoryshouldbecreated,insteadofaregular*connectionfactory.*/enabled" type="xs:anyType" />
        <xs:element name="/***whethertoblockwhenaconnectionisrequestedandthepoolisfull.setitto*falsetothrowa"jmsexception"instead.*/blockiffull" type="xs:anyType" />
        <xs:element name="/***blockingperiodbeforethrowinganexceptionifthepoolisstillfull.*/blockiffulltimeout" type="xs:anyType" />
        <xs:element name="/***connectionidletimeout.*/idletimeout" type="xs:anyType" />
        <xs:element name="/***maximumnumberofpooledconnections.*/maxconnections" type="xs:long" />
        <xs:element name="/***maximumnumberofpooledsessionsperconnectioninthepool.*/maxsessionsperconnection" type="xs:long" />
        <xs:element name="/***timetosleepbetweenrunsoftheidleconnectionevictionthread.whennegative,*noidleconnectionevictionthreadruns.*/timebetweenexpirationcheck" type="xs:anyType" />
        <xs:element name="/***whethertouseonlyoneanonymous"messageproducer"instance.setittofalseto*createone"messageproducer"everytimeoneisrequired.*/useanonymousproducers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jmspoolconnectionfactoryfactory" >
      <xs:sequence>
        <xs:element name="properties" type="jmspoolconnectionfactoryproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultjmslistenercontainerfactoryconfigurer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="transactionmanager" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jmsproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jmsautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jmsannotationdrivenconfiguration" >
      <xs:sequence>
        <xs:element name="destinationresolver" type="xs:anyType" />
        <xs:element name="transactionmanager" type="xs:anyType" />
        <xs:element name="messageconverter" type="xs:anyType" />
        <xs:element name="properties" type="jmsproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activemqautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activemqxaconnectionfactoryconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activemqproperties" >
      <xs:sequence>
        <xs:element name="/***urloftheactivemqbroker.auto-generatedbydefault.*/brokerurl" type="xs:string" />
        <xs:element name="/***whetherthedefaultbrokerurlshouldbeinmemory.ignoredifanexplicitbroker*hasbeenspecified.*/inmemory" type="xs:anyType" />
        <xs:element name="/***loginuserofthebroker.*/user" type="xs:string" />
        <xs:element name="/***loginpasswordofthebroker.*/password" type="xs:string" />
        <xs:element name="/***timetowaitbeforeconsideringaclosecomplete.*/closetimeout" type="xs:anyType" />
        <xs:element name="/***whethertostopmessagedeliverybeforere-deliveringmessagesfromarolledback*transaction.thisimpliesthatmessageorderisnotpreservedwhenthisisenabled.*/nonblockingredelivery" type="xs:anyType" />
        <xs:element name="/***timetowaitonmessagesendsforaresponse.setitto0towaitforever.*/sendtimeout" type="xs:anyType" />
        <xs:element name="pool" type="jmspoolconnectionfactoryproperties" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activemqconnectionfactorycustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activemqconnectionfactoryconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activemqconnectionfactoryfactory" >
      <xs:complexContent>
       <xs:extension base="activemqconnectionfactory>">
         <xs:sequence>
          <xs:element name="default_embedded_broker_url" type="xs:string" />
          <xs:element name="default_network_broker_url" type="xs:string" />
          <xs:element name="properties" type="activemqproperties" nillable="true" minOccurs="0" />
          <xs:element name="factorycustomizers" type="activemqconnectionfactorycustomizer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jndiconnectionfactoryautoconfiguration" >
      <xs:complexContent>
       <xs:extension base="anynestedcondition">
         <xs:sequence>
          <xs:element name="jndi_locations" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="artemisconfigurationcustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="artemismode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="artemisnoopbindingregistry" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="artemisembeddedconfigurationfactory" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="properties" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="artemisembeddedserverconfiguration" >
      <xs:sequence>
        <xs:element name="properties" type="artemisproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="artemisautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="artemisproperties" >
      <xs:sequence>
        <xs:element name="/***artemisdeploymentmode,auto-detectedbydefault.*/mode" type="artemismode" nillable="true" minOccurs="0" />
        <xs:element name="/***artemisbrokerhost.*/host" type="xs:string" />
        <xs:element name="/***artemisbrokerport.*/port" type="xs:long" />
        <xs:element name="/***loginuserofthebroker.*/user" type="xs:string" />
        <xs:element name="/***loginpasswordofthebroker.*/password" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="pool" type="jmspoolconnectionfactoryproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="artemisxaconnectionfactoryconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="artemisconnectionfactoryconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="artemisconnectionfactoryfactory" >
      <xs:complexContent>
       <xs:extension base="activemqconnectionfactory>">
         <xs:sequence>
          <xs:element name="embedded_jms_class" type="xs:string" />
          <xs:element name="properties" type="artemisproperties" nillable="true" minOccurs="0" />
          <xs:element name="beanfactory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="additional-spring-configuration-metadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aopautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistenceexceptiontranslationautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="importautoconfigurationtests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcastautoconfigurationservertests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcastautoconfigurationclienttests" >
      <xs:sequence>
        <xs:element name="/***serversthetestclientswillconnectto.*/hazelcastserver" type="xs:anyType" />
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcastjpadependencyautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcastautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpapropertiestests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonannotatedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatedefaultddlautoprovidertests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate2ndlevelcacheintegrationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="citylistener" >
      <xs:sequence>
        <xs:element name="beanfactory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="map" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatepropertiestests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="ddlautosupplier" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatejpaautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="jtaplatform>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customhibernatejpaautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractjpaautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="jpatransactionmanager">
         <xs:sequence>
          <xs:element name="autoconfiguredclass" type="xs:anyType" />
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="databaselookuptests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="firstconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddeddatasourceconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourceinitializerinvokertests" >
      <xs:complexContent>
       <xs:extension base="onedatasource">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datasourcetransactionmanagerautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourcejsonserializationtests" >
      <xs:complexContent>
       <xs:extension base="jsonserializer<datasource>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datasourceautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="datasource>">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tomcatdatasourceconfigurationtests" >
      <xs:sequence>
        <xs:element name="prefix" type="xs:string" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xadatasourceautoconfigurationtests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hikaridriverconfigurationfailureanalyzertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jndidatasourceautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="threadcontext" type="xs:anyType" />
        <xs:element name="initialcontextfactory" type="xs:string" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdatasource" >
      <xs:complexContent>
       <xs:extension base="basicdatasource">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hikaridatasourceconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbctemplateautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourcejmxconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourcepropertiestests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourcebeancreationfailureanalyzertests" >
      <xs:sequence>
        <xs:element name="environment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multidatasourceusingprimaryconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multidatasourceconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourceinitializertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messagesourceautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyplaceholderautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="examplefilteredautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exampleconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationpropertiesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messagesourceautoconfigurationprofiletests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messagesourceautoconfigurationintegrationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurationimportselectorintegrationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testautoconfigurationsorter" >
      <xs:complexContent>
       <xs:extension base="autoconfigurationsorter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flywayautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flywaypropertiestests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flywaymigrationscriptmissingfailureanalyzertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="h2consolepropertiestests" >
      <xs:sequence>
        <xs:element name="properties" type="h2consoleproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="h2consoleautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="freemarkertemplateavailabilityprovidertests" >
      <xs:sequence>
        <xs:element name="provider" type="templateavailabilityprovider" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="environment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="freemarkerautoconfigurationservletintegrationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="freemarkerautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="output" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="freemarkerautoconfigurationreactiveintegrationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sharedmetadatareaderfactorycontextinitializertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jooqpropertiestests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jooqautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="record,">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jooqexceptiontranslatortests" >
      <xs:sequence>
        <xs:element name="exceptiontranslator" type="jooqexceptiontranslator" nillable="true" minOccurs="0" />
        <xs:element name="dialect" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqldialectlookuptests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="email" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userrepository" >
      <xs:complexContent>
       <xs:extension base="jparepository<user,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oauth2websecurityconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="filter>">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oauth2clientregistrationrepositoryconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="registration_prefix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactiveoauth2clientautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="registration_prefix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oauth2clientpropertiestests" >
      <xs:sequence>
        <xs:element name="properties" type="oauth2clientproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oauth2clientpropertiesregistrationadaptertests" >
      <xs:sequence>
        <xs:element name="server" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oauth2resourceserverautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="server" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactiveoauth2resourceserverautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="server" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securityrequestmatcherproviderautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="staticresourcerequesttests" >
      <xs:sequence>
        <xs:element name="resourcerequest" type="staticresourcerequest" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pathrequesttests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userdetailsserviceautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="output" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securityautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="websecurityconfigureradapter">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
          <xs:element name="output" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="securityfilterautoconfigurationtests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securityfilterautoconfigurationearlyinitializationtests" >
      <xs:complexContent>
       <xs:extension base="simplemodule">
         <xs:sequence>
          <xs:element name="output" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="securitypropertiestests" >
      <xs:sequence>
        <xs:element name="security" type="securityproperties" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="source" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="staticresourcerequesttests" >
      <xs:complexContent>
       <xs:extension base="httpwebhandleradapter">
         <xs:sequence>
          <xs:element name="resourcerequest" type="staticresourcerequest" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reactiveuserdetailsserviceautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pathrequesttests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactivesecurityautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpauserdetailstests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityscanpackagestests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityscannertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablec" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitya" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablea" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddableb" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityb" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurationreprotests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testautoconfigurationpackage" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gsonautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thymeleafreactiveautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="output" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thymeleaftemplateavailabilityprovidertests" >
      <xs:sequence>
        <xs:element name="provider" type="templateavailabilityprovider" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="environment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thymeleafservletautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="output" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurationstests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="liquibaseautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="temp" type="xs:anyType" />
        <xs:element name="output" type="xs:anyType" />
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groovytemplateavailabilityprovidertests" >
      <xs:sequence>
        <xs:element name="provider" type="templateavailabilityprovider" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="environment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groovytemplateautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="kafkaautoconfigurationintegrationtests" >
      <xs:sequence>
        <xs:element name="test_topic" type="xs:string" />
        <xs:element name="admin_created_topic" type="xs:string" />
        <xs:element name="embeddedkafka" type="xs:anyType" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="kafkaautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="influxdbautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="output" type="xs:anyType" />
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jacksonautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="simpledateformat">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cloudserviceconnectorsautoconfigurationtests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcacheautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="cachemanager>">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachemanagercustomizerstests" >
      <xs:complexContent>
       <xs:extension base="cachemanager>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockcachingprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="abstractcacheautoconfigurationtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ehcache2cacheautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ehcache3cacheautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onwsdllocationsconditiontests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webservicesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webservicetemplateautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webservicespropertiestests" >
      <xs:sequence>
        <xs:element name="properties" type="webservicesproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterorderingintegrationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="httpencodingautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dispatcherservletpathtests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsptemplateavailabilityprovidertests" >
      <xs:sequence>
        <xs:element name="provider" type="jsptemplateavailabilityprovider" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="environment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dispatcherservletregistrationbeantests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="servletwebserverservletcontextlistenertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webmvcautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="webserverfactory" type="mockservletwebserverfactory" nillable="true" minOccurs="0" />
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonmissingfilterbeantests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tomcatservletwebserverfactorycustomizertests" >
      <xs:sequence>
        <xs:element name="customizer" type="tomcatservletwebserverfactorycustomizer" nillable="true" minOccurs="0" />
        <xs:element name="environment" type="xs:anyType" />
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dispatcherservletautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="servletwebserverfactoryautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="errormvcautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="output" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaulterrorviewintegrationtests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicerrorcontrollerdirectmockmvctests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaulterrorviewresolvertests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="resolver" type="defaulterrorviewresolver" nillable="true" minOccurs="0" />
          <xs:element name="" type="templateavailabilityprovider" nillable="true" minOccurs="0" />
          <xs:element name="" type="resourceproperties" nillable="true" minOccurs="0" />
          <xs:element name="model" type="xs:anyType" />
          <xs:element name="request" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicerrorcontrollermockmvctests" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="wac" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="remappederrorviewintegrationtests" >
      <xs:sequence>
        <xs:element name="port" type="xs:long" />
        <xs:element name="template" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicerrorcontrollerintegrationtests" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipartautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="welcomepagehandlermappingtests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockservletwebserverfactory" >
      <xs:complexContent>
       <xs:extension base="abstractservletwebserverfactory">
         <xs:sequence>
          <xs:element name="webserver" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="servletwebserverfactorycustomizertests" >
      <xs:sequence>
        <xs:element name="properties" type="serverproperties" nillable="true" minOccurs="0" />
        <xs:element name="customizer" type="servletwebserverfactorycustomizer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webmvcpropertiestests" >
      <xs:sequence>
        <xs:element name="properties" type="webmvcproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jerseyapplicationpathtests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tomcatwebserverfactorycustomizertests" >
      <xs:sequence>
        <xs:element name="environment" type="xs:anyType" />
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
        <xs:element name="customizer" type="tomcatwebserverfactorycustomizer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jettywebserverfactorycustomizertests" >
      <xs:sequence>
        <xs:element name="environment" type="xs:anyType" />
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
        <xs:element name="customizer" type="jettywebserverfactorycustomizer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nettywebserverfactorycustomizertests" >
      <xs:sequence>
        <xs:element name="environment" type="xs:anyType" />
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
        <xs:element name="customizer" type="nettywebserverfactorycustomizer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="undertowwebserverfactorycustomizertests" >
      <xs:sequence>
        <xs:element name="environment" type="xs:anyType" />
        <xs:element name="GeneratedName" type="serverproperties" nillable="true" minOccurs="0" />
        <xs:element name="customizer" type="undertowwebserverfactorycustomizer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourcepropertiesbindingtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resourcepropertiestests" >
      <xs:sequence>
        <xs:element name="properties" type="resourceproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serverpropertiestests" >
      <xs:sequence>
        <xs:element name="properties" type="serverproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webconversionservicetests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonenabledresourcechaintests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockreactivewebserverfactory" >
      <xs:complexContent>
       <xs:extension base="abstractreactivewebserverfactory">
         <xs:sequence>
          <xs:element name="webserver" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reactivewebserverfactorycustomizertests" >
      <xs:sequence>
        <xs:element name="properties" type="serverproperties" nillable="true" minOccurs="0" />
        <xs:element name="customizer" type="reactivewebserverfactorycustomizer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="httphandlerautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webfluxautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="mockreactivewebserverfactory" nillable="true" minOccurs="0" />
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaulterrorwebexceptionhandlerintegrationtests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummybody" >
      <xs:sequence>
        <xs:element name="content" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactivewebserverfactoryautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webclientautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="webclient.builder">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clienthttpconnectorautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resttemplateautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="stringhttpmessageconverter">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionevaluationreportautoconfigurationimportlistenertests" >
      <xs:sequence>
        <xs:element name="listener" type="conditionevaluationreportautoconfigurationimportlistener" nillable="true" minOccurs="0" />
        <xs:element name="beanfactory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonmissingbeanwithfilteredclasspathtests" >
      <xs:complexContent>
       <xs:extension base="caffeinecachemanager">
         <xs:sequence>
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="allnestedconditionstests" >
      <xs:complexContent>
       <xs:extension base="allnestedconditions">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonwebapplicationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sampleautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sampleautoconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonjnditests" >
      <xs:complexContent>
       <xs:extension base="onjndicondition">
         <xs:sequence>
          <xs:element name="threadcontext" type="xs:anyType" />
          <xs:element name="initialcontextfactory" type="xs:string" />
          <xs:element name="contextrunner" type="xs:anyType" />
          <xs:element name="condition" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonexpressiontests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonbeantests" >
      <xs:complexContent>
       <xs:extension base="examplebean">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonmissingclasstests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scannedfactorybeanconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scannedfactorybeanwithbeanmethodargumentsconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonpropertytests" >
      <xs:complexContent>
       <xs:extension base="exception>">
         <xs:sequence>
          <xs:element name="context" type="xs:anyType" />
          <xs:element name="environment" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonnotwebapplicationtests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonsinglecandidatetests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionaloncloudplatformtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testparameterizedcontainer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onpropertylistconditiontests" >
      <xs:complexContent>
       <xs:extension base="onpropertylistcondition">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springbootconditiontests" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonresourcetests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonclasstests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalonmissingbeantests" >
      <xs:complexContent>
       <xs:extension base="examplebean">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonjavatests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="condition" type="onjavacondition" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractnestedconditiontests" >
      <xs:complexContent>
       <xs:extension base="abstractnestedcondition">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onclassconditionautoconfigurationimportfiltertests" >
      <xs:sequence>
        <xs:element name="filter" type="onclasscondition" nillable="true" minOccurs="0" />
        <xs:element name="beanfactory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anynestedconditiontests" >
      <xs:complexContent>
       <xs:extension base="anynestedcondition">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionmessagetests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onbeanconditiontypedeductionfailuretests" >
      <xs:complexContent>
       <xs:extension base="throwable>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonenestedconditionstests" >
      <xs:complexContent>
       <xs:extension base="nonenestedconditions">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionevaluationreporttests" >
      <xs:complexContent>
       <xs:extension base="springbootcondition">
         <xs:sequence>
          <xs:element name="beanfactory" type="xs:anyType" />
          <xs:element name="report" type="conditionevaluationreport" nillable="true" minOccurs="0" />
          <xs:element name="1" type="xs:anyType" />
          <xs:element name="2" type="xs:anyType" />
          <xs:element name="3" type="xs:anyType" />
          <xs:element name="outcome1" type="conditionoutcome" nillable="true" minOccurs="0" />
          <xs:element name="outcome2" type="conditionoutcome" nillable="true" minOccurs="0" />
          <xs:element name="outcome3" type="conditionoutcome" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resourceconditiontests" >
      <xs:complexContent>
       <xs:extension base="resourcecondition">
         <xs:sequence>
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hypermediaautoconfigurationwithoutjacksontests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hypermediaautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="earlyinitfactorybean" >
      <xs:sequence>
        <xs:element name="propertyfromconfig" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigureconfigurationclasstests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jndipropertieshidingclassloader" >
      <xs:complexContent>
       <xs:extension base="classloader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testableinitialcontextfactory" >
      <xs:complexContent>
       <xs:extension base="initialcontext">
         <xs:sequence>
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectinfoautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rabbitautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rabbitpropertiestests" >
      <xs:sequence>
        <xs:element name="properties" type="rabbitproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurationimportselectortests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="importselector" type="xs:anyType" />
          <xs:element name="beanfactory" type="xs:anyType" />
          <xs:element name="environment" type="xs:anyType" />
          <xs:element name="filters" type="autoconfigurationimportfilter" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jmxautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoreactiveautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoclientfactorytests" >
      <xs:sequence>
        <xs:element name="environment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactivemongoclientfactorytests" >
      <xs:sequence>
        <xs:element name="environment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedmongoautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="temp" type="xs:anyType" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongopropertiestests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springjunittests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nosuchbeandefinitionfailureanalyzertests" >
      <xs:sequence>
        <xs:element name="analyzer" type="nosuchbeandefinitionfailureanalyzer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springapplicationadminjmxautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="enable_admin_prop" type="xs:string" />
        <xs:element name="default_jmx_name" type="xs:string" />
        <xs:element name="server" type="xs:anyType" />
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mustacheautoconfigurationreactiveintegrationtests" >
      <xs:sequence>
        <xs:element name="client" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mustachestandaloneintegrationtests" >
      <xs:sequence>
        <xs:element name="compiler" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mustacheautoconfigurationservletintegrationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
        <xs:element name="port" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mustacheautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="webcontext" type="xs:anyType" />
        <xs:element name="reactivewebcontext" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="httpmessageconvertersautoconfigurationwithoutjacksontests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="codecsautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="httpmessageconverterstests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="httpmessageconvertersautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="httpmessageconverter<?>>">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoconfigurationmetadataloadertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="importautoconfigurationimportselectortests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="importselector" type="importautoconfigurationimportselector" nillable="true" minOccurs="0" />
          <xs:element name="beanfactory" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springbootapplicationtests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedldapautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ldapautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sendgridautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mailsenderautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="threadcontext" type="xs:anyType" />
        <xs:element name="initialcontextfactory" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtaautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="temp" type="xs:anyType" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionmanagercustomizerstests" >
      <xs:complexContent>
       <xs:extension base="platformtransactionmanager>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testautoconfigurationpackageregistrar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validatoradaptertests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validationautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validationautoconfigurationwithhibernatevalidatormissingelimpltests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validationautoconfigurationwithoutvalidatortests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integrationautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="requestreplyexchanger">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoconfigurationsortertests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="default" type="xs:string" />
          <xs:element name="lowest" type="xs:string" />
          <xs:element name="highest" type="xs:string" />
          <xs:element name="a" type="xs:string" />
          <xs:element name="b" type="xs:string" />
          <xs:element name="c" type="xs:string" />
          <xs:element name="d" type="xs:string" />
          <xs:element name="e" type="xs:string" />
          <xs:element name="w" type="xs:string" />
          <xs:element name="x" type="xs:string" />
          <xs:element name="y" type="xs:string" />
          <xs:element name="z" type="xs:string" />
          <xs:element name="a2" type="xs:string" />
          <xs:element name="w2" type="xs:string" />
          <xs:element name="sorter" type="autoconfigurationsorter" nillable="true" minOccurs="0" />
          <xs:element name="" type="autoconfigurationmetadata" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="abstractsessionautoconfigurationtests">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonuniquesessionrepositoryfailureanalyzertests" >
      <xs:complexContent>
       <xs:extension base="sessionrepository<?>>...">
         <xs:sequence>
          <xs:element name="analyzer" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionautoconfigurationintegrationtests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reactivesessionautoconfigurationredistests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsessionautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="sessionrepository<?>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionautoconfigurationredistests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="redis" type="xs:anyType" />
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionautoconfigurationhazelcasttests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionautoconfigurationjdbctests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reactivesessionautoconfigurationmongotests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionautoconfigurationmongotests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="viewresolverpropertiestests" >
      <xs:complexContent>
       <xs:extension base="abstractviewresolverproperties">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="templateavailabilityproviderstests" >
      <xs:sequence>
        <xs:element name="providers" type="templateavailabilityproviders" nillable="true" minOccurs="0" />
        <xs:element name="provider" type="templateavailabilityprovider" nillable="true" minOccurs="0" />
        <xs:element name="view" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="environment" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="taskschedulingautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="threadpooltaskscheduler">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="taskexecutionautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="output" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchautoconfigurationwithoutjpatests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobexecutionexitcodegeneratortests" >
      <xs:sequence>
        <xs:element name="generator" type="jobexecutionexitcodegenerator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joblaunchercommandlinerunnertests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
        <xs:element name="runner" type="joblaunchercommandlinerunner" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="jobs" type="xs:anyType" />
        <xs:element name="steps" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jmspropertiestests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="artemisautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="temp" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="artemisembeddedconfigurationfactorytests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jndiconnectionfactoryautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="threadcontext" type="xs:anyType" />
        <xs:element name="initialcontextfactory" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activemqautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activemqpropertiestests" >
      <xs:sequence>
        <xs:element name="default_embedded_broker_url" type="xs:string" />
        <xs:element name="default_network_broker_url" type="xs:string" />
        <xs:element name="properties" type="activemqproperties" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jmsautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="activemq_embedded_url" type="xs:string" />
        <xs:element name="activemq_network_url" type="xs:string" />
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="websocketmessagingautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="websocketservletautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="commonconfiguration">
         <xs:sequence>
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="emptydatapackage" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jparepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="map" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cityrepository" >
      <xs:complexContent>
       <xs:extension base="jparepository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpawebautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="couchbaserepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="couchbasereactiveandimperativerepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="couchbasereactivedataautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="couchbasedataautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="abstractcouchbasedataconfiguration">
         <xs:sequence>
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="couchbasereactiverepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cityrepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reactivecityrepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cityrepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reactivecityrepository" >
      <xs:complexContent>
       <xs:extension base="reactivecrudrepository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="map" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cassandrareactiverepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cassandrarepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cassandrareactivedataautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cassandradataautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cassandradataautoconfigurationintegrationtests" >
      <xs:sequence>
        <xs:element name="cassandra" type="xs:anyType" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="solrrepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cityrepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="map" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cityrepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elasticsearchdataautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="elasticsearch" type="xs:anyType" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elasticsearchautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="elasticsearch" type="xs:anyType" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elasticsearchrepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="elasticsearch" type="xs:anyType" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcrepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cityrepository" >
      <xs:complexContent>
       <xs:extension base="crudrepository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="map" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoreactivedataautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoreactiveandblockingrepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedmongorepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongorepositoriesautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="class<?>>">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mongodataautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="countryrepository" >
      <xs:complexContent>
       <xs:extension base="repository<country,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mongoreactiverepositoriesautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="class<?>>">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reactivecityrepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="map" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cityrepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personldaprepository" >
      <xs:complexContent>
       <xs:extension base="repository<person,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="citymongodbrepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reactivecitymongodbrepository" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cityelasticsearchdbrepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reactivecitycouchbaserepository" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="citycouchbaserepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cityneo4jrepository" >
      <xs:complexContent>
       <xs:extension base="neo4jrepository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reactivecitycassandrarepository" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="citycassandrarepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="citysolrrepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cityredisrepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cityjparepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionalonrepositorytypetests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springdatawebautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="redisautoconfigurationjedistests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="redisrepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="redis" type="xs:anyType" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="redisreactiveautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cityrepository" >
      <xs:complexContent>
       <xs:extension base="repository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="map" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="redisautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="repositoryrestmvcautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="neo4jdataautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emptymarker" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedneo4jrepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="map" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cityrepository" >
      <xs:complexContent>
       <xs:extension base="neo4jrepository<city,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="neo4jrepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="countryrepository" >
      <xs:complexContent>
       <xs:extension base="neo4jrepository<country,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="neo4jpropertiestests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personrepository" >
      <xs:complexContent>
       <xs:extension base="repository<person,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="dn" type="xs:anyType" />
        <xs:element name="fullname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ldaprepositoriesautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cassandraautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionevaluationreportlogginglistenertests" >
      <xs:sequence>
        <xs:element name="output" type="xs:anyType" />
        <xs:element name="initializer" type="conditionevaluationreportlogginglistener" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onbootstraphostsconditiontests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="couchbasetestconfigurer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="couchbaseautoconfigurationintegrationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
        <xs:element name="couchbase" type="couchbasetestserver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="couchbasetestserver" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="environment" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="couchbaseautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="couchbaseconfiguration">
         <xs:sequence>
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoconfigurationpackagestests" >
      <xs:complexContent>
       <xs:extension base="registrar">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jsonbautoconfigurationwithnoprovidertests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonbautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfigurationcustomfiltercontextpathtests" >
      <xs:complexContent>
       <xs:extension base="resourceconfig">
         <xs:sequence>
          <xs:element name="resttemplate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfigurationcustomloadonstartuptests" >
      <xs:complexContent>
       <xs:extension base="resourceconfig">
         <xs:sequence>
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfigurationcustomapplicationtests" >
      <xs:complexContent>
       <xs:extension base="application">
         <xs:sequence>
          <xs:element name="resttemplate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfigurationcustomservletcontextpathtests" >
      <xs:complexContent>
       <xs:extension base="resourceconfig">
         <xs:sequence>
          <xs:element name="resttemplate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfigurationwithoutapplicationpathtests" >
      <xs:complexContent>
       <xs:extension base="resourceconfig">
         <xs:sequence>
          <xs:element name="resttemplate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfigurationcustomobjectmapperprovidertests" >
      <xs:complexContent>
       <xs:extension base="resourceconfig">
         <xs:sequence>
          <xs:element name="resttemplate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfigurationdefaultfilterpathtests" >
      <xs:complexContent>
       <xs:extension base="resourceconfig">
         <xs:sequence>
          <xs:element name="resttemplate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfigurationobjectmapperprovidertests" >
      <xs:complexContent>
       <xs:extension base="resourceconfig">
         <xs:sequence>
          <xs:element name="resttemplate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfigurationcustomservletpathtests" >
      <xs:complexContent>
       <xs:extension base="resourceconfig">
         <xs:sequence>
          <xs:element name="resttemplate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfigurationcustomfilterpathtests" >
      <xs:complexContent>
       <xs:extension base="resourceconfig">
         <xs:sequence>
          <xs:element name="resttemplate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfigurationdefaultservletpathtests" >
      <xs:complexContent>
       <xs:extension base="resourceconfig">
         <xs:sequence>
          <xs:element name="resttemplate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jerseyautoconfigurationservletcontainertests" >
      <xs:complexContent>
       <xs:extension base="resourceconfig">
         <xs:sequence>
          <xs:element name="output" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="adhoctestsuite" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quartzdatasourceinitializertests" >
      <xs:sequence>
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quartzautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="basequartzconfiguration">
         <xs:sequence>
          <xs:element name="output" type="xs:anyType" />
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoconfigurationexcludefiltertests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="filtered" type="xs:anyType" />
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jestautoconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="jestresult>">
         <xs:sequence>
          <xs:element name="elasticsearch" type="xs:anyType" />
          <xs:element name="contextrunner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="restclientautoconfigurationtests" >
      <xs:sequence>
        <xs:element name="elasticsearch" type="xs:anyType" />
        <xs:element name="contextrunner" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcast" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="suffixed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custom" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tslocp" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="infinispan" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custom-schema-hsql" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schema-multi-basedn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v1__init" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v1__init" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="db.changelog-city" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="db.changelog-master" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="db.changelog-override" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="db.changelog-override" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v1__init" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custom-schema-sample" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="swedish" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messages" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messages2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="early-init-test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="index" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="data-jdbc-schema" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="switch-messages" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="content" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="home" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partial" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo_de" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custom-schema-h2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="logback-test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tsloc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ksloc" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="application-switch-messages" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schema" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoconfigurationmetadataloadertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistence" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="build-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="non-annotated" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="types" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ehcache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="kslocp" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="application" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="home" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="included_fr" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="includes" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="prefixed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="prefixed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="prefixed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="data-dialect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="template" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="507" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="error" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="security-dialect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="home" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="suffixed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="message" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="message" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="java8time-dialect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="included" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="view" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="home" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="suffixed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="message" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="layout" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="home" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="message" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="suffixed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schema" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ehcache-override" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="factorybean" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="encoding-schema" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="another" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lexical-schema-bbb" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lexical-schema-aaa" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schema" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="402" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="4xx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="4xx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="5xx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="4xx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="404" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="4xx" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="404" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="git-no-data" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="git-epoch" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcast-specific" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hazelcast-client-specific" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 