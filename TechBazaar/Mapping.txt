ClassDiagram.Class>> Delivery =>=>=> RelationalSchema.Table>> delivery;
ClassDiagram.Class>> Comment =>=>=> RelationalSchema.Table>> comment;
ClassDiagram.Class>> Cart =>=>=> RelationalSchema.Table>> cart;
ClassDiagram.Class>> Purchased =>=>=> RelationalSchema.Table>> purchased;
ClassDiagram.Class>> Location =>=>=> RelationalSchema.Table>> location;
ClassDiagram.Class>> UserCart =>=>=> RelationalSchema.Table>> usercart;
ClassDiagram.Class>> Rating =>=>=> RelationalSchema.Table>> rating;
ClassDiagram.Class>> Supplier =>=>=> RelationalSchema.Table>> supplier;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Attribut>> Delivery.id:int =>=>=> RelationalSchema.Column>> delivery.id PRIMARY KEY;
ClassDiagram.Attribut>> Delivery.status:String =>=>=> RelationalSchema.Column>> delivery.status;
ClassDiagram.Attribut>> Comment.id:int =>=>=> RelationalSchema.Column>> comment.id PRIMARY KEY;
ClassDiagram.Attribut>> Comment.comment:String =>=>=> RelationalSchema.Column>> comment.comment;
ClassDiagram.Attribut>> Cart.id:int =>=>=> RelationalSchema.Column>> cart.id PRIMARY KEY;
ClassDiagram.Attribut>> Cart.quantity:int =>=>=> RelationalSchema.Column>> cart.quantity;
ClassDiagram.Attribut>> Cart.subtotal:double =>=>=> RelationalSchema.Column>> cart.subtotal;
ClassDiagram.Attribut>> Cart.status:String =>=>=> RelationalSchema.Column>> cart.status;
ClassDiagram.Attribut>> Purchased.id:int =>=>=> RelationalSchema.Column>> purchased.id PRIMARY KEY;
ClassDiagram.Attribut>> Purchased.status:String =>=>=> RelationalSchema.Column>> purchased.status;
ClassDiagram.Attribut>> Purchased.ordereddate:String =>=>=> RelationalSchema.Column>> purchased.ordereddate;
ClassDiagram.Attribut>> Purchased.delivereddate:String =>=>=> RelationalSchema.Column>> purchased.delivereddate;
ClassDiagram.Attribut>> Location.id:int =>=>=> RelationalSchema.Column>> location.id PRIMARY KEY;
ClassDiagram.Attribut>> Location.latitude:String =>=>=> RelationalSchema.Column>> location.latitude;
ClassDiagram.Attribut>> Location.longitude:String =>=>=> RelationalSchema.Column>> location.longitude;
ClassDiagram.Attribut>> UserCart.id:int =>=>=> RelationalSchema.Column>> usercart.id PRIMARY KEY;
ClassDiagram.Attribut>> Rating.id:int =>=>=> RelationalSchema.Column>> rating.id PRIMARY KEY;
ClassDiagram.Attribut>> Rating.rating:int =>=>=> RelationalSchema.Column>> rating.rating;
ClassDiagram.Attribut>> Supplier.id:int =>=>=> RelationalSchema.Column>> supplier.id PRIMARY KEY;
ClassDiagram.Attribut>> Supplier.name:String =>=>=> RelationalSchema.Column>> supplier.name;
ClassDiagram.Attribut>> Supplier.email:String =>=>=> RelationalSchema.Column>> supplier.email;
ClassDiagram.Attribut>> User.id:int =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.role:String =>=>=> RelationalSchema.Column>> user.role;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.contact:String =>=>=> RelationalSchema.Column>> user.contact;
ClassDiagram.Attribut>> User.address:String =>=>=> RelationalSchema.Column>> user.address;
ClassDiagram.Attribut>> User.isactive:Boolean =>=>=> RelationalSchema.Column>> user.isactive;
ClassDiagram.Attribut>> Category.id:int =>=>=> RelationalSchema.Column>> category.id PRIMARY KEY;
ClassDiagram.Attribut>> Category.name:String =>=>=> RelationalSchema.Column>> category.name;
ClassDiagram.Attribut>> Category.isactive:Boolean =>=>=> RelationalSchema.Column>> category.isactive;
ClassDiagram.Attribut>> Product.id:int =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.code:String =>=>=> RelationalSchema.Column>> product.code;
ClassDiagram.Attribut>> Product.//@field(index:String =>=>=> RelationalSchema.Column>> product.//@field(index;
ClassDiagram.Attribut>> Product.//@field(index:String =>=>=> RelationalSchema.Column>> product.//@field(index;
ClassDiagram.Attribut>> Product.//@field(index:String =>=>=> RelationalSchema.Column>> product.//@field(index;
ClassDiagram.Attribut>> Product.unit_price:double =>=>=> RelationalSchema.Column>> product.unit_price;
ClassDiagram.Attribut>> Product.quantity:int =>=>=> RelationalSchema.Column>> product.quantity;
ClassDiagram.Attribut>> Product.//columndefination:boolean =>=>=> RelationalSchema.Column>> product.//columndefination;
ClassDiagram.Attribut>> Product.views:int =>=>=> RelationalSchema.Column>> product.views;
ClassDiagram.Attribut>> Product.////stringsupplier_name////stringsupplier_emailquantity_limit:int =>=>=> RelationalSchema.Column>> product.////stringsupplier_name////stringsupplier_emailquantity_limit;
ClassDiagram.Attribut>> Product.entrydate:String =>=>=> RelationalSchema.Column>> product.entrydate;
ClassDiagram.Attribut>> Product.file:MultipartFile =>=>=> NOT MAPPED -Explanation: Transient Field ;
Many-To-One relationship from ClassDiagram.Class>>Delivery  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Delivery  to ClassDiagram.Class>>usercart represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Delivery  to ClassDiagram.Class>>List<Location>;
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Cart  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Cart  to ClassDiagram.Class>>usercart represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Cart  to ClassDiagram.Class>>List<Purchased>;
Many-To-One relationship from ClassDiagram.Class>>Purchased  to ClassDiagram.Class>>cart represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Location  to ClassDiagram.Class>>delivery represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>UserCart  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>UserCart  to ClassDiagram.Class>>List<Cart>;
One-To-Many relationship from ClassDiagram.Class>>UserCart  to ClassDiagram.Class>>List<Delivery>;
Many-To-One relationship from ClassDiagram.Class>>Rating  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Rating  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Supplier  to ClassDiagram.Class>>List<Product>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Comment>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Rating>;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>usercart represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Delivery>;
One-To-Many relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>List<Product>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Cart>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Comment>;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Rating>;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>supplier represented by ClassDiagram.Atrribute>>GeneratedName;
