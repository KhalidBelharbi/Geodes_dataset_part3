ClassDiagram.Class>> Condicion =>=>=> RelationalSchema.Table>> condicion;
ClassDiagram.Class>> Usuario =>=>=> RelationalSchema.Table>> usuario;
ClassDiagram.Class>> Indicador =>=>=> RelationalSchema.Table>> indicador;
ClassDiagram.Class>> ValorCalculable =>=>=> RelationalSchema.Table>> valorcalculable;
ClassDiagram.Class>> OrdenaAplicandoCriterioOrdenamiento =>=>=> RelationalSchema.Table>> ordenaaplicandocriterioordenamiento;
ClassDiagram.Class>> Promedio =>=>=> RelationalSchema.Table>> promedio;
ClassDiagram.Class>> Creciente =>=>=> RelationalSchema.Table>> creciente;
ClassDiagram.Class>> Longevidad =>=>=> RelationalSchema.Table>> longevidad;
ClassDiagram.Class>> Sumatoria =>=>=> RelationalSchema.Table>> sumatoria;
ClassDiagram.Class>> Periodo =>=>=> RelationalSchema.Table>> periodo;
ClassDiagram.Class>> Cuenta =>=>=> RelationalSchema.Table>> cuenta;
ClassDiagram.Class>> FiltroSegunEcuacion =>=>=> RelationalSchema.Table>> filtrosegunecuacion;
ClassDiagram.Class>> Empresa =>=>=> RelationalSchema.Table>> empresa;
ClassDiagram.Class>> Decreciente =>=>=> RelationalSchema.Table>> decreciente;
ClassDiagram.Class>> Mediana =>=>=> RelationalSchema.Table>> mediana;
ClassDiagram.Class>> Metodologia =>=>=> RelationalSchema.Table>> metodologia;
ClassDiagram.Class>> Filtro =>=>=> RelationalSchema.Table>> filtro;
ClassDiagram.Attribut>> Condicion.id:int =>=>=> RelationalSchema.Column>> condicion.id PRIMARY KEY;
ClassDiagram.Attribut>> Condicion.empresas:List<Empresa> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Condicion.anios:int =>=>=> RelationalSchema.Column>> condicion.anios;
ClassDiagram.Attribut>> Condicion.filtro:Boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Usuario.id:Long =>=>=> RelationalSchema.Column>> usuario.id PRIMARY KEY;
ClassDiagram.Attribut>> Usuario.usuario:String =>=>=> RelationalSchema.Column>> usuario.usuario;
ClassDiagram.Attribut>> Usuario.pass:String =>=>=> RelationalSchema.Column>> usuario.pass;
ClassDiagram.Attribut>> Indicador.id:int =>=>=> RelationalSchema.Column>> indicador.id PRIMARY KEY;
ClassDiagram.Attribut>> Indicador.nombre:String =>=>=> RelationalSchema.Column>> indicador.nombre;
ClassDiagram.Attribut>> Indicador.operacion:String =>=>=> RelationalSchema.Column>> indicador.operacion;
ClassDiagram.Attribut>> Indicador.nodo:NodoIndicador =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ValorCalculable.id:int =>=>=> RelationalSchema.Column>> valorcalculable.id PRIMARY KEY;
ClassDiagram.Attribut>> ValorCalculable.empresas:List<Empresa> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ValorCalculable.GeneratedName:Traductor =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrdenaAplicandoCriterioOrdenamiento.//mayoramenoromenoramayor,sonpalabrasnosimbolos,ingresadainterfaz//graficacriterioordenamiento:String =>=>=> RelationalSchema.Column>> ordenaaplicandocriterioordenamiento.//mayoramenoromenoramayor,sonpalabrasnosimbolos,ingresadainterfaz//graficacriterioordenamiento;
ClassDiagram.Attribut>> Creciente.log:Logger =>=>=> RelationalSchema.Column>> creciente.log;
ClassDiagram.Attribut>> Periodo./***/serialversionuid:long =>=>=> RelationalSchema.Column>> periodo./***/serialversionuid;
ClassDiagram.Attribut>> Periodo.id:int =>=>=> RelationalSchema.Column>> periodo.id PRIMARY KEY;
ClassDiagram.Attribut>> Periodo.fechainicio:LocalDate =>=>=> RelationalSchema.Column>> periodo.fechainicio;
ClassDiagram.Attribut>> Periodo.fechafin:LocalDate =>=>=> RelationalSchema.Column>> periodo.fechafin;
ClassDiagram.Attribut>> Cuenta.id:int =>=>=> RelationalSchema.Column>> cuenta.id PRIMARY KEY;
ClassDiagram.Attribut>> Cuenta.nombre:String =>=>=> RelationalSchema.Column>> cuenta.nombre;
ClassDiagram.Attribut>> Cuenta.valor:double =>=>=> RelationalSchema.Column>> cuenta.valor;
ClassDiagram.Attribut>> FiltroSegunEcuacion./*ladodersiemprevaaserunnumeropuede*/ladoder:int =>=>=> RelationalSchema.Column>> filtrosegunecuacion./*ladodersiemprevaaserunnumeropuede*/ladoder;
ClassDiagram.Attribut>> FiltroSegunEcuacion.comparador:String =>=>=> RelationalSchema.Column>> filtrosegunecuacion.comparador;
ClassDiagram.Attribut>> Empresa.id:int =>=>=> RelationalSchema.Column>> empresa.id PRIMARY KEY;
ClassDiagram.Attribut>> Empresa.nombre:String =>=>=> RelationalSchema.Column>> empresa.nombre;
ClassDiagram.Attribut>> Empresa.fechainscripcion:LocalDate =>=>=> RelationalSchema.Column>> empresa.fechainscripcion;
ClassDiagram.Attribut>> Decreciente.log:Logger =>=>=> RelationalSchema.Column>> decreciente.log;
ClassDiagram.Attribut>> Metodologia.id:int =>=>=> RelationalSchema.Column>> metodologia.id PRIMARY KEY;
ClassDiagram.Attribut>> Metodologia.nombre:String =>=>=> RelationalSchema.Column>> metodologia.nombre;
ClassDiagram.Attribut>> Metodologia.puntajeempresas:ArrayList<PuntajeEmpresa> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Metodologia.contador:int =>=>=> NOT MAPPED -Explanation: Transient Field ;
Many-To-One relationship from ClassDiagram.Class>>Condicion  to ClassDiagram.Class>>valorcalculable represented by ClassDiagram.Atrribute>>ladoizq;
Many-To-One relationship from ClassDiagram.Class>>Condicion  to ClassDiagram.Class>>periodo represented by ClassDiagram.Atrribute>>s;
One-To-Many relationship from ClassDiagram.Class>>Usuario  to ClassDiagram.Class>>List<Indicador>;
Many-To-One relationship from ClassDiagram.Class>>ValorCalculable  to ClassDiagram.Class>>indicador represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Cuenta  to ClassDiagram.Class>>periodo represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Empresa  to ClassDiagram.Class>>List<Cuenta>;
One-To-Many relationship from ClassDiagram.Class>>Metodologia  to ClassDiagram.Class>>List<Condicion>;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Condicion   Descriminator>>type: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>ValorCalculable   Descriminator>>type: String ;
