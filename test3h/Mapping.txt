ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Class>> Request =>=>=> RelationalSchema.Table>> request;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> PersistentAuditEvent =>=>=> RelationalSchema.Table>> persistentauditevent;
ClassDiagram.Class>> City =>=>=> RelationalSchema.Table>> city;
ClassDiagram.Class>> AbstractAuditingEntity =>=>=> RelationalSchema.Table>> abstractauditingentity;
ClassDiagram.Class>> Authority =>=>=> RelationalSchema.Table>> authority;
ClassDiagram.Class>> State =>=>=> RelationalSchema.Table>> state;
ClassDiagram.Class>> Address =>=>=> RelationalSchema.Table>> address;
ClassDiagram.Class>> PersistentToken =>=>=> RelationalSchema.Table>> persistenttoken;
ClassDiagram.Class>> Service =>=>=> RelationalSchema.Table>> service;
ClassDiagram.Attribut>> Order.id:long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.sampletextattribute:String =>=>=> RelationalSchema.Column>> order.sampletextattribute;
ClassDiagram.Attribut>> Order.sampledateattribute:LocalDate =>=>=> RelationalSchema.Column>> order.sampledateattribute;
ClassDiagram.Attribut>> Country.serialversionuid:long =>=>=> RelationalSchema.Column>> country.serialversionuid;
ClassDiagram.Attribut>> Country.id:long =>=>=> RelationalSchema.Column>> country.id PRIMARY KEY;
ClassDiagram.Attribut>> Country.name:String =>=>=> RelationalSchema.Column>> country.name;
ClassDiagram.Attribut>> Request.serialversionuid:long =>=>=> RelationalSchema.Column>> request.serialversionuid;
ClassDiagram.Attribut>> Request.id:String =>=>=> RelationalSchema.Column>> request.id;
ClassDiagram.Attribut>> Request.id:long =>=>=> RelationalSchema.Column>> request.id PRIMARY KEY;
ClassDiagram.Attribut>> Request.services:String =>=>=> RelationalSchema.Column>> request.services;
ClassDiagram.Attribut>> Request.creation_date:String =>=>=> RelationalSchema.Column>> request.creation_date;
ClassDiagram.Attribut>> Request.creationdate:LocalDate =>=>=> RelationalSchema.Column>> request.creationdate;
ClassDiagram.Attribut>> Request.expected_delivery_date:String =>=>=> RelationalSchema.Column>> request.expected_delivery_date;
ClassDiagram.Attribut>> Request.expecteddeliverydate:LocalDate =>=>=> RelationalSchema.Column>> request.expecteddeliverydate;
ClassDiagram.Attribut>> Request.customer:String =>=>=> RelationalSchema.Column>> request.customer;
ClassDiagram.Attribut>> Request.delivery_address:String =>=>=> RelationalSchema.Column>> request.delivery_address;
ClassDiagram.Attribut>> Request.code:String =>=>=> RelationalSchema.Column>> request.code;
ClassDiagram.Attribut>> Request.code:String =>=>=> RelationalSchema.Column>> request.code;
ClassDiagram.Attribut>> Request.description:String =>=>=> RelationalSchema.Column>> request.description;
ClassDiagram.Attribut>> Request.description:String =>=>=> RelationalSchema.Column>> request.description;
ClassDiagram.Attribut>> User.login:String =>=>=> RelationalSchema.Column>> user.login PRIMARY KEY;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.activated:Boolean =>=>=> RelationalSchema.Column>> user.activated;
ClassDiagram.Attribut>> User.langkey:String =>=>=> RelationalSchema.Column>> user.langkey;
ClassDiagram.Attribut>> User.activationkey:String =>=>=> RelationalSchema.Column>> user.activationkey;
ClassDiagram.Attribut>> Customer.serialversionuid:long =>=>=> RelationalSchema.Column>> customer.serialversionuid;
ClassDiagram.Attribut>> Customer.computed:CustomerComputed =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Customer.id:String =>=>=> RelationalSchema.Column>> customer.id;
ClassDiagram.Attribut>> Customer.id:long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.name:String =>=>=> RelationalSchema.Column>> customer.name;
ClassDiagram.Attribut>> Customer.code:String =>=>=> RelationalSchema.Column>> customer.code;
ClassDiagram.Attribut>> Customer.code:String =>=>=> RelationalSchema.Column>> customer.code;
ClassDiagram.Attribut>> Customer.address:String =>=>=> RelationalSchema.Column>> customer.address;
ClassDiagram.Attribut>> Customer.as_:String =>=>=> RelationalSchema.Column>> customer.as_;
ClassDiagram.Attribut>> PersistentAuditEvent.id:long =>=>=> RelationalSchema.Column>> persistentauditevent.id PRIMARY KEY;
ClassDiagram.Attribut>> PersistentAuditEvent.principal:String =>=>=> RelationalSchema.Column>> persistentauditevent.principal;
ClassDiagram.Attribut>> PersistentAuditEvent.auditeventdate:LocalDateTime =>=>=> RelationalSchema.Column>> persistentauditevent.auditeventdate;
ClassDiagram.Attribut>> PersistentAuditEvent.auditeventtype:String =>=>=> RelationalSchema.Column>> persistentauditevent.auditeventtype;
ClassDiagram.Attribut>> PersistentAuditEvent.data:Map<String,String> =>=>=> RelationalSchema.Column>> persistentauditevent.data;
ClassDiagram.Attribut>> City.serialversionuid:long =>=>=> RelationalSchema.Column>> city.serialversionuid;
ClassDiagram.Attribut>> City.id:String =>=>=> RelationalSchema.Column>> city.id;
ClassDiagram.Attribut>> City.id:long =>=>=> RelationalSchema.Column>> city.id PRIMARY KEY;
ClassDiagram.Attribut>> City.name:String =>=>=> RelationalSchema.Column>> city.name;
ClassDiagram.Attribut>> City.name:String =>=>=> RelationalSchema.Column>> city.name;
ClassDiagram.Attribut>> City.state:String =>=>=> RelationalSchema.Column>> city.state;
ClassDiagram.Attribut>> City.country:String =>=>=> RelationalSchema.Column>> city.country;
ClassDiagram.Attribut>> AbstractAuditingEntity.createdby:String =>=>=> RelationalSchema.Column>> abstractauditingentity.createdby;
ClassDiagram.Attribut>> AbstractAuditingEntity.createddate:DateTime =>=>=> RelationalSchema.Column>> abstractauditingentity.createddate;
ClassDiagram.Attribut>> AbstractAuditingEntity.lastmodifiedby:String =>=>=> RelationalSchema.Column>> abstractauditingentity.lastmodifiedby;
ClassDiagram.Attribut>> AbstractAuditingEntity.lastmodifieddate:DateTime =>=>=> RelationalSchema.Column>> abstractauditingentity.lastmodifieddate;
ClassDiagram.Attribut>> Authority.name:String =>=>=> RelationalSchema.Column>> authority.name PRIMARY KEY;
ClassDiagram.Attribut>> State.serialversionuid:long =>=>=> RelationalSchema.Column>> state.serialversionuid;
ClassDiagram.Attribut>> State.id:long =>=>=> RelationalSchema.Column>> state.id PRIMARY KEY;
ClassDiagram.Attribut>> State.name:String =>=>=> RelationalSchema.Column>> state.name;
ClassDiagram.Attribut>> Address.serialversionuid:long =>=>=> RelationalSchema.Column>> address.serialversionuid;
ClassDiagram.Attribut>> Address.computed:AddressComputed =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Address.id:String =>=>=> RelationalSchema.Column>> address.id;
ClassDiagram.Attribut>> Address.id:long =>=>=> RelationalSchema.Column>> address.id PRIMARY KEY;
ClassDiagram.Attribut>> Address.name:String =>=>=> RelationalSchema.Column>> address.name;
ClassDiagram.Attribut>> Address.name:String =>=>=> RelationalSchema.Column>> address.name;
ClassDiagram.Attribut>> Address.city:String =>=>=> RelationalSchema.Column>> address.city;
ClassDiagram.Attribut>> Address.state:String =>=>=> RelationalSchema.Column>> address.state;
ClassDiagram.Attribut>> Address.as_:String =>=>=> RelationalSchema.Column>> address.as_;
ClassDiagram.Attribut>> PersistentToken.date_time_formatter:DateTimeFormatter =>=>=> RelationalSchema.Column>> persistenttoken.date_time_formatter;
ClassDiagram.Attribut>> PersistentToken.max_user_agent_len:int =>=>=> RelationalSchema.Column>> persistenttoken.max_user_agent_len;
ClassDiagram.Attribut>> PersistentToken.series:String =>=>=> RelationalSchema.Column>> persistenttoken.series PRIMARY KEY;
ClassDiagram.Attribut>> PersistentToken.tokenvalue:String =>=>=> RelationalSchema.Column>> persistenttoken.tokenvalue;
ClassDiagram.Attribut>> PersistentToken.tokendate:LocalDate =>=>=> RelationalSchema.Column>> persistenttoken.tokendate;
ClassDiagram.Attribut>> PersistentToken.//anipv6addressmaxlengthis39charactersipaddress:String =>=>=> RelationalSchema.Column>> persistenttoken.//anipv6addressmaxlengthis39charactersipaddress;
ClassDiagram.Attribut>> PersistentToken.useragent:String =>=>=> RelationalSchema.Column>> persistenttoken.useragent;
ClassDiagram.Attribut>> Service.serialversionuid:long =>=>=> RelationalSchema.Column>> service.serialversionuid;
ClassDiagram.Attribut>> Service.id:long =>=>=> RelationalSchema.Column>> service.id PRIMARY KEY;
ClassDiagram.Attribut>> Service.service:String =>=>=> RelationalSchema.Column>> service.service;
ClassDiagram.Attribut>> Service.unitprice:BigDecimal =>=>=> RelationalSchema.Column>> service.unitprice;
ClassDiagram.Attribut>> Service.quantity:Double =>=>=> RelationalSchema.Column>> service.quantity;
One-To-Many relationship from ClassDiagram.Class>>Request  to ClassDiagram.Class>>Set<Service>;
Many-To-One relationship from ClassDiagram.Class>>Request  to ClassDiagram.Class>>customer represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Request  to ClassDiagram.Class>>address represented by ClassDiagram.Atrribute>>delivery;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<authority>: t_user_authority(login:User [PK] #FK to User,name:set<authority> [PK] #FK to set<authority>);
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Set<PersistentToken>;
Many-To-One relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>address represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>City  to ClassDiagram.Class>>state represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>City  to ClassDiagram.Class>>country represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>State  to ClassDiagram.Class>>country represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>city represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Address  to ClassDiagram.Class>>state represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>PersistentToken  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Service  to ClassDiagram.Class>>request represented by ClassDiagram.Atrribute>>GeneratedName;
