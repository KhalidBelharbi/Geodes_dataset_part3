ClassDiagram.Class>> RecipeIngredient =>=>=> RelationalSchema.Table>> recipeingredient;
ClassDiagram.Class>> Recipe =>=>=> RelationalSchema.Table>> recipe;
ClassDiagram.Class>> UserIngredient =>=>=> RelationalSchema.Table>> useringredient;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Ingredient =>=>=> RelationalSchema.Table>> ingredient;
ClassDiagram.Attribut>> RecipeIngredient.id:Long =>=>=> RelationalSchema.Column>> recipeingredient.id PRIMARY KEY;
ClassDiagram.Attribut>> RecipeIngredient.quantity:double =>=>=> RelationalSchema.Column>> recipeingredient.quantity;
ClassDiagram.Attribut>> RecipeIngredient.unit:String =>=>=> RelationalSchema.Column>> recipeingredient.unit;
ClassDiagram.Attribut>> Recipe.id:Long =>=>=> RelationalSchema.Column>> recipe.id PRIMARY KEY;
ClassDiagram.Attribut>> Recipe.yumid:String =>=>=> RelationalSchema.Column>> recipe.yumid;
ClassDiagram.Attribut>> Recipe.name:String =>=>=> RelationalSchema.Column>> recipe.name;
ClassDiagram.Attribut>> Recipe.description:String =>=>=> RelationalSchema.Column>> recipe.description;
ClassDiagram.Attribut>> Recipe.numberofservings:int =>=>=> RelationalSchema.Column>> recipe.numberofservings;
ClassDiagram.Attribut>> Recipe.iconimageurl:String =>=>=> RelationalSchema.Column>> recipe.iconimageurl;
ClassDiagram.Attribut>> Recipe.resizableimageurl:String =>=>=> RelationalSchema.Column>> recipe.resizableimageurl;
ClassDiagram.Attribut>> Recipe.totalreviewcount:long =>=>=> RelationalSchema.Column>> recipe.totalreviewcount;
ClassDiagram.Attribut>> Recipe.averagerating:double =>=>=> RelationalSchema.Column>> recipe.averagerating;
ClassDiagram.Attribut>> Recipe.difficultylevel:String =>=>=> RelationalSchema.Column>> recipe.difficultylevel;
ClassDiagram.Attribut>> Recipe.nutritionlist:List<String> =>=>=> RelationalSchema.Column>> recipe.nutritionlist;
ClassDiagram.Attribut>> Recipe.techniquelist:List<String> =>=>=> RelationalSchema.Column>> recipe.techniquelist;
ClassDiagram.Attribut>> Recipe.preparationsteps:List<String> =>=>=> RelationalSchema.Column>> recipe.preparationsteps;
ClassDiagram.Attribut>> UserIngredient.userid:Long =>=>=> RelationalSchema.Column>> useringredient.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserIngredient.ingredientid:Long =>=>=> RelationalSchema.Column>> useringredient.ingredientid PRIMARY KEY;
ClassDiagram.Attribut>> UserIngredient.quantity:double =>=>=> RelationalSchema.Column>> useringredient.quantity;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> Ingredient.id:Long =>=>=> RelationalSchema.Column>> ingredient.id PRIMARY KEY;
ClassDiagram.Attribut>> Ingredient.name:String =>=>=> RelationalSchema.Column>> ingredient.name;
ClassDiagram.Attribut>> Ingredient.unit:String =>=>=> RelationalSchema.Column>> ingredient.unit;
Many-To-One relationship from ClassDiagram.Class>>RecipeIngredient  to ClassDiagram.Class>>ingredient represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>RecipeIngredient  to ClassDiagram.Class>>recipe represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Recipe  to ClassDiagram.Class>>List<RecipeIngredient>;
One-To-Many relationship from ClassDiagram.Class>>Ingredient  to ClassDiagram.Class>>List<RecipeIngredient>;
