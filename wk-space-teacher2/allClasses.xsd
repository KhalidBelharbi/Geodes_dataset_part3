<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="tiles" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tiles" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="main" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readme" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spring" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="log4j2-test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spring" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tiles" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="home" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardlayout" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tiles" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schema" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schema" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="drop-schema" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requires-new-tx-config" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="required-tx-config" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dispatcherwacrootwaceartests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testng-package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testng-test-together" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testng-test-separate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extended" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extendeddefaultpropertiesfiledetectiontestpropertysourcetests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="applicationpropertyoverridepropertiesfiletestpropertysourcetests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="systempropertyoverridepropertiesfiletestpropertysourcetests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultpropertiesfiledetectiontestpropertysourcetests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicit" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultscriptdetectionxmlsupersedesgroovyspringcontexttestscontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultscriptdetectionxmlsupersedesgroovyspringcontexttests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextb" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requestandsessionscopedbeanswactests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicxmlwactests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customizedgenericxmlcontextloadertests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcontextconfigurationutilstests$bareannotations-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delegatingsmartcontextloadertests$xmltestcase-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delegatingsmartcontextloadertests$improperduplicatedefaultxmlandconfigclasstestcase-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spr8849-schema" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipleinitializersxmlconfigtests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="import" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultprofilexmlconfigtests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterizeddependencyinjectiontests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autowiredqualifiertests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipleresourcesspringjunit4classrunnerappctxtests-context2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertiesbasedspringjunit4classrunnerappctxtests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipleresourcesspringjunit4classrunnerappctxtests-context3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultlocationsbasetests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultlocationsinheritedtests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanoverridingdefaultlocationsinheritedtests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springjunit4classrunnerappctxtests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipleresourcesspringjunit4classrunnerappctxtests-context1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hybridcontextloadertests-context" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="db-schema" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="driverslicense.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ludwig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactiontestutils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classleveldirtiescontexttestngtests" >
      <xs:complexContent>
       <xs:extension base="abstracttestngspringcontexttests">
         <xs:sequence>
          <xs:element name="cachehits" type="xs:anyType" />
          <xs:element name="cachemisses" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contextcacheutilstests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodleveldirtiescontexttests" >
      <xs:sequence>
        <xs:element name="contextcount" type="xs:anyType" />
        <xs:element name="context" type="xs:anyType" />
        <xs:element name="count" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lrucontextcachetests" >
      <xs:sequence>
        <xs:element name="abcconfig" type="mergedcontextconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="fooconfig" type="mergedcontextconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="barconfig" type="mergedcontextconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="bazconfig" type="mergedcontextconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="abccontext" type="xs:anyType" />
        <xs:element name="foocontext" type="xs:anyType" />
        <xs:element name="barcontext" type="xs:anyType" />
        <xs:element name="bazcontext" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springrunnercontextcachetests" >
      <xs:sequence>
        <xs:element name="dirtied" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextcachetestutils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classleveldirtiescontexttests" >
      <xs:complexContent>
       <xs:extension base="basetestcase">
         <xs:sequence>
          <xs:element name="cachehits" type="xs:anyType" />
          <xs:element name="cachemisses" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contextcachetests" >
      <xs:complexContent>
       <xs:extension base="annotationconfigcontextloader">
         <xs:sequence>
          <xs:element name="" type="contextcache" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springjunitjupitertestsuite" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enabledonmac" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dogtestcase" >
      <xs:complexContent>
       <xs:extension base="genericcomiccharacterstestcase<dog>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cattestcase" >
      <xs:complexContent>
       <xs:extension base="genericcomiccharacterstestcase<cat>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericcomiccharacterstestcase" >
      <xs:complexContent>
       <xs:extension base="character>">
         <xs:sequence>
          <xs:element name="characer" type="xs:anyType" />
          <xs:element name="characters" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springjunitjupiterautowiredconstructorinjectiontestcase" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="dilbert" type="person" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dog" nillable="true" minOccurs="0" />
        <xs:element name="enigma" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springjunitjupiterconstructorinjectiontestcase" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="dilbert" type="person" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dog" nillable="true" minOccurs="0" />
        <xs:element name="enigma" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springextensionparameterizedtestcase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springextensiontestcase" >
      <xs:sequence>
        <xs:element name="dilbert" type="person" nillable="true" minOccurs="0" />
        <xs:element name="people" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="dog" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cat" nillable="true" minOccurs="0" />
        <xs:element name="cats" type="cat" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="enigma" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="disablediftestcase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="disabledonmac" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="failingbeforeandaftermethodsspringextensiontestcase" >
      <xs:complexContent>
       <xs:extension base="basetestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="composedspringextensiontestcase" >
      <xs:sequence>
        <xs:element name="dilbert" type="person" nillable="true" minOccurs="0" />
        <xs:element name="people" type="person" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="character">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:complexContent>
       <xs:extension base="character">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:complexContent>
       <xs:extension base="character">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="character" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webspringextensiontestcase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personcontroller" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplewebrequestsspringextensiontestcase" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doginterfacedefaultmethodstestcase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="catinterfacedefaultmethodstestcase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericcomiccharactersinterfacedefaultmethodstestcase" >
      <xs:complexContent>
       <xs:extension base="character>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nestedtestswithspringandjunitjupitertestcase" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enablediftestcase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="disabledifconditiontestcase" >
      <xs:sequence>
        <xs:element name="condition" type="disabledifcondition" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="programmatictxmgmttestngtests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaltestngspringcontexttests">
         <xs:sequence>
          <xs:element name="method" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commitforrequiredejbtxdaotestngtests" >
      <xs:complexContent>
       <xs:extension base="abstractejbtxdaotestngtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractejbtxdaotestngtests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaltestngspringcontexttests">
         <xs:sequence>
          <xs:element name="test_name" type="xs:string" />
          <xs:element name="dao" type="testentitydao" nillable="true" minOccurs="0" />
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commitforrequiresnewejbtxdaotestngtests" >
      <xs:complexContent>
       <xs:extension base="abstractejbtxdaotestngtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rollbackforrequiresnewejbtxdaotestngtests" >
      <xs:complexContent>
       <xs:extension base="commitforrequiresnewejbtxdaotestngtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rollbackforrequiredejbtxdaotestngtests" >
      <xs:complexContent>
       <xs:extension base="commitforrequiredejbtxdaotestngtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dirtiescontexttransactionaltestngspringcontexttests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaltestngspringcontexttests">
         <xs:sequence>
          <xs:element name="dirtied" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="trackingtestngtestlistener" >
      <xs:sequence>
        <xs:element name="teststartcount" type="xs:long" />
        <xs:element name="testsuccesscount" type="xs:long" />
        <xs:element name="testfailurecount" type="xs:long" />
        <xs:element name="failedconfigurationscount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timedtransactionaltestngspringcontexttests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaltestngspringcontexttests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationconfigtransactionaltestngspringcontexttests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="jane" type="xs:string" />
          <xs:element name="sue" type="xs:string" />
          <xs:element name="yoda" type="xs:string" />
          <xs:element name="num_tests" type="xs:long" />
          <xs:element name="num_tx_tests" type="xs:long" />
          <xs:element name="numsetupcalls" type="xs:long" />
          <xs:element name="numsetupcallsransaction" type="xs:long" />
          <xs:element name="numteardowncalls" type="xs:long" />
          <xs:element name="numteardowncallsransaction" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="concretetransactionaltestngspringcontexttests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaltestngspringcontexttests">
         <xs:sequence>
          <xs:element name="jane" type="xs:string" />
          <xs:element name="sue" type="xs:string" />
          <xs:element name="yoda" type="xs:string" />
          <xs:element name="num_tests" type="xs:long" />
          <xs:element name="num_tx_tests" type="xs:long" />
          <xs:element name="numsetupcalls" type="xs:long" />
          <xs:element name="numsetupcallsransaction" type="xs:long" />
          <xs:element name="numteardowncalls" type="xs:long" />
          <xs:element name="numteardowncallsransaction" type="xs:long" />
          <xs:element name="beaninitialized" type="xs:anyType" />
          <xs:element name="beanname" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="nonrequired" type="xs:long" />
          <xs:element name="foo" type="xs:string" />
          <xs:element name="bar" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testngspringcontextwebtests" >
      <xs:complexContent>
       <xs:extension base="abstracttestngspringcontexttests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="wac" type="xs:anyType" />
          <xs:element name="" type="mockservletcontext" nillable="true" minOccurs="0" />
          <xs:element name="request" type="mockhttpservletrequest" nillable="true" minOccurs="0" />
          <xs:element name="response" type="mockhttpservletresponse" nillable="true" minOccurs="0" />
          <xs:element name="session" type="mockhttpsession" nillable="true" minOccurs="0" />
          <xs:element name="webrequest" type="xs:anyType" />
          <xs:element name="foo" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="servlettestexecutionlistenertestngintegrationtests" >
      <xs:complexContent>
       <xs:extension base="abstracttestngspringcontexttests">
         <xs:sequence>
          <xs:element name="servletrequest" type="mockhttpservletrequest" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcontexttestutils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expressionusagetests" >
      <xs:sequence>
        <xs:element name="props" type="xs:anyType" />
        <xs:element name="andy2" type="xs:anyType" />
        <xs:element name="andy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springruleconfigurer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="springclassrule" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="springmethodrule" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nestedtestswithspringrulestests" >
      <xs:complexContent>
       <xs:extension base="springruleconfigurer">
         <xs:sequence>
          <xs:element name="foo" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autowiredqualifiertests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="customfoo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springjunit4classrunnerappctxtests" >
      <xs:sequence>
        <xs:element name="/***defaultresourcepathfortheapplicationcontextconfigurationfor*{@linkspringjunit4classrunnerappctxtests}:{@value#default_context_resource_path}*/default_context_resource_path" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="beaninitialized" type="xs:anyType" />
        <xs:element name="beanname" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="autowired" type="xs:anyType" />
        <xs:element name="injected" type="xs:anyType" />
        <xs:element name="nonrequired" type="xs:long" />
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="literalfieldvalue" type="xs:string" />
        <xs:element name="spelfieldvalue" type="xs:anyType" />
        <xs:element name="literalparametervalue" type="xs:string" />
        <xs:element name="spelparametervalue" type="xs:anyType" />
        <xs:element name="quux" type="xs:string" />
        <xs:element name="namedquux" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enabledandignoredspringrunnertests" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="numtestsexecuted" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rollbackoverridedefaultrollbacktruerollbackannotationtransactionaltests" >
      <xs:complexContent>
       <xs:extension base="		defaultrollbacktruerollbackannotationtransactionaltests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rollbackoverridedefaultrollbackfalsetransactionaltests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="originalnumrows" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultrollbacktruerollbackannotationtransactionaltests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionalspringrunnertests">
         <xs:sequence>
          <xs:element name="originalnumrows" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipleresourcesspringjunit4classrunnerappctxtests" >
      <xs:complexContent>
       <xs:extension base="springjunit4classrunnerappctxtests">
         <xs:sequence>
          <xs:element name="classpath_resource_path" type="xs:string" />
          <xs:element name="local_resource_path" type="xs:string" />
          <xs:element name="absolute_resource_path" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lookuptxmgrviatransactionmanagementconfigurertests" >
      <xs:sequence>
        <xs:element name="txmanager1" type="xs:anyType" />
        <xs:element name="txmanager2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relativepathspringjunit4classrunnerappctxtests" >
      <xs:complexContent>
       <xs:extension base="springjunit4classrunnerappctxtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipleinitializersxmlconfigtests" >
      <xs:sequence>
        <xs:element name="foo,bar,baz" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="acitestsuite" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foobaraliasinitializer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="devprofileinitializer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertysourcesinitializertests" >
      <xs:sequence>
        <xs:element name="enigma" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="overriddeninitializersannotationconfigtests" >
      <xs:complexContent>
       <xs:extension base="singleinitializerannotationconfigtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergedinitializersannotationconfigtests" >
      <xs:complexContent>
       <xs:extension base="singleinitializerannotationconfigtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="barconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="devprofileconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singleinitializerannotationconfigtests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="baz" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fooconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderedinitializersannotationconfigtests" >
      <xs:sequence>
        <xs:element name="profile_global" type="xs:string" />
        <xs:element name="profile_one" type="xs:string" />
        <xs:element name="profile_two" type="xs:string" />
        <xs:element name="foo,bar,baz" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="initializerconfiguredviametaannotationtests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="strings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="globalconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipleinitializersannotationconfigtests" >
      <xs:sequence>
        <xs:element name="foo,bar,baz" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="initializerwithoutconfigfilesorclassestests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testclass1" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testclass4" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testclass2" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testclass3" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spr8849tests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beforeandaftertransactionannotationtests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionalspringrunnertests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="numbeforetransactioncalls" type="xs:long" />
          <xs:element name="numaftertransactioncalls" type="xs:long" />
          <xs:element name="intransaction" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springjunit4testsuite" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hardcodedprofilevaluesourcespringrunnertests" >
      <xs:complexContent>
       <xs:extension base="enabledandignoredspringrunnertests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classnameactiveprofilesresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classnameactiveprofilesresolvertests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultprofileconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="devprofileannotationconfigtests" >
      <xs:complexContent>
       <xs:extension base="defaultprofileannotationconfigtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="devprofileresolverannotationconfigtests" >
      <xs:complexContent>
       <xs:extension base="devprofileannotationconfigtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultprofileannotationconfigtests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="profilexmlconfigtestsuite" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultprofilexmlconfigtests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="devprofilexmlconfigtests" >
      <xs:complexContent>
       <xs:extension base="defaultprofilexmlconfigtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="devprofileresolverxmlconfigtests" >
      <xs:complexContent>
       <xs:extension base="devprofilexmlconfigtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultprofileconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultprofileannotationconfigtests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="profileannotationconfigtestsuite" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="devprofileannotationconfigtests" >
      <xs:complexContent>
       <xs:extension base="defaultprofileannotationconfigtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="devprofileconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="devprofileresolverannotationconfigtests" >
      <xs:complexContent>
       <xs:extension base="devprofileannotationconfigtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="junittestingutils" >
      <xs:complexContent>
       <xs:extension base="runner>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttransactionalspringrunnertests" >
      <xs:sequence>
        <xs:element name="bob" type="xs:string" />
        <xs:element name="jane" type="xs:string" />
        <xs:element name="sue" type="xs:string" />
        <xs:element name="luke" type="xs:string" />
        <xs:element name="leia" type="xs:string" />
        <xs:element name="yoda" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rollbackoverridedefaultrollbackfalserollbackannotationtransactionaltests" >
      <xs:complexContent>
       <xs:extension base="		defaultrollbackfalserollbackannotationtransactionaltests">
         <xs:sequence>
          <xs:element name="originalnumrows" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationconfigtestsuite" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultloaderbeanoverridingdefaultconfigclassesinheritedtests" >
      <xs:complexContent>
       <xs:extension base="		defaultloaderdefaultconfigclassesbasetests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultloaderexplicitconfigclassesbasetests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitconfigclassesinheritedtests" >
      <xs:complexContent>
       <xs:extension base="explicitconfigclassesbasetests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultconfigclassesbasetests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultloaderexplicitconfigclassesinheritedtests" >
      <xs:complexContent>
       <xs:extension base="defaultloaderexplicitconfigclassesbasetests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultloaderdefaultconfigclassesinheritedtests" >
      <xs:complexContent>
       <xs:extension base="defaultloaderdefaultconfigclassesbasetests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanoverridingdefaultconfigclassesinheritedtests" >
      <xs:complexContent>
       <xs:extension base="defaultconfigclassesbasetests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configclassesandprofileswithcustomdefaultsmetaconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metametaconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configclassesandprofilesmetaconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metametaconfigdefaultstests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configclassesandprofileresolverwithcustomdefaultsmetaconfigwithoverridestests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configclassesandprofileswithcustomdefaultsmetaconfigtests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configclassesandprofilesmetaconfigtests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configclassesandprofileresolverwithcustomdefaultsmetaconfig" >
      <xs:complexContent>
       <xs:extension base="activeprofilesresolver>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configclassesandprofileswithcustomdefaultsmetaconfigwithoverridestests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configclassesandprofileresolverwithcustomdefaultsmetaconfigtests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultloaderbeanoverridingexplicitconfigclassesinheritedtests" >
      <xs:complexContent>
       <xs:extension base="		defaultloaderexplicitconfigclassesbasetests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanoverridingexplicitconfigclassesinheritedtests" >
      <xs:complexContent>
       <xs:extension base="explicitconfigclassesbasetests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultloaderdefaultconfigclassesbasetests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationconfigspringjunit4classrunnerappctxtests" >
      <xs:complexContent>
       <xs:extension base="springjunit4classrunnerappctxtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultconfigclassesinheritedtests" >
      <xs:complexContent>
       <xs:extension base="defaultconfigclassesbasetests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pojoandstringconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitconfigclassesbasetests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lookuptxmgrbytypeandqualifieratmethodleveltests" >
      <xs:sequence>
        <xs:element name="txmanager1" type="xs:anyType" />
        <xs:element name="txmanager2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lookuptxmgrbytypetests" >
      <xs:sequence>
        <xs:element name="txmanager" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lookupnonexistenttxmgrtests" >
      <xs:sequence>
        <xs:element name="txmanager" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lookuptxmgrbytypeandnametests" >
      <xs:sequence>
        <xs:element name="txmanager1" type="xs:anyType" />
        <xs:element name="txmanager2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lookuptxmgrbytypeandqualifieratclassleveltests" >
      <xs:sequence>
        <xs:element name="txmanager1" type="xs:anyType" />
        <xs:element name="txmanager2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lookuptxmgrbytypeanddefaultnametests" >
      <xs:sequence>
        <xs:element name="txmanager1" type="xs:anyType" />
        <xs:element name="txmanager2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spr9799annotationconfigtests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spr9799xmlconfigtests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concretetransactionaljunit4springcontexttests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaljunit4springcontexttests">
         <xs:sequence>
          <xs:element name="jane" type="xs:string" />
          <xs:element name="sue" type="xs:string" />
          <xs:element name="yoda" type="xs:string" />
          <xs:element name="beaninitialized" type="xs:anyType" />
          <xs:element name="beanname" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="nonrequired" type="xs:long" />
          <xs:element name="foo" type="xs:string" />
          <xs:element name="bar" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optionalcontextconfigurationspringrunnertests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="absolutepathspringjunit4classrunnerappctxtests" >
      <xs:complexContent>
       <xs:extension base="springjunit4classrunnerappctxtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rollbackoverridedefaultrollbacktruetransactionaltests" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classleveldisabledspringrunnertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springjunit4classrunnertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="repeatedspringrunnertests" >
      <xs:complexContent>
       <xs:extension base="runner>">
         <xs:sequence>
          <xs:element name="invocationcount" type="xs:anyType" />
          <xs:element name="testclass" type="xs:anyType" />
          <xs:element name="expectedfailurecount" type="xs:long" />
          <xs:element name="expectedstartedcount" type="xs:long" />
          <xs:element name="expectedfinishedcount" type="xs:long" />
          <xs:element name="expectedinvocationcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springjunit47classrunnerruletests" >
      <xs:sequence>
        <xs:element name="name" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timedspringrunnertests" >
      <xs:complexContent>
       <xs:extension base="runner>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contextcustomizerspringrunnertests" >
      <xs:complexContent>
       <xs:extension base="defaulttestcontextbootstrapper">
         <xs:sequence>
          <xs:element name="foo" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardjunit4featurestests" >
      <xs:sequence>
        <xs:element name="beforecounter" type="xs:long" />
        <xs:element name="beforecounter" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanoverridingexplicitlocationsinheritedtests" >
      <xs:complexContent>
       <xs:extension base="explicitlocationsbasetests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitlocationsbasetests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitlocationsinheritedtests" >
      <xs:complexContent>
       <xs:extension base="explicitlocationsbasetests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanoverridingdefaultlocationsinheritedtests" >
      <xs:complexContent>
       <xs:extension base="defaultlocationsbasetests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="spr3896suitetests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultlocationsbasetests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultlocationsinheritedtests" >
      <xs:complexContent>
       <xs:extension base="defaultlocationsbasetests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="programmatictxmgmtspringruletests" >
      <xs:complexContent>
       <xs:extension base="programmatictxmgmttests">
         <xs:sequence>
          <xs:element name="" type="springclassrule" nillable="true" minOccurs="0" />
          <xs:element name="" type="springmethodrule" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="repeatedspringruletests" >
      <xs:complexContent>
       <xs:extension base="repeatedspringrunnertests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enabledandignoredspringruletests" >
      <xs:complexContent>
       <xs:extension base="enabledandignoredspringrunnertests">
         <xs:sequence>
          <xs:element name="" type="springclassrule" nillable="true" minOccurs="0" />
          <xs:element name="" type="springmethodrule" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timedtransactionalspringruletests" >
      <xs:complexContent>
       <xs:extension base="timedtransactionalspringrunnertests">
         <xs:sequence>
          <xs:element name="" type="springclassrule" nillable="true" minOccurs="0" />
          <xs:element name="" type="springmethodrule" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseappctxruletests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="springclassrule" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="springmethodrule" nillable="true" minOccurs="0" />
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="failingbeforeandaftermethodsspringruletests" >
      <xs:complexContent>
       <xs:extension base="failingbeforeandaftermethodsspringrunnertests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timedspringruletests" >
      <xs:complexContent>
       <xs:extension base="timedspringrunnertests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclass2appctxruletests" >
      <xs:complexContent>
       <xs:extension base="baseappctxruletests">
         <xs:sequence>
          <xs:element name="baz" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beforeandaftertransactionannotationspringruletests" >
      <xs:complexContent>
       <xs:extension base="beforeandaftertransactionannotationtests">
         <xs:sequence>
          <xs:element name="" type="springclassrule" nillable="true" minOccurs="0" />
          <xs:element name="" type="springmethodrule" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterizedspringruletests" >
      <xs:sequence>
        <xs:element name="invocationcount" type="xs:anyType" />
        <xs:element name="GeneratedName" type="springclassrule" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="springmethodrule" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="employeebeanname" type="xs:string" />
        <xs:element name="employeename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classleveldisabledspringruletests" >
      <xs:complexContent>
       <xs:extension base="classleveldisabledspringrunnertests">
         <xs:sequence>
          <xs:element name="" type="springclassrule" nillable="true" minOccurs="0" />
          <xs:element name="" type="springmethodrule" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicannotationconfigwacspringruletests" >
      <xs:complexContent>
       <xs:extension base="basicannotationconfigwactests">
         <xs:sequence>
          <xs:element name="//alltestsareinsuperclass." type="springclassrule" nillable="true" minOccurs="0" />
          <xs:element name="" type="springmethodrule" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionalsqlscriptsspringruletests" >
      <xs:complexContent>
       <xs:extension base="transactionalsqlscriptstests">
         <xs:sequence>
          <xs:element name="" type="springclassrule" nillable="true" minOccurs="0" />
          <xs:element name="" type="springmethodrule" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclass1appctxruletests" >
      <xs:complexContent>
       <xs:extension base="baseappctxruletests">
         <xs:sequence>
          <xs:element name="bar" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autowiredruletests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="springclassrule" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="springmethodrule" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsr250lifecycletests" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="GeneratedName" type="lifecyclebean" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lifecyclebean" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterizeddependencyinjectiontests" >
      <xs:sequence>
        <xs:element name="invocationcount" type="xs:anyType" />
        <xs:element name="GeneratedName" type="testcontextmanager" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="employeebeanname" type="xs:string" />
        <xs:element name="employeename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="failingbeforeandaftermethodstestngtests" >
      <xs:complexContent>
       <xs:extension base="abstracttestngspringcontexttests">
         <xs:sequence>
          <xs:element name="clazz" type="xs:anyType" />
          <xs:element name="expectedteststartcount" type="xs:long" />
          <xs:element name="expectedtestsuccesscount" type="xs:long" />
          <xs:element name="expectedfailurecount" type="xs:long" />
          <xs:element name="expectedfailedconfigurationscount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classleveltransactionalspringrunnertests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionalspringrunnertests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="failingbeforeandaftermethodsspringrunnertests" >
      <xs:complexContent>
       <xs:extension base="runner>">
         <xs:sequence>
          <xs:element name="clazz" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classpathresourcespringjunit4classrunnerappctxtests" >
      <xs:complexContent>
       <xs:extension base="springjunit4classrunnerappctxtests">
         <xs:sequence>
          <xs:element name="/***classpath-basedresourcepathfortheapplicationcontextconfiguration*for{@linkspringjunit4classrunnerappctxtests}:*{@code&quotclasspath:/org/springframework/test/context/junit4/springjunit4classrunnerappctxtests-context.xml&quot}**@seespringjunit4classrunnerappctxtests#default_context_resource_path*@seeresourceutils#classpath_url_prefix*/classpath_context_resource_path" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springjunit4concurrencytests" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="testclasses" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertiesbasedspringjunit4classrunnerappctxtests" >
      <xs:sequence>
        <xs:element name="cat" type="xs:anyType" />
        <xs:element name="test" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trackingrunlistener" >
      <xs:complexContent>
       <xs:extension base="runlistener">
         <xs:sequence>
          <xs:element name="testfailurecount" type="xs:anyType" />
          <xs:element name="teststartedcount" type="xs:anyType" />
          <xs:element name="testfinishedcount" type="xs:anyType" />
          <xs:element name="testassumptionfailurecount" type="xs:anyType" />
          <xs:element name="testignoredcount" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="driverslicense" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="driverslicense" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardpersonservice" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="personrepository" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatepersonrepository" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personrepository" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatesessionflushingtests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaljunit4springcontexttests">
         <xs:sequence>
          <xs:element name="sam" type="xs:string" />
          <xs:element name="juergen" type="xs:string" />
          <xs:element name="" type="personservice" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hybridcontextloadertests" >
      <xs:sequence>
        <xs:element name="foofromxml" type="xs:string" />
        <xs:element name="foofromjava" type="xs:string" />
        <xs:element name="enigma" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hybridcontextloader" >
      <xs:complexContent>
       <xs:extension base="abstractgenericcontextloader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardjunit4featuresspringrunnertests" >
      <xs:complexContent>
       <xs:extension base="standardjunit4featurestests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customdefaultcontextloaderclassspringrunnertests" >
      <xs:complexContent>
       <xs:extension base="defaulttestcontextbootstrapper">
         <xs:sequence>
          <xs:element name="cat" type="xs:anyType" />
          <xs:element name="test" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expectedexceptionspringrunnertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodleveltransactionalspringrunnertests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionalspringrunnertests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultrollbackfalserollbackannotationtransactionaltests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionalspringrunnertests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedpersondatabasetestsconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritedconfigspringjunit4classrunnerappctxtests" >
      <xs:complexContent>
       <xs:extension base="springjunit4classrunnerappctxtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="atbeanlitemodescopetests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="injectedsingletonbean" type="lifecyclebean" nillable="true" minOccurs="0" />
        <xs:element name="injectedprototypebean" type="lifecyclebean" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionalannotatedconfigclasseswithoutatconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="		abstracttransactionalannotatedconfigclasstests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lifecyclebean" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="initialized" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionalannotatedconfigclasswithatconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="		abstracttransactionalannotatedconfigclasstests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotatedconfigclasseswithoutatconfigurationtests" >
      <xs:sequence>
        <xs:element name="enigma" type="xs:string" />
        <xs:element name="GeneratedName" type="lifecyclebean" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstracttransactionalannotatedconfigclasstests" >
      <xs:sequence>
        <xs:element name="jane" type="xs:string" />
        <xs:element name="sue" type="xs:string" />
        <xs:element name="yoda" type="xs:string" />
        <xs:element name="fromtxmanager" type="xs:anyType" />
        <xs:element name="viainjection" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timedtransactionalspringrunnertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcontextmanagersuppressedexceptionstests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="absolutepathgroovyspringcontexttests" >
      <xs:complexContent>
       <xs:extension base="groovyspringcontexttests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultscriptdetectiongroovyspringcontexttests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groovycontrolgrouptests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groovyspringcontexttests" >
      <xs:sequence>
        <xs:element name="beaninitialized" type="xs:anyType" />
        <xs:element name="beanname" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="nonrequired" type="xs:long" />
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedxmlandgroovyspringcontexttests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultscriptdetectionxmlsupersedesgroovyspringcontexttests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="relativepathgroovyspringcontexttests" >
      <xs:complexContent>
       <xs:extension base="groovyspringcontexttests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contextconfigurationwithpropertiesextendingpropertiesandinheritedloadertests" >
      <xs:complexContent>
       <xs:extension base="		propertiesbasedspringjunit4classrunnerappctxtests">
         <xs:sequence>
          <xs:element name="dog" type="xs:anyType" />
          <xs:element name="test2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contextconfigurationwithpropertiesextendingpropertiestests" >
      <xs:complexContent>
       <xs:extension base="		propertiesbasedspringjunit4classrunnerappctxtests">
         <xs:sequence>
          <xs:element name="dog" type="xs:anyType" />
          <xs:element name="test2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpropertysourceinterfacetests" >
      <xs:sequence>
        <xs:element name="env" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtiescontexttestinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextconfigurationtestinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpropertysourcetestinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activeprofilesinterfacetests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contexthierarchytestinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstrapwithtestinterface" >
      <xs:complexContent>
       <xs:extension base="defaulttestcontextbootstrapper">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="webappconfigurationtestinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activeprofilestestinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webappconfigurationinterfacetests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtiescontextinterfacetests" >
      <xs:sequence>
        <xs:element name="cachehits" type="xs:anyType" />
        <xs:element name="cachemisses" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstrapwithinterfacetests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlconfigtestinterface" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contexthierarchyinterfacetests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="baz" type="xs:string" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextconfigurationinterfacetests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlconfiginterfacetests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaljunit4springcontexttests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testexecutionlistenerstests" >
      <xs:complexContent>
       <xs:extension base="defaultlistenerstestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rootwaceartests" >
      <xs:complexContent>
       <xs:extension base="eartests">
         <xs:sequence>
          <xs:element name="//-------------------------------------------------------------------------wac" type="xs:anyType" />
          <xs:element name="ear" type="xs:string" />
          <xs:element name="root" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eartests" >
      <xs:sequence>
        <xs:element name="//-------------------------------------------------------------------------context" type="xs:anyType" />
        <xs:element name="ear" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dispatcherwacrootwaceartests" >
      <xs:complexContent>
       <xs:extension base="rootwaceartests">
         <xs:sequence>
          <xs:element name="wac" type="xs:anyType" />
          <xs:element name="ear" type="xs:string" />
          <xs:element name="root" type="xs:string" />
          <xs:element name="dispatcher" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="controllerintegrationtests" >
      <xs:sequence>
        <xs:element name="//-------------------------------------------------------------------------wac" type="xs:anyType" />
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singletestclasswithtwolevelcontexthierarchytests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="baz" type="xs:string" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtiescontextwithcontexthierarchytests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:anyType" />
        <xs:element name="baz" type="xs:anyType" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testhierarchylevelonewithbarecontextconfigurationinsuperclasstests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testhierarchyleveltwowithbarecontextconfigurationinsuperclasstests" >
      <xs:complexContent>
       <xs:extension base="		testhierarchylevelonewithbarecontextconfigurationinsuperclasstests">
         <xs:sequence>
          <xs:element name="foo" type="xs:string" />
          <xs:element name="bar" type="xs:string" />
          <xs:element name="baz" type="xs:string" />
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testhierarchyleveltwowithsinglelevelcontexthierarchyandmixedconfigtypestests" >
      <xs:complexContent>
       <xs:extension base="		testhierarchylevelonewithsinglelevelcontexthierarchytests">
         <xs:sequence>
          <xs:element name="foo" type="xs:string" />
          <xs:element name="bar" type="xs:string" />
          <xs:element name="baz" type="xs:string" />
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testhierarchylevelonewithsinglelevelcontexthierarchytests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singletestclasswithtwolevelcontexthierarchyandmixedconfigtypestests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="baz" type="xs:string" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testhierarchylevelonewithbarecontextconfigurationinsubclasstests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classhierarchywithmergedconfiglevelonetests" >
      <xs:sequence>
        <xs:element name="parent" type="xs:string" />
        <xs:element name="user" type="xs:string" />
        <xs:element name="beanfromuserconfig" type="xs:string" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singletestclasswithsinglelevelcontexthierarchytests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="context" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testhierarchyleveltwowithbarecontextconfigurationinsubclasstests" >
      <xs:complexContent>
       <xs:extension base="		testhierarchylevelonewithbarecontextconfigurationinsubclasstests">
         <xs:sequence>
          <xs:element name="foo" type="xs:string" />
          <xs:element name="bar" type="xs:string" />
          <xs:element name="baz" type="xs:string" />
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classhierarchywithmergedconfigleveltwotests" >
      <xs:complexContent>
       <xs:extension base="classhierarchywithmergedconfiglevelonetests">
         <xs:sequence>
          <xs:element name="order" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classhierarchywithoverriddenconfigleveltwotests" >
      <xs:complexContent>
       <xs:extension base="classhierarchywithmergedconfiglevelonetests">
         <xs:sequence>
          <xs:element name="beanfromtestuserconfig" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testhierarchyleveltwowithsinglelevelcontexthierarchytests" >
      <xs:complexContent>
       <xs:extension base="		testhierarchylevelonewithsinglelevelcontexthierarchytests">
         <xs:sequence>
          <xs:element name="foo" type="xs:string" />
          <xs:element name="bar" type="xs:string" />
          <xs:element name="baz" type="xs:string" />
          <xs:element name="context" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metacontexthierarchyconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metahierarchyleveltwotests" >
      <xs:complexContent>
       <xs:extension base="metahierarchylevelonetests">
         <xs:sequence>
          <xs:element name="context" type="xs:anyType" />
          <xs:element name="bar" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metametacontexthierarchyconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metahierarchylevelonetests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="programmatictxmgmttests" >
      <xs:sequence>
        <xs:element name="sqlscriptencoding" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primarytransactionmanagertests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionaltestexecutionlistenertests" >
      <xs:complexContent>
       <xs:extension base="invocable>">
         <xs:sequence>
          <xs:element name="tm" type="xs:anyType" />
          <xs:element name="listener" type="transactionaltestexecutionlistener" nillable="true" minOccurs="0" />
          <xs:element name="" type="testcontext" nillable="true" minOccurs="0" />
          <xs:element name="exception" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractejbtxdaotests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaljunit4springcontexttests">
         <xs:sequence>
          <xs:element name="test_name" type="xs:string" />
          <xs:element name="dao" type="testentitydao" nillable="true" minOccurs="0" />
          <xs:element name="em" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rollbackforrequiresnewejbtxdaotests" >
      <xs:complexContent>
       <xs:extension base="commitforrequiresnewejbtxdaotests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commitforrequiredejbtxdaotests" >
      <xs:complexContent>
       <xs:extension base="abstractejbtxdaotests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rollbackforrequiredejbtxdaotests" >
      <xs:complexContent>
       <xs:extension base="commitforrequiredejbtxdaotests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commitforrequiresnewejbtxdaotests" >
      <xs:complexContent>
       <xs:extension base="abstractejbtxdaotests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="requiredejbtxtestentitydao" >
      <xs:complexContent>
       <xs:extension base="abstractejbtxtestentitydao">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="requiresnewejbtxtestentitydao" >
      <xs:complexContent>
       <xs:extension base="abstractejbtxtestentitydao">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractejbtxtestentitydao" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testentitydao" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testentity" >
      <xs:sequence>
        <xs:element name="table_name" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="count" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plainvanillafooconfiginnerclasstestcase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotatedfooconfiginnerclasstestcase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customizedgenericxmlcontextloadertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtiescontexttestexecutionlistenertests" >
      <xs:sequence>
        <xs:element name="beforelistener" type="testexecutionlistener" nillable="true" minOccurs="0" />
        <xs:element name="afterlistener" type="testexecutionlistener" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="testcontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericxmlcontextloadertests" >
      <xs:sequence>
        <xs:element name="empty__array" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationconfigcontextloadertests" >
      <xs:sequence>
        <xs:element name="contextloader" type="annotationconfigcontextloader" nillable="true" minOccurs="0" />
        <xs:element name="empty__array" type="xs:string" />
        <xs:element name="empty_class_array" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpropertysourceutilstests" >
      <xs:complexContent>
       <xs:extension base="emptypropertysources">
         <xs:sequence>
          <xs:element name="empty__array" type="xs:string" />
          <xs:element name="key_value_pair" type="xs:string" />
          <xs:element name="foo_locations" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiplestaticconfigurationclassestestcase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstraptestutilsmergedconfigtests" >
      <xs:complexContent>
       <xs:extension base="abstractcontextconfigurationutilstests">
         <xs:sequence>
          <xs:element name="exception" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonstaticconfiginnerclassestestcase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="finalconfiginnerclasstestcase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericxmlcontextloaderresourcelocationstests" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="testclass" type="xs:anyType" />
        <xs:element name="expectedlocations" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextloaderutilscontexthierarchytests" >
      <xs:complexContent>
       <xs:extension base="abstractcontextconfigurationutilstests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcontextconfigurationutilstests" >
      <xs:complexContent>
       <xs:extension base="applicationcontextinitializer<?>>>">
         <xs:sequence>
          <xs:element name="empty_class_array" type="xs:anyType" />
          <xs:element name="empty__array" type="xs:string" />
          <xs:element name="empty_initializer_classes" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericpropertiescontextloadertests" >
      <xs:sequence>
        <xs:element name="empty__array" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstraptestutilscontextinitializertests" >
      <xs:complexContent>
       <xs:extension base="abstractcontextconfigurationutilstests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationconfigcontextloaderutilstests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="privateconfiginnerclasstestcase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activeprofilesutilstests" >
      <xs:complexContent>
       <xs:extension base="abstractcontextconfigurationutilstests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contextconfigurationinnerclasstestcase" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delegatingsmartcontextloadertests" >
      <xs:sequence>
        <xs:element name="empty__array" type="xs:string" />
        <xs:element name="empty_class_array" type="xs:anyType" />
        <xs:element name="loader" type="delegatingsmartcontextloader" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextloaderutilsconfigurationattributestests" >
      <xs:complexContent>
       <xs:extension base="abstractcontextconfigurationutilstests">
         <xs:sequence>
          <xs:element name="exception" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contexthierarchydirtiescontexttests" >
      <xs:complexContent>
       <xs:extension base="footestcase>">
         <xs:sequence>
          <xs:element name="context" type="xs:anyType" />
          <xs:element name="foo" type="xs:string" />
          <xs:element name="bar" type="xs:string" />
          <xs:element name="baz" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergedcontextconfigurationtests" >
      <xs:complexContent>
       <xs:extension base="applicationcontextinitializer<?>>>">
         <xs:sequence>
          <xs:element name="empty__array" type="xs:string" />
          <xs:element name="empty_class_array" type="xs:anyType" />
          <xs:element name="loader" type="genericxmlcontextloader" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicannotationconfigwactests" >
      <xs:complexContent>
       <xs:extension base="abstractbasicwactests">
         <xs:sequence>
          <xs:element name="" type="servletcontextawarebean" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="servletcontextawarebeanwactests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationconfigwebcontextloadertests" >
      <xs:sequence>
        <xs:element name="empty__array" type="xs:string" />
        <xs:element name="empty_class_array" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metaannotationconfigwactests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockservletcontext" nillable="true" minOccurs="0" />
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webappconfigurationbootstrapwithtests" >
      <xs:complexContent>
       <xs:extension base="webtestcontextbootstrapper">
         <xs:sequence>
          <xs:element name="wac" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="servlettestexecutionlistenerjunitintegrationtests" >
      <xs:sequence>
        <xs:element name="servletrequest" type="mockhttpservletrequest" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="servletcontextawarebean" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webcontextloadertestsuite" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="junit4springcontextwebtests" >
      <xs:complexContent>
       <xs:extension base="abstractjunit4springcontexttests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="wac" type="xs:anyType" />
          <xs:element name="" type="mockservletcontext" nillable="true" minOccurs="0" />
          <xs:element name="request" type="mockhttpservletrequest" nillable="true" minOccurs="0" />
          <xs:element name="response" type="mockhttpservletresponse" nillable="true" minOccurs="0" />
          <xs:element name="session" type="mockhttpsession" nillable="true" minOccurs="0" />
          <xs:element name="webrequest" type="xs:anyType" />
          <xs:element name="foo" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicgroovywactests" >
      <xs:complexContent>
       <xs:extension base="abstractbasicwactests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="websocketservletservercontainerfactorybeantests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericxmlwebcontextloadertests" >
      <xs:sequence>
        <xs:element name="empty__array" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webtestconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicxmlwactests" >
      <xs:complexContent>
       <xs:extension base="abstractbasicwactests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="servlettestexecutionlistenertests" >
      <xs:sequence>
        <xs:element name="set_up_outside_of_stel" type="xs:string" />
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockservletcontext" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="testcontext" nillable="true" minOccurs="0" />
        <xs:element name="listener" type="servlettestexecutionlistener" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requestandsessionscopedbeanswactests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="request" type="mockhttpservletrequest" nillable="true" minOccurs="0" />
        <xs:element name="session" type="mockhttpsession" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractbasicwactests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockservletcontext" nillable="true" minOccurs="0" />
        <xs:element name="request" type="mockhttpservletrequest" nillable="true" minOccurs="0" />
        <xs:element name="response" type="mockhttpservletresponse" nillable="true" minOccurs="0" />
        <xs:element name="session" type="mockhttpsession" nillable="true" minOccurs="0" />
        <xs:element name="webrequest" type="xs:anyType" />
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstraputilstests" >
      <xs:complexContent>
       <xs:extension base="defaulttestcontextbootstrapper">
         <xs:sequence>
          <xs:element name="delegate" type="cacheawarecontextloaderdelegate" nillable="true" minOccurs="0" />
          <xs:element name="exception" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testcontextmanagertests" >
      <xs:complexContent>
       <xs:extension base="namedtestexecutionlistener">
         <xs:sequence>
          <xs:element name="executionorder" type="xs:anyType" />
          <xs:element name="" type="testcontextmanager" nillable="true" minOccurs="0" />
          <xs:element name="test" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bootstraptestutils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcontextconcurrencytests" >
      <xs:sequence>
        <xs:element name="expectedmethods" type="xs:anyType" />
        <xs:element name="actualmethods" type="xs:anyType" />
        <xs:element name="testinstance" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionalsqlscriptstests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metaannotationsqlscriptstests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaljunit4springcontexttests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="populatedschematransactionalsqlscriptstests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaljunit4springcontexttests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergedsqlconfigtests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="repeatablesqlannotationsqlscriptstests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaljunit4springcontexttests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inferreddatasourcetransactionalsqlscriptstests" >
      <xs:sequence>
        <xs:element name="1" type="xs:anyType" />
        <xs:element name="2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nontransactionalsqlscriptstests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionalaftertestmethodsqlscriptstests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaljunit4springcontexttests">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipledatasourcesandtransactionmanagerstransactionalsqlscriptstests" >
      <xs:sequence>
        <xs:element name="1" type="xs:anyType" />
        <xs:element name="2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customscriptsyntaxsqlscriptstests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaljunit4springcontexttests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="globalcustomscriptsyntaxsqlscriptstests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaljunit4springcontexttests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="requiresnewtransactionsqlscriptstests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaljunit4springcontexttests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="populatedschemadatabaseconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlscriptstestexecutionlistenertests" >
      <xs:sequence>
        <xs:element name="listener" type="sqlscriptstestexecutionlistener" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="testcontext" nillable="true" minOccurs="0" />
        <xs:element name="exception" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="composedannotationsqlscriptstests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaljunit4springcontexttests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datasourceonlysqlscriptstests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipledatasourcesandtransactionmanagerssqlscriptstests" >
      <xs:sequence>
        <xs:element name="1" type="xs:anyType" />
        <xs:element name="2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionalinlinedstatementssqlscriptstests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emptydatabaseconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultscriptdetectionsqlscriptstests" >
      <xs:complexContent>
       <xs:extension base="abstracttransactionaljunit4springcontexttests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primarydatasourcetests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inferreddatasourcesqlscriptstests" >
      <xs:sequence>
        <xs:element name="1" type="xs:anyType" />
        <xs:element name="2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inlinedpropertiestestpropertysourcetests" >
      <xs:sequence>
        <xs:element name="env" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="systempropertyoverridepropertiesfiletestpropertysourcetests" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="env" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inlinedpropertiesoverridepropertiesfilestestpropertysourcetests" >
      <xs:sequence>
        <xs:element name="env" type="xs:anyType" />
        <xs:element name="explicit" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="applicationpropertyoverridepropertiesfiletestpropertysourcetests" >
      <xs:sequence>
        <xs:element name="env" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subpackageinheritedrelativepathpropertiesfiletestpropertysourcetests" >
      <xs:complexContent>
       <xs:extension base="		explicitpropertiesfiletestpropertysourcetests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inheritedrelativepathpropertiesfiletestpropertysourcetests" >
      <xs:complexContent>
       <xs:extension base="		explicitpropertiesfiletestpropertysourcetests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergedpropertiesfilestestpropertysourcetests" >
      <xs:complexContent>
       <xs:extension base="		explicitpropertiesfiletestpropertysourcetests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultpropertiesfiledetectiontestpropertysourcetests" >
      <xs:sequence>
        <xs:element name="env" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extendeddefaultpropertiesfiledetectiontestpropertysourcetests" >
      <xs:complexContent>
       <xs:extension base="		defaultpropertiesfiledetectiontestpropertysourcetests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergedpropertiesfilesoverriddenbyinlinedpropertiestestpropertysourcetests" >
      <xs:complexContent>
       <xs:extension base="		mergedpropertiesfilestestpropertysourcetests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="explicitpropertiesfiletestpropertysourcetests" >
      <xs:sequence>
        <xs:element name="env" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="profilevalueutilstests" >
      <xs:sequence>
        <xs:element name="non_annotated_method" type="xs:string" />
        <xs:element name="enabled_annotated_method" type="xs:string" />
        <xs:element name="disabled_annotated_method" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbctestutilstests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonpathexpectationshelpertests" >
      <xs:sequence>
        <xs:element name="content" type="xs:string" />
        <xs:element name="simpsons" type="xs:string" />
        <xs:element name="exception" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="staticfields" >
      <xs:sequence>
        <xs:element name="field" type="xs:string" />
        <xs:element name="field" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistententity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="legacyentityexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacyentity" >
      <xs:sequence>
        <xs:element name="collaborator" type="xs:anyType" />
        <xs:element name="number" type="xs:anyType" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
        <xs:element name="number" type="xs:anyType" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personentity" >
      <xs:complexContent>
       <xs:extension base="persistententity">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="age" type="xs:long" />
          <xs:element name="eyecolor" type="xs:string" />
          <xs:element name="likespets" type="xs:anyType" />
          <xs:element name="favorite" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reflectiontestutilstests" >
      <xs:sequence>
        <xs:element name="pi" type="xs:double" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="component" nillable="true" minOccurs="0" />
        <xs:element name="entity" type="legacyentity" nillable="true" minOccurs="0" />
        <xs:element name="exception" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="overriddenmetaannotationattributestests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aoptestutilstests" >
      <xs:sequence>
        <xs:element name="foo" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metaannotationutilstests" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlexpectationshelpertests" >
      <xs:sequence>
        <xs:element name="exception" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplerequestexpectationmanagertests" >
      <xs:sequence>
        <xs:element name="manager" type="simplerequestexpectationmanager" nillable="true" minOccurs="0" />
        <xs:element name="thrown" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultrequestexpectationtests" >
      <xs:sequence>
        <xs:element name="thrown" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcclienthttprequestfactorytests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sampleasynctests" >
      <xs:sequence>
        <xs:element name="resttemplate" type="xs:anyType" />
        <xs:element name="mockserver" type="mockrestserviceserver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sampletests" >
      <xs:sequence>
        <xs:element name="mockserver" type="mockrestserviceserver" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonpathrequestmatchersintegrationtests" >
      <xs:sequence>
        <xs:element name="people" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="mockserver" type="mockrestserviceserver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xpathrequestmatchersintegrationtests" >
      <xs:sequence>
        <xs:element name="ns" type="xs:anyType" />
        <xs:element name="mockserver" type="mockrestserviceserver" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="people" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contentrequestmatchersintegrationtests" >
      <xs:sequence>
        <xs:element name="mockserver" type="mockrestserviceserver" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="headerrequestmatchersintegrationtests" >
      <xs:sequence>
        <xs:element name="response_body" type="xs:string" />
        <xs:element name="mockserver" type="mockrestserviceserver" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlcontentrequestmatchersintegrationtests" >
      <xs:sequence>
        <xs:element name="people_xml" type="xs:string" />
        <xs:element name="mockserver" type="mockrestserviceserver" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="people" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="responsecreatorstests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockrestserviceservertests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unorderedrequestexpectationmanagertests" >
      <xs:sequence>
        <xs:element name="manager" type="unorderedrequestexpectationmanager" nillable="true" minOccurs="0" />
        <xs:element name="thrown" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockrestrequestmatcherstests" >
      <xs:sequence>
        <xs:element name="request" type="mockclienthttprequest" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonpathrequestmatcherstests" >
      <xs:sequence>
        <xs:element name="request_content" type="xs:string" />
        <xs:element name="request" type="mockclienthttprequest" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xpathrequestmatcherstests" >
      <xs:sequence>
        <xs:element name="response_content" type="xs:string" />
        <xs:element name="request" type="mockclienthttprequest" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contentrequestmatcherstests" >
      <xs:sequence>
        <xs:element name="request" type="mockclienthttprequest" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="some" type="xs:double" />
        <xs:element name="some" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultcontrollerspectests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="headerassertiontests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockservertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webtestclientconnectortests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockserverspectests" >
      <xs:complexContent>
       <xs:extension base="abstractmockserverspec<testmockserverspec>">
         <xs:sequence>
          <xs:element name="serverspec" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="httphandlerconnectortests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsoncontenttests" >
      <xs:sequence>
        <xs:element name="client" type="webtestclient" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="headerandcookietests" >
      <xs:sequence>
        <xs:element name="client" type="webtestclient" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exchangemutatortests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="webtestclient" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webfiltertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="httpservertests" >
      <xs:sequence>
        <xs:element name="server" type="xs:anyType" />
        <xs:element name="client" type="webtestclient" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="routerfunctiontests" >
      <xs:sequence>
        <xs:element name="testclient" type="webtestclient" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="applicationcontexttests" >
      <xs:sequence>
        <xs:element name="client" type="webtestclient" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="controllertests" >
      <xs:sequence>
        <xs:element name="client" type="webtestclient" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="responseentitytests" >
      <xs:sequence>
        <xs:element name="client" type="webtestclient" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="errortests" >
      <xs:sequence>
        <xs:element name="client" type="webtestclient" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statusassertiontests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filtertests" >
      <xs:complexContent>
       <xs:extension base="onceperrequestfilter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="redirecttests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="viewresolutiontests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="asynctests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipartcontrollertests" >
      <xs:complexContent>
       <xs:extension base="onceperrequestfilter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="frameworkextensiontests" >
      <xs:complexContent>
       <xs:extension base="mockmvcconfigureradapter">
         <xs:sequence>
          <xs:element name="" type="mockmvc" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="responsebodytests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="printingresulthandlersmoketests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="urlassertiontests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modelassertiontests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="viewnameassertiontests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xpathassertiontests" >
      <xs:sequence>
        <xs:element name="musicnamespace" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contentassertiontests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statusassertiontests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cookieassertiontests" >
      <xs:sequence>
        <xs:element name="cookie_name" type="xs:string" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonpathassertiontests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="headerassertiontests" >
      <xs:sequence>
        <xs:element name="error_message" type="xs:string" />
        <xs:element name="now" type="xs:string" />
        <xs:element name="minuteago" type="xs:string" />
        <xs:element name="secondlater" type="xs:string" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
        <xs:element name="currenttime" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="handlerassertiontests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
        <xs:element name="exception" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requestattributeassertiontests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlcontentassertiontests" >
      <xs:sequence>
        <xs:element name="people_xml" type="xs:string" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flashattributeassertiontests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionattributeassertiontests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requestparametertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exceptionhandlertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requestcontextholdertests" >
      <xs:complexContent>
       <xs:extension base="genericfilterbean">
         <xs:sequence>
          <xs:element name="from_tcf_mock" type="xs:string" />
          <xs:element name="from_mvc_test_default" type="xs:string" />
          <xs:element name="from_mvc_test_mock" type="xs:string" />
          <xs:element name="from_request_filter" type="xs:string" />
          <xs:element name="from_request_attributes_filter" type="xs:string" />
          <xs:element name="wac" type="xs:anyType" />
          <xs:element name="mockrequest" type="mockhttpservletrequest" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="mockmvc" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockmvcbuildermethodchaintests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formcontenttests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customrequestattributesrequestcontextholdertests" >
      <xs:sequence>
        <xs:element name="from_custom_mock" type="xs:string" />
        <xs:element name="from_mvc_test_default" type="xs:string" />
        <xs:element name="from_mvc_test_mock" type="xs:string" />
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="encodeduritests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="httpoptionstests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persondao" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="asynccontrollerjavaconfigtests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="callableinterceptor" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webappresourcetests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlconfigtests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="persondao" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="javaconfigtests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="persondao" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="personcontroller" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personcontroller" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="persondao" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stubmvcresult" >
      <xs:sequence>
        <xs:element name="request" type="mockhttpservletrequest" nillable="true" minOccurs="0" />
        <xs:element name="handler" type="xs:anyType" />
        <xs:element name="interceptors" type="xs:anyType" />
        <xs:element name="resolved" type="xs:anyType" />
        <xs:element name="mav" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="response" type="mockhttpservletresponse" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standalonemockmvcbuildertests" >
      <xs:complexContent>
       <xs:extension base="standalonemockmvcbuilder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionaldelegatingfilterproxytests" >
      <xs:sequence>
        <xs:element name="request" type="mockhttpservletrequest" nillable="true" minOccurs="0" />
        <xs:element name="response" type="mockhttpservletresponse" nillable="true" minOccurs="0" />
        <xs:element name="filterchain" type="mockfilterchain" nillable="true" minOccurs="0" />
        <xs:element name="delegate" type="xs:anyType" />
        <xs:element name="filter" type="patternmappingfilterproxy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultmockmvcbuildertests" >
      <xs:sequence>
        <xs:element name="servletcontext" type="mockservletcontext" nillable="true" minOccurs="0" />
        <xs:element name="exception" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sharedhttpsessiontests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcconnectionbuildersupporttests" >
      <xs:sequence>
        <xs:element name="client" type="xs:anyType" />
        <xs:element name="builder" type="mockmvcwebconnectionbuildersupport" nillable="true" minOccurs="0" />
        <xs:element name="wac" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="htmlunitrequestbuildertests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="sessions" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="requestbuilder" type="htmlunitrequestbuilder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcwebconnectiontests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcwebclientbuildertests" >
      <xs:sequence>
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractwebrequestmatchertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="forwardcontroller" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delegatingwebconnectiontests" >
      <xs:sequence>
        <xs:element name="webconnection" type="delegatingwebconnection" nillable="true" minOccurs="0" />
        <xs:element name="request" type="xs:anyType" />
        <xs:element name="expectedresponse" type="xs:anyType" />
        <xs:element name="matcher1" type="webrequestmatcher" nillable="true" minOccurs="0" />
        <xs:element name="matcher2" type="webrequestmatcher" nillable="true" minOccurs="0" />
        <xs:element name="defaultconnection" type="xs:anyType" />
        <xs:element name="connection1" type="xs:anyType" />
        <xs:element name="connection2" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="urlregexrequestmatchertests" >
      <xs:complexContent>
       <xs:extension base="abstractwebrequestmatchertests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hellocontroller" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webconnectionhtmlunitdrivertests" >
      <xs:sequence>
        <xs:element name="driver" type="webconnectionhtmlunitdriver" nillable="true" minOccurs="0" />
        <xs:element name="connection" type="xs:anyType" />
        <xs:element name="exception" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvchtmlunitdriverbuildertests" >
      <xs:sequence>
        <xs:element name="expected_body" type="xs:string" />
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
        <xs:element name="driver" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockwebresponsebuildertests" >
      <xs:sequence>
        <xs:element name="response" type="mockhttpservletresponse" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="responsebuilder" type="mockwebresponsebuilder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hostrequestmatchertests" >
      <xs:complexContent>
       <xs:extension base="abstractwebrequestmatchertests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockmultiparthttpservletrequestbuildertests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockhttpservletrequestbuildertests" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="builder" type="mockhttpservletrequestbuilder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcreusetests" >
      <xs:sequence>
        <xs:element name="hello" type="xs:string" />
        <xs:element name="enigma" type="xs:string" />
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="wac" type="xs:anyType" />
        <xs:element name="mvc" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultmvcresulttests" >
      <xs:sequence>
        <xs:element name="mvcresult" type="defaultmvcresult" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonpathresultmatcherstests" >
      <xs:sequence>
        <xs:element name="response_content" type="xs:string" />
        <xs:element name="GeneratedName" type="stubmvcresult" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xpathresultmatcherstests" >
      <xs:sequence>
        <xs:element name="response_content" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcresultmatcherstests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contentresultmatcherstests" >
      <xs:sequence>
        <xs:element name="content" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flashattributeresultmatcherstests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="printingresulthandlertests" >
      <xs:complexContent>
       <xs:extension base="printingresulthandler">
         <xs:sequence>
          <xs:element name="handler" type="xs:anyType" />
          <xs:element name="request" type="mockhttpservletrequest" nillable="true" minOccurs="0" />
          <xs:element name="response" type="mockhttpservletresponse" nillable="true" minOccurs="0" />
          <xs:element name="mvcresult" type="stubmvcresult" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="modelresultmatcherstests" >
      <xs:sequence>
        <xs:element name="matchers" type="modelresultmatchers" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mvcresult" nillable="true" minOccurs="0" />
        <xs:element name="witherror" type="mvcresult" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statusresultmatcherstests" >
      <xs:sequence>
        <xs:element name="matchers" type="statusresultmatchers" nillable="true" minOccurs="0" />
        <xs:element name="request" type="mockhttpservletrequest" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockfilterchaintests" >
      <xs:sequence>
        <xs:element name="request" type="xs:anyType" />
        <xs:element name="response" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockpagecontexttests" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="ctx" type="mockpagecontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockhttpservletresponsetests" >
      <xs:sequence>
        <xs:element name="response" type="mockhttpservletresponse" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockhttpsessiontests" >
      <xs:sequence>
        <xs:element name="session" type="mockhttpsession" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockservletcontexttests" >
      <xs:complexContent>
       <xs:extension base="servletregistration>">
         <xs:sequence>
          <xs:element name="sc" type="mockservletcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockmultiparthttpservletrequesttests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockhttpservletrequesttests" >
      <xs:sequence>
        <xs:element name="host" type="xs:string" />
        <xs:element name="content_type" type="xs:string" />
        <xs:element name="if_modified_since" type="xs:string" />
        <xs:element name="request" type="mockhttpservletrequest" nillable="true" minOccurs="0" />
        <xs:element name="exception" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockserverhttpresponsetests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockserverhttprequesttests" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webtestclientextensions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextconfiguration" >
      <xs:complexContent>
       <xs:extension base="applicationcontextinitializer<?>>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcontextloader" >
      <xs:complexContent>
       <xs:extension base="applicationcontextinitializer<?>>>">
         <xs:sequence>
          <xs:element name="empty__array" type="xs:string" />
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericxmlcontextloader" >
      <xs:complexContent>
       <xs:extension base="abstractgenericcontextloader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testpropertysourceattributes" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="declaringclass" type="xs:anyType" />
        <xs:element name="locations" type="xs:string" />
        <xs:element name="inheritlocations" type="xs:anyType" />
        <xs:element name="properties" type="xs:string" />
        <xs:element name="inheritproperties" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaulttestcontext" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="attributes" type="xs:anyType" />
        <xs:element name="GeneratedName" type="cacheawarecontextloaderdelegate" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mergedcontextconfiguration" nillable="true" minOccurs="0" />
        <xs:element name="testclass" type="xs:anyType" />
        <xs:element name="volatiletestinstance" type="xs:anyType" />
        <xs:element name="volatiletest" type="xs:anyType" />
        <xs:element name="volatiletestexception" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activeprofilesutils" >
      <xs:complexContent>
       <xs:extension base="activeprofilesresolver>">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contextloaderutils" >
      <xs:sequence>
        <xs:element name="generated_context_hierarchy_level_prefix" type="xs:string" />
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationconfigcontextloader" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericgroovyxmlcontextloader" >
      <xs:complexContent>
       <xs:extension base="genericxmlcontextloader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationconfigcontextloaderutils" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtiescontexttestexecutionlistener" >
      <xs:complexContent>
       <xs:extension base="abstractdirtiescontexttestexecutionlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractdelegatingsmartcontextloader" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstracttestexecutionlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractdirtiescontexttestexecutionlistener" >
      <xs:complexContent>
       <xs:extension base="abstracttestexecutionlistener">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="delegatingsmartcontextloader" >
      <xs:complexContent>
       <xs:extension base="abstractdelegatingsmartcontextloader">
         <xs:sequence>
          <xs:element name="groovy_xml_context_loader_class_name" type="xs:string" />
          <xs:element name="groovypresent" type="xs:anyType" />
          <xs:element name="xmlloader" type="smartcontextloader" nillable="true" minOccurs="0" />
          <xs:element name="annotationconfigloader" type="smartcontextloader" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericpropertiescontextloader" >
      <xs:complexContent>
       <xs:extension base="abstractgenericcontextloader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultbootstrapcontext" >
      <xs:sequence>
        <xs:element name="testclass" type="xs:anyType" />
        <xs:element name="GeneratedName" type="cacheawarecontextloaderdelegate" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtiescontextbeforemodestestexecutionlistener" >
      <xs:complexContent>
       <xs:extension base="abstractdirtiescontexttestexecutionlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="applicationcontextinitializerutils" >
      <xs:complexContent>
       <xs:extension base="applicationcontextinitializer<?>>>">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependencyinjectiontestexecutionlistener" >
      <xs:complexContent>
       <xs:extension base="abstracttestexecutionlistener">
         <xs:sequence>
          <xs:element name="permissiblevaluesinclude{@linkboolean#true}and{@linkboolean#false}.*/reinject_dependencies_attribute" type="xs:string" />
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergedtestpropertysources" >
      <xs:sequence>
        <xs:element name="empty__array" type="xs:string" />
        <xs:element name="locations" type="xs:string" />
        <xs:element name="properties" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpropertysourceutils" >
      <xs:sequence>
        <xs:element name=".*@since4.1.5*@see#addinlinedpropertiestoenvironment*/inlined_properties_property_source_name" type="xs:string" />
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaulttestcontextbootstrapper" >
      <xs:complexContent>
       <xs:extension base="abstracttestcontextbootstrapper">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultactiveprofilesresolver" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstracttestcontextbootstrapper" >
      <xs:complexContent>
       <xs:extension base="testexecutionlistener>>">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="" type="bootstrapcontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractgenericcontextloader" >
      <xs:complexContent>
       <xs:extension base="abstractcontextloader">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergedcontextconfiguration" >
      <xs:complexContent>
       <xs:extension base="applicationcontextinitializer<?>>>">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="empty__array" type="xs:string" />
          <xs:element name="empty_class_array" type="xs:anyType" />
          <xs:element name="empty_initializer_classes" type="xs:anyType" />
          <xs:element name="empty_context_customizers" type="contextcustomizer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="testclass" type="xs:anyType" />
          <xs:element name="locations" type="xs:string" />
          <xs:element name="classes" type="xs:anyType" />
          <xs:element name="contextinitializerclasses" type="xs:anyType" />
          <xs:element name="activeprofiles" type="xs:string" />
          <xs:element name="propertysourcelocations" type="xs:string" />
          <xs:element name="propertysourceproperties" type="xs:string" />
          <xs:element name="contextcustomizers" type="contextcustomizer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="" type="contextloader" nillable="true" minOccurs="0" />
          <xs:element name="" type="cacheawarecontextloaderdelegate" nillable="true" minOccurs="0" />
          <xs:element name="parent" type="mergedcontextconfiguration" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="smartcontextloader" >
      <xs:complexContent>
       <xs:extension base="{@code">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractjunit4springcontexttests" >
      <xs:sequence>
        <xs:element name="/***geravailabletosubclasses.*/ger" type="xs:anyType" />
        <xs:element name="/***the{@link}thatwasinjectedintothistestinstance*via{@link#set()}.*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springmethodrule" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springclassrule" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="testcontextmanagercache" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springjunit4classrunner" >
      <xs:complexContent>
       <xs:extension base="blockjunit4classrunner">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="withrules" type="xs:anyType" />
          <xs:element name="" type="testcontextmanager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttransactionaljunit4springcontexttests" >
      <xs:complexContent>
       <xs:extension base="abstractjunit4springcontexttests">
         <xs:sequence>
          <xs:element name="/***the{@code}thatthisbaseclassmanages,availabletosubclasses.*@since3.2*/" type="xs:anyType" />
          <xs:element name="sqlscriptencoding" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springrunner" >
      <xs:complexContent>
       <xs:extension base="springjunit4classrunner">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runpreparetestinstancecallbacks" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
          <xs:element name="next" type="xs:anyType" />
          <xs:element name="testinstance" type="xs:anyType" />
          <xs:element name="" type="testcontextmanager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runbeforetestexecutioncallbacks" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
          <xs:element name="next" type="xs:anyType" />
          <xs:element name="testinstance" type="xs:anyType" />
          <xs:element name="test" type="xs:anyType" />
          <xs:element name="" type="testcontextmanager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runaftertestexecutioncallbacks" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
          <xs:element name="next" type="xs:anyType" />
          <xs:element name="testinstance" type="xs:anyType" />
          <xs:element name="test" type="xs:anyType" />
          <xs:element name="" type="testcontextmanager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="profilevaluechecker" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
          <xs:element name="next" type="xs:anyType" />
          <xs:element name="testclass" type="xs:anyType" />
          <xs:element name="test" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springrepeat" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="next" type="xs:anyType" />
          <xs:element name="test" type="xs:anyType" />
          <xs:element name="repeat" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="springfailontimeout" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
          <xs:element name="next" type="xs:anyType" />
          <xs:element name="timeout" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runbeforetestmethodcallbacks" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
          <xs:element name="next" type="xs:anyType" />
          <xs:element name="testinstance" type="xs:anyType" />
          <xs:element name="test" type="xs:anyType" />
          <xs:element name="" type="testcontextmanager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runbeforetestclasscallbacks" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
          <xs:element name="next" type="xs:anyType" />
          <xs:element name="" type="testcontextmanager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runaftertestmethodcallbacks" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
          <xs:element name="next" type="xs:anyType" />
          <xs:element name="testinstance" type="xs:anyType" />
          <xs:element name="test" type="xs:anyType" />
          <xs:element name="" type="testcontextmanager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runaftertestclasscallbacks" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
          <xs:element name="next" type="xs:anyType" />
          <xs:element name="" type="testcontextmanager" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="activeprofiles" >
      <xs:complexContent>
       <xs:extension base="activeprofilesresolver>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testexecutionlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstracttransactionaltestngspringcontexttests" >
      <xs:complexContent>
       <xs:extension base="abstracttestngspringcontexttests">
         <xs:sequence>
          <xs:element name="/***the{@code}thatthisbaseclassmanages,availabletosubclasses.*@since3.2*/" type="xs:anyType" />
          <xs:element name="sqlscriptencoding" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttestngspringcontexttests" >
      <xs:complexContent>
       <xs:extension base="throwable>">
         <xs:sequence>
          <xs:element name="/***geravailabletosubclasses*/ger" type="xs:anyType" />
          <xs:element name="/***the{@link}thatwasinjectedintothistestinstance*via{@link#set()}.*/" type="xs:anyType" />
          <xs:element name="" type="testcontextmanager" nillable="true" minOccurs="0" />
          <xs:element name="testexception" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextcustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springjunitwebconfig" >
      <xs:complexContent>
       <xs:extension base="applicationcontextinitializer<?>>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterautowireutils" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enabledif" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="disabledifcondition" >
      <xs:complexContent>
       <xs:extension base="abstractexpressionevaluatingcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springextension" >
      <xs:sequence>
        <xs:element name="/***{@link}inwhich{@codetestcontextmanagers}arestored,*keyedbytestclass.*/" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractexpressionevaluatingcondition" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enabledifcondition" >
      <xs:complexContent>
       <xs:extension base="abstractexpressionevaluatingcondition">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="disabledif" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="springjunitconfig" >
      <xs:complexContent>
       <xs:extension base="applicationcontextinitializer<?>>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultcontextcache" >
      <xs:complexContent>
       <xs:extension base="linkedhashmap<mergedcontextconfiguration,">
         <xs:sequence>
          <xs:element name="statsger" type="xs:anyType" />
          <xs:element name="contextmap" type="xs:anyType" />
          <xs:element name="hierarchymap" type="xs:anyType" />
          <xs:element name="maxsize" type="xs:long" />
          <xs:element name="hitcount" type="xs:anyType" />
          <xs:element name="misscount" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultcacheawarecontextloaderdelegate" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="/***defaultcacheofspringapplicationcontexts.*/default" type="contextcache" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="contextcache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextcacheutils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextcache" >
      <xs:sequence>
        <xs:element name="/***thenameoftheloggingcategoryusedforreporting{@codecontextcache}*statistics.*/context_cache_logging_category" type="xs:string" />
        <xs:element name="/***thedefaultmaximumsizeofthecontextcache:{@value#default_max_context_cache_size}.*@since4.3*@see#max_context_cache_size_property_name*/default_max_context_cache_size" type="xs:long" />
        <xs:element name="notethatimplementationsof{@codecontextcache}arenotrequiredto*actuallysupportamaximumcachesize.consultthedocumentationofthe*correspondingimplementationfordetails.*@since4.3*@see#default_max_context_cache_size*/max_context_cache_size_property_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextconfigurationattributes" >
      <xs:complexContent>
       <xs:extension base="applicationcontextinitializer<?>>[]">
         <xs:sequence>
          <xs:element name="empty_locations" type="xs:string" />
          <xs:element name="empty_classes" type="xs:anyType" />
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="declaringclass" type="xs:anyType" />
          <xs:element name="classes" type="xs:anyType" />
          <xs:element name="locations" type="xs:string" />
          <xs:element name="inheritlocations" type="xs:anyType" />
          <xs:element name="initializers" type="xs:anyType" />
          <xs:element name="inheritinitializers" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="contextloaderclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcontextresourceutils" >
      <xs:sequence>
        <xs:element name="slash" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergedsqlconfig" >
      <xs:complexContent>
       <xs:extension base="enum<?>>">
         <xs:sequence>
          <xs:element name="datasource" type="xs:string" />
          <xs:element name="transactionmanager" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="encoding" type="xs:string" />
          <xs:element name="separator" type="xs:string" />
          <xs:element name="commentprefix" type="xs:string" />
          <xs:element name="blockcommentstartdelimiter" type="xs:string" />
          <xs:element name="blockcommentenddelimiter" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sql" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlscriptstestexecutionlistener" >
      <xs:complexContent>
       <xs:extension base="abstracttestexecutionlistener">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlconfig" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlgroup" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstraputils" >
      <xs:complexContent>
       <xs:extension base="bootstrapcontext>">
         <xs:sequence>
          <xs:element name="default_bootstrap_context_class_name" type="xs:string" />
          <xs:element name="default_cache_aware_context_loader_delegate_class_name" type="xs:string" />
          <xs:element name="default_test_context_bootstrapper_class_name" type="xs:string" />
          <xs:element name="default_web_test_context_bootstrapper_class_name" type="xs:string" />
          <xs:element name="web_app_configuration_annotation_class_name" type="xs:string" />
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="servlettestexecutionlistener" >
      <xs:complexContent>
       <xs:extension base="abstracttestexecutionlistener">
         <xs:sequence>
          <xs:element name="permissiblevaluesinclude{@linkboolean#true}and{@linkboolean#false}.*/reset_request_context_holder_attribute" type="xs:string" />
          <xs:element name="permissiblevaluesinclude{@linkboolean#true}and{@linkboolean#false}.*/populated_request_context_holder_attribute" type="xs:string" />
          <xs:element name="permissiblevaluesinclude{@linkboolean#true}and{@linkboolean#false}.*@since4.2*/created_by_the_testcontext_framework" type="xs:string" />
          <xs:element name="permissiblevaluesinclude{@linkboolean#true}and{@linkboolean#false}.*@since4.3*/activate_listener" type="xs:string" />
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="webmergedcontextconfiguration" >
      <xs:complexContent>
       <xs:extension base="the">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="resourcebasepath" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericgroovyxmlwebcontextloader" >
      <xs:complexContent>
       <xs:extension base="genericxmlwebcontextloader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericxmlwebcontextloader" >
      <xs:complexContent>
       <xs:extension base="abstractgenericwebcontextloader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webappconfiguration" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationconfigwebcontextloader" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockservercontainercontextcustomizerfactory" >
      <xs:sequence>
        <xs:element name="web_app_configuration_annotation_class_name" type="xs:string" />
        <xs:element name="mock_server_container_context_customizer_class_name" type="xs:string" />
        <xs:element name="websocketpresent" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockservercontainer" >
      <xs:complexContent>
       <xs:extension base="endpoint>">
         <xs:sequence>
          <xs:element name="defaultasyncsendtimeout" type="xs:long" />
          <xs:element name="defaultmaxsessionidletimeout" type="xs:long" />
          <xs:element name="defaultmaxbinarymessagebuffersize" type="xs:long" />
          <xs:element name="defaultmaxtextmessagebuffersize" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockservercontainercontextcustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webdelegatingsmartcontextloader" >
      <xs:complexContent>
       <xs:extension base="abstractdelegatingsmartcontextloader">
         <xs:sequence>
          <xs:element name="groovy_xml_web_context_loader_class_name" type="xs:string" />
          <xs:element name="groovypresent" type="xs:anyType" />
          <xs:element name="xmlloader" type="smartcontextloader" nillable="true" minOccurs="0" />
          <xs:element name="annotationconfigloader" type="smartcontextloader" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="webtestcontextbootstrapper" >
      <xs:complexContent>
       <xs:extension base="defaulttestcontextbootstrapper">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractgenericwebcontextloader" >
      <xs:complexContent>
       <xs:extension base="abstractcontextloader">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contexthierarchy" >
      <xs:complexContent>
       <xs:extension base="abstractwebtests">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beforetransaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testtransaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactioncontext" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="GeneratedName" type="testcontext" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="transactionmanager" type="xs:anyType" />
        <xs:element name="defaultrollback" type="xs:anyType" />
        <xs:element name="flaggedforrollback" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="volatiletransactionsstarted" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcontexttransactionutils" >
      <xs:complexContent>
       <xs:extension base="delegatingtransactionattribute">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="/***defaultbeannamefora{@linkdatasource}:{@code"datasource"}.*/default_data_source_name" type="xs:string" />
          <xs:element name="/***defaultbeannamefora{@linkplatformtransactionmanager}:*{@code"transactionmanager"}.*/default_transaction_manager_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aftertransaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionaltestexecutionlistener" >
      <xs:complexContent>
       <xs:extension base="abstracttestexecutionlistener">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="//donotrequire@transactionaltestmethodstobepublic.attributesource" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactioncontextholder" >
      <xs:sequence>
        <xs:element name="currenttransactioncontext" type="transactioncontext" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextloader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcontextmanager" >
      <xs:complexContent>
       <xs:extension base="testcontext>">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="" type="testcontext" nillable="true" minOccurs="0" />
          <xs:element name="testcontextholder" type="testcontext" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="testexecutionlisteners" type="testexecutionlistener" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="activeprofilesresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcontextbootstrapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testpropertysource" >
      <xs:complexContent>
       <xs:extension base="basetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcontext" >
      <xs:complexContent>
       <xs:extension base="attributeaccessor,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bootstrapcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheawarecontextloaderdelegate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bootstrapwith" >
      <xs:complexContent>
       <xs:extension base="testcontextbootstrapper>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contextcustomizerfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testexecutionlisteners" >
      <xs:complexContent>
       <xs:extension base="testexecutionlistener>[]">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbctestutils" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonpathexpectationshelper" >
      <xs:sequence>
        <xs:element name="expression" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metaannotationutils" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlexpectationshelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xpathexpectationshelper" >
      <xs:sequence>
        <xs:element name="expression" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="hasnamespaces" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflectiontestutils" >
      <xs:sequence>
        <xs:element name="setter_prefix" type="xs:string" />
        <xs:element name="getter_prefix" type="xs:string" />
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="springaoppresent" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonexpectationshelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aoptestutils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assertionerrors" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rollback" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="systemprofilevaluesource" >
      <xs:sequence>
        <xs:element name="instance" type="systemprofilevaluesource" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="profilevaluesourceconfiguration" >
      <xs:complexContent>
       <xs:extension base="profilevaluesource>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="repeat" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="profilevaluesource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testannotationutils" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="commit" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtiescontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timed" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="profilevalueutils" >
      <xs:complexContent>
       <xs:extension base="profilevaluesource>">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ifprofilevalue" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statusassertions" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="exchangeresult" nillable="true" minOccurs="0" />
        <xs:element name="responsespec" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webtestclient" >
      <xs:complexContent>
       <xs:extension base="mockserverspec<b>>">
         <xs:sequence>
          <xs:element name="/***thenameofarequestheaderusedtoassignauniqueidtoeveryrequest*performedthroughthe{@codewebtestclient}.thiscanbeusefulfor*storingcontextualinformationatallphasesofrequestprocessing(e.g.*fromaserver-sidecomponent)underthatidandlatertolookup*thatinformationoncean{@linkexchangeresult}isavailable.*/webtestclient_request_id" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractmockserverspec" >
      <xs:complexContent>
       <xs:extension base="webtestclient.mockserverspec<b>>">
         <xs:sequence>
          <xs:element name="filters" type="xs:anyType" />
          <xs:element name="sessionmanager" type="xs:anyType" />
          <xs:element name="configurers" type="mockserverconfigurer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityexchangeresult" >
      <xs:complexContent>
       <xs:extension base="exchangeresult">
         <xs:sequence>
          <xs:element name="body" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="headerassertions" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="exchangeresult" nillable="true" minOccurs="0" />
        <xs:element name="responsespec" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultrouterfunctionspec" >
      <xs:complexContent>
       <xs:extension base="abstractmockserverspec<webtestclient.routerfunctionspec>">
         <xs:sequence>
          <xs:element name="routerfunction" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jsonpathassertions" >
      <xs:sequence>
        <xs:element name="bodyspec" type="xs:anyType" />
        <xs:element name="content" type="xs:string" />
        <xs:element name="pathhelper" type="jsonpathexpectationshelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fluxexchangeresult" >
      <xs:complexContent>
       <xs:extension base="exchangeresult">
         <xs:sequence>
          <xs:element name="timeout_error" type="xs:anyType" />
          <xs:element name="body" type="xs:anyType" />
          <xs:element name="timeout" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="httphandlerconnector" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="handler" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exchangeresult" >
      <xs:sequence>
        <xs:element name="printable_media_types" type="xs:anyType" />
        <xs:element name="request" type="xs:anyType" />
        <xs:element name="response" type="xs:anyType" />
        <xs:element name="requestbody" type="xs:anyType" />
        <xs:element name="responsebody" type="xs:anyType" />
        <xs:element name="uritemplate" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wiretapconnector" >
      <xs:complexContent>
       <xs:extension base="clienthttprequestdecorator">
         <xs:sequence>
          <xs:element name="bufferfactory" type="xs:anyType" />
          <xs:element name="delegate" type="xs:anyType" />
          <xs:element name="exchanges" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultwebtestclientbuilder" >
      <xs:sequence>
        <xs:element name="webclientbuilder" type="xs:anyType" />
        <xs:element name="httphandlerbuilder" type="xs:anyType" />
        <xs:element name="connector" type="xs:anyType" />
        <xs:element name="responsetimeout" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webtestclientconfigurer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultmockserverspec" >
      <xs:complexContent>
       <xs:extension base="abstractmockserverspec<defaultmockserverspec>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockserverconfigurer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultcontrollerspec" >
      <xs:complexContent>
       <xs:extension base="abstractmockserverspec<webtestclient.controllerspec>">
         <xs:sequence>
          <xs:element name="controllers" type="xs:anyType" />
          <xs:element name="controlleradvice" type="xs:anyType" />
          <xs:element name="configurer" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultwebtestclient" >
      <xs:complexContent>
       <xs:extension base="publisher<t>>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="wiretapconnector" nillable="true" minOccurs="0" />
          <xs:element name="timeout" type="xs:anyType" />
          <xs:element name="builder" type="defaultwebtestclientbuilder" nillable="true" minOccurs="0" />
          <xs:element name="requestindex" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="applicationcontextspec" >
      <xs:complexContent>
       <xs:extension base="abstractmockserverspec<applicationcontextspec>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockmvcbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultmatcher" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contentresultmatchers" >
      <xs:sequence>
        <xs:element name="xmlhelper" type="xmlexpectationshelper" nillable="true" minOccurs="0" />
        <xs:element name="jsonhelper" type="jsonexpectationshelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="printingresulthandler" >
      <xs:sequence>
        <xs:element name="missing_character_encoding" type="xs:string" />
        <xs:element name="printer" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flashattributeresultmatchers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statusresultmatchers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonpathresultmatchers" >
      <xs:sequence>
        <xs:element name="jsonpathhelper" type="jsonpathexpectationshelper" nillable="true" minOccurs="0" />
        <xs:element name="prefix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcresultmatchers" >
      <xs:sequence>
        <xs:element name="pathmatcher" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xpathresultmatchers" >
      <xs:sequence>
        <xs:element name="xpathhelper" type="xpathexpectationshelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="viewresultmatchers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modelresultmatchers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cookieresultmatchers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="handlerresultmatchers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requestresultmatchers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="headerresultmatchers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcresulthandlers" >
      <xs:complexContent>
       <xs:extension base="printingresulthandler">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultmvcresult" >
      <xs:sequence>
        <xs:element name="result_none" type="xs:anyType" />
        <xs:element name="mockrequest" type="mockhttpservletrequest" nillable="true" minOccurs="0" />
        <xs:element name="mockresponse" type="mockhttpservletresponse" nillable="true" minOccurs="0" />
        <xs:element name="handler" type="xs:anyType" />
        <xs:element name="interceptors" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="resolved" type="xs:anyType" />
        <xs:element name="asyncresult" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="forwardrequestpostprocessor" >
      <xs:sequence>
        <xs:element name="forwardurl" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcwebconnection" >
      <xs:sequence>
        <xs:element name="sessions" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
        <xs:element name="contextpath" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="webrequestmatcher" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delegatingwebconnection" >
      <xs:sequence>
        <xs:element name="connections" type="xs:anyType" />
        <xs:element name="defaultconnection" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcwebclientbuilder" >
      <xs:complexContent>
       <xs:extension base="mockmvcwebconnectionbuildersupport<mockmvcwebclientbuilder>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockwebresponsebuilder" >
      <xs:sequence>
        <xs:element name="default_status_message" type="xs:string" />
        <xs:element name="starttime" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="response" type="mockhttpservletresponse" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hostrequestmatcher" >
      <xs:sequence>
        <xs:element name="hosts" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="urlregexrequestmatcher" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvchtmlunitdriverbuilder" >
      <xs:complexContent>
       <xs:extension base="mockmvcwebconnectionbuildersupport<mockmvchtmlunitdriverbuilder>">
         <xs:sequence>
          <xs:element name="driver" type="xs:anyType" />
          <xs:element name="javascriptenabled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="webconnectionhtmlunitdriver" >
      <xs:complexContent>
       <xs:extension base="htmlunitdriver">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockmvcwebconnectionbuildersupport" >
      <xs:complexContent>
       <xs:extension base="mockmvcwebconnectionbuildersupport<t>>">
         <xs:sequence>
          <xs:element name="" type="mockmvc" nillable="true" minOccurs="0" />
          <xs:element name="requestmatchers" type="webrequestmatcher" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="contextpath" type="xs:string" />
          <xs:element name="alwaysusemockmvc" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="htmlunitrequestbuilder" >
      <xs:complexContent>
       <xs:extension base="mockhttpservletrequest">
         <xs:sequence>
          <xs:element name="sessions" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="contextpath" type="xs:string" />
          <xs:element name="parentbuilder" type="requestbuilder" nillable="true" minOccurs="0" />
          <xs:element name="parentpostprocessor" type="smartrequestbuilder" nillable="true" minOccurs="0" />
          <xs:element name="forwardpostprocessor" type="requestpostprocessor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockmvcbuildersupport" >
      <xs:complexContent>
       <xs:extension base="nestedruntimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resulthandler" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="smartrequestbuilder" >
      <xs:complexContent>
       <xs:extension base="requestbuilder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockmvc" >
      <xs:sequence>
        <xs:element name="mvc_result_attribute" type="xs:string" />
        <xs:element name="servlet" type="testdispatcherservlet" nillable="true" minOccurs="0" />
        <xs:element name="s" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="default" type="requestbuilder" nillable="true" minOccurs="0" />
        <xs:element name="defaultresultmatchers" type="resultmatcher" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="defaultresulthandlers" type="resulthandler" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dispatcherservletcustomizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stubwebapplicationcontext" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="beanfactory" type="xs:anyType" />
          <xs:element name="id" type="xs:string" />
          <xs:element name="displayname" type="xs:string" />
          <xs:element name="startupdate" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockmvcbuilders" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcconfigureradapter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcconfigurer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standalonemockmvcbuilder" >
      <xs:complexContent>
       <xs:extension base="abstractmockmvcbuilder<standalonemockmvcbuilder>">
         <xs:sequence>
          <xs:element name="controllers" type="xs:anyType" />
          <xs:element name="controlleradvice" type="xs:anyType" />
          <xs:element name="messageconverters" type="xs:anyType" />
          <xs:element name="customargumentresolvers" type="xs:anyType" />
          <xs:element name="customreturnvaluehandlers" type="xs:anyType" />
          <xs:element name="mappedinterceptors" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="conversionservice" type="xs:anyType" />
          <xs:element name="handlerexceptionresolvers" type="xs:anyType" />
          <xs:element name="asyncrequesttimeout" type="xs:long" />
          <xs:element name="viewresolvers" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="usesuffixpatternmatch" type="xs:anyType" />
          <xs:element name="usetrailingslashpatternmatch" type="xs:anyType" />
          <xs:element name="removesemicoloncontent" type="xs:anyType" />
          <xs:element name="placeholdervalues" type="xs:anyType" />
          <xs:element name="handlermappingfactory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configurablemockmvcbuilder" >
      <xs:complexContent>
       <xs:extension base="configurablemockmvcbuilder<b>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultmockmvcbuilder" >
      <xs:complexContent>
       <xs:extension base="abstractmockmvcbuilder<defaultmockmvcbuilder>">
         <xs:sequence>
          <xs:element name="webappcontext" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractmockmvcbuilder" >
      <xs:complexContent>
       <xs:extension base="abstractmockmvcbuilder<b>>">
         <xs:sequence>
          <xs:element name="filters" type="xs:anyType" />
          <xs:element name="default" type="requestbuilder" nillable="true" minOccurs="0" />
          <xs:element name="globalresultmatchers" type="resultmatcher" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="globalresulthandlers" type="resulthandler" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="dispatcherservletcustomizers" type="dispatcherservletcustomizer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="configurers" type="mockmvcconfigurer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sharedhttpsessionconfigurer" >
      <xs:sequence>
        <xs:element name="session" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="patternmappingfilterproxy" >
      <xs:sequence>
        <xs:element name="extension_mapping_pattern" type="xs:string" />
        <xs:element name="path_mapping_pattern" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="delegate" type="xs:anyType" />
        <xs:element name="/***patternsthatrequireanexactmatch,e.g."/test"*/exactmatches" type="xs:anyType" />
        <xs:element name="/***patternsthatrequiretheurltohaveaspecificprefix,e.g."/test/*"*/startswithmatches" type="xs:anyType" />
        <xs:element name="/***patternsthatrequiretherequesturltohaveaspecificsuffix,e.g."*.html"*/endswithmatches" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testdispatcherservlet" >
      <xs:complexContent>
       <xs:extension base="dispatcherservlet">
         <xs:sequence>
          <xs:element name="key" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="requestbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultactions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcrequestbuilders" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requestpostprocessor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurablesmartrequestbuilder" >
      <xs:complexContent>
       <xs:extension base="configurablesmartrequestbuilder<b>>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockmultiparthttpservletrequestbuilder" >
      <xs:complexContent>
       <xs:extension base="mockhttpservletrequestbuilder">
         <xs:sequence>
          <xs:element name="files" type="mockmultipartfile" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="parts" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockhttpservletrequestbuilder" >
      <xs:sequence>
        <xs:element name="method" type="xs:string" />
        <xs:element name="url" type="xs:anyType" />
        <xs:element name="contextpath" type="xs:string" />
        <xs:element name="servletpath" type="xs:string" />
        <xs:element name="pathinfo" type="xs:string" />
        <xs:element name="secure" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="session" type="mockhttpsession" nillable="true" minOccurs="0" />
        <xs:element name="characterencoding" type="xs:string" />
        <xs:element name="content" type="xs:anyType" />
        <xs:element name="contenttype" type="xs:string" />
        <xs:element name="headers" type="xs:anyType" />
        <xs:element name="parameters" type="xs:anyType" />
        <xs:element name="cookies" type="xs:anyType" />
        <xs:element name="locales" type="xs:anyType" />
        <xs:element name="requestattributes" type="xs:anyType" />
        <xs:element name="sessionattributes" type="xs:anyType" />
        <xs:element name="flashattributes" type="xs:anyType" />
        <xs:element name="postprocessors" type="requestpostprocessor" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mvcresult" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modelandviewassert" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requestexpectation" >
      <xs:complexContent>
       <xs:extension base="responseactions,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockrestresponsecreators" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultresponsecreator" >
      <xs:sequence>
        <xs:element name="statuscode" type="xs:anyType" />
        <xs:element name="content" type="xs:anyType" />
        <xs:element name="content" type="xs:anyType" />
        <xs:element name="headers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requestmatcher" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expectedcount" >
      <xs:sequence>
        <xs:element name="mincount" type="xs:long" />
        <xs:element name="maxcount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockmvcclienthttprequestfactory" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mockmvc" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requestexpectationmanager" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractrequestexpectationmanager" >
      <xs:sequence>
        <xs:element name="expectations" type="requestexpectation" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="requests" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockrestserviceserver" >
      <xs:sequence>
        <xs:element name="expectationmanager" type="requestexpectationmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="responseactions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultrequestexpectation" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="requestmatchers" type="requestmatcher" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="responsecreator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockrestrequestmatchers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xpathrequestmatchers" >
      <xs:sequence>
        <xs:element name="default_encoding" type="xs:string" />
        <xs:element name="xpathhelper" type="xpathexpectationshelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonpathrequestmatchers" >
      <xs:sequence>
        <xs:element name="jsonpathhelper" type="jsonpathexpectationshelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contentrequestmatchers" >
      <xs:sequence>
        <xs:element name="xmlhelper" type="xmlexpectationshelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplerequestexpectationmanager" >
      <xs:complexContent>
       <xs:extension base="abstractrequestexpectationmanager">
         <xs:sequence>
          <xs:element name="expectationiterator" type="requestexpectation" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="repeatexpectations" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="responsecreator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unorderedrequestexpectationmanager" >
      <xs:complexContent>
       <xs:extension base="abstractrequestexpectationmanager">
         <xs:sequence>
          <xs:element name="remainingexpectations" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplenamingcontextbuilder" >
      <xs:sequence>
        <xs:element name="/***aninstanceofthisclassboundtojndi*/volatileactivated" type="simplenamingcontextbuilder" nillable="true" minOccurs="0" />
        <xs:element name="initialized" type="xs:anyType" />
        <xs:element name="initializationlock" type="xs:anyType" />
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="boundobjects" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="expectedlookuptemplate" >
      <xs:complexContent>
       <xs:extension base="jnditemplate">
         <xs:sequence>
          <xs:element name="jndiobjects" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplenamingcontext" >
      <xs:complexContent>
       <xs:extension base="abstractnamingenumeration<nameclasspair>">
         <xs:sequence>
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="root" type="xs:string" />
          <xs:element name="boundobjects" type="xs:anyType" />
          <xs:element name="environment" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delegatingservletinputstream" >
      <xs:complexContent>
       <xs:extension base="servletinputstream">
         <xs:sequence>
          <xs:element name="sourcestream" type="xs:anyType" />
          <xs:element name="finished" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockfilterconfig" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="filtername" type="xs:string" />
        <xs:element name="initparameters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockserverwebexchange" >
      <xs:complexContent>
       <xs:extension base="defaultserverwebexchange">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockbodycontent" >
      <xs:complexContent>
       <xs:extension base="bodycontent">
         <xs:sequence>
          <xs:element name="content" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockmultiparthttpservletrequest" >
      <xs:complexContent>
       <xs:extension base="mockhttpservletrequest">
         <xs:sequence>
          <xs:element name="multipartfiles" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockpart" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="filename" type="xs:string" />
        <xs:element name="content" type="xs:anyType" />
        <xs:element name="headers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockfilterchain" >
      <xs:sequence>
        <xs:element name="request" type="xs:anyType" />
        <xs:element name="response" type="xs:anyType" />
        <xs:element name="filters" type="xs:anyType" />
        <xs:element name="iterator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockservletcontext" >
      <xs:complexContent>
       <xs:extension base="servlet>">
         <xs:sequence>
          <xs:element name="/***defaultservletnameusedbytomcat,jetty,jboss,andglassfish:{@value}*/common_default_servlet_name" type="xs:string" />
          <xs:element name="temp_dir_system_property" type="xs:string" />
          <xs:element name="default_session_tracking_modes" type="xs:anyType" />
          <xs:element name="ger" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="resourcebasepath" type="xs:string" />
          <xs:element name="contextpath" type="xs:string" />
          <xs:element name="contexts" type="xs:anyType" />
          <xs:element name="majorversion" type="xs:long" />
          <xs:element name="minorversion" type="xs:long" />
          <xs:element name="effectivemajorversion" type="xs:long" />
          <xs:element name="effectiveminorversion" type="xs:long" />
          <xs:element name="namedrequestdispatchers" type="xs:anyType" />
          <xs:element name="defaultservletname" type="xs:string" />
          <xs:element name="initparameters" type="xs:anyType" />
          <xs:element name="attributes" type="xs:anyType" />
          <xs:element name="servletcontextname" type="xs:string" />
          <xs:element name="declaredroles" type="xs:anyType" />
          <xs:element name="sessiontrackingmodes" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="sessiontimeout" type="xs:long" />
          <xs:element name="requestcharacterencoding" type="xs:string" />
          <xs:element name="responsecharacterencoding" type="xs:string" />
          <xs:element name="mimetypes" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mocksessioncookieconfig" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="domain" type="xs:string" />
        <xs:element name="path" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="httponly" type="xs:anyType" />
        <xs:element name="secure" type="xs:anyType" />
        <xs:element name="maxage" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockhttpservletresponse" >
      <xs:complexContent>
       <xs:extension base="delegatingservletoutputstream">
         <xs:sequence>
          <xs:element name="charset_prefix" type="xs:string" />
          <xs:element name="date_format" type="xs:string" />
          <xs:element name="gmt" type="xs:anyType" />
          <xs:element name="//---------------------------------------------------------------------//servletresponseproperties//---------------------------------------------------------------------outputstreamaccessallowed" type="xs:anyType" />
          <xs:element name="writeraccessallowed" type="xs:anyType" />
          <xs:element name="characterencoding" type="xs:string" />
          <xs:element name="charset" type="xs:anyType" />
          <xs:element name="content" type="xs:anyType" />
          <xs:element name="outputstream" type="xs:anyType" />
          <xs:element name="writer" type="xs:anyType" />
          <xs:element name="contentlength" type="xs:long" />
          <xs:element name="contenttype" type="xs:string" />
          <xs:element name="buffersize" type="xs:long" />
          <xs:element name="committed" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="//---------------------------------------------------------------------//httpservletresponseproperties//---------------------------------------------------------------------cookies" type="xs:anyType" />
          <xs:element name="headers" type="xs:anyType" />
          <xs:element name="status" type="xs:long" />
          <xs:element name="errormessage" type="xs:string" />
          <xs:element name="forwardedurl" type="xs:string" />
          <xs:element name="includedurls" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockrequestdispatcher" >
      <xs:sequence>
        <xs:element name="ger" type="xs:anyType" />
        <xs:element name="resource" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delegatingservletoutputstream" >
      <xs:complexContent>
       <xs:extension base="servletoutputstream">
         <xs:sequence>
          <xs:element name="targetstream" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="headervalueholder" >
      <xs:sequence>
        <xs:element name="values" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockjspwriter" >
      <xs:complexContent>
       <xs:extension base="jspwriter">
         <xs:sequence>
          <xs:element name="response" type="xs:anyType" />
          <xs:element name="targetwriter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockmultipartfile" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="originalfilename" type="xs:string" />
        <xs:element name="contenttype" type="xs:string" />
        <xs:element name="content" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockasynccontext" >
      <xs:complexContent>
       <xs:extension base="asynclistener>">
         <xs:sequence>
          <xs:element name="request" type="xs:anyType" />
          <xs:element name="response" type="xs:anyType" />
          <xs:element name="listeners" type="xs:anyType" />
          <xs:element name="dispatchedpath" type="xs:string" />
          <xs:element name="//10secondsistomcat'sdefaulttimeout" type="xs:long" />
          <xs:element name="dispatchhandlers" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockservletconfig" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="servletname" type="xs:string" />
        <xs:element name="initparameters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockhttpsession" >
      <xs:sequence>
        <xs:element name="session_cookie_name" type="xs:string" />
        <xs:element name="nextid" type="xs:long" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="creationtime" type="xs:long" />
        <xs:element name="maxinactiveerval" type="xs:long" />
        <xs:element name="lastaccessedtime" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="attributes" type="xs:anyType" />
        <xs:element name="invalid" type="xs:anyType" />
        <xs:element name="isnew" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockexpressionevaluator" >
      <xs:complexContent>
       <xs:extension base="javax.servlet.jsp.el.expressionevaluator">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockhttpservletrequest" >
      <xs:complexContent>
       <xs:extension base="httpupgradehandler>">
         <xs:sequence>
          <xs:element name="http" type="xs:string" />
          <xs:element name="https" type="xs:string" />
          <xs:element name="charset_prefix" type="xs:string" />
          <xs:element name="gmt" type="xs:anyType" />
          <xs:element name="empty_servlet_input_stream" type="xs:anyType" />
          <xs:element name="empty_buffered_reader" type="xs:anyType" />
          <xs:element name="/***dateformatsasspecifiedinthehttprfc*@see<ahref" type="xs:string" />
          <xs:element name="//---------------------------------------------------------------------//constants//---------------------------------------------------------------------/***thedefaultprotocol:'http/1.1'.*@since4.3.7*/default_protocol" type="xs:string" />
          <xs:element name="/***thedefaultscheme:'http'.*@since4.3.7*/default_scheme" type="xs:string" />
          <xs:element name="/***thedefaultserveraddress:'127.0.0.1'.*/default_server_addr" type="xs:string" />
          <xs:element name="/***thedefaultservername:'localhost'.*/default_server_name" type="xs:string" />
          <xs:element name="/***thedefaultserverport:'80'.*/default_server_port" type="xs:long" />
          <xs:element name="/***thedefaultremoteaddress:'127.0.0.1'.*/default_remote_addr" type="xs:string" />
          <xs:element name="/***thedefaultremotehost:'localhost'.*/default_remote_host" type="xs:string" />
          <xs:element name="//---------------------------------------------------------------------//lifecycleproperties//---------------------------------------------------------------------" type="xs:anyType" />
          <xs:element name="active" type="xs:anyType" />
          <xs:element name="attributes" type="xs:anyType" />
          <xs:element name="characterencoding" type="xs:string" />
          <xs:element name="content" type="xs:anyType" />
          <xs:element name="contenttype" type="xs:string" />
          <xs:element name="parameters" type="xs:anyType" />
          <xs:element name="protocol" type="xs:string" />
          <xs:element name="scheme" type="xs:string" />
          <xs:element name="servername" type="xs:string" />
          <xs:element name="serverport" type="xs:long" />
          <xs:element name="remoteaddr" type="xs:string" />
          <xs:element name="remotehost" type="xs:string" />
          <xs:element name="/***listoflocalesindescendingorder*/locales" type="xs:anyType" />
          <xs:element name="secure" type="xs:anyType" />
          <xs:element name="remoteport" type="xs:long" />
          <xs:element name="localname" type="xs:string" />
          <xs:element name="localaddr" type="xs:string" />
          <xs:element name="localport" type="xs:long" />
          <xs:element name="asyncstarted" type="xs:anyType" />
          <xs:element name="asyncsupported" type="xs:anyType" />
          <xs:element name="asynccontext" type="mockasynccontext" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="//---------------------------------------------------------------------//httpservletrequestproperties//---------------------------------------------------------------------authtype" type="xs:string" />
          <xs:element name="s" type="xs:anyType" />
          <xs:element name="headers" type="xs:anyType" />
          <xs:element name="method" type="xs:string" />
          <xs:element name="pathinfo" type="xs:string" />
          <xs:element name="contextpath" type="xs:string" />
          <xs:element name="query" type="xs:string" />
          <xs:element name="remoteuser" type="xs:string" />
          <xs:element name="userroles" type="xs:anyType" />
          <xs:element name="user" type="xs:anyType" />
          <xs:element name="requestedsessionid" type="xs:string" />
          <xs:element name="requesturi" type="xs:string" />
          <xs:element name="servletpath" type="xs:string" />
          <xs:element name="session" type="xs:anyType" />
          <xs:element name="requestedsessionidvalid" type="xs:anyType" />
          <xs:element name="requestedsessionidfromcookie" type="xs:anyType" />
          <xs:element name="requestedsessionidfromurl" type="xs:anyType" />
          <xs:element name="parts" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockserverrequest" >
      <xs:complexContent>
       <xs:extension base="s>">
         <xs:sequence>
          <xs:element name="method" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="pathcontainer" type="xs:anyType" />
          <xs:element name="headers" type="xs:anyType" />
          <xs:element name="cookies" type="xs:anyType" />
          <xs:element name="body" type="xs:anyType" />
          <xs:element name="attributes" type="xs:anyType" />
          <xs:element name="queryparams" type="xs:anyType" />
          <xs:element name="pathvariables" type="xs:anyType" />
          <xs:element name="session" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockpagecontext" >
      <xs:complexContent>
       <xs:extension base="pagecontext">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="request" type="xs:anyType" />
          <xs:element name="response" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="attributes" type="xs:anyType" />
          <xs:element name="out" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="passthroughfilterchain" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="next" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockclienthttprequest" >
      <xs:complexContent>
       <xs:extension base="mockhttpoutputmessage">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="executed" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockclienthttprequest" >
      <xs:complexContent>
       <xs:extension base="abstractclienthttprequest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="url" type="xs:anyType" />
          <xs:element name="bufferfactory" type="xs:anyType" />
          <xs:element name="body" type="xs:anyType" />
          <xs:element name="writehandler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockclienthttpresponse" >
      <xs:sequence>
        <xs:element name="status" type="xs:anyType" />
        <xs:element name="headers" type="xs:anyType" />
        <xs:element name="cookies" type="xs:anyType" />
        <xs:element name="body" type="xs:anyType" />
        <xs:element name="bufferfactory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockasyncclienthttprequest" >
      <xs:complexContent>
       <xs:extension base="mockclienthttprequest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockclienthttpresponse" >
      <xs:complexContent>
       <xs:extension base="mockhttpinputmessage">
         <xs:sequence>
          <xs:element name="status" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockhttpinputmessage" >
      <xs:sequence>
        <xs:element name="headers" type="xs:anyType" />
        <xs:element name="body" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockserverhttpresponse" >
      <xs:complexContent>
       <xs:extension base="abstractserverhttpresponse">
         <xs:sequence>
          <xs:element name="body" type="xs:anyType" />
          <xs:element name="writehandler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockserverhttprequest" >
      <xs:complexContent>
       <xs:extension base="abstractserverhttprequest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="cookies" type="xs:anyType" />
          <xs:element name="remoteaddress" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="body" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockhttpoutputmessage" >
      <xs:sequence>
        <xs:element name="default_" type="xs:anyType" />
        <xs:element name="headers" type="xs:anyType" />
        <xs:element name="body" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mockenvironment" >
      <xs:complexContent>
       <xs:extension base="abstractenvironment">
         <xs:sequence>
          <xs:element name="propertysource" type="mockpropertysource" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mockpropertysource" >
      <xs:complexContent>
       <xs:extension base="propertiespropertysource">
         <xs:sequence>
          <xs:element name="/***{@value}isthedefaultnamefor{@linkmockpropertysource}instancesnot*otherwisegivenanexplicitname.*@see#mockpropertysource()*@see#mockpropertysource()*/mock_properties_property_source_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 