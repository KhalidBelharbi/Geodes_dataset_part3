ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> Items =>=>=> RelationalSchema.Table>> items;
ClassDiagram.Class>> Cart =>=>=> RelationalSchema.Table>> cart;
ClassDiagram.Class>> CartOIO =>=>=> RelationalSchema.Table>> cartoio;
ClassDiagram.Class>> ItemsOIO =>=>=> RelationalSchema.Table>> itemsoio;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> UserGroupRelation =>=>=> RelationalSchema.Table>> usergrouprelation;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Group =>=>=> RelationalSchema.Table>> group;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Seller =>=>=> RelationalSchema.Table>> seller;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> Order =>=>=> RelationalSchema.Table>> order;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Attribut>> Order.id:Long =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.name:String =>=>=> RelationalSchema.Column>> order.name;
ClassDiagram.Attribut>> Customer.id:Long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Items.id:long =>=>=> RelationalSchema.Column>> items.id PRIMARY KEY;
ClassDiagram.Attribut>> Cart.id:long =>=>=> RelationalSchema.Column>> cart.id PRIMARY KEY;
ClassDiagram.Attribut>> CartOIO.id:long =>=>=> RelationalSchema.Column>> cartoio.id PRIMARY KEY;
ClassDiagram.Attribut>> ItemsOIO.id:long =>=>=> RelationalSchema.Column>> itemsoio.id PRIMARY KEY;
ClassDiagram.Attribut>> Course.id:int =>=>=> RelationalSchema.Column>> course.id PRIMARY KEY;
ClassDiagram.Attribut>> Course.name:String =>=>=> RelationalSchema.Column>> course.name;
ClassDiagram.Attribut>> UserGroupRelation.userid:Long =>=>=> RelationalSchema.Column>> usergrouprelation.userid PRIMARY KEY;
ClassDiagram.Attribut>> UserGroupRelation.groupid:Long =>=>=> RelationalSchema.Column>> usergrouprelation.groupid PRIMARY KEY;
ClassDiagram.Attribut>> UserGroupRelation.role:UserGroupRole =>=>=> RelationalSchema.Column>> usergrouprelation.role;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> Group.id:Long =>=>=> RelationalSchema.Column>> group.id PRIMARY KEY;
ClassDiagram.Attribut>> Group.name:String =>=>=> RelationalSchema.Column>> group.name;
ClassDiagram.Attribut>> Order.id:int =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.itempricemap:Map<String,Double> =>=>=> RelationalSchema.Column>> order.itempricemap;
ClassDiagram.Attribut>> Order.id:int =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Seller.id:int =>=>=> RelationalSchema.Column>> seller.id PRIMARY KEY;
ClassDiagram.Attribut>> Seller.sellername:String =>=>=> RelationalSchema.Column>> seller.sellername;
ClassDiagram.Attribut>> Item.id:int =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.itemname:String =>=>=> RelationalSchema.Column>> item.itemname;
ClassDiagram.Attribut>> Item.itemprice:double =>=>=> RelationalSchema.Column>> item.itemprice;
ClassDiagram.Attribut>> Item.GeneratedName:ItemType =>=>=> RelationalSchema.Column>> item.GeneratedName;
ClassDiagram.Attribut>> Item.createdon:Date =>=>=> RelationalSchema.Column>> item.createdon;
ClassDiagram.Attribut>> Order.id:int =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.id:int =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> Order.id:int =>=>=> RelationalSchema.Column>> order.id PRIMARY KEY;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname PRIMARY KEY;
ClassDiagram.Attribut>> User.middlename:String =>=>=> RelationalSchema.Column>> user.middlename;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.city:String =>=>=> RelationalSchema.Column>> user.city;
ClassDiagram.Attribut>> Item.id:int =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.itemname:String =>=>=> RelationalSchema.Column>> item.itemname;
ClassDiagram.Attribut>> Item.itemprice:double =>=>=> RelationalSchema.Column>> item.itemprice;
ClassDiagram.Attribut>> Item.GeneratedName:ItemType =>=>=> RelationalSchema.Column>> item.GeneratedName;
ClassDiagram.Attribut>> Item.createdon:Date =>=>=> RelationalSchema.Column>> item.createdon;
Many-To-One relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Customer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>Set<Order>;
Many-To-One relationship from ClassDiagram.Class>>Items  to ClassDiagram.Class>>Cart represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Cart  to ClassDiagram.Class>>Set<Items>;
One-To-Many relationship from ClassDiagram.Class>>CartOIO  to ClassDiagram.Class>>Set<ItemsOIO>;
Many-To-One relationship from ClassDiagram.Class>>ItemsOIO  to ClassDiagram.Class>>Cart represented by ClassDiagram.Atrribute>>cart;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>Group: r_user_group(user_id:User [PK] #FK to User,group_id:Group [PK] #FK to Group);
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>Group: r_user_group(user_id:User [PK] #FK to User,group_id:Group [PK] #FK to Group);r_user_group(user_id:User [PK] #FK to User,group_id:Group [PK] #FK to Group);
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Map<ItemType,Item>;
Many-To-One relationship from ClassDiagram.Class>>Item  to ClassDiagram.Class>>seller represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Map<Seller,Item>;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Map<Date,Item>;
One-To-Many relationship from ClassDiagram.Class>>Order  to ClassDiagram.Class>>Map<String,Item>;
