ClassDiagram.Class>> ValidatedPerson =>=>=> RelationalSchema.Table>> validatedperson;
ClassDiagram.Class>> ValidatedOwner =>=>=> RelationalSchema.Table>> validatedowner;
ClassDiagram.Class>> ValidatedPerson2 =>=>=> RelationalSchema.Table>> validatedperson2;
ClassDiagram.Class>> MapConverterHolder =>=>=> RelationalSchema.Table>> mapconverterholder;
ClassDiagram.Class>> CollectionConverterHolder =>=>=> RelationalSchema.Table>> collectionconverterholder;
ClassDiagram.Class>> TypeHolder =>=>=> RelationalSchema.Table>> typeholder;
ClassDiagram.Class>> JodaSample5 =>=>=> RelationalSchema.Table>> jodasample5;
ClassDiagram.Class>> JodaSample1 =>=>=> RelationalSchema.Table>> jodasample1;
ClassDiagram.Class>> JodaSample4 =>=>=> RelationalSchema.Table>> jodasample4;
ClassDiagram.Class>> JodaSample2 =>=>=> RelationalSchema.Table>> jodasample2;
ClassDiagram.Class>> JodaSample3 =>=>=> RelationalSchema.Table>> jodasample3;
ClassDiagram.Class>> Rectangle =>=>=> RelationalSchema.Table>> rectangle;
ClassDiagram.Class>> Circle =>=>=> RelationalSchema.Table>> circle;
ClassDiagram.Class>> Triangle =>=>=> RelationalSchema.Table>> triangle;
ClassDiagram.Class>> ShapeHolder =>=>=> RelationalSchema.Table>> shapeholder;
ClassDiagram.Class>> Square =>=>=> RelationalSchema.Table>> square;
ClassDiagram.Class>> JavaTimeSample3 =>=>=> RelationalSchema.Table>> javatimesample3;
ClassDiagram.Class>> JavaTimeSample2 =>=>=> RelationalSchema.Table>> javatimesample2;
ClassDiagram.Class>> JavaTimeSample1 =>=>=> RelationalSchema.Table>> javatimesample1;
ClassDiagram.Class>> MyDatastoreId =>=>=> RelationalSchema.Table>> mydatastoreid;
ClassDiagram.Class>> DateHolder =>=>=> RelationalSchema.Table>> dateholder;
ClassDiagram.Class>> TypeHolder =>=>=> RelationalSchema.Table>> typeholder;
ClassDiagram.Class>> EnumHolder =>=>=> RelationalSchema.Table>> enumholder;
ClassDiagram.Class>> VersionedEmployee =>=>=> RelationalSchema.Table>> versionedemployee;
ClassDiagram.Class>> VersionedPerson =>=>=> RelationalSchema.Table>> versionedperson;
ClassDiagram.Class>> ManyOneOther =>=>=> RelationalSchema.Table>> manyoneother;
ClassDiagram.Class>> ManyOneOwner =>=>=> RelationalSchema.Table>> manyoneowner;
ClassDiagram.Class>> SimpleClass =>=>=> RelationalSchema.Table>> simpleclass;
ClassDiagram.Class>> MyCdiHolder =>=>=> RelationalSchema.Table>> mycdiholder;
ClassDiagram.Class>> ConcreteSimpleSub2 =>=>=> RelationalSchema.Table>> concretesimplesub2;
ClassDiagram.Class>> ConcreteSimpleSub1 =>=>=> RelationalSchema.Table>> concretesimplesub1;
ClassDiagram.Class>> ArrayHolder =>=>=> RelationalSchema.Table>> arrayholder;
ClassDiagram.Class>> ByteArray =>=>=> RelationalSchema.Table>> bytearray;
ClassDiagram.Class>> Permission =>=>=> RelationalSchema.Table>> permission;
ClassDiagram.Class>> DSIDHolder =>=>=> RelationalSchema.Table>> dsidholder;
ClassDiagram.Class>> SuperUser =>=>=> RelationalSchema.Table>> superuser;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> IdClassPrivateModifier =>=>=> RelationalSchema.Table>> idclassprivatemodifier;
ClassDiagram.Class>> IdClassAccessors =>=>=> RelationalSchema.Table>> idclassaccessors;
ClassDiagram.Class>> LoginAccount =>=>=> RelationalSchema.Table>> loginaccount;
ClassDiagram.Class>> Login =>=>=> RelationalSchema.Table>> login;
ClassDiagram.Class>> Equipment =>=>=> RelationalSchema.Table>> equipment;
ClassDiagram.Class>> Boiler =>=>=> RelationalSchema.Table>> boiler;
ClassDiagram.Class>> Timer =>=>=> RelationalSchema.Table>> timer;
ClassDiagram.Class>> Printer =>=>=> RelationalSchema.Table>> printer;
ClassDiagram.Class>> UserGroup =>=>=> RelationalSchema.Table>> usergroup;
ClassDiagram.Class>> GroupMember =>=>=> RelationalSchema.Table>> groupmember;
ClassDiagram.Class>> MemberDetails =>=>=> RelationalSchema.Table>> memberdetails;
ClassDiagram.Class>> ExpertGroupMember =>=>=> RelationalSchema.Table>> expertgroupmember;
ClassDiagram.Class>> ModeratedUserGroup =>=>=> RelationalSchema.Table>> moderatedusergroup;
ClassDiagram.Class>> MapHolderWithKeyClass =>=>=> RelationalSchema.Table>> mapholderwithkeyclass;
ClassDiagram.Class>> MapKeyClassTarget =>=>=> RelationalSchema.Table>> mapkeyclasstarget;
ClassDiagram.Class>> MapJoinKey =>=>=> RelationalSchema.Table>> mapjoinkey;
ClassDiagram.Class>> MapJoinHolder =>=>=> RelationalSchema.Table>> mapjoinholder;
ClassDiagram.Class>> MapJoinValue =>=>=> RelationalSchema.Table>> mapjoinvalue;
ClassDiagram.Class>> House =>=>=> RelationalSchema.Table>> house;
ClassDiagram.Class>> Window =>=>=> RelationalSchema.Table>> window;
ClassDiagram.Class>> Animal =>=>=> RelationalSchema.Table>> animal;
ClassDiagram.Class>> Farm =>=>=> RelationalSchema.Table>> farm;
ClassDiagram.Class>> Document =>=>=> RelationalSchema.Table>> document;
ClassDiagram.Class>> Contact =>=>=> RelationalSchema.Table>> contact;
ClassDiagram.Class>> PCFKListElement =>=>=> RelationalSchema.Table>> pcfklistelement;
ClassDiagram.Class>> ListHolder =>=>=> RelationalSchema.Table>> listholder;
ClassDiagram.Class>> CallbackSub1 =>=>=> RelationalSchema.Table>> callbacksub1;
ClassDiagram.Class>> CallbackSub1Sub1 =>=>=> RelationalSchema.Table>> callbacksub1sub1;
ClassDiagram.Class>> CallbackBase =>=>=> RelationalSchema.Table>> callbackbase;
ClassDiagram.Class>> CallbackSub2 =>=>=> RelationalSchema.Table>> callbacksub2;
ClassDiagram.Class>> CallbackSub1Sub2 =>=>=> RelationalSchema.Table>> callbacksub1sub2;
ClassDiagram.Class>> NonDurableIDHolder =>=>=> RelationalSchema.Table>> nondurableidholder;
ClassDiagram.Class>> EmbeddedOwner2 =>=>=> RelationalSchema.Table>> embeddedowner2;
ClassDiagram.Class>> EmbeddedOwner3 =>=>=> RelationalSchema.Table>> embeddedowner3;
ClassDiagram.Class>> Computer =>=>=> RelationalSchema.Table>> computer;
ClassDiagram.Class>> Processor =>=>=> RelationalSchema.Table>> processor;
ClassDiagram.Class>> GenericIdSub =>=>=> RelationalSchema.Table>> genericidsub;
ClassDiagram.Class>> GenericIdPropSub1 =>=>=> RelationalSchema.Table>> genericidpropsub1;
ClassDiagram.Class>> GenericOneOneRelated2 =>=>=> RelationalSchema.Table>> genericoneonerelated2;
ClassDiagram.Class>> GenericOneOneSub1 =>=>=> RelationalSchema.Table>> genericoneonesub1;
ClassDiagram.Class>> GenericIdPropSub2Sub =>=>=> RelationalSchema.Table>> genericidpropsub2sub;
ClassDiagram.Class>> GenericOneOneSub2 =>=>=> RelationalSchema.Table>> genericoneonesub2;
ClassDiagram.Class>> GenericOneOneRelated1 =>=>=> RelationalSchema.Table>> genericoneonerelated1;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Manager =>=>=> RelationalSchema.Table>> manager;
ClassDiagram.Class>> Organisation =>=>=> RelationalSchema.Table>> organisation;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> WebSite =>=>=> RelationalSchema.Table>> website;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> Qualification =>=>=> RelationalSchema.Table>> qualification;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> CustomUUIDHolder =>=>=> RelationalSchema.Table>> customuuidholder;
ClassDiagram.Class>> OneOffCustomer =>=>=> RelationalSchema.Table>> oneoffcustomer;
ClassDiagram.Class>> PetroleumCustomer =>=>=> RelationalSchema.Table>> petroleumcustomer;
ClassDiagram.Class>> AccountCustomer =>=>=> RelationalSchema.Table>> accountcustomer;
ClassDiagram.Class>> PetroleumSupplier =>=>=> RelationalSchema.Table>> petroleumsupplier;
ClassDiagram.Class>> OilSupplier =>=>=> RelationalSchema.Table>> oilsupplier;
ClassDiagram.Class>> GasSupplier =>=>=> RelationalSchema.Table>> gassupplier;
ClassDiagram.Class>> GraphRelatedNext =>=>=> RelationalSchema.Table>> graphrelatednext;
ClassDiagram.Class>> GraphBase =>=>=> RelationalSchema.Table>> graphbase;
ClassDiagram.Class>> GraphRelated =>=>=> RelationalSchema.Table>> graphrelated;
ClassDiagram.Class>> CompoundHolder =>=>=> RelationalSchema.Table>> compoundholder;
ClassDiagram.Class>> CompoundSingleTarget =>=>=> RelationalSchema.Table>> compoundsingletarget;
ClassDiagram.Class>> TenantedObject =>=>=> RelationalSchema.Table>> tenantedobject;
ClassDiagram.Class>> PetroleumCustomer =>=>=> RelationalSchema.Table>> petroleumcustomer;
ClassDiagram.Class>> PetroleumSupplier =>=>=> RelationalSchema.Table>> petroleumsupplier;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> WebSite =>=>=> RelationalSchema.Table>> website;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Manager =>=>=> RelationalSchema.Table>> manager;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> Timer =>=>=> RelationalSchema.Table>> timer;
ClassDiagram.Class>> Boiler =>=>=> RelationalSchema.Table>> boiler;
ClassDiagram.Class>> Equipment =>=>=> RelationalSchema.Table>> equipment;
ClassDiagram.Class>> LoginAccount =>=>=> RelationalSchema.Table>> loginaccount;
ClassDiagram.Class>> Login =>=>=> RelationalSchema.Table>> login;
ClassDiagram.Attribut>> ValidatedPerson.id:long =>=>=> RelationalSchema.Column>> validatedperson.id PRIMARY KEY;
ClassDiagram.Attribut>> ValidatedPerson.forename:String =>=>=> RelationalSchema.Column>> validatedperson.forename;
ClassDiagram.Attribut>> ValidatedPerson.surname:String =>=>=> RelationalSchema.Column>> validatedperson.surname;
ClassDiagram.Attribut>> ValidatedPerson.login:String =>=>=> RelationalSchema.Column>> validatedperson.login;
ClassDiagram.Attribut>> ValidatedOwner.id:long =>=>=> RelationalSchema.Column>> validatedowner.id PRIMARY KEY;
ClassDiagram.Attribut>> ValidatedOwner.name:String =>=>=> RelationalSchema.Column>> validatedowner.name;
ClassDiagram.Attribut>> ValidatedOwner.pet:ValidatedPet =>=>=> RelationalSchema.Column>> validatedowner.pet;
ClassDiagram.Attribut>> ValidatedPerson2.id:long =>=>=> RelationalSchema.Column>> validatedperson2.id PRIMARY KEY;
ClassDiagram.Attribut>> ValidatedPerson2.forename:String =>=>=> RelationalSchema.Column>> validatedperson2.forename;
ClassDiagram.Attribut>> ValidatedPerson2.surname:String =>=>=> RelationalSchema.Column>> validatedperson2.surname;
ClassDiagram.Attribut>> ValidatedPerson2.login:String =>=>=> RelationalSchema.Column>> validatedperson2.login;
ClassDiagram.Attribut>> ValidatedPerson2.password:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> MapConverterHolder.id:long =>=>=> RelationalSchema.Column>> mapconverterholder.id PRIMARY KEY;
ClassDiagram.Attribut>> MapConverterHolder.map1:Map<String,MyType1> =>=>=> RelationalSchema.Column>> mapconverterholder.map1;
ClassDiagram.Attribut>> MapConverterHolder.map2:Map<MyType2,String> =>=>=> RelationalSchema.Column>> mapconverterholder.map2;
ClassDiagram.Attribut>> CollectionConverterHolder.id:long =>=>=> RelationalSchema.Column>> collectionconverterholder.id PRIMARY KEY;
ClassDiagram.Attribut>> CollectionConverterHolder.set1:Set<MyType1> =>=>=> RelationalSchema.Column>> collectionconverterholder.set1;
ClassDiagram.Attribut>> CollectionConverterHolder.set2:Set<MyType1> =>=>=> RelationalSchema.Column>> collectionconverterholder.set2;
ClassDiagram.Attribut>> TypeHolder.id:long =>=>=> RelationalSchema.Column>> typeholder.id PRIMARY KEY;
ClassDiagram.Attribut>> TypeHolder.name:String =>=>=> RelationalSchema.Column>> typeholder.name;
ClassDiagram.Attribut>> TypeHolder.details:ComplicatedType =>=>=> RelationalSchema.Column>> typeholder.details;
ClassDiagram.Attribut>> TypeHolder.details2:ComplicatedType2 =>=>=> RelationalSchema.Column>> typeholder.details2;
ClassDiagram.Attribut>> TypeHolder.details3:ComplicatedType =>=>=> RelationalSchema.Column>> typeholder.details3;
ClassDiagram.Attribut>> JodaSample5.id:long =>=>=> RelationalSchema.Column>> jodasample5.id PRIMARY KEY;
ClassDiagram.Attribut>> JodaSample5.1:Interval =>=>=> RelationalSchema.Column>> jodasample5.1;
ClassDiagram.Attribut>> JodaSample5.2:Interval =>=>=> RelationalSchema.Column>> jodasample5.2;
ClassDiagram.Attribut>> JodaSample1.id:long =>=>=> RelationalSchema.Column>> jodasample1.id PRIMARY KEY;
ClassDiagram.Attribut>> JodaSample1.1:DateTime =>=>=> RelationalSchema.Column>> jodasample1.1;
ClassDiagram.Attribut>> JodaSample1.2:DateTime =>=>=> RelationalSchema.Column>> jodasample1.2;
ClassDiagram.Attribut>> JodaSample4.id:long =>=>=> RelationalSchema.Column>> jodasample4.id PRIMARY KEY;
ClassDiagram.Attribut>> JodaSample4.1:Duration =>=>=> RelationalSchema.Column>> jodasample4.1;
ClassDiagram.Attribut>> JodaSample4.2:Duration =>=>=> RelationalSchema.Column>> jodasample4.2;
ClassDiagram.Attribut>> JodaSample2.id:long =>=>=> RelationalSchema.Column>> jodasample2.id PRIMARY KEY;
ClassDiagram.Attribut>> JodaSample2.1:LocalDate =>=>=> RelationalSchema.Column>> jodasample2.1;
ClassDiagram.Attribut>> JodaSample2.2:LocalDate =>=>=> RelationalSchema.Column>> jodasample2.2;
ClassDiagram.Attribut>> JodaSample3.id:long =>=>=> RelationalSchema.Column>> jodasample3.id PRIMARY KEY;
ClassDiagram.Attribut>> JodaSample3.1:LocalTime =>=>=> RelationalSchema.Column>> jodasample3.1;
ClassDiagram.Attribut>> JodaSample3.2:LocalTime =>=>=> RelationalSchema.Column>> jodasample3.2;
ClassDiagram.Attribut>> Rectangle.serialversionuid:long =>=>=> RelationalSchema.Column>> rectangle.serialversionuid;
ClassDiagram.Attribut>> Rectangle.id:int =>=>=> RelationalSchema.Column>> rectangle.id PRIMARY KEY;
ClassDiagram.Attribut>> Rectangle.width:double =>=>=> RelationalSchema.Column>> rectangle.width;
ClassDiagram.Attribut>> Rectangle.length:double =>=>=> RelationalSchema.Column>> rectangle.length;
ClassDiagram.Attribut>> Circle.serialversionuid:long =>=>=> RelationalSchema.Column>> circle.serialversionuid;
ClassDiagram.Attribut>> Circle.id:int =>=>=> RelationalSchema.Column>> circle.id PRIMARY KEY;
ClassDiagram.Attribut>> Circle.radius:double =>=>=> RelationalSchema.Column>> circle.radius;
ClassDiagram.Attribut>> Triangle.serialversionuid:long =>=>=> RelationalSchema.Column>> triangle.serialversionuid;
ClassDiagram.Attribut>> Triangle.id:int =>=>=> RelationalSchema.Column>> triangle.id PRIMARY KEY;
ClassDiagram.Attribut>> Triangle.width:double =>=>=> RelationalSchema.Column>> triangle.width;
ClassDiagram.Attribut>> Triangle.length:double =>=>=> RelationalSchema.Column>> triangle.length;
ClassDiagram.Attribut>> ShapeHolder.id:int =>=>=> RelationalSchema.Column>> shapeholder.id PRIMARY KEY;
ClassDiagram.Attribut>> Square.serialversionuid:long =>=>=> RelationalSchema.Column>> square.serialversionuid;
ClassDiagram.Attribut>> Square.id:int =>=>=> RelationalSchema.Column>> square.id PRIMARY KEY;
ClassDiagram.Attribut>> Square.width:double =>=>=> RelationalSchema.Column>> square.width;
ClassDiagram.Attribut>> Square.length:double =>=>=> RelationalSchema.Column>> square.length;
ClassDiagram.Attribut>> JavaTimeSample3.id:long =>=>=> RelationalSchema.Column>> javatimesample3.id PRIMARY KEY;
ClassDiagram.Attribut>> JavaTimeSample3.1:LocalTime =>=>=> RelationalSchema.Column>> javatimesample3.1;
ClassDiagram.Attribut>> JavaTimeSample3.2:LocalTime =>=>=> RelationalSchema.Column>> javatimesample3.2;
ClassDiagram.Attribut>> JavaTimeSample2.id:long =>=>=> RelationalSchema.Column>> javatimesample2.id PRIMARY KEY;
ClassDiagram.Attribut>> JavaTimeSample2.1:LocalDate =>=>=> RelationalSchema.Column>> javatimesample2.1;
ClassDiagram.Attribut>> JavaTimeSample2.2:LocalDate =>=>=> RelationalSchema.Column>> javatimesample2.2;
ClassDiagram.Attribut>> JavaTimeSample1.id:long =>=>=> RelationalSchema.Column>> javatimesample1.id PRIMARY KEY;
ClassDiagram.Attribut>> JavaTimeSample1.datetime1:LocalDateTime =>=>=> RelationalSchema.Column>> javatimesample1.datetime1;
ClassDiagram.Attribut>> JavaTimeSample1.datetime2:LocalDateTime =>=>=> RelationalSchema.Column>> javatimesample1.datetime2;
ClassDiagram.Attribut>> MyDatastoreId.name:String =>=>=> RelationalSchema.Column>> mydatastoreid.name;
ClassDiagram.Attribut>> DateHolder.id:long =>=>=> RelationalSchema.Column>> dateholder.id PRIMARY KEY;
ClassDiagram.Attribut>> DateHolder.datefield:java.util.Date =>=>=> RelationalSchema.Column>> dateholder.datefield;
ClassDiagram.Attribut>> DateHolder.datefield2:java.util.Date =>=>=> RelationalSchema.Column>> dateholder.datefield2;
ClassDiagram.Attribut>> DateHolder.datefield3:java.util.Date =>=>=> RelationalSchema.Column>> dateholder.datefield3;
ClassDiagram.Attribut>> TypeHolder.//pkwhenusingappidid:long =>=>=> RelationalSchema.Column>> typeholder.//pkwhenusingappidid PRIMARY KEY;
ClassDiagram.Attribut>> TypeHolder.1:String =>=>=> RelationalSchema.Column>> typeholder.1;
ClassDiagram.Attribut>> TypeHolder.2:String =>=>=> RelationalSchema.Column>> typeholder.2;
ClassDiagram.Attribut>> TypeHolder.1:char =>=>=> RelationalSchema.Column>> typeholder.1;
ClassDiagram.Attribut>> EnumHolder.id:long =>=>=> RelationalSchema.Column>> enumholder.id PRIMARY KEY;
ClassDiagram.Attribut>> EnumHolder.1:Colour =>=>=> RelationalSchema.Column>> enumholder.1;
ClassDiagram.Attribut>> EnumHolder.2:Colour =>=>=> RelationalSchema.Column>> enumholder.2;
ClassDiagram.Attribut>> VersionedEmployee.salary:double =>=>=> RelationalSchema.Column>> versionedemployee.salary;
ClassDiagram.Attribut>> VersionedPerson.name:String =>=>=> RelationalSchema.Column>> versionedperson.name;
ClassDiagram.Attribut>> ManyOneOther.id:long =>=>=> RelationalSchema.Column>> manyoneother.id PRIMARY KEY;
ClassDiagram.Attribut>> ManyOneOwner.id:long =>=>=> RelationalSchema.Column>> manyoneowner.id PRIMARY KEY;
ClassDiagram.Attribut>> SimpleClass.id:long =>=>=> RelationalSchema.Column>> simpleclass.id PRIMARY KEY;
ClassDiagram.Attribut>> SimpleClass.name:String =>=>=> RelationalSchema.Column>> simpleclass.name;
ClassDiagram.Attribut>> MyCdiHolder.id:long =>=>=> RelationalSchema.Column>> mycdiholder.id PRIMARY KEY;
ClassDiagram.Attribut>> MyCdiHolder.name:String =>=>=> RelationalSchema.Column>> mycdiholder.name;
ClassDiagram.Attribut>> MyCdiHolder.encryptedfield:String =>=>=> RelationalSchema.Column>> mycdiholder.encryptedfield;
ClassDiagram.Attribut>> ConcreteSimpleSub2.sub2field:String =>=>=> RelationalSchema.Column>> concretesimplesub2.sub2field;
ClassDiagram.Attribut>> ConcreteSimpleSub1.sub1field:String =>=>=> RelationalSchema.Column>> concretesimplesub1.sub1field;
ClassDiagram.Attribut>> ArrayHolder.id:long =>=>=> RelationalSchema.Column>> arrayholder.id PRIMARY KEY;
ClassDiagram.Attribut>> ArrayHolder.array:int =>=>=> RelationalSchema.Column>> arrayholder.array;
ClassDiagram.Attribut>> ArrayHolder.array:long =>=>=> RelationalSchema.Column>> arrayholder.array;
ClassDiagram.Attribut>> ByteArray.id:long =>=>=> RelationalSchema.Column>> bytearray.id PRIMARY KEY;
ClassDiagram.Attribut>> ByteArray.array1:byte =>=>=> RelationalSchema.Column>> bytearray.array1;
ClassDiagram.Attribut>> ByteArray.array2:byte =>=>=> RelationalSchema.Column>> bytearray.array2;
ClassDiagram.Attribut>> Permission.id:long =>=>=> RelationalSchema.Column>> permission.id PRIMARY KEY;
ClassDiagram.Attribut>> Permission.name:String =>=>=> RelationalSchema.Column>> permission.name;
ClassDiagram.Attribut>> DSIDHolder.name:String =>=>=> RelationalSchema.Column>> dsidholder.name;
ClassDiagram.Attribut>> SuperUser.role:String =>=>=> RelationalSchema.Column>> superuser.role;
ClassDiagram.Attribut>> User.id:long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> IdClassPrivateModifier.serialversionuid:long =>=>=> RelationalSchema.Column>> idclassprivatemodifier.serialversionuid;
ClassDiagram.Attribut>> IdClassPrivateModifier.name:String =>=>=> RelationalSchema.Column>> idclassprivatemodifier.name PRIMARY KEY;
ClassDiagram.Attribut>> IdClassPrivateModifier.name2:int =>=>=> RelationalSchema.Column>> idclassprivatemodifier.name2 PRIMARY KEY;
ClassDiagram.Attribut>> IdClassPrivateModifier.free:boolean =>=>=> RelationalSchema.Column>> idclassprivatemodifier.free;
ClassDiagram.Attribut>> IdClassAccessors.serialversionuid:long =>=>=> RelationalSchema.Column>> idclassaccessors.serialversionuid;
ClassDiagram.Attribut>> IdClassAccessors.compoundpk:IdClassAccessorsPK =>=>=> RelationalSchema.Column>> idclassaccessors.compoundpk PRIMARY KEY;
ClassDiagram.Attribut>> IdClassAccessors.name:String =>=>=> RelationalSchema.Column>> idclassaccessors.name;
ClassDiagram.Attribut>> IdClassAccessors.basic:String =>=>=> RelationalSchema.Column>> idclassaccessors.basic;
ClassDiagram.Attribut>> IdClassAccessors.free:boolean =>=>=> RelationalSchema.Column>> idclassaccessors.free;
ClassDiagram.Attribut>> LoginAccount.id:long =>=>=> RelationalSchema.Column>> loginaccount.id PRIMARY KEY;
ClassDiagram.Attribut>> LoginAccount.firstname:String =>=>=> RelationalSchema.Column>> loginaccount.firstname;
ClassDiagram.Attribut>> LoginAccount.lastname:String =>=>=> RelationalSchema.Column>> loginaccount.lastname;
ClassDiagram.Attribut>> Login.id:long =>=>=> RelationalSchema.Column>> login.id PRIMARY KEY;
ClassDiagram.Attribut>> Login.username:String =>=>=> RelationalSchema.Column>> login.username;
ClassDiagram.Attribut>> Login.password:String =>=>=> RelationalSchema.Column>> login.password;
ClassDiagram.Attribut>> Equipment.id:long =>=>=> RelationalSchema.Column>> equipment.id PRIMARY KEY;
ClassDiagram.Attribut>> Equipment.make:String =>=>=> RelationalSchema.Column>> equipment.make;
ClassDiagram.Attribut>> Boiler.model:String =>=>=> RelationalSchema.Column>> boiler.model;
ClassDiagram.Attribut>> Timer.digital:boolean =>=>=> RelationalSchema.Column>> timer.digital;
ClassDiagram.Attribut>> Printer.//usedforapplicationidentityid:long =>=>=> RelationalSchema.Column>> printer.//usedforapplicationidentityid PRIMARY KEY;
ClassDiagram.Attribut>> Printer.make:String =>=>=> RelationalSchema.Column>> printer.make;
ClassDiagram.Attribut>> Printer.model:String =>=>=> RelationalSchema.Column>> printer.model;
ClassDiagram.Attribut>> Printer.tonermodel:String =>=>=> RelationalSchema.Column>> printer.tonermodel;
ClassDiagram.Attribut>> Printer.tonerlifetime:int =>=>=> RelationalSchema.Column>> printer.tonerlifetime;
ClassDiagram.Attribut>> UserGroup.id:long =>=>=> RelationalSchema.Column>> usergroup.id PRIMARY KEY;
ClassDiagram.Attribut>> UserGroup.name:String =>=>=> RelationalSchema.Column>> usergroup.name;
ClassDiagram.Attribut>> GroupMember.id:long =>=>=> RelationalSchema.Column>> groupmember.id PRIMARY KEY;
ClassDiagram.Attribut>> GroupMember.name:String =>=>=> RelationalSchema.Column>> groupmember.name PRIMARY KEY;
ClassDiagram.Attribut>> MemberDetails.id:long =>=>=> RelationalSchema.Column>> memberdetails.id PRIMARY KEY;
ClassDiagram.Attribut>> MemberDetails.firstname:String =>=>=> RelationalSchema.Column>> memberdetails.firstname;
ClassDiagram.Attribut>> MemberDetails.surname:String =>=>=> RelationalSchema.Column>> memberdetails.surname;
ClassDiagram.Attribut>> ExpertGroupMember.title:String =>=>=> RelationalSchema.Column>> expertgroupmember.title;
ClassDiagram.Attribut>> ModeratedUserGroup.title:String =>=>=> RelationalSchema.Column>> moderatedusergroup.title;
ClassDiagram.Attribut>> MapHolderWithKeyClass.id:long =>=>=> RelationalSchema.Column>> mapholderwithkeyclass.id PRIMARY KEY;
ClassDiagram.Attribut>> MapKeyClassTarget.id:long =>=>=> RelationalSchema.Column>> mapkeyclasstarget.id PRIMARY KEY;
ClassDiagram.Attribut>> MapJoinKey.serialversionuid:long =>=>=> RelationalSchema.Column>> mapjoinkey.serialversionuid;
ClassDiagram.Attribut>> MapJoinKey.id:long =>=>=> RelationalSchema.Column>> mapjoinkey.id PRIMARY KEY;
ClassDiagram.Attribut>> MapJoinKey.name:String =>=>=> RelationalSchema.Column>> mapjoinkey.name;
ClassDiagram.Attribut>> MapJoinKey.description:String =>=>=> RelationalSchema.Column>> mapjoinkey.description;
ClassDiagram.Attribut>> MapJoinHolder.id:long =>=>=> RelationalSchema.Column>> mapjoinholder.id PRIMARY KEY;
ClassDiagram.Attribut>> MapJoinHolder.name:String =>=>=> RelationalSchema.Column>> mapjoinholder.name;
ClassDiagram.Attribut>> MapJoinHolder.map2:Map<Integer,String> =>=>=> RelationalSchema.Column>> mapjoinholder.map2;
ClassDiagram.Attribut>> MapJoinHolder.map3:Map<String,MapJoinEmbeddedValue> =>=>=> RelationalSchema.Column>> mapjoinholder.map3;
ClassDiagram.Attribut>> MapJoinValue.serialversionuid:long =>=>=> RelationalSchema.Column>> mapjoinvalue.serialversionuid;
ClassDiagram.Attribut>> MapJoinValue.id:long =>=>=> RelationalSchema.Column>> mapjoinvalue.id PRIMARY KEY;
ClassDiagram.Attribut>> MapJoinValue.name:String =>=>=> RelationalSchema.Column>> mapjoinvalue.name;
ClassDiagram.Attribut>> MapJoinValue.description:String =>=>=> RelationalSchema.Column>> mapjoinvalue.description;
ClassDiagram.Attribut>> House.id:long =>=>=> RelationalSchema.Column>> house.id PRIMARY KEY;
ClassDiagram.Attribut>> House.number:int =>=>=> RelationalSchema.Column>> house.number;
ClassDiagram.Attribut>> House.street:String =>=>=> RelationalSchema.Column>> house.street;
ClassDiagram.Attribut>> Window.id:long =>=>=> RelationalSchema.Column>> window.id PRIMARY KEY;
ClassDiagram.Attribut>> Window.width:long =>=>=> RelationalSchema.Column>> window.width;
ClassDiagram.Attribut>> Window.height:long =>=>=> RelationalSchema.Column>> window.height;
ClassDiagram.Attribut>> Animal.name:String =>=>=> RelationalSchema.Column>> animal.name PRIMARY KEY;
ClassDiagram.Attribut>> Farm.name:String =>=>=> RelationalSchema.Column>> farm.name PRIMARY KEY;
ClassDiagram.Attribut>> Document.id:Long =>=>=> RelationalSchema.Column>> document.id PRIMARY KEY;
ClassDiagram.Attribut>> Document.name:String =>=>=> RelationalSchema.Column>> document.name;
ClassDiagram.Attribut>> Document.details:DocumentDetails =>=>=> RelationalSchema.Column>> document.details;
ClassDiagram.Attribut>> Contact.id:Long =>=>=> RelationalSchema.Column>> contact.id PRIMARY KEY;
ClassDiagram.Attribut>> Contact.name:String =>=>=> RelationalSchema.Column>> contact.name;
ClassDiagram.Attribut>> PCFKListElement.serialversionuid:long =>=>=> RelationalSchema.Column>> pcfklistelement.serialversionuid;
ClassDiagram.Attribut>> PCFKListElement.id:long =>=>=> RelationalSchema.Column>> pcfklistelement.id PRIMARY KEY;
ClassDiagram.Attribut>> PCFKListElement.name:String =>=>=> RelationalSchema.Column>> pcfklistelement.name;
ClassDiagram.Attribut>> ListHolder.id:long =>=>=> RelationalSchema.Column>> listholder.id PRIMARY KEY;
ClassDiagram.Attribut>> ListHolder.//stringelements,withjointablenonpc1:List =>=>=> RelationalSchema.Column>> listholder.//stringelements,withjointablenonpc1;
ClassDiagram.Attribut>> CallbackBase.id:String =>=>=> RelationalSchema.Column>> callbackbase.id PRIMARY KEY;
ClassDiagram.Attribut>> CallbackBase.name:String =>=>=> RelationalSchema.Column>> callbackbase.name;
ClassDiagram.Attribut>> CallbackBase./***registerofcallbacksinvoked.*/transientinvoked:List<Class> =>=>=> RelationalSchema.Column>> callbackbase./***registerofcallbacksinvoked.*/transientinvoked;
ClassDiagram.Attribut>> NonDurableIDHolder.name:String =>=>=> RelationalSchema.Column>> nondurableidholder.name;
ClassDiagram.Attribut>> EmbeddedOwner2.id:long =>=>=> RelationalSchema.Column>> embeddedowner2.id PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedOwner2.name:String =>=>=> RelationalSchema.Column>> embeddedowner2.name;
ClassDiagram.Attribut>> EmbeddedOwner2.embeddedobject:EmbeddedObject2 =>=>=> RelationalSchema.Column>> embeddedowner2.embeddedobject;
ClassDiagram.Attribut>> EmbeddedOwner3.id:EmbeddedOwner3Id =>=>=> RelationalSchema.Column>> embeddedowner3.id PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedOwner3.name:String =>=>=> RelationalSchema.Column>> embeddedowner3.name;
ClassDiagram.Attribut>> EmbeddedOwner3.a:EmbeddedObject3A =>=>=> RelationalSchema.Column>> embeddedowner3.a;
ClassDiagram.Attribut>> Computer.//usedbyapplicationidentityid:long =>=>=> RelationalSchema.Column>> computer.//usedbyapplicationidentityid PRIMARY KEY;
ClassDiagram.Attribut>> Computer.operatingsystem:String =>=>=> RelationalSchema.Column>> computer.operatingsystem;
ClassDiagram.Attribut>> Computer.graphicscard:ComputerCard =>=>=> RelationalSchema.Column>> computer.graphicscard;
ClassDiagram.Attribut>> Computer.soundcard:ComputerCard =>=>=> RelationalSchema.Column>> computer.soundcard;
ClassDiagram.Attribut>> Processor.//usedbyapplicationidentityid:long =>=>=> RelationalSchema.Column>> processor.//usedbyapplicationidentityid PRIMARY KEY;
ClassDiagram.Attribut>> Processor.type:String =>=>=> RelationalSchema.Column>> processor.type;
ClassDiagram.Attribut>> GenericIdSub.description:String =>=>=> RelationalSchema.Column>> genericidsub.description;
ClassDiagram.Attribut>> GenericIdPropSub1.name:String =>=>=> RelationalSchema.Column>> genericidpropsub1.name;
ClassDiagram.Attribut>> GenericOneOneRelated2.serialversionuid:long =>=>=> RelationalSchema.Column>> genericoneonerelated2.serialversionuid;
ClassDiagram.Attribut>> GenericOneOneRelated2.id:Long =>=>=> RelationalSchema.Column>> genericoneonerelated2.id PRIMARY KEY;
ClassDiagram.Attribut>> GenericOneOneRelated2.name:String =>=>=> RelationalSchema.Column>> genericoneonerelated2.name;
ClassDiagram.Attribut>> GenericOneOneRelated2.age:int =>=>=> RelationalSchema.Column>> genericoneonerelated2.age;
ClassDiagram.Attribut>> GenericOneOneSub1.serialversionuid:long =>=>=> RelationalSchema.Column>> genericoneonesub1.serialversionuid;
ClassDiagram.Attribut>> GenericOneOneSub1.id:Long =>=>=> RelationalSchema.Column>> genericoneonesub1.id PRIMARY KEY;
ClassDiagram.Attribut>> GenericOneOneSub1.name:String =>=>=> RelationalSchema.Column>> genericoneonesub1.name;
ClassDiagram.Attribut>> GenericOneOneSub1.type:GenericEnumType =>=>=> RelationalSchema.Column>> genericoneonesub1.type;
ClassDiagram.Attribut>> GenericOneOneSub1.age:int =>=>=> RelationalSchema.Column>> genericoneonesub1.age;
ClassDiagram.Attribut>> GenericIdPropSub2Sub.version:Integer =>=>=> RelationalSchema.Column>> genericidpropsub2sub.version;
ClassDiagram.Attribut>> GenericOneOneSub2.serialversionuid:long =>=>=> RelationalSchema.Column>> genericoneonesub2.serialversionuid;
ClassDiagram.Attribut>> GenericOneOneSub2.id:Long =>=>=> RelationalSchema.Column>> genericoneonesub2.id PRIMARY KEY;
ClassDiagram.Attribut>> GenericOneOneSub2.name:String =>=>=> RelationalSchema.Column>> genericoneonesub2.name;
ClassDiagram.Attribut>> GenericOneOneSub2.type:GenericEnumType =>=>=> RelationalSchema.Column>> genericoneonesub2.type;
ClassDiagram.Attribut>> GenericOneOneSub2.age:int =>=>=> RelationalSchema.Column>> genericoneonesub2.age;
ClassDiagram.Attribut>> GenericOneOneRelated1.serialversionuid:long =>=>=> RelationalSchema.Column>> genericoneonerelated1.serialversionuid;
ClassDiagram.Attribut>> GenericOneOneRelated1.id:Long =>=>=> RelationalSchema.Column>> genericoneonerelated1.id PRIMARY KEY;
ClassDiagram.Attribut>> GenericOneOneRelated1.name:String =>=>=> RelationalSchema.Column>> genericoneonerelated1.name;
ClassDiagram.Attribut>> GenericOneOneRelated1.age:int =>=>=> RelationalSchema.Column>> genericoneonerelated1.age;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.//partofpkwithappidpersonnum:long =>=>=> RelationalSchema.Column>> person.//partofpkwithappidpersonnum PRIMARY KEY;
ClassDiagram.Attribut>> Person.//partofpkwithappidglobalnum:String =>=>=> RelationalSchema.Column>> person.//partofpkwithappidglobalnum PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Person.emailaddress:String =>=>=> RelationalSchema.Column>> person.emailaddress;
ClassDiagram.Attribut>> Person.age:int =>=>=> RelationalSchema.Column>> person.age;
ClassDiagram.Attribut>> Manager.serialversionuid:long =>=>=> RelationalSchema.Column>> manager.serialversionuid;
ClassDiagram.Attribut>> Organisation.name:String =>=>=> RelationalSchema.Column>> organisation.name PRIMARY KEY;
ClassDiagram.Attribut>> Organisation.description:String =>=>=> RelationalSchema.Column>> organisation.description;
ClassDiagram.Attribut>> PhoneNumber.//pkwhenusingappidid:long =>=>=> RelationalSchema.Column>> phonenumber.//pkwhenusingappidid PRIMARY KEY;
ClassDiagram.Attribut>> PhoneNumber.name:String =>=>=> RelationalSchema.Column>> phonenumber.name;
ClassDiagram.Attribut>> PhoneNumber.number:String =>=>=> RelationalSchema.Column>> phonenumber.number;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name PRIMARY KEY;
ClassDiagram.Attribut>> Project.budget:long =>=>=> RelationalSchema.Column>> project.budget;
ClassDiagram.Attribut>> WebSite.//pkforappidid:long =>=>=> RelationalSchema.Column>> website.//pkforappidid PRIMARY KEY;
ClassDiagram.Attribut>> WebSite.name:String =>=>=> RelationalSchema.Column>> website.name;
ClassDiagram.Attribut>> WebSite.url:String =>=>=> RelationalSchema.Column>> website.url;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.primarykey:DepartmentPK =>=>=> RelationalSchema.Column>> department.primarykey;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> Account.serialversionuid:long =>=>=> RelationalSchema.Column>> account.serialversionuid;
ClassDiagram.Attribut>> Account.//pkifappidid:long =>=>=> RelationalSchema.Column>> account.//pkifappidid PRIMARY KEY;
ClassDiagram.Attribut>> Account.username:String =>=>=> RelationalSchema.Column>> account.username;
ClassDiagram.Attribut>> Account.enabled:boolean =>=>=> RelationalSchema.Column>> account.enabled;
ClassDiagram.Attribut>> Qualification.serialversionuid:long =>=>=> RelationalSchema.Column>> qualification.serialversionuid;
ClassDiagram.Attribut>> Qualification.name:String =>=>=> RelationalSchema.Column>> qualification.name PRIMARY KEY;
ClassDiagram.Attribut>> Qualification.GeneratedName:Person =>=>=> RelationalSchema.Column>> qualification.GeneratedName;
ClassDiagram.Attribut>> Qualification.GeneratedName:Organisation =>=>=> RelationalSchema.Column>> qualification.GeneratedName;
ClassDiagram.Attribut>> Qualification.GeneratedName:Date =>=>=> RelationalSchema.Column>> qualification.GeneratedName;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.serialno:String =>=>=> RelationalSchema.Column>> employee.serialno;
ClassDiagram.Attribut>> Employee.salary:float =>=>=> RelationalSchema.Column>> employee.salary;
ClassDiagram.Attribut>> Employee.salarycurrency:String =>=>=> RelationalSchema.Column>> employee.salarycurrency;
ClassDiagram.Attribut>> Employee.yearsincompany:Integer =>=>=> RelationalSchema.Column>> employee.yearsincompany;
ClassDiagram.Attribut>> Employee./***usedforthequeryingoffields.*/firstname:String =>=>=> RelationalSchema.Column>> employee./***usedforthequeryingoffields.*/firstname;
ClassDiagram.Attribut>> CustomUUIDHolder.uid:String =>=>=> RelationalSchema.Column>> customuuidholder.uid PRIMARY KEY;
ClassDiagram.Attribut>> CustomUUIDHolder.name:String =>=>=> RelationalSchema.Column>> customuuidholder.name;
ClassDiagram.Attribut>> OneOffCustomer.address:String =>=>=> RelationalSchema.Column>> oneoffcustomer.address;
ClassDiagram.Attribut>> PetroleumCustomer.id:long =>=>=> RelationalSchema.Column>> petroleumcustomer.id PRIMARY KEY;
ClassDiagram.Attribut>> PetroleumCustomer.name:String =>=>=> RelationalSchema.Column>> petroleumcustomer.name;
ClassDiagram.Attribut>> AccountCustomer.accountnumber:String =>=>=> RelationalSchema.Column>> accountcustomer.accountnumber;
ClassDiagram.Attribut>> PetroleumSupplier.id:long =>=>=> RelationalSchema.Column>> petroleumsupplier.id PRIMARY KEY;
ClassDiagram.Attribut>> PetroleumSupplier.name:String =>=>=> RelationalSchema.Column>> petroleumsupplier.name;
ClassDiagram.Attribut>> OilSupplier.brandname:String =>=>=> RelationalSchema.Column>> oilsupplier.brandname;
ClassDiagram.Attribut>> GasSupplier.type:String =>=>=> RelationalSchema.Column>> gassupplier.type;
ClassDiagram.Attribut>> GraphRelatedNext.id:long =>=>=> RelationalSchema.Column>> graphrelatednext.id PRIMARY KEY;
ClassDiagram.Attribut>> GraphRelatedNext.name:String =>=>=> RelationalSchema.Column>> graphrelatednext.name;
ClassDiagram.Attribut>> GraphBase.id:long =>=>=> RelationalSchema.Column>> graphbase.id PRIMARY KEY;
ClassDiagram.Attribut>> GraphBase.name:String =>=>=> RelationalSchema.Column>> graphbase.name;
ClassDiagram.Attribut>> GraphRelated.id:long =>=>=> RelationalSchema.Column>> graphrelated.id PRIMARY KEY;
ClassDiagram.Attribut>> CompoundHolder.id:long =>=>=> RelationalSchema.Column>> compoundholder.id;
ClassDiagram.Attribut>> CompoundHolder.name:String =>=>=> RelationalSchema.Column>> compoundholder.name;
ClassDiagram.Attribut>> CompoundHolder.1:List =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CompoundHolder.2:List =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CompoundHolder.3:List =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CompoundHolder.//1-nbiwithkeystoredinvalue1:Map =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CompoundHolder.//1-nbiwithvaluestoredinkey2:Map =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CompoundSingleTarget.//pkid:int =>=>=> RelationalSchema.Column>> compoundsingletarget.//pkid;
ClassDiagram.Attribut>> CompoundSingleTarget.//pkholder:CompoundHolder =>=>=> RelationalSchema.Column>> compoundsingletarget.//pkholder;
ClassDiagram.Attribut>> CompoundSingleTarget.value:double =>=>=> RelationalSchema.Column>> compoundsingletarget.value;
ClassDiagram.Attribut>> TenantedObject.id:long =>=>=> RelationalSchema.Column>> tenantedobject.id PRIMARY KEY;
ClassDiagram.Attribut>> TenantedObject.name:String =>=>=> RelationalSchema.Column>> tenantedobject.name;
ClassDiagram.Attribut>> PetroleumCustomer.id:long =>=>=> RelationalSchema.Column>> petroleumcustomer.id PRIMARY KEY;
ClassDiagram.Attribut>> PetroleumCustomer.name:String =>=>=> RelationalSchema.Column>> petroleumcustomer.name;
ClassDiagram.Attribut>> PetroleumSupplier.id:long =>=>=> RelationalSchema.Column>> petroleumsupplier.id PRIMARY KEY;
ClassDiagram.Attribut>> PetroleumSupplier.name:String =>=>=> RelationalSchema.Column>> petroleumsupplier.name;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.serialno:String =>=>=> RelationalSchema.Column>> employee.serialno;
ClassDiagram.Attribut>> Employee.salary:float =>=>=> RelationalSchema.Column>> employee.salary;
ClassDiagram.Attribut>> Employee.salarycurrency:String =>=>=> RelationalSchema.Column>> employee.salarycurrency;
ClassDiagram.Attribut>> Employee.yearsincompany:Integer =>=>=> RelationalSchema.Column>> employee.yearsincompany;
ClassDiagram.Attribut>> Employee./***usedforthequeryingoffields.*/firstname:String =>=>=> RelationalSchema.Column>> employee./***usedforthequeryingoffields.*/firstname;
ClassDiagram.Attribut>> WebSite.//pkforappidid:long =>=>=> RelationalSchema.Column>> website.//pkforappidid PRIMARY KEY;
ClassDiagram.Attribut>> WebSite.name:String =>=>=> RelationalSchema.Column>> website.name;
ClassDiagram.Attribut>> WebSite.url:String =>=>=> RelationalSchema.Column>> website.url;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.//partofpkwithappidpersonnum:long =>=>=> RelationalSchema.Column>> person.//partofpkwithappidpersonnum PRIMARY KEY;
ClassDiagram.Attribut>> Person.//partofpkwithappidglobalnum:String =>=>=> RelationalSchema.Column>> person.//partofpkwithappidglobalnum PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Person.emailaddress:String =>=>=> RelationalSchema.Column>> person.emailaddress;
ClassDiagram.Attribut>> Person.age:int =>=>=> RelationalSchema.Column>> person.age;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name PRIMARY KEY;
ClassDiagram.Attribut>> Account.serialversionuid:long =>=>=> RelationalSchema.Column>> account.serialversionuid;
ClassDiagram.Attribut>> Account.//pkifappidid:long =>=>=> RelationalSchema.Column>> account.//pkifappidid PRIMARY KEY;
ClassDiagram.Attribut>> Account.username:String =>=>=> RelationalSchema.Column>> account.username;
ClassDiagram.Attribut>> Account.enabled:boolean =>=>=> RelationalSchema.Column>> account.enabled;
ClassDiagram.Attribut>> PhoneNumber.//pkwhenusingappidid:long =>=>=> RelationalSchema.Column>> phonenumber.//pkwhenusingappidid PRIMARY KEY;
ClassDiagram.Attribut>> PhoneNumber.name:String =>=>=> RelationalSchema.Column>> phonenumber.name;
ClassDiagram.Attribut>> PhoneNumber.number:String =>=>=> RelationalSchema.Column>> phonenumber.number;
ClassDiagram.Attribut>> Manager.serialversionuid:long =>=>=> RelationalSchema.Column>> manager.serialversionuid;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name PRIMARY KEY;
ClassDiagram.Attribut>> Project.budget:long =>=>=> RelationalSchema.Column>> project.budget;
ClassDiagram.Attribut>> Timer.digital:boolean =>=>=> RelationalSchema.Column>> timer.digital;
ClassDiagram.Attribut>> Boiler.model:String =>=>=> RelationalSchema.Column>> boiler.model;
ClassDiagram.Attribut>> Equipment.id:long =>=>=> RelationalSchema.Column>> equipment.id PRIMARY KEY;
ClassDiagram.Attribut>> Equipment.make:String =>=>=> RelationalSchema.Column>> equipment.make;
ClassDiagram.Attribut>> LoginAccount.id:long =>=>=> RelationalSchema.Column>> loginaccount.id PRIMARY KEY;
ClassDiagram.Attribut>> LoginAccount.firstname:String =>=>=> RelationalSchema.Column>> loginaccount.firstname;
ClassDiagram.Attribut>> LoginAccount.lastname:String =>=>=> RelationalSchema.Column>> loginaccount.lastname;
ClassDiagram.Attribut>> Login.id:long =>=>=> RelationalSchema.Column>> login.id PRIMARY KEY;
ClassDiagram.Attribut>> Login.username:String =>=>=> RelationalSchema.Column>> login.username;
ClassDiagram.Attribut>> Login.password:String =>=>=> RelationalSchema.Column>> login.password;
One-To-One relationship between ClassDiagram.Class>>ShapeHolder  to ClassDiagram.Class>>Shape represented by ClassDiagram.Atrribute>>1;
One-To-Many relationship from ClassDiagram.Class>>ShapeHolder  to ClassDiagram.Class>>Set<Shape>;
Many-To-One relationship from ClassDiagram.Class>>ManyOneOwner  to ClassDiagram.Class>>ManyOneOther represented by ClassDiagram.Atrribute>>other;
One-To-Many relationship from ClassDiagram.Class>>ArrayHolder  to ClassDiagram.Class>>Permission;
One-To-One relationship between ClassDiagram.Class>>LoginAccount  to ClassDiagram.Class>>Login represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Boiler  to ClassDiagram.Class>>Timer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Timer  to ClassDiagram.Class>>Boiler represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>UserGroup  to ClassDiagram.Class>>List<GroupMember>;
One-To-One relationship between ClassDiagram.Class>>GroupMember  to ClassDiagram.Class>>MemberDetails represented by ClassDiagram.Atrribute>>details;
One-To-Many relationship from ClassDiagram.Class>>MapHolderWithKeyClass  to ClassDiagram.Class>>Map;
One-To-Many relationship from ClassDiagram.Class>>MapJoinHolder  to ClassDiagram.Class>>Map<String,MapJoinValue>;
One-To-Many relationship from ClassDiagram.Class>>MapJoinHolder  to ClassDiagram.Class>>Map<MapJoinKey,MapJoinValue>;
One-To-Many relationship from ClassDiagram.Class>>House  to ClassDiagram.Class>>HashSet<Window>;
Many-To-One relationship from ClassDiagram.Class>>Window  to ClassDiagram.Class>>House represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Animal  to ClassDiagram.Class>>Farm represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Farm  to ClassDiagram.Class>>ArrayList<Animal>;
One-To-One relationship between ClassDiagram.Class>>Contact  to ClassDiagram.Class>>Document represented by ClassDiagram.Atrribute>>main;
One-To-Many relationship from ClassDiagram.Class>>Contact  to ClassDiagram.Class>>Set<Document>;
One-To-Many relationship from ClassDiagram.Class>>ListHolder  to ClassDiagram.Class>>List<PCFKListElement>;
One-To-Many relationship from ClassDiagram.Class>>Processor  to ClassDiagram.Class>>ArrayList<Job>;
One-To-Many relationship from ClassDiagram.Class>>GenericOneOneRelated2  to ClassDiagram.Class>>Set<GenericOneOneSub2>;
One-To-Many relationship from ClassDiagram.Class>>GenericOneOneRelated1  to ClassDiagram.Class>>Set<GenericOneOneSub1>;
Many-To-One relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>bestfriend;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>Map<String,PhoneNumber>;
One-To-Many relationship from ClassDiagram.Class>>Manager  to ClassDiagram.Class>>Set<Employee>;
One-To-Many relationship from ClassDiagram.Class>>Manager  to ClassDiagram.Class>>Set<Department>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Set<Project>;
Many-To-One relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>manager represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>manager represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>account represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>PetroleumCustomer  and ClassDiagram.Class>>collection<petroleumsupplier>: jpa_an_petrol_cust_supp(customer_id:PetroleumCustomer [PK] #FK to PetroleumCustomer,supplier_id:collection<petroleumsupplier> [PK] #FK to collection<petroleumsupplier>);
collection<petroleumcustomer>: petroleumsupplier_collection<petroleumcustomer>(petroleumsupplierID:petroleumsupplier [PK] #FK to petroleumsupplier,collection<petroleumcustomer>ID:collection<petroleumcustomer> [PK] #FK to collection<petroleumcustomer>);
One-To-One relationship between ClassDiagram.Class>>GraphBase  to ClassDiagram.Class>>graphrelated represented by ClassDiagram.Atrribute>>relation;
One-To-One relationship between ClassDiagram.Class>>GraphRelated  to ClassDiagram.Class>>graphrelatednext represented by ClassDiagram.Atrribute>>nextrelation;
collection<petroleumcustomer>: petroleumsupplier_collection<petroleumcustomer>(petroleumsupplierID:petroleumsupplier [PK] #FK to petroleumsupplier,collection<petroleumcustomer>ID:collection<petroleumcustomer> [PK] #FK to collection<petroleumcustomer>);
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>manager represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>account represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>bestfriend;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>Map<String,PhoneNumber>;
Many-To-One relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>manager represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Set<Project>;
One-To-Many relationship from ClassDiagram.Class>>Manager  to ClassDiagram.Class>>Set;
One-To-Many relationship from ClassDiagram.Class>>Manager  to ClassDiagram.Class>>Set;
One-To-One relationship between ClassDiagram.Class>>Timer  to ClassDiagram.Class>>Boiler represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Boiler  to ClassDiagram.Class>>Timer represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>LoginAccount  to ClassDiagram.Class>>Login represented by ClassDiagram.Atrribute>>GeneratedName;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>VersionedPerson  Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>User  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Equipment  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Employee  ;
