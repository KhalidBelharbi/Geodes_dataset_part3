ClassDiagram.Class>> Content =>=>=> RelationalSchema.Table>> content;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> KidsGroup =>=>=> RelationalSchema.Table>> kidsgroup;
ClassDiagram.Class>> UserType =>=>=> RelationalSchema.Table>> usertype;
ClassDiagram.Class>> Payment =>=>=> RelationalSchema.Table>> payment;
ClassDiagram.Class>> ApplicantRequest =>=>=> RelationalSchema.Table>> applicantrequest;
ClassDiagram.Class>> School =>=>=> RelationalSchema.Table>> school;
ClassDiagram.Class>> SessionReport =>=>=> RelationalSchema.Table>> sessionreport;
ClassDiagram.Class>> Volunteacher =>=>=> RelationalSchema.Table>> volunteacher;
ClassDiagram.Class>> Announcement =>=>=> RelationalSchema.Table>> announcement;
ClassDiagram.Class>> District =>=>=> RelationalSchema.Table>> district;
ClassDiagram.Class>> Taluka =>=>=> RelationalSchema.Table>> taluka;
ClassDiagram.Class>> Event =>=>=> RelationalSchema.Table>> event;
ClassDiagram.Class>> Participant =>=>=> RelationalSchema.Table>> participant;
ClassDiagram.Class>> Report =>=>=> RelationalSchema.Table>> report;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Session =>=>=> RelationalSchema.Table>> session;
ClassDiagram.Class>> KidsReport =>=>=> RelationalSchema.Table>> kidsreport;
ClassDiagram.Class>> Area =>=>=> RelationalSchema.Table>> area;
ClassDiagram.Class>> State =>=>=> RelationalSchema.Table>> state;
ClassDiagram.Class>> Kid =>=>=> RelationalSchema.Table>> kid;
ClassDiagram.Class>> TimelinePost =>=>=> RelationalSchema.Table>> timelinepost;
ClassDiagram.Class>> Village =>=>=> RelationalSchema.Table>> village;
ClassDiagram.Class>> Attendance =>=>=> RelationalSchema.Table>> attendance;
ClassDiagram.Class>> Notification =>=>=> RelationalSchema.Table>> notification;
ClassDiagram.Class>> Donor =>=>=> RelationalSchema.Table>> donor;
ClassDiagram.Class>> EventKidActivity =>=>=> RelationalSchema.Table>> eventkidactivity;
ClassDiagram.Class>> Activity =>=>=> RelationalSchema.Table>> activity;
ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Attribut>> Content.contentid:int =>=>=> RelationalSchema.Column>> content.contentid PRIMARY KEY;
ClassDiagram.Attribut>> Content.contentdata:String =>=>=> RelationalSchema.Column>> content.contentdata;
ClassDiagram.Attribut>> Project.projectid:int =>=>=> RelationalSchema.Column>> project.projectid PRIMARY KEY;
ClassDiagram.Attribut>> Project.projectname:String =>=>=> RelationalSchema.Column>> project.projectname;
ClassDiagram.Attribut>> Project.startingdate:Calendar =>=>=> RelationalSchema.Column>> project.startingdate;
ClassDiagram.Attribut>> Project.endingdate:Calendar =>=>=> RelationalSchema.Column>> project.endingdate;
ClassDiagram.Attribut>> Project.projectdata:String =>=>=> RelationalSchema.Column>> project.projectdata;
ClassDiagram.Attribut>> Project.description:String =>=>=> RelationalSchema.Column>> project.description;
ClassDiagram.Attribut>> Project.creationdate:Calendar =>=>=> RelationalSchema.Column>> project.creationdate;
ClassDiagram.Attribut>> Project.photo:String =>=>=> RelationalSchema.Column>> project.photo;
ClassDiagram.Attribut>> Project.creationtime:Calendar =>=>=> RelationalSchema.Column>> project.creationtime;
ClassDiagram.Attribut>> Project.totalkids:int =>=>=> RelationalSchema.Column>> project.totalkids;
ClassDiagram.Attribut>> Project.totalsessions:int =>=>=> RelationalSchema.Column>> project.totalsessions;
ClassDiagram.Attribut>> Project.totalvolunteachers:int =>=>=> RelationalSchema.Column>> project.totalvolunteachers;
ClassDiagram.Attribut>> KidsGroup.groupid:int =>=>=> RelationalSchema.Column>> kidsgroup.groupid PRIMARY KEY;
ClassDiagram.Attribut>> KidsGroup.groupname:String =>=>=> RelationalSchema.Column>> kidsgroup.groupname;
ClassDiagram.Attribut>> KidsGroup.criteria:String =>=>=> RelationalSchema.Column>> kidsgroup.criteria;
ClassDiagram.Attribut>> UserType.typeid:int =>=>=> RelationalSchema.Column>> usertype.typeid PRIMARY KEY;
ClassDiagram.Attribut>> UserType.type:String =>=>=> RelationalSchema.Column>> usertype.type;
ClassDiagram.Attribut>> Payment.paymentid:int =>=>=> RelationalSchema.Column>> payment.paymentid PRIMARY KEY;
ClassDiagram.Attribut>> Payment.creationdate:Calendar =>=>=> RelationalSchema.Column>> payment.creationdate;
ClassDiagram.Attribut>> Payment.paymentmode:String =>=>=> RelationalSchema.Column>> payment.paymentmode;
ClassDiagram.Attribut>> Payment.amount:double =>=>=> RelationalSchema.Column>> payment.amount;
ClassDiagram.Attribut>> Payment.transactionid:String =>=>=> RelationalSchema.Column>> payment.transactionid;
ClassDiagram.Attribut>> ApplicantRequest.requestid:int =>=>=> RelationalSchema.Column>> applicantrequest.requestid PRIMARY KEY;
ClassDiagram.Attribut>> ApplicantRequest.emailid:String =>=>=> RelationalSchema.Column>> applicantrequest.emailid;
ClassDiagram.Attribut>> ApplicantRequest.name:String =>=>=> RelationalSchema.Column>> applicantrequest.name;
ClassDiagram.Attribut>> ApplicantRequest.phonenumber:String =>=>=> RelationalSchema.Column>> applicantrequest.phonenumber;
ClassDiagram.Attribut>> ApplicantRequest.gender:int =>=>=> RelationalSchema.Column>> applicantrequest.gender;
ClassDiagram.Attribut>> ApplicantRequest.status:int =>=>=> RelationalSchema.Column>> applicantrequest.status;
ClassDiagram.Attribut>> ApplicantRequest.requestdate:Calendar =>=>=> RelationalSchema.Column>> applicantrequest.requestdate;
ClassDiagram.Attribut>> School.schoolid:int =>=>=> RelationalSchema.Column>> school.schoolid PRIMARY KEY;
ClassDiagram.Attribut>> School.schoolname:String =>=>=> RelationalSchema.Column>> school.schoolname;
ClassDiagram.Attribut>> School.pincode:int =>=>=> RelationalSchema.Column>> school.pincode;
ClassDiagram.Attribut>> School.lab:boolean =>=>=> RelationalSchema.Column>> school.lab;
ClassDiagram.Attribut>> School.grade:String =>=>=> RelationalSchema.Column>> school.grade;
ClassDiagram.Attribut>> School.totalteachers:int =>=>=> RelationalSchema.Column>> school.totalteachers;
ClassDiagram.Attribut>> School.phonenumber:String =>=>=> RelationalSchema.Column>> school.phonenumber;
ClassDiagram.Attribut>> School.startingdate:Calendar =>=>=> RelationalSchema.Column>> school.startingdate;
ClassDiagram.Attribut>> School.type:String =>=>=> RelationalSchema.Column>> school.type;
ClassDiagram.Attribut>> School.totalstudent:int =>=>=> RelationalSchema.Column>> school.totalstudent;
ClassDiagram.Attribut>> School.status:int =>=>=> RelationalSchema.Column>> school.status;
ClassDiagram.Attribut>> School.requirements:String =>=>=> RelationalSchema.Column>> school.requirements;
ClassDiagram.Attribut>> SessionReport.sessionreportid:int =>=>=> RelationalSchema.Column>> sessionreport.sessionreportid PRIMARY KEY;
ClassDiagram.Attribut>> SessionReport.description:String =>=>=> RelationalSchema.Column>> sessionreport.description;
ClassDiagram.Attribut>> SessionReport.suggestions:String =>=>=> RelationalSchema.Column>> sessionreport.suggestions;
ClassDiagram.Attribut>> SessionReport.experience:String =>=>=> RelationalSchema.Column>> sessionreport.experience;
ClassDiagram.Attribut>> SessionReport.requirements:String =>=>=> RelationalSchema.Column>> sessionreport.requirements;
ClassDiagram.Attribut>> Volunteacher.volunteacherid:int =>=>=> RelationalSchema.Column>> volunteacher.volunteacherid PRIMARY KEY;
ClassDiagram.Attribut>> Volunteacher.school:String =>=>=> RelationalSchema.Column>> volunteacher.school;
ClassDiagram.Attribut>> Volunteacher.employername:String =>=>=> RelationalSchema.Column>> volunteacher.employername;
ClassDiagram.Attribut>> Volunteacher.status:int =>=>=> RelationalSchema.Column>> volunteacher.status;
ClassDiagram.Attribut>> Volunteacher.joiningdate:Calendar =>=>=> RelationalSchema.Column>> volunteacher.joiningdate;
ClassDiagram.Attribut>> Volunteacher.pincode:int =>=>=> RelationalSchema.Column>> volunteacher.pincode;
ClassDiagram.Attribut>> Volunteacher.education:String =>=>=> RelationalSchema.Column>> volunteacher.education;
ClassDiagram.Attribut>> Announcement.announcementid:Long =>=>=> RelationalSchema.Column>> announcement.announcementid PRIMARY KEY;
ClassDiagram.Attribut>> Announcement.data:String =>=>=> RelationalSchema.Column>> announcement.data;
ClassDiagram.Attribut>> Announcement.creationdate:Calendar =>=>=> RelationalSchema.Column>> announcement.creationdate;
ClassDiagram.Attribut>> Announcement.creationtime:Calendar =>=>=> RelationalSchema.Column>> announcement.creationtime;
ClassDiagram.Attribut>> District.districtid:int =>=>=> RelationalSchema.Column>> district.districtid PRIMARY KEY;
ClassDiagram.Attribut>> District.districtname:String =>=>=> RelationalSchema.Column>> district.districtname;
ClassDiagram.Attribut>> Taluka.talukaid:int =>=>=> RelationalSchema.Column>> taluka.talukaid PRIMARY KEY;
ClassDiagram.Attribut>> Taluka.talukaname:String =>=>=> RelationalSchema.Column>> taluka.talukaname;
ClassDiagram.Attribut>> Event.eventid:int =>=>=> RelationalSchema.Column>> event.eventid PRIMARY KEY;
ClassDiagram.Attribut>> Event.title:String =>=>=> RelationalSchema.Column>> event.title;
ClassDiagram.Attribut>> Event.eventdata:String =>=>=> RelationalSchema.Column>> event.eventdata;
ClassDiagram.Attribut>> Event.eventdate:Calendar =>=>=> RelationalSchema.Column>> event.eventdate;
ClassDiagram.Attribut>> Event.eventstartingtime:Calendar =>=>=> RelationalSchema.Column>> event.eventstartingtime;
ClassDiagram.Attribut>> Event.eventendingtime:Calendar =>=>=> RelationalSchema.Column>> event.eventendingtime;
ClassDiagram.Attribut>> Event.photo:String =>=>=> RelationalSchema.Column>> event.photo;
ClassDiagram.Attribut>> Event.notified:boolean =>=>=> RelationalSchema.Column>> event.notified;
ClassDiagram.Attribut>> Participant.participantid:Long =>=>=> RelationalSchema.Column>> participant.participantid PRIMARY KEY;
ClassDiagram.Attribut>> Participant.name:String =>=>=> RelationalSchema.Column>> participant.name;
ClassDiagram.Attribut>> Participant.email:String =>=>=> RelationalSchema.Column>> participant.email;
ClassDiagram.Attribut>> Participant.gender:int =>=>=> RelationalSchema.Column>> participant.gender;
ClassDiagram.Attribut>> Participant.phonenumber:String =>=>=> RelationalSchema.Column>> participant.phonenumber;
ClassDiagram.Attribut>> Participant.dob:Calendar =>=>=> RelationalSchema.Column>> participant.dob;
ClassDiagram.Attribut>> Report.reportid:int =>=>=> RelationalSchema.Column>> report.reportid PRIMARY KEY;
ClassDiagram.Attribut>> Report.title:String =>=>=> RelationalSchema.Column>> report.title;
ClassDiagram.Attribut>> Report.description:String =>=>=> RelationalSchema.Column>> report.description;
ClassDiagram.Attribut>> Report.pdfurl:String =>=>=> RelationalSchema.Column>> report.pdfurl;
ClassDiagram.Attribut>> Report.creationdate:Calendar =>=>=> RelationalSchema.Column>> report.creationdate;
ClassDiagram.Attribut>> User.userid:Long =>=>=> RelationalSchema.Column>> user.userid PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.gender:int =>=>=> RelationalSchema.Column>> user.gender;
ClassDiagram.Attribut>> User.phonenumber:String =>=>=> RelationalSchema.Column>> user.phonenumber;
ClassDiagram.Attribut>> User.dob:Calendar =>=>=> RelationalSchema.Column>> user.dob;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.photo:String =>=>=> RelationalSchema.Column>> user.photo;
ClassDiagram.Attribut>> User.userotp:String =>=>=> RelationalSchema.Column>> user.userotp;
ClassDiagram.Attribut>> Session.sessionid:Long =>=>=> RelationalSchema.Column>> session.sessionid PRIMARY KEY;
ClassDiagram.Attribut>> Session.//attendancesessiondate:Calendar =>=>=> RelationalSchema.Column>> session.//attendancesessiondate;
ClassDiagram.Attribut>> Session.startingtime:Calendar =>=>=> RelationalSchema.Column>> session.startingtime;
ClassDiagram.Attribut>> Session.endingtime:Calendar =>=>=> RelationalSchema.Column>> session.endingtime;
ClassDiagram.Attribut>> Session.creationdate:Calendar =>=>=> RelationalSchema.Column>> session.creationdate;
ClassDiagram.Attribut>> Session.notified:boolean =>=>=> RelationalSchema.Column>> session.notified;
ClassDiagram.Attribut>> KidsReport.kidreportid:int =>=>=> RelationalSchema.Column>> kidsreport.kidreportid PRIMARY KEY;
ClassDiagram.Attribut>> KidsReport.createddate:Calendar =>=>=> RelationalSchema.Column>> kidsreport.createddate;
ClassDiagram.Attribut>> KidsReport.discipline:int =>=>=> RelationalSchema.Column>> kidsreport.discipline;
ClassDiagram.Attribut>> KidsReport.prayer:int =>=>=> RelationalSchema.Column>> kidsreport.prayer;
ClassDiagram.Attribut>> KidsReport.goshthi:int =>=>=> RelationalSchema.Column>> kidsreport.goshthi;
ClassDiagram.Attribut>> KidsReport.abhivyakti:int =>=>=> RelationalSchema.Column>> kidsreport.abhivyakti;
ClassDiagram.Attribut>> KidsReport.volunteaching:int =>=>=> RelationalSchema.Column>> kidsreport.volunteaching;
ClassDiagram.Attribut>> KidsReport.games:int =>=>=> RelationalSchema.Column>> kidsreport.games;
ClassDiagram.Attribut>> KidsReport.interestarea:String =>=>=> RelationalSchema.Column>> kidsreport.interestarea;
ClassDiagram.Attribut>> KidsReport.artcraft:int =>=>=> RelationalSchema.Column>> kidsreport.artcraft;
ClassDiagram.Attribut>> KidsReport.sports:int =>=>=> RelationalSchema.Column>> kidsreport.sports;
ClassDiagram.Attribut>> KidsReport.science:int =>=>=> RelationalSchema.Column>> kidsreport.science;
ClassDiagram.Attribut>> KidsReport.//@notnull//@column(nullable:String =>=>=> RelationalSchema.Column>> kidsreport.//@notnull//@column(nullable;
ClassDiagram.Attribut>> KidsReport.maths:int =>=>=> RelationalSchema.Column>> kidsreport.maths;
ClassDiagram.Attribut>> KidsReport.gujarati:int =>=>=> RelationalSchema.Column>> kidsreport.gujarati;
ClassDiagram.Attribut>> KidsReport.english:int =>=>=> RelationalSchema.Column>> kidsreport.english;
ClassDiagram.Attribut>> Area.areaid:int =>=>=> RelationalSchema.Column>> area.areaid PRIMARY KEY;
ClassDiagram.Attribut>> Area.areaname:String =>=>=> RelationalSchema.Column>> area.areaname;
ClassDiagram.Attribut>> State.stateid:int =>=>=> RelationalSchema.Column>> state.stateid PRIMARY KEY;
ClassDiagram.Attribut>> State.statename:String =>=>=> RelationalSchema.Column>> state.statename;
ClassDiagram.Attribut>> Kid.kidid:Long =>=>=> RelationalSchema.Column>> kid.kidid PRIMARY KEY;
ClassDiagram.Attribut>> Kid.name:String =>=>=> RelationalSchema.Column>> kid.name;
ClassDiagram.Attribut>> Kid.gender:int =>=>=> RelationalSchema.Column>> kid.gender;
ClassDiagram.Attribut>> Kid.dob:Calendar =>=>=> RelationalSchema.Column>> kid.dob;
ClassDiagram.Attribut>> Kid.standard:int =>=>=> RelationalSchema.Column>> kid.standard;
ClassDiagram.Attribut>> Kid.level:int =>=>=> RelationalSchema.Column>> kid.level;
ClassDiagram.Attribut>> Kid.totalsessions:int =>=>=> RelationalSchema.Column>> kid.totalsessions;
ClassDiagram.Attribut>> Kid.photo:String =>=>=> RelationalSchema.Column>> kid.photo;
ClassDiagram.Attribut>> Kid.school:String =>=>=> RelationalSchema.Column>> kid.school;
ClassDiagram.Attribut>> Kid.creationdate:Calendar =>=>=> RelationalSchema.Column>> kid.creationdate;
ClassDiagram.Attribut>> TimelinePost.postid:Long =>=>=> RelationalSchema.Column>> timelinepost.postid PRIMARY KEY;
ClassDiagram.Attribut>> TimelinePost.postphoto:String =>=>=> RelationalSchema.Column>> timelinepost.postphoto;
ClassDiagram.Attribut>> TimelinePost.postdescription:String =>=>=> RelationalSchema.Column>> timelinepost.postdescription;
ClassDiagram.Attribut>> TimelinePost.creationdate:Calendar =>=>=> RelationalSchema.Column>> timelinepost.creationdate;
ClassDiagram.Attribut>> Village.villageid:int =>=>=> RelationalSchema.Column>> village.villageid PRIMARY KEY;
ClassDiagram.Attribut>> Village.villagename:String =>=>=> RelationalSchema.Column>> village.villagename;
ClassDiagram.Attribut>> Attendance.attendanceid:Long =>=>=> RelationalSchema.Column>> attendance.attendanceid PRIMARY KEY;
ClassDiagram.Attribut>> Notification.notificationid:Long =>=>=> RelationalSchema.Column>> notification.notificationid PRIMARY KEY;
ClassDiagram.Attribut>> Notification.notificationtype:String =>=>=> RelationalSchema.Column>> notification.notificationtype;
ClassDiagram.Attribut>> Notification.usertype:String =>=>=> RelationalSchema.Column>> notification.usertype;
ClassDiagram.Attribut>> Notification.createddate:Calendar =>=>=> RelationalSchema.Column>> notification.createddate;
ClassDiagram.Attribut>> Donor.donorid:int =>=>=> RelationalSchema.Column>> donor.donorid PRIMARY KEY;
ClassDiagram.Attribut>> Donor.donorname:String =>=>=> RelationalSchema.Column>> donor.donorname;
ClassDiagram.Attribut>> Donor.donorphone:String =>=>=> RelationalSchema.Column>> donor.donorphone;
ClassDiagram.Attribut>> Donor.donoremail:String =>=>=> RelationalSchema.Column>> donor.donoremail;
ClassDiagram.Attribut>> EventKidActivity.serialversionuid:long =>=>=> RelationalSchema.Column>> eventkidactivity.serialversionuid;
ClassDiagram.Attribut>> EventKidActivity.GeneratedName:Kid =>=>=> RelationalSchema.Column>> eventkidactivity.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> EventKidActivity.GeneratedName:Event =>=>=> RelationalSchema.Column>> eventkidactivity.GeneratedName PRIMARY KEY;
ClassDiagram.Attribut>> Activity.activityid:int =>=>=> RelationalSchema.Column>> activity.activityid PRIMARY KEY;
ClassDiagram.Attribut>> Activity.activityname:String =>=>=> RelationalSchema.Column>> activity.activityname;
ClassDiagram.Attribut>> Activity.description:String =>=>=> RelationalSchema.Column>> activity.description;
ClassDiagram.Attribut>> Country.countryid:int =>=>=> RelationalSchema.Column>> country.countryid PRIMARY KEY;
ClassDiagram.Attribut>> Country.countryname:String =>=>=> RelationalSchema.Column>> country.countryname;
One-To-One relationship between ClassDiagram.Class>>Content  to ClassDiagram.Class>>kidsgroup represented by ClassDiagram.Atrribute>>group;
One-To-Many relationship from ClassDiagram.Class>>Project  to ClassDiagram.Class>>List<Session>;
One-To-Many relationship from ClassDiagram.Class>>Project  to ClassDiagram.Class>>List<Event>;
list<user>: project_list<user>(projectID:project [PK] #FK to project,list<user>ID:list<user> [PK] #FK to list<user>);
list<kid>: project_list<user>(projectID:project [PK] #FK to project,list<user>ID:list<user> [PK] #FK to list<user>);project_list<kid>(projectID:project [PK] #FK to project,list<kid>ID:list<kid> [PK] #FK to list<kid>);
One-To-Many relationship from ClassDiagram.Class>>KidsGroup  to ClassDiagram.Class>>List<Attendance>;
Many-To-One relationship from ClassDiagram.Class>>Payment  to ClassDiagram.Class>>donor represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>School  to ClassDiagram.Class>>village represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>SessionReport  to ClassDiagram.Class>>session represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>SessionReport  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Volunteacher  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Volunteacher  to ClassDiagram.Class>>village represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Volunteacher  to ClassDiagram.Class>>district represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Announcement  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>createdby;
One-To-One relationship between ClassDiagram.Class>>District  to ClassDiagram.Class>>state represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>District  to ClassDiagram.Class>>List<Taluka>;
One-To-One relationship between ClassDiagram.Class>>Taluka  to ClassDiagram.Class>>district represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Taluka  to ClassDiagram.Class>>List<Village>;
Many-To-One relationship from ClassDiagram.Class>>Event  to ClassDiagram.Class>>project represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Event  to ClassDiagram.Class>>List<Participant>;
One-To-One relationship between ClassDiagram.Class>>Event  to ClassDiagram.Class>>village represented by ClassDiagram.Atrribute>>GeneratedName;
list<kid>: event_list<kid>(eventID:event [PK] #FK to event,list<kid>ID:list<kid> [PK] #FK to list<kid>);
list<user>: event_list<kid>(eventID:event [PK] #FK to event,list<kid>ID:list<kid> [PK] #FK to list<kid>);event_list<user>(eventID:event [PK] #FK to event,list<user>ID:list<user> [PK] #FK to list<user>);
list<activity>: event_list<kid>(eventID:event [PK] #FK to event,list<kid>ID:list<kid> [PK] #FK to list<kid>);event_list<user>(eventID:event [PK] #FK to event,list<user>ID:list<user> [PK] #FK to list<user>);event_list<activity>(eventID:event [PK] #FK to event,list<activity>ID:list<activity> [PK] #FK to list<activity>);
One-To-One relationship between ClassDiagram.Class>>Event  to ClassDiagram.Class>>notification represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Participant  to ClassDiagram.Class>>usertype represented by ClassDiagram.Atrribute>>type;
Many-To-One relationship from ClassDiagram.Class>>Participant  to ClassDiagram.Class>>event represented by ClassDiagram.Atrribute>>GeneratedName;
list<activity>: participant_list<activity>(participantID:participant [PK] #FK to participant,list<activity>ID:list<activity> [PK] #FK to list<activity>);
One-To-One relationship between ClassDiagram.Class>>Report  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>createdby;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>usertype represented by ClassDiagram.Atrribute>>type;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Announcement>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<SessionReport>;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>volunteacher represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<TimelinePost>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Notification>;
Many-To-One relationship from ClassDiagram.Class>>Session  to ClassDiagram.Class>>project represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Session  to ClassDiagram.Class>>List<Attendance>;
One-To-Many relationship from ClassDiagram.Class>>Session  to ClassDiagram.Class>>List<SessionReport>;
One-To-One relationship between ClassDiagram.Class>>Session  to ClassDiagram.Class>>village represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Session  to ClassDiagram.Class>>notification represented by ClassDiagram.Atrribute>>GeneratedName;
list<user>: session_list<user>(sessionID:session [PK] #FK to session,list<user>ID:list<user> [PK] #FK to list<user>);
Many-To-One relationship from ClassDiagram.Class>>KidsReport  to ClassDiagram.Class>>kid represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Area  to ClassDiagram.Class>>village represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Area  to ClassDiagram.Class>>List<Kid>;
One-To-One relationship between ClassDiagram.Class>>State  to ClassDiagram.Class>>country represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>State  to ClassDiagram.Class>>List<District>;
One-To-One relationship between ClassDiagram.Class>>Kid  to ClassDiagram.Class>>kidsgroup represented by ClassDiagram.Atrribute>>group;
Many-To-One relationship from ClassDiagram.Class>>Kid  to ClassDiagram.Class>>village represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Kid  to ClassDiagram.Class>>area represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Kid  to ClassDiagram.Class>>List<KidsReport>;
Many-To-One relationship from ClassDiagram.Class>>TimelinePost  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>createdby;
One-To-One relationship between ClassDiagram.Class>>Village  to ClassDiagram.Class>>taluka represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Village  to ClassDiagram.Class>>List<Area>;
One-To-Many relationship from ClassDiagram.Class>>Village  to ClassDiagram.Class>>List<Kid>;
Many-To-One relationship from ClassDiagram.Class>>Attendance  to ClassDiagram.Class>>session represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Attendance  to ClassDiagram.Class>>kidsgroup represented by ClassDiagram.Atrribute>>GeneratedName;
list<kid>: attendance_list<kid>(attendanceID:attendance [PK] #FK to attendance,list<kid>ID:list<kid> [PK] #FK to list<kid>);
Many-To-One relationship from ClassDiagram.Class>>Notification  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>createdby;
One-To-One relationship between ClassDiagram.Class>>Notification  to ClassDiagram.Class>>session represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Notification  to ClassDiagram.Class>>event represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Donor  to ClassDiagram.Class>>usertype represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Donor  to ClassDiagram.Class>>List<Payment>;
Many-To-One relationship from ClassDiagram.Class>>EventKidActivity  to ClassDiagram.Class>>kid represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>EventKidActivity  to ClassDiagram.Class>>event represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>EventKidActivity  to ClassDiagram.Class>>activity represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Country  to ClassDiagram.Class>>List<State>;
