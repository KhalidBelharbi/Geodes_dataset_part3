ClassDiagram.Class>> Country =>=>=> RelationalSchema.Table>> country;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Possession =>=>=> RelationalSchema.Table>> possession;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Bar =>=>=> RelationalSchema.Table>> bar;
ClassDiagram.Class>> Foo =>=>=> RelationalSchema.Table>> foo;
ClassDiagram.Class>> Baz =>=>=> RelationalSchema.Table>> baz;
ClassDiagram.Class>> Bar =>=>=> RelationalSchema.Table>> bar;
ClassDiagram.Class>> Foo =>=>=> RelationalSchema.Table>> foo;
ClassDiagram.Attribut>> Country.id:Integer =>=>=> RelationalSchema.Column>> country.id PRIMARY KEY;
ClassDiagram.Attribut>> Country.name:String =>=>=> RelationalSchema.Column>> country.name;
ClassDiagram.Attribut>> Student.id:long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Student.tags:List<String> =>=>=> RelationalSchema.Column>> student.tags;
ClassDiagram.Attribut>> User.id:int =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.age:int =>=>=> RelationalSchema.Column>> user.age;
ClassDiagram.Attribut>> Possession.id:long =>=>=> RelationalSchema.Column>> possession.id PRIMARY KEY;
ClassDiagram.Attribut>> Possession.name:String =>=>=> RelationalSchema.Column>> possession.name;
ClassDiagram.Attribut>> Product.id:int =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.price:double =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> Bar.serialversionuid:long =>=>=> RelationalSchema.Column>> bar.serialversionuid;
ClassDiagram.Attribut>> Bar.id:long =>=>=> RelationalSchema.Column>> bar.id PRIMARY KEY;
ClassDiagram.Attribut>> Bar.name:String =>=>=> RelationalSchema.Column>> bar.name;
ClassDiagram.Attribut>> Foo.serialversionuid:long =>=>=> RelationalSchema.Column>> foo.serialversionuid;
ClassDiagram.Attribut>> Foo.id:long =>=>=> RelationalSchema.Column>> foo.id PRIMARY KEY;
ClassDiagram.Attribut>> Foo.name:String =>=>=> RelationalSchema.Column>> foo.name;
ClassDiagram.Attribut>> Baz.id:long =>=>=> RelationalSchema.Column>> baz.id PRIMARY KEY;
ClassDiagram.Attribut>> Baz.name:String =>=>=> RelationalSchema.Column>> baz.name;
ClassDiagram.Attribut>> Bar.id:long =>=>=> RelationalSchema.Column>> bar.id PRIMARY KEY;
ClassDiagram.Attribut>> Bar.name:String =>=>=> RelationalSchema.Column>> bar.name;
ClassDiagram.Attribut>> Foo.id:long =>=>=> RelationalSchema.Column>> foo.id PRIMARY KEY;
ClassDiagram.Attribut>> Foo.name:String =>=>=> RelationalSchema.Column>> foo.name;
ClassDiagram.Attribut>> Foo.deleted:Integer =>=>=> RelationalSchema.Column>> foo.deleted;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Possession>;
One-To-Many relationship from ClassDiagram.Class>>Bar  to ClassDiagram.Class>>List<Foo>;
Many-To-One relationship from ClassDiagram.Class>>Foo  to ClassDiagram.Class>>bar represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Bar  to ClassDiagram.Class>>List<Baz>;
Many-To-One relationship from ClassDiagram.Class>>Foo  to ClassDiagram.Class>>bar represented by ClassDiagram.Atrribute>>GeneratedName;
