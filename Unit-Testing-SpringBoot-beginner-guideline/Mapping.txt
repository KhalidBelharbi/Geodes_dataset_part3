ClassDiagram.Class>> Author =>=>=> RelationalSchema.Table>> author;
ClassDiagram.Class>> Post =>=>=> RelationalSchema.Table>> post;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> ToDo =>=>=> RelationalSchema.Table>> todo;
ClassDiagram.Class>> Comment =>=>=> RelationalSchema.Table>> comment;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Attribut>> Author.id:Long =>=>=> RelationalSchema.Column>> author.id PRIMARY KEY;
ClassDiagram.Attribut>> Post.id:Long =>=>=> RelationalSchema.Column>> post.id PRIMARY KEY;
ClassDiagram.Attribut>> Post.post:String =>=>=> RelationalSchema.Column>> post.post;
ClassDiagram.Attribut>> Role.id:Long =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> Role.createdat:Date =>=>=> RelationalSchema.Column>> role.createdat;
ClassDiagram.Attribut>> Role.updat:Date =>=>=> RelationalSchema.Column>> role.updat;
ClassDiagram.Attribut>> ToDo.title:String =>=>=> RelationalSchema.Column>> todo.title;
ClassDiagram.Attribut>> ToDo.description:String =>=>=> RelationalSchema.Column>> todo.description;
ClassDiagram.Attribut>> Comment.id:Long =>=>=> RelationalSchema.Column>> comment.id PRIMARY KEY;
ClassDiagram.Attribut>> Comment.comment:String =>=>=> RelationalSchema.Column>> comment.comment;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.active:Boolean =>=>=> RelationalSchema.Column>> user.active;
ClassDiagram.Attribut>> User.createdat:Date =>=>=> RelationalSchema.Column>> user.createdat;
ClassDiagram.Attribut>> User.updat:Date =>=>=> RelationalSchema.Column>> user.updat;
ClassDiagram.Attribut>> Book.id:Long =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.name:String =>=>=> RelationalSchema.Column>> book.name;
ClassDiagram.Attribut>> Book.createdat:Date =>=>=> RelationalSchema.Column>> book.createdat;
ClassDiagram.Attribut>> Book.updat:Date =>=>=> RelationalSchema.Column>> book.updat;
One-To-One relationship between ClassDiagram.Class>>Author  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>author;
list<book>: author_list<book>(authorID:author [PK] #FK to author,list<book>ID:list<book> [PK] #FK to list<book>);
One-To-One relationship between ClassDiagram.Class>>Post  to ClassDiagram.Class>>book represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Post  to ClassDiagram.Class>>List<Comment>;
One-To-Many relationship from ClassDiagram.Class>>Role  to ClassDiagram.Class>>List<User>;
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>Post represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Role represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Book  to ClassDiagram.Class>>Post represented by ClassDiagram.Atrribute>>GeneratedName;
