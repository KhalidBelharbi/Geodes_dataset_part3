ClassDiagram.Class>> Products =>=>=> RelationalSchema.Table>> products;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> VoterCard =>=>=> RelationalSchema.Table>> votercard;
ClassDiagram.Class>> Pencil =>=>=> RelationalSchema.Table>> pencil;
ClassDiagram.Class>> PencilBox =>=>=> RelationalSchema.Table>> pencilbox;
ClassDiagram.Attribut>> Products.pid:int =>=>=> RelationalSchema.Column>> products.pid PRIMARY KEY;
ClassDiagram.Attribut>> Products.pname:String =>=>=> RelationalSchema.Column>> products.pname;
ClassDiagram.Attribut>> Products.quantity:int =>=>=> RelationalSchema.Column>> products.quantity;
ClassDiagram.Attribut>> Course.cid:int =>=>=> RelationalSchema.Column>> course.cid PRIMARY KEY;
ClassDiagram.Attribut>> Course.cname:String =>=>=> RelationalSchema.Column>> course.cname;
ClassDiagram.Attribut>> Student.sid:int =>=>=> RelationalSchema.Column>> student.sid PRIMARY KEY;
ClassDiagram.Attribut>> Student.sname:String =>=>=> RelationalSchema.Column>> student.sname;
ClassDiagram.Attribut>> Person.pid:int =>=>=> RelationalSchema.Column>> person.pid PRIMARY KEY;
ClassDiagram.Attribut>> Person.name:String =>=>=> RelationalSchema.Column>> person.name;
ClassDiagram.Attribut>> VoterCard.vid:int =>=>=> RelationalSchema.Column>> votercard.vid PRIMARY KEY;
ClassDiagram.Attribut>> VoterCard.vname:String =>=>=> RelationalSchema.Column>> votercard.vname;
ClassDiagram.Attribut>> Pencil.pid:int =>=>=> RelationalSchema.Column>> pencil.pid PRIMARY KEY;
ClassDiagram.Attribut>> Pencil.pcolor:String =>=>=> RelationalSchema.Column>> pencil.pcolor;
ClassDiagram.Attribut>> PencilBox.bid:int =>=>=> RelationalSchema.Column>> pencilbox.bid PRIMARY KEY;
ClassDiagram.Attribut>> PencilBox.bname:String =>=>=> RelationalSchema.Column>> pencilbox.bname;
Many-To-Many relationship between ClassDiagram.Class>>Student  and ClassDiagram.Class>>Course: student_course(sid:Student [PK] #FK to Student,cid:Course [PK] #FK to Course);
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>votercard represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>VoterCard  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Pencil  to ClassDiagram.Class>>pencilbox represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>PencilBox  to ClassDiagram.Class>>List<Pencil>;
