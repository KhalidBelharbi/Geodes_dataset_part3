ClassDiagram.Class>> ArtComments =>=>=> RelationalSchema.Table>> artcomments;
ClassDiagram.Class>> Collect =>=>=> RelationalSchema.Table>> collect;
ClassDiagram.Class>> Materialcomment =>=>=> RelationalSchema.Table>> materialcomment;
ClassDiagram.Class>> Checkque =>=>=> RelationalSchema.Table>> checkque;
ClassDiagram.Class>> Materials =>=>=> RelationalSchema.Table>> materials;
ClassDiagram.Class>> PersonArticles =>=>=> RelationalSchema.Table>> personarticles;
ClassDiagram.Class>> Administer =>=>=> RelationalSchema.Table>> administer;
ClassDiagram.Class>> Tag =>=>=> RelationalSchema.Table>> tag;
ClassDiagram.Class>> Mark =>=>=> RelationalSchema.Table>> mark;
ClassDiagram.Class>> Questions =>=>=> RelationalSchema.Table>> questions;
ClassDiagram.Class>> PlaReply =>=>=> RelationalSchema.Table>> plareply;
ClassDiagram.Class>> ArtReply =>=>=> RelationalSchema.Table>> artreply;
ClassDiagram.Class>> Checkans =>=>=> RelationalSchema.Table>> checkans;
ClassDiagram.Class>> PerQueContent =>=>=> RelationalSchema.Table>> perquecontent;
ClassDiagram.Class>> Answers =>=>=> RelationalSchema.Table>> answers;
ClassDiagram.Class>> PersonQuestions =>=>=> RelationalSchema.Table>> personquestions;
ClassDiagram.Class>> Users =>=>=> RelationalSchema.Table>> users;
ClassDiagram.Class>> Platforms =>=>=> RelationalSchema.Table>> platforms;
ClassDiagram.Class>> Articles =>=>=> RelationalSchema.Table>> articles;
ClassDiagram.Attribut>> ArtComments.serialversionuid:long =>=>=> RelationalSchema.Column>> artcomments.serialversionuid;
ClassDiagram.Attribut>> ArtComments.comid:Integer =>=>=> RelationalSchema.Column>> artcomments.comid PRIMARY KEY;
ClassDiagram.Attribut>> ArtComments.content:String =>=>=> RelationalSchema.Column>> artcomments.content;
ClassDiagram.Attribut>> Collect.serialversionuid:long =>=>=> RelationalSchema.Column>> collect.serialversionuid;
ClassDiagram.Attribut>> Collect.collectid:Integer =>=>=> RelationalSchema.Column>> collect.collectid PRIMARY KEY;
ClassDiagram.Attribut>> Collect.usrid:int =>=>=> RelationalSchema.Column>> collect.usrid;
ClassDiagram.Attribut>> Collect.materialid:int =>=>=> RelationalSchema.Column>> collect.materialid;
ClassDiagram.Attribut>> Materialcomment.serialversionuid:long =>=>=> RelationalSchema.Column>> materialcomment.serialversionuid;
ClassDiagram.Attribut>> Materialcomment.materialcommentid:Integer =>=>=> RelationalSchema.Column>> materialcomment.materialcommentid PRIMARY KEY;
ClassDiagram.Attribut>> Materialcomment.materialid:int =>=>=> RelationalSchema.Column>> materialcomment.materialid;
ClassDiagram.Attribut>> Materialcomment.usrid:int =>=>=> RelationalSchema.Column>> materialcomment.usrid;
ClassDiagram.Attribut>> Materialcomment.comment:String =>=>=> RelationalSchema.Column>> materialcomment.comment;
ClassDiagram.Attribut>> Materialcomment.create:Date =>=>=> RelationalSchema.Column>> materialcomment.create;
ClassDiagram.Attribut>> Checkque.serialversionuid:long =>=>=> RelationalSchema.Column>> checkque.serialversionuid;
ClassDiagram.Attribut>> Checkque.GeneratedName:CheckquePK =>=>=> RelationalSchema.Column>> checkque.GeneratedName;
ClassDiagram.Attribut>> Materials.serialversionuid:long =>=>=> RelationalSchema.Column>> materials.serialversionuid;
ClassDiagram.Attribut>> Materials.materialid:Integer =>=>=> RelationalSchema.Column>> materials.materialid PRIMARY KEY;
ClassDiagram.Attribut>> Materials.usrid:int =>=>=> RelationalSchema.Column>> materials.usrid;
ClassDiagram.Attribut>> Materials.mname:String =>=>=> RelationalSchema.Column>> materials.mname;
ClassDiagram.Attribut>> Materials.mpath:String =>=>=> RelationalSchema.Column>> materials.mpath;
ClassDiagram.Attribut>> Materials.msize:String =>=>=> RelationalSchema.Column>> materials.msize;
ClassDiagram.Attribut>> Materials.mintroduction:String =>=>=> RelationalSchema.Column>> materials.mintroduction;
ClassDiagram.Attribut>> Materials.mtype:String =>=>=> RelationalSchema.Column>> materials.mtype;
ClassDiagram.Attribut>> Materials.msubject:String =>=>=> RelationalSchema.Column>> materials.msubject;
ClassDiagram.Attribut>> Materials.mgrade:String =>=>=> RelationalSchema.Column>> materials.mgrade;
ClassDiagram.Attribut>> Materials.mregion:String =>=>=> RelationalSchema.Column>> materials.mregion;
ClassDiagram.Attribut>> Materials.mtolvisit:int =>=>=> RelationalSchema.Column>> materials.mtolvisit;
ClassDiagram.Attribut>> Materials.mtoldownload:int =>=>=> RelationalSchema.Column>> materials.mtoldownload;
ClassDiagram.Attribut>> Materials.mweekdownload:int =>=>=> RelationalSchema.Column>> materials.mweekdownload;
ClassDiagram.Attribut>> Materials.mtolcollect:int =>=>=> RelationalSchema.Column>> materials.mtolcollect;
ClassDiagram.Attribut>> Materials.mlevelamount:int =>=>=> RelationalSchema.Column>> materials.mlevelamount;
ClassDiagram.Attribut>> Materials.mmarknumber:int =>=>=> RelationalSchema.Column>> materials.mmarknumber;
ClassDiagram.Attribut>> Materials.mtolcomment:int =>=>=> RelationalSchema.Column>> materials.mtolcomment;
ClassDiagram.Attribut>> Materials.mcreate:Date =>=>=> RelationalSchema.Column>> materials.mcreate;
ClassDiagram.Attribut>> Materials.mstatus:String =>=>=> RelationalSchema.Column>> materials.mstatus;
ClassDiagram.Attribut>> PersonArticles.serialversionuid:long =>=>=> RelationalSchema.Column>> personarticles.serialversionuid;
ClassDiagram.Attribut>> PersonArticles.GeneratedName:PersonArticlesPK =>=>=> RelationalSchema.Column>> personarticles.GeneratedName;
ClassDiagram.Attribut>> Administer.serialversionuid:long =>=>=> RelationalSchema.Column>> administer.serialversionuid;
ClassDiagram.Attribut>> Administer.admid:String =>=>=> RelationalSchema.Column>> administer.admid PRIMARY KEY;
ClassDiagram.Attribut>> Administer.password:String =>=>=> RelationalSchema.Column>> administer.password;
ClassDiagram.Attribut>> Tag.serialversionuid:long =>=>=> RelationalSchema.Column>> tag.serialversionuid;
ClassDiagram.Attribut>> Tag.tagid:Integer =>=>=> RelationalSchema.Column>> tag.tagid PRIMARY KEY;
ClassDiagram.Attribut>> Tag.tag:String =>=>=> RelationalSchema.Column>> tag.tag;
ClassDiagram.Attribut>> Mark.serialversionuid:long =>=>=> RelationalSchema.Column>> mark.serialversionuid;
ClassDiagram.Attribut>> Mark.markid:Integer =>=>=> RelationalSchema.Column>> mark.markid PRIMARY KEY;
ClassDiagram.Attribut>> Mark.usrid:int =>=>=> RelationalSchema.Column>> mark.usrid;
ClassDiagram.Attribut>> Mark.materialid:int =>=>=> RelationalSchema.Column>> mark.materialid;
ClassDiagram.Attribut>> Questions.content:String =>=>=> RelationalSchema.Column>> questions.content;
ClassDiagram.Attribut>> Questions.GeneratedName:Date =>=>=> RelationalSchema.Column>> questions.GeneratedName;
ClassDiagram.Attribut>> Questions.serialversionuid:long =>=>=> RelationalSchema.Column>> questions.serialversionuid;
ClassDiagram.Attribut>> Questions.queid:Integer =>=>=> RelationalSchema.Column>> questions.queid PRIMARY KEY;
ClassDiagram.Attribut>> Questions.usrid:int =>=>=> RelationalSchema.Column>> questions.usrid;
ClassDiagram.Attribut>> Questions.category:String =>=>=> RelationalSchema.Column>> questions.category;
ClassDiagram.Attribut>> Questions.subject:String =>=>=> RelationalSchema.Column>> questions.subject;
ClassDiagram.Attribut>> Questions.po:int =>=>=> RelationalSchema.Column>> questions.po;
ClassDiagram.Attribut>> Questions.collectnumber:int =>=>=> RelationalSchema.Column>> questions.collectnumber;
ClassDiagram.Attribut>> Questions.status:String =>=>=> RelationalSchema.Column>> questions.status;
ClassDiagram.Attribut>> PlaReply.serialversionuid:long =>=>=> RelationalSchema.Column>> plareply.serialversionuid;
ClassDiagram.Attribut>> PlaReply.plareplyid:Integer =>=>=> RelationalSchema.Column>> plareply.plareplyid PRIMARY KEY;
ClassDiagram.Attribut>> PlaReply.content:String =>=>=> RelationalSchema.Column>> plareply.content;
ClassDiagram.Attribut>> PlaReply.GeneratedName:Date =>=>=> RelationalSchema.Column>> plareply.GeneratedName;
ClassDiagram.Attribut>> ArtReply.serialversionuid:long =>=>=> RelationalSchema.Column>> artreply.serialversionuid;
ClassDiagram.Attribut>> ArtReply.replyid:Integer =>=>=> RelationalSchema.Column>> artreply.replyid PRIMARY KEY;
ClassDiagram.Attribut>> ArtReply.content:String =>=>=> RelationalSchema.Column>> artreply.content;
ClassDiagram.Attribut>> ArtReply.replytime:Date =>=>=> RelationalSchema.Column>> artreply.replytime;
ClassDiagram.Attribut>> Checkans.serialversionuid:long =>=>=> RelationalSchema.Column>> checkans.serialversionuid;
ClassDiagram.Attribut>> Checkans.GeneratedName:CheckansPK =>=>=> RelationalSchema.Column>> checkans.GeneratedName;
ClassDiagram.Attribut>> PerQueContent.pqid:int =>=>=> RelationalSchema.Column>> perquecontent.pqid;
ClassDiagram.Attribut>> PerQueContent.queid:int =>=>=> RelationalSchema.Column>> perquecontent.queid PRIMARY KEY;
ClassDiagram.Attribut>> PerQueContent.content:String =>=>=> RelationalSchema.Column>> perquecontent.content;
ClassDiagram.Attribut>> Answers.content:byte =>=>=> RelationalSchema.Column>> answers.content;
ClassDiagram.Attribut>> Answers.GeneratedName:Date =>=>=> RelationalSchema.Column>> answers.GeneratedName;
ClassDiagram.Attribut>> Answers.serialversionuid:long =>=>=> RelationalSchema.Column>> answers.serialversionuid;
ClassDiagram.Attribut>> Answers.anwid:Integer =>=>=> RelationalSchema.Column>> answers.anwid PRIMARY KEY;
ClassDiagram.Attribut>> Answers.usrid:int =>=>=> RelationalSchema.Column>> answers.usrid;
ClassDiagram.Attribut>> Answers.po:int =>=>=> RelationalSchema.Column>> answers.po;
ClassDiagram.Attribut>> PersonQuestions.serialversionuid:long =>=>=> RelationalSchema.Column>> personquestions.serialversionuid;
ClassDiagram.Attribut>> PersonQuestions.pqid:Integer =>=>=> RelationalSchema.Column>> personquestions.pqid PRIMARY KEY;
ClassDiagram.Attribut>> PersonQuestions.pqname:String =>=>=> RelationalSchema.Column>> personquestions.pqname;
ClassDiagram.Attribut>> PersonQuestions.settime:Date =>=>=> RelationalSchema.Column>> personquestions.settime;
ClassDiagram.Attribut>> PersonQuestions.rank:int =>=>=> RelationalSchema.Column>> personquestions.rank;
ClassDiagram.Attribut>> Users.birthday:Date =>=>=> RelationalSchema.Column>> users.birthday;
ClassDiagram.Attribut>> Users.serialversionuid:long =>=>=> RelationalSchema.Column>> users.serialversionuid;
ClassDiagram.Attribut>> Users.usrid:Integer =>=>=> RelationalSchema.Column>> users.usrid PRIMARY KEY;
ClassDiagram.Attribut>> Users.usrname:String =>=>=> RelationalSchema.Column>> users.usrname;
ClassDiagram.Attribut>> Users.password:String =>=>=> RelationalSchema.Column>> users.password;
ClassDiagram.Attribut>> Users.//@pattern(regexp:String =>=>=> RelationalSchema.Column>> users.//@pattern(regexp;
ClassDiagram.Attribut>> Users.nickname:String =>=>=> RelationalSchema.Column>> users.nickname;
ClassDiagram.Attribut>> Users.province:String =>=>=> RelationalSchema.Column>> users.province;
ClassDiagram.Attribut>> Users.sex:String =>=>=> RelationalSchema.Column>> users.sex;
ClassDiagram.Attribut>> Users.experience:int =>=>=> RelationalSchema.Column>> users.experience;
ClassDiagram.Attribut>> Users.portrait:String =>=>=> RelationalSchema.Column>> users.portrait;
ClassDiagram.Attribut>> Users.status:String =>=>=> RelationalSchema.Column>> users.status;
ClassDiagram.Attribut>> Platforms.serialversionuid:long =>=>=> RelationalSchema.Column>> platforms.serialversionuid;
ClassDiagram.Attribut>> Platforms.plaid:Integer =>=>=> RelationalSchema.Column>> platforms.plaid PRIMARY KEY;
ClassDiagram.Attribut>> Platforms.topic:String =>=>=> RelationalSchema.Column>> platforms.topic;
ClassDiagram.Attribut>> Platforms.content:byte =>=>=> RelationalSchema.Column>> platforms.content;
ClassDiagram.Attribut>> Platforms.set:Date =>=>=> RelationalSchema.Column>> platforms.set;
ClassDiagram.Attribut>> Platforms.last:Date =>=>=> RelationalSchema.Column>> platforms.last;
ClassDiagram.Attribut>> Platforms.favnumber:int =>=>=> RelationalSchema.Column>> platforms.favnumber;
ClassDiagram.Attribut>> Platforms.clicknumber:int =>=>=> RelationalSchema.Column>> platforms.clicknumber;
ClassDiagram.Attribut>> Platforms.commentnumber:int =>=>=> RelationalSchema.Column>> platforms.commentnumber;
ClassDiagram.Attribut>> Platforms.status:String =>=>=> RelationalSchema.Column>> platforms.status;
ClassDiagram.Attribut>> Articles.serialversionuid:long =>=>=> RelationalSchema.Column>> articles.serialversionuid;
ClassDiagram.Attribut>> Articles.artid:Integer =>=>=> RelationalSchema.Column>> articles.artid PRIMARY KEY;
ClassDiagram.Attribut>> Articles.category:String =>=>=> RelationalSchema.Column>> articles.category;
ClassDiagram.Attribut>> Articles.topic:String =>=>=> RelationalSchema.Column>> articles.topic;
ClassDiagram.Attribut>> Articles.content:String =>=>=> RelationalSchema.Column>> articles.content;
ClassDiagram.Attribut>> Articles.writetime:Date =>=>=> RelationalSchema.Column>> articles.writetime;
ClassDiagram.Attribut>> Articles.monthlyscan:int =>=>=> RelationalSchema.Column>> articles.monthlyscan;
ClassDiagram.Attribut>> Articles.totalscan:int =>=>=> RelationalSchema.Column>> articles.totalscan;
ClassDiagram.Attribut>> Articles.collectnumber:int =>=>=> RelationalSchema.Column>> articles.collectnumber;
ClassDiagram.Attribut>> Articles.status:String =>=>=> RelationalSchema.Column>> articles.status;
Many-To-One relationship from ClassDiagram.Class>>ArtComments  to ClassDiagram.Class>>users represented by ClassDiagram.Atrribute>>usr_id;
Many-To-One relationship from ClassDiagram.Class>>ArtComments  to ClassDiagram.Class>>articles represented by ClassDiagram.Atrribute>>art_id;
One-To-Many relationship from ClassDiagram.Class>>ArtComments  to ClassDiagram.Class>>Collection<ArtReply>;
Many-To-One relationship from ClassDiagram.Class>>PersonArticles  to ClassDiagram.Class>>users represented by ClassDiagram.Atrribute>>usr_id;
One-To-Many relationship from ClassDiagram.Class>>Questions  to ClassDiagram.Class>>Set<Answers>;
Many-To-Many relationship between ClassDiagram.Class>>Questions  and ClassDiagram.Class>>collection<tag>: que_tag(que_id:Questions [PK] #FK to Questions,tagid:collection<tag> [PK] #FK to collection<tag>);
Many-To-One relationship from ClassDiagram.Class>>PlaReply  to ClassDiagram.Class>>users represented by ClassDiagram.Atrribute>>usr_id;
Many-To-One relationship from ClassDiagram.Class>>PlaReply  to ClassDiagram.Class>>Platform represented by ClassDiagram.Atrribute>>pla_id;
Many-To-One relationship from ClassDiagram.Class>>ArtReply  to ClassDiagram.Class>>users represented by ClassDiagram.Atrribute>>usr_id;
Many-To-One relationship from ClassDiagram.Class>>ArtReply  to ClassDiagram.Class>>artcomments represented by ClassDiagram.Atrribute>>com_id;
Many-To-One relationship from ClassDiagram.Class>>Answers  to ClassDiagram.Class>>questions represented by ClassDiagram.Atrribute>>que_id;
Many-To-One relationship from ClassDiagram.Class>>PersonQuestions  to ClassDiagram.Class>>users represented by ClassDiagram.Atrribute>>usr_id;
One-To-Many relationship from ClassDiagram.Class>>Users  to ClassDiagram.Class>>Collection<PersonQuestions>;
One-To-Many relationship from ClassDiagram.Class>>Users  to ClassDiagram.Class>>Collection<Articles>;
One-To-Many relationship from ClassDiagram.Class>>Users  to ClassDiagram.Class>>Collection<PersonArticles>;
One-To-Many relationship from ClassDiagram.Class>>Users  to ClassDiagram.Class>>Collection<Platforms>;
One-To-Many relationship from ClassDiagram.Class>>Users  to ClassDiagram.Class>>Collection<PlaReply>;
One-To-Many relationship from ClassDiagram.Class>>Users  to ClassDiagram.Class>>Collection<ArtComments>;
One-To-Many relationship from ClassDiagram.Class>>Users  to ClassDiagram.Class>>Collection<ArtReply>;
Many-To-One relationship from ClassDiagram.Class>>Platforms  to ClassDiagram.Class>>users represented by ClassDiagram.Atrribute>>usr_id;
One-To-Many relationship from ClassDiagram.Class>>Platforms  to ClassDiagram.Class>>Collection<PlaReply>;
Many-To-One relationship from ClassDiagram.Class>>Articles  to ClassDiagram.Class>>users represented by ClassDiagram.Atrribute>>usr_id;
One-To-Many relationship from ClassDiagram.Class>>Articles  to ClassDiagram.Class>>Collection<ArtComments>;
