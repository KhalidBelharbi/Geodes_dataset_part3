<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="foreignkeymetadata" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="reftable" type="xs:string" />
        <xs:element name="references" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectionhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="suppliedconnectionproviderconnectionhelper" >
      <xs:sequence>
        <xs:element name="provider" type="connectionprovider" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="toggleautocommit" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedproviderconnectionhelper" >
      <xs:sequence>
        <xs:element name="cfg" type="xs:anyType" />
        <xs:element name="GeneratedName" type="connectionprovider" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="suppliedconnectionhelper" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="toggleautocommit" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemaexport" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="connectionhelper" nillable="true" minOccurs="0" />
        <xs:element name="dropsql" type="xs:string" />
        <xs:element name="createsql" type="xs:string" />
        <xs:element name="outputfile" type="xs:string" />
        <xs:element name="importfiles" type="xs:string" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="delimiter" type="xs:string" />
        <xs:element name="exceptions" type="list" nillable="true" minOccurs="0" />
        <xs:element name="haltonerror" type="xs:anyType" />
        <xs:element name="GeneratedName" type="formatter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlstatementlogger" nillable="true" minOccurs="0" />
        <xs:element name="default_import_file" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablemetadata" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="catalog" type="xs:string" />
        <xs:element name="schema" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="columns" type="map" nillable="true" minOccurs="0" />
        <xs:element name="foreignkeys" type="map" nillable="true" minOccurs="0" />
        <xs:element name="indexes" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnmetadata" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="typename" type="xs:string" />
        <xs:element name="columnsize" type="xs:long" />
        <xs:element name="decimaldigits" type="xs:long" />
        <xs:element name="isnullable" type="xs:string" />
        <xs:element name="typecode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemavalidator" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="connectionhelper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="configuration" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexmetadata" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="columns" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="schemavalidatortask" >
      <xs:complexContent>
       <xs:extension base="matchingtask">
         <xs:sequence>
          <xs:element name="filesets" type="list" nillable="true" minOccurs="0" />
          <xs:element name="properties" type="xs:anyType" />
          <xs:element name="configuration" type="xs:anyType" />
          <xs:element name="namingstrategy" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaexporttask" >
      <xs:complexContent>
       <xs:extension base="matchingtask">
         <xs:sequence>
          <xs:element name="filesets" type="list" nillable="true" minOccurs="0" />
          <xs:element name="properties" type="xs:anyType" />
          <xs:element name="configuration" type="xs:anyType" />
          <xs:element name="output" type="xs:anyType" />
          <xs:element name="quiet" type="xs:anyType" />
          <xs:element name="text" type="xs:anyType" />
          <xs:element name="drop" type="xs:anyType" />
          <xs:element name="create" type="xs:anyType" />
          <xs:element name="haltonerror" type="xs:anyType" />
          <xs:element name="delimiter" type="xs:string" />
          <xs:element name="namingstrategy" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdatetask" >
      <xs:complexContent>
       <xs:extension base="matchingtask">
         <xs:sequence>
          <xs:element name="filesets" type="list" nillable="true" minOccurs="0" />
          <xs:element name="properties" type="xs:anyType" />
          <xs:element name="configuration" type="xs:anyType" />
          <xs:element name="output" type="xs:anyType" />
          <xs:element name="quiet" type="xs:anyType" />
          <xs:element name="text" type="xs:anyType" />
          <xs:element name="haltonerror" type="xs:anyType" />
          <xs:element name="delimiter" type="xs:string" />
          <xs:element name="namingstrategy" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemaupdate" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="connectionhelper" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="configuration" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="exceptions" type="list" nillable="true" minOccurs="0" />
        <xs:element name="haltonerror" type="xs:anyType" />
        <xs:element name="format" type="xs:anyType" />
        <xs:element name="outputfile" type="xs:string" />
        <xs:element name="delimiter" type="xs:string" />
        <xs:element name="GeneratedName" type="formatter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlstatementlogger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="databasemetadata" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="tables" type="map" nillable="true" minOccurs="0" />
        <xs:element name="sequences" type="set" nillable="true" minOccurs="0" />
        <xs:element name="extras" type="xs:anyType" />
        <xs:element name="meta" type="databasemetadata" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlexceptionconverter" nillable="true" minOccurs="0" />
        <xs:element name="types" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicinstrumentationtask" >
      <xs:complexContent>
       <xs:extension base="task">
         <xs:sequence>
          <xs:element name="logger" type="xs:anyType" />
          <xs:element name="filesets" type="list" nillable="true" minOccurs="0" />
          <xs:element name="extended" type="xs:anyType" />
          <xs:element name="//deprecatedoption...verbose" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instrumenttask" >
      <xs:complexContent>
       <xs:extension base="basicinstrumentationtask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instrumenttask" >
      <xs:complexContent>
       <xs:extension base="basicinstrumentationtask">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="callbackexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactory" >
      <xs:complexContent>
       <xs:extension base="referenceable,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transientobjectexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertysubqueryexpression" >
      <xs:complexContent>
       <xs:extension base="subqueryexpression">
         <xs:sequence>
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notnullexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="no_values" type="typedvalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiereqexpression" >
      <xs:sequence>
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detachedcriteria" >
      <xs:sequence>
        <xs:element name="impl" type="criteriaimpl" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="criteria" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="criterion" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="values" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criterion" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="likeexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="escapechar" type="xs:anyType" />
        <xs:element name="ignorecase" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="otherpropertyname" type="xs:string" />
        <xs:element name="op" type="xs:string" />
        <xs:element name="no_typed_values" type="typedvalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projections" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregateprojection" >
      <xs:complexContent>
       <xs:extension base="simpleprojection">
         <xs:sequence>
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="functionname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="ignorecase" type="xs:anyType" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="example" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="excludedproperties" type="set" nillable="true" minOccurs="0" />
          <xs:element name="selector" type="xs:anyType" />
          <xs:element name="islikeenabled" type="xs:anyType" />
          <xs:element name="escape" type="xs:anyType" />
          <xs:element name="isignorecaseenabled" type="xs:anyType" />
          <xs:element name="" type="matchmode" nillable="true" minOccurs="0" />
          <xs:element name="not_null" type="xs:anyType" />
          <xs:element name="all" type="xs:anyType" />
          <xs:element name="not_null_or_zero" type="xs:anyType" />
          <xs:element name="typed_values" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subqueryexpression" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="criteriaimpl" nillable="true" minOccurs="0" />
        <xs:element name="quantifier" type="xs:string" />
        <xs:element name="op" type="xs:string" />
        <xs:element name="params" type="queryparameters" nillable="true" minOccurs="0" />
        <xs:element name="s" type="type" nillable="true" minOccurs="0" />
        <xs:element name="innerquery" type="criteriaquerytranslator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalidentifier" >
      <xs:sequence>
        <xs:element name="con" type="junction" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emptyexpression" >
      <xs:complexContent>
       <xs:extension base="abstractemptinessexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="avgprojection" >
      <xs:complexContent>
       <xs:extension base="aggregateprojection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="restrictions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="logicalexpression" >
      <xs:sequence>
        <xs:element name="lhs" type="criterion" nillable="true" minOccurs="0" />
        <xs:element name="rhs" type="criterion" nillable="true" minOccurs="0" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="existssubqueryexpression" >
      <xs:complexContent>
       <xs:extension base="subqueryexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlcriterion" >
      <xs:sequence>
        <xs:element name="sql" type="xs:string" />
        <xs:element name="s" type="typedvalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projection" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ilikeexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="junction" >
      <xs:sequence>
        <xs:element name="criteria" type="list" nillable="true" minOccurs="0" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="no_values" type="typedvalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conjunction" >
      <xs:complexContent>
       <xs:extension base="junction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aliasedprojection" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="projection" nillable="true" minOccurs="0" />
        <xs:element name="alias" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="distinct" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="projection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="property" >
      <xs:complexContent>
       <xs:extension base="propertyprojection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="disjunction" >
      <xs:complexContent>
       <xs:extension base="junction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="ascending" type="xs:anyType" />
        <xs:element name="ignorecase" type="xs:anyType" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="betweenexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="lo" type="xs:anyType" />
        <xs:element name="hi" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="projectionlist" >
      <xs:sequence>
        <xs:element name="elements" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyprojection" >
      <xs:complexContent>
       <xs:extension base="simpleprojection">
         <xs:sequence>
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="grouped" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplesubqueryexpression" >
      <xs:complexContent>
       <xs:extension base="subqueryexpression">
         <xs:sequence>
          <xs:element name="value" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="countprojection" >
      <xs:complexContent>
       <xs:extension base="aggregateprojection">
         <xs:sequence>
          <xs:element name="distinct" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlprojection" >
      <xs:sequence>
        <xs:element name="sql" type="xs:string" />
        <xs:element name="groupby" type="xs:string" />
        <xs:element name="s" type="type" nillable="true" minOccurs="0" />
        <xs:element name="aliases" type="xs:string" />
        <xs:element name="columnaliases" type="xs:string" />
        <xs:element name="grouped" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rowcountprojection" >
      <xs:complexContent>
       <xs:extension base="simpleprojection">
         <xs:sequence>
          <xs:element name="args" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notemptyexpression" >
      <xs:complexContent>
       <xs:extension base="abstractemptinessexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enhancedprojection" >
      <xs:complexContent>
       <xs:extension base="projection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expression" >
      <xs:complexContent>
       <xs:extension base="restrictions">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="matchmode" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="instances" type="map" nillable="true" minOccurs="0" />
        <xs:element name="/***matchtheentirestringtothepattern*/exact" type="matchmode" nillable="true" minOccurs="0" />
        <xs:element name="/***matchthestartofthestringtothepattern*/start" type="matchmode" nillable="true" minOccurs="0" />
        <xs:element name="/***matchtheendofthestringtothepattern*/end" type="matchmode" nillable="true" minOccurs="0" />
        <xs:element name="/***matchthepatternanywhereinthestring*/anywhere" type="matchmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifierprojection" >
      <xs:complexContent>
       <xs:extension base="simpleprojection">
         <xs:sequence>
          <xs:element name="grouped" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleprojection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subqueries" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sizeexpression" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractemptinessexpression" >
      <xs:sequence>
        <xs:element name="no_values" type="typedvalue" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaspecification" >
      <xs:sequence>
        <xs:element name="/***thealiasthatreferstothe"root"entityofthecriteriaquery.*/root_alias" type="xs:string" />
        <xs:element name="fromaliastoentityinstance*/alias_to_entity_map" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="/***eachrowofresultsisaninstanceoftherootentity*/root_entity" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="/***eachrowofresultsisadistinctinstanceoftherootentity*/distinct_root_entity" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="*/projection" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="/***specifiesjoiningtoanentitybasedonaninnerjoin.*/inner_join" type="xs:long" />
        <xs:element name="/***specifiesjoiningtoanentitybasedonafulljoin.*/full_join" type="xs:long" />
        <xs:element name="/***specifiesjoiningtoanentitybasedonaleftouterjoin.*/left_join" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaquery" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classmetadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionmetadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assertionfailure" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="message" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="validatable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lifecycle" >
      <xs:sequence>
        <xs:element name="/***returnvaluetovetotheaction(true)*/veto" type="xs:anyType" />
        <xs:element name="/***returnvaluetoaccepttheaction(false)*/no_veto" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="validationfailure" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="session" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.session">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentobjectexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="emptyinterceptor" >
      <xs:sequence>
        <xs:element name="instance" type="interceptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componenttype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="typescope" type="xs:anyType" />
          <xs:element name="propertynames" type="xs:string" />
          <xs:element name="propertys" type="type" nillable="true" minOccurs="0" />
          <xs:element name="propertynullability" type="xs:anyType" />
          <xs:element name="propertyspan" type="xs:long" />
          <xs:element name="cascade" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="joinedfetch" type="fetchmode" nillable="true" minOccurs="0" />
          <xs:element name="iskey" type="xs:anyType" />
          <xs:element name="tuplizermapping" type="entitymodetotuplizermapping" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlongbinarytype" >
      <xs:complexContent>
       <xs:extension base="abstractbynarytype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortedsettype" >
      <xs:complexContent>
       <xs:extension base="settype">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcomponenttype" >
      <xs:complexContent>
       <xs:extension base="compositetype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="shorttype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="shorttype" nillable="true" minOccurs="0" />
          <xs:element name="zero" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versiontype" >
      <xs:complexContent>
       <xs:extension base="type">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlrepresentabletype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializabletype" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
          <xs:element name="instance" type="xs:anyType" />
          <xs:element name="serializableclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customtype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="" type="usertype" nillable="true" minOccurs="0" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="types" type="xs:long" />
          <xs:element name="customlogging" type="xs:anyType" />
          <xs:element name="registrationkeys" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="truefalsetype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="truefalsetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="maptype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrapperoptions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbctypenamemapper" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="jdbc_type_map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valuebinder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="binarystream" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="characterstream" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tinyinttypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="tinyinttypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="realtypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="realtypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="floattypedescriptor" >
      <xs:complexContent>
       <xs:extension base="realtypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="floattypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestamptypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="timestamptypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicbinder" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="bind_msg_template" type="xs:string" />
        <xs:element name="null_bind_msg_template" type="xs:string" />
        <xs:element name="javadescriptor" type="xs:anyType" />
        <xs:element name="sqldescriptor" type="sqltypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chartypedescriptor" >
      <xs:complexContent>
       <xs:extension base="varchartypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="chartypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicextractor" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="javadescriptor" type="xs:anyType" />
        <xs:element name="sqldescriptor" type="sqltypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clobtypedescriptor" >
      <xs:sequence>
        <xs:element name="default" type="clobtypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="clob_binding" type="clobtypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="stream_binding" type="clobtypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datetypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="datetypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="biginttypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="biginttypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longvarchartypedescriptor" >
      <xs:complexContent>
       <xs:extension base="varchartypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="longvarchartypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integertypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="integertypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="varbinarytypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="varbinarytypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blobtypedescriptor" >
      <xs:sequence>
        <xs:element name="default" type="blobtypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="primitive_array_binding" type="blobtypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="blob_binding" type="blobtypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="stream_binding" type="blobtypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longvarbinarytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="varbinarytypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="longvarbinarytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqltypedescriptor" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="decimaltypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="decimaltypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bittypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="bittypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="smallinttypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="smallinttypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="binarytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="varbinarytypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="binarytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="varchartypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="varchartypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doubletypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="doubletypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="numerictypedescriptor" >
      <xs:complexContent>
       <xs:extension base="decimaltypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="numerictypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timetypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="timetypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valueextractor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbctimetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<date>">
         <xs:sequence>
          <xs:element name="instance" type="jdbctimetypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="time_format" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbctimestamptypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<date>">
         <xs:sequence>
          <xs:element name="instance" type="jdbctimestamptypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="timestamp_format" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraymutabilityplan" >
      <xs:complexContent>
       <xs:extension base="mutablemutabilityplan<t>">
         <xs:sequence>
          <xs:element name="instance" type="arraymutabilityplan" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidtypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<uuid>">
         <xs:sequence>
          <xs:element name="instance" type="uuidtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longtypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<long>">
         <xs:sequence>
          <xs:element name="instance" type="longtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="calendartypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<calendar>">
         <xs:sequence>
          <xs:element name="instance" type="calendartypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="characterstreamimpl" >
      <xs:sequence>
        <xs:element name="reader" type="xs:anyType" />
        <xs:element name="length" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shorttypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<short>">
         <xs:sequence>
          <xs:element name="instance" type="shorttypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="booleantypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<boolean>">
         <xs:sequence>
          <xs:element name="instance" type="booleantypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="actervaluetrue" type="xs:anyType" />
          <xs:element name="actervaluefalse" type="xs:anyType" />
          <xs:element name="actervaluetruelc" type="xs:anyType" />
          <xs:element name="valuetrue" type="xs:string" />
          <xs:element name="valuefalse" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classtypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<class>">
         <xs:sequence>
          <xs:element name="instance" type="classtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="characterarraytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<character[]>">
         <xs:sequence>
          <xs:element name="instance" type="characterarraytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttypedescriptor" >
      <xs:sequence>
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="mutabilityplan" type="xs:anyType" />
        <xs:element name="comparator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutabilityplan" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivecharacterarraytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<char[]>">
         <xs:sequence>
          <xs:element name="instance" type="primitivecharacterarraytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<byte>">
         <xs:sequence>
          <xs:element name="instance" type="bytetypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="javatypedescriptor" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigintegertypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<biginteger>">
         <xs:sequence>
          <xs:element name="instance" type="bigintegertypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="floattypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<float>">
         <xs:sequence>
          <xs:element name="instance" type="floattypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutablemutabilityplan" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutablemutabilityplan" >
      <xs:sequence>
        <xs:element name="instance" type="immutablemutabilityplan" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="charactertypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<character>">
         <xs:sequence>
          <xs:element name="instance" type="charactertypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivebytearraytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="primitivebytearraytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<date>">
         <xs:sequence>
          <xs:element name="instance" type="datetypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="date_format" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<locale>">
         <xs:sequence>
          <xs:element name="instance" type="localetypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytearraytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="bytearraytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcdatetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<date>">
         <xs:sequence>
          <xs:element name="instance" type="jdbcdatetypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="date_format" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="calendardatetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<calendar>">
         <xs:sequence>
          <xs:element name="instance" type="calendardatetypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigdecimaltypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<bigdecimal>">
         <xs:sequence>
          <xs:element name="instance" type="bigdecimaltypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blobtypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<blob>">
         <xs:sequence>
          <xs:element name="instance" type="blobtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="currencytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<currency>">
         <xs:sequence>
          <xs:element name="instance" type="currencytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringtypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<string>">
         <xs:sequence>
          <xs:element name="instance" type="stringtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integertypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<integer>">
         <xs:sequence>
          <xs:element name="instance" type="integertypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="urltypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<url>">
         <xs:sequence>
          <xs:element name="instance" type="urltypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timezonetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<timezone>">
         <xs:sequence>
          <xs:element name="instance" type="timezonetypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubletypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<double>">
         <xs:sequence>
          <xs:element name="instance" type="doubletypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clobtypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<clob>">
         <xs:sequence>
          <xs:element name="instance" type="clobtypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="incomparablecomparator" >
      <xs:sequence>
        <xs:element name="instance" type="incomparablecomparator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datahelper" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="nclob" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializabletypedescriptor" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binarystreamimpl" >
      <xs:complexContent>
       <xs:extension base="bytearrayinputstream">
         <xs:sequence>
          <xs:element name="length" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrapperbinarytype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="wrapperbinarytype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typefactory" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="typescope" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositetype" >
      <xs:complexContent>
       <xs:extension base="type">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivetype" >
      <xs:complexContent>
       <xs:extension base="literaltype<t>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiertype" >
      <xs:complexContent>
       <xs:extension base="type">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedcomponenttype" >
      <xs:complexContent>
       <xs:extension base="componenttype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonetype" >
      <xs:complexContent>
       <xs:extension base="entitytype">
         <xs:sequence>
          <xs:element name="ignorenotfound" type="xs:anyType" />
          <xs:element name="islogicalonetoone" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integertype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<integer>">
         <xs:sequence>
          <xs:element name="instance" type="integertype" nillable="true" minOccurs="0" />
          <xs:element name="zero" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlobtype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="anytype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="identifier" type="type" nillable="true" minOccurs="0" />
          <xs:element name="meta" type="type" nillable="true" minOccurs="0" />
          <xs:element name="property_names" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsinglecolumnstandardbasictype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="no_options" type="wrapperoptions" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="floattype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<float>">
         <xs:sequence>
          <xs:element name="instance" type="floattype" nillable="true" minOccurs="0" />
          <xs:element name="zero" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardbasictypes" >
      <xs:sequence>
        <xs:element name="/***thestandardhibernatetypeformapping{@linkboolean}tojdbc{@linkjava.sql.types#bitbit}.**@see*/boolean" type="booleantype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkboolean}tojdbc{@linkjava.sql.types#integerinteger}.**@see*/numeric_boolean" type="numericbooleantype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkboolean}tojdbc{@linkjava.sql.types#charchar(1)}(using't'/'f').**@see*/true_false" type="truefalsetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkboolean}tojdbc{@linkjava.sql.types#charchar(1)}(using'y'/'n').**@see*/yes_no" type="yesnotype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkbyte}tojdbc{@linkjava.sql.types#tinyinttinyint}.*/byte" type="bytetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkshort}tojdbc{@linkjava.sql.types#smallintsmallint}.**@see*/short" type="shorttype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkinteger}tojdbc{@linkjava.sql.types#integerinteger}.**@see*/integer" type="integertype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linklong}tojdbc{@linkjava.sql.types#bigintbigint}.**@see*/long" type="longtype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkfloat}tojdbc{@linkjava.sql.types#floatfloat}.**@see*/float" type="floattype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkdouble}tojdbc{@linkjava.sql.types#doubledouble}.**@see*/double" type="doubletype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.math.biginteger}tojdbc{@linkjava.sql.types#numericnumeric}.**@see*/big_integer" type="bigintegertype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.math.bigdecimal}tojdbc{@linkjava.sql.types#numericnumeric}.**@see*/big_decimal" type="bigdecimaltype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkcharacter}tojdbc{@linkjava.sql.types#charchar(1)}.**@see*/character" type="charactertype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkstring}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/string" type="stringtype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.net.url}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/url" type="urltype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.date}({@linkjava.sql.time})tojdbc*{@linkjava.sql.types#timetime}.**@see*/time" type="timetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.date}({@linkjava.sql.date})tojdbc*{@linkjava.sql.types#datedate}.**@seetimetype*/date" type="datetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.date}({@linkjava.sql.timestamp})tojdbc*{@linkjava.sql.types#timestamptimestamp}.**@seetimetype*/timestamp" type="timestamptype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.calendar}tojdbc*{@linkjava.sql.types#timestamptimestamp}.**@see*/calendar" type="calendartype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.calendar}tojdbc*{@linkjava.sql.types#datedate}.**@see*/calendar_date" type="calendardatetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkclass}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/class" type="classtype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.locale}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/locale" type="localetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.currency}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/currency" type="currencytype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.timezone}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/timezone" type="timezonetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.uuid}tojdbc{@linkjava.sql.types#binarybinary}.**@see*/uuid_binary" type="uuidbinarytype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.util.uuid}tojdbc{@linkjava.sql.types#charchar}.**@see*/uuid_char" type="uuidchartype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc{@linkjava.sql.types#varbinaryvarbinary}.**@see*/binary" type="binarytype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc{@linkjava.sql.types#varbinaryvarbinary}.**@see*/wrapper_binary" type="wrapperbinarytype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc{@linkjava.sql.types#longvarbinarylongvarbinary}.**@see*@see#materialized_blob*/image" type="imagetype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.sql.blob}tojdbc{@linkjava.sql.types#blobblob}.**@see*@see#materialized_blob*/blob" type="blobtype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc{@linkjava.sql.types#blobblob}.**@see*@see#materialized_blob*@see#image*/materialized_blob" type="materializedblobtype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc{@linkjava.sql.types#blobblob}*@see*/wrapper_materialized_blob" type="wrappedmaterializedblobtype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc{@linkjava.sql.types#varcharvarchar}.**@see*/char_array" type="chararraytype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc*{@linkjava.sql.types#varcharvarchar}.**@see*/character_array" type="characterarraytype" nillable="true" minOccurs="0" />
        <xs:element name="*similartoa{@link#materialized_clob}**@see*/text" type="texttype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkjava.sql.clob}tojdbc{@linkjava.sql.types#clobclob}.**@see*@see#materialized_clob*/clob" type="clobtype" nillable="true" minOccurs="0" />
        <xs:element name="/***thestandardhibernatetypeformapping{@linkstring}tojdbc{@linkjava.sql.types#clobclob}.**@see*@see#materialized_clob*@see#text*/materialized_clob" type="materializedclobtype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc{@linkjava.sql.types#clobclob}.*@see*/wrapper_characters_clob" type="characterarrayclobtype" nillable="true" minOccurs="0" />
        <xs:element name="}tojdbc{@linkjava.sql.types#clobclob}.*@see*/characters_clob" type="primitivecharacterarrayclobtype" nillable="true" minOccurs="0" />
        <xs:element name="*seeespeciallythediscussionwrt{@linkclassloader}determinationon{@link}**@see*/serializable" type="serializabletype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="charbooleantype" >
      <xs:complexContent>
       <xs:extension base="booleantype">
         <xs:sequence>
          <xs:element name="valuetrue" type="xs:string" />
          <xs:element name="valuefalse" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringclobtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderedsettype" >
      <xs:complexContent>
       <xs:extension base="settype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifierbagtype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidbinarytype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<uuid>">
         <xs:sequence>
          <xs:element name="instance" type="uuidbinarytype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectiontype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="not_null_collection" type="xs:anyType" />
          <xs:element name="unfetched_collection" type="xs:anyType" />
          <xs:element name="typescope" type="xs:anyType" />
          <xs:element name="role" type="xs:string" />
          <xs:element name="foreignkeypropertyname" type="xs:string" />
          <xs:element name="isembeddedinxml" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderedmaptype" >
      <xs:complexContent>
       <xs:extension base="maptype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivecharacterarrayclobtype" >
      <xs:complexContent>
       <xs:extension base="lobtype<char[]>">
         <xs:sequence>
          <xs:element name="instance" type="primitivecharacterarrayclobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clobtype" >
      <xs:complexContent>
       <xs:extension base="lobtype<clob>">
         <xs:sequence>
          <xs:element name="instance" type="clobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="yesnotype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="yesnotype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigintegertype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="bigintegertype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="immutabletype" >
      <xs:complexContent>
       <xs:extension base="nullabletype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wrappedmaterializedblobtype" >
      <xs:complexContent>
       <xs:extension base="lobtype<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="wrappedmaterializedblobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidchartype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<uuid>">
         <xs:sequence>
          <xs:element name="instance" type="uuidchartype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="characterarraytype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<character[]>">
         <xs:sequence>
          <xs:element name="instance" type="characterarraytype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longtype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="longtype" nillable="true" minOccurs="0" />
          <xs:element name="zero" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestamptype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="timestamptype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="urltype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<url>">
         <xs:sequence>
          <xs:element name="instance" type="urltype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="settype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timetype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="timetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractstandardbasictype" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="sqltypedescriptor" nillable="true" minOccurs="0" />
        <xs:element name="javatypedescriptor" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<t>">
         <xs:sequence>
          <xs:element name="" type="alternativelobtypes" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="calendardatetype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<calendar>">
         <xs:sequence>
          <xs:element name="instance" type="calendardatetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="materializedclobtype" >
      <xs:complexContent>
       <xs:extension base="lobtype<string>">
         <xs:sequence>
          <xs:element name="instance" type="materializedclobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binarytype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="binarytype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortedmaptype" >
      <xs:complexContent>
       <xs:extension base="maptype">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkeydirection" >
      <xs:sequence>
        <xs:element name="/***aforeignkeyfromchildtoparent*/foreign_key_to_parent" type="foreignkeydirection" nillable="true" minOccurs="0" />
        <xs:element name="/***aforeignkeyfromparenttochild*/foreign_key_from_parent" type="foreignkeydirection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="charactertype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="charactertype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonetype" >
      <xs:complexContent>
       <xs:extension base="entitytype">
         <xs:sequence>
          <xs:element name="foreignkeytype" type="foreignkeydirection" nillable="true" minOccurs="0" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chararraytype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<char[]>">
         <xs:sequence>
          <xs:element name="instance" type="chararraytype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basictyperegistry" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="registry" type="xs:anyType" />
        <xs:element name="locked" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractchararraytype" >
      <xs:complexContent>
       <xs:extension base="mutabletype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullabletype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="*originallywascachedsuchbecauseofperformanceoflookinguptheloggereachtime*inordertocheckthetrace-enablement.drivingthisviaacentrallog-specificclass*wouldalleviatethatperformancehit,andyetstillallowmore"normal"loggingusage/config.*/is_value_tracing_enabled" type="xs:anyType" />
          <xs:element name="transientlog" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="adaptedimmutabletype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<t>">
         <xs:sequence>
          <xs:element name="basemutabletype" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytearrayblobtype" >
      <xs:complexContent>
       <xs:extension base="abstractlobtype">
         <xs:sequence>
          <xs:element name="types" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blobtype" >
      <xs:complexContent>
       <xs:extension base="lobtype<blob>">
         <xs:sequence>
          <xs:element name="instance" type="blobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraytype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
          <xs:element name="element" type="xs:anyType" />
          <xs:element name="array" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresuuidtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<uuid>">
         <xs:sequence>
          <xs:element name="instance" type="postgresuuidtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customcollectiontype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
          <xs:element name="usertype" type="usercollectiontype" nillable="true" minOccurs="0" />
          <xs:element name="customlogging" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primitivebytearrayblobtype" >
      <xs:complexContent>
       <xs:extension base="bytearrayblobtype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositecustomtype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="usertype" type="compositeusertype" nillable="true" minOccurs="0" />
          <xs:element name="registrationkeys" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="customlogging" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dbtimestamptype" >
      <xs:complexContent>
       <xs:extension base="timestamptype">
         <xs:sequence>
          <xs:element name="instance" type="dbtimestamptype" nillable="true" minOccurs="0" />
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="booleantype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="booleantype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="materializedblobtype" >
      <xs:complexContent>
       <xs:extension base="lobtype<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="materializedblobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="type" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="currencytype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="currencytype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="specialonetoonetype" >
      <xs:complexContent>
       <xs:extension base="onetoonetype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="doubletype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<double>">
         <xs:sequence>
          <xs:element name="instance" type="doubletype" nillable="true" minOccurs="0" />
          <xs:element name="zero" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlongstringtype" >
      <xs:complexContent>
       <xs:extension base="immutabletype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="literaltype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="characterarrayclobtype" >
      <xs:complexContent>
       <xs:extension base="lobtype<character[]>">
         <xs:sequence>
          <xs:element name="instance" type="characterarrayclobtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objecttype" >
      <xs:complexContent>
       <xs:extension base="anytype">
         <xs:sequence>
          <xs:element name="instance" type="objecttype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumtype" >
      <xs:complexContent>
       <xs:extension base="enum>">
         <xs:sequence>
          <xs:element name="*originallywascachedsuchbecauseofperformanceoflookinguptheloggereachtime*inordertocheckthetrace-enablement.drivingthisviaacentrallog-specificclass*wouldalleviatethatperformancehit,andyetstillallowmore"normal"loggingusage/config.*/is_value_tracing_enabled" type="xs:anyType" />
          <xs:element name="transientlog" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="enum" type="xs:string" />
          <xs:element name="schema" type="xs:string" />
          <xs:element name="catalog" type="xs:string" />
          <xs:element name="table" type="xs:string" />
          <xs:element name="column" type="xs:string" />
          <xs:element name="type" type="xs:string" />
          <xs:element name="enumclass" type="xs:anyType" />
          <xs:element name="enumvalues" type="xs:anyType" />
          <xs:element name="//beforeanyguessingsqltype" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datetype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="datetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singlecolumntype" >
      <xs:complexContent>
       <xs:extension base="type">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classtype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<class>">
         <xs:sequence>
          <xs:element name="instance" type="classtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="calendartype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="calendartype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringtype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="stringtype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basictype" >
      <xs:complexContent>
       <xs:extension base="type">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbynarytype" >
      <xs:complexContent>
       <xs:extension base="mutabletype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigdecimaltype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<bigdecimal>">
         <xs:sequence>
          <xs:element name="instance" type="bigdecimaltype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alternativelobtypes" >
      <xs:complexContent>
       <xs:extension base="lobtype<s>>">
         <xs:sequence>
          <xs:element name="defaulype" type="xs:anyType" />
          <xs:element name="sreambindingype" type="xs:anyType" />
          <xs:element name="lobbindingype" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringrepresentabletype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitytype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="scope" type="xs:anyType" />
          <xs:element name="associatedentityname" type="xs:string" />
          <xs:element name="uniquekeypropertyname" type="xs:string" />
          <xs:element name="isembeddedinxml" type="xs:anyType" />
          <xs:element name="eager" type="xs:anyType" />
          <xs:element name="unwrapproxy" type="xs:anyType" />
          <xs:element name="transientreturned" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bagtype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="texttype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<string>">
         <xs:sequence>
          <xs:element name="instance" type="texttype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytetype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="bytetype" nillable="true" minOccurs="0" />
          <xs:element name="zero" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="associationtype" >
      <xs:complexContent>
       <xs:extension base="type">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listtype" >
      <xs:complexContent>
       <xs:extension base="collectiontype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="numericbooleantype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="numericbooleantype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discriminatortype" >
      <xs:complexContent>
       <xs:extension base="identifiertype<t>,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typeresolver" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="basictyperegistry" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="typefactory" nillable="true" minOccurs="0" />
        <xs:element name="//needtokeeptrackofthe"global"typeoverridesincasetherearedialect-specificoverrides.//dialect-specifictypesmustbeappliedbefore"global"overridesareapplied.//unfortunately,dialect-specifictypesarenotknownuntilthistyperesolverisscoped...typeoverrides" type="basictype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="//ifthistyperesolverisscopedtoasessionfactoryimplementorwith//dialect-specifictypeoverrides,scopedtyperegistrywillbeinitialized,//dialect-specifictypeoverrideswillbeapplied,followedby"global"//typeoverrides.scopedtyperegistry" type="basictyperegistry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="imagetype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="imagetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mutabletype" >
      <xs:complexContent>
       <xs:extension base="nullabletype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localetype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<locale>">
         <xs:sequence>
          <xs:element name="instance" type="localetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializabletoblobtype" >
      <xs:complexContent>
       <xs:extension base="abstractlobtype">
         <xs:sequence>
          <xs:element name="/***classnameoftheserialisableclass*/class_name" type="xs:string" />
          <xs:element name="serializable" type="xs:anyType" />
          <xs:element name="type" type="serializabletype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metatype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="registration_keys" type="xs:string" />
          <xs:element name="values" type="map" nillable="true" minOccurs="0" />
          <xs:element name="keys" type="map" nillable="true" minOccurs="0" />
          <xs:element name="base" type="type" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timezonetype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="timezonetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stalestateexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jaccpreupdateeventlistener" >
      <xs:sequence>
        <xs:element name="contextid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatepermission" >
      <xs:complexContent>
       <xs:extension base="permission">
         <xs:sequence>
          <xs:element name="insert" type="xs:string" />
          <xs:element name="update" type="xs:string" />
          <xs:element name="delete" type="xs:string" />
          <xs:element name="read" type="xs:string" />
          <xs:element name="any" type="xs:string" />
          <xs:element name="actions" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jaccpreloadeventlistener" >
      <xs:sequence>
        <xs:element name="contextid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jaccpredeleteeventlistener" >
      <xs:sequence>
        <xs:element name="contextid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jaccsecuritylistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jaccpreinserteventlistener" >
      <xs:sequence>
        <xs:element name="contextid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jaccconfiguration" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jaccpermissions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldinterceptionhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="javassisthelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldinterceptorimpl" >
      <xs:complexContent>
       <xs:extension base="abstractfieldinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldinterceptorimpl" >
      <xs:complexContent>
       <xs:extension base="abstractfieldinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cglibhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazypropertyinitializer" >
      <xs:sequence>
        <xs:element name="/***markervalueforuninitializedproperties*/unfetched_property" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractfieldinterceptor" >
      <xs:sequence>
        <xs:element name="transientsession" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="uninitializedfields" type="set" nillable="true" minOccurs="0" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="transientinitializing" type="xs:anyType" />
        <xs:element name="dirty" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldinterceptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectdeletedexception" >
      <xs:complexContent>
       <xs:extension base="unresolvableobjectexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchmode" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="instances" type="map" nillable="true" minOccurs="0" />
        <xs:element name="/***defaulttothesettingconfiguredinthemappingfile.*/default" type="fetchmode" nillable="true" minOccurs="0" />
        <xs:element name="fetch" type="fetchmode" nillable="true" minOccurs="0" />
        <xs:element name="fetch" type="fetchmode" nillable="true" minOccurs="0" />
        <xs:element name="outer-join" type="fetchmode" nillable="true" minOccurs="0" />
        <xs:element name="outer-join" type="fetchmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentidentifierbag" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="//elementvalues" type="list" nillable="true" minOccurs="0" />
          <xs:element name="ididentifiers" type="map" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentlistelementholder" >
      <xs:complexContent>
       <xs:extension base="persistentindexedelementholder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentsortedmap" >
      <xs:complexContent>
       <xs:extension base="persistentmap">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentcollection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentset" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="" type="set" nillable="true" minOccurs="0" />
          <xs:element name="transienttemp" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentbag" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="bag" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentlist" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentsortedset" >
      <xs:complexContent>
       <xs:extension base="persistentset">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentmap" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="" type="map" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentelementholder" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentindexedelementholder" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentarrayholder" >
      <xs:complexContent>
       <xs:extension base="abstractpersistentcollection">
         <xs:sequence>
          <xs:element name="array" type="xs:anyType" />
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="//justtohelpoutduringtheload(ugly,iknow)transientelement" type="xs:anyType" />
          <xs:element name="transienttemplist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentmapelementholder" >
      <xs:complexContent>
       <xs:extension base="persistentindexedelementholder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpersistentcollection" >
      <xs:sequence>
        <xs:element name="transientsession" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="initialized" type="xs:anyType" />
        <xs:element name="transientoperationqueue" type="list" nillable="true" minOccurs="0" />
        <xs:element name="transientdirectlyaccessible" type="xs:anyType" />
        <xs:element name="transientinitializing" type="xs:anyType" />
        <xs:element name="owner" type="xs:anyType" />
        <xs:element name="cachedsize" type="xs:long" />
        <xs:element name="role" type="xs:string" />
        <xs:element name="key" type="xs:anyType" />
        <xs:element name="//collectionsdetectchangesmadeviatheirpublicinterfaceandmark//themselvesasdirtyasaperformanceoptimizationdirty" type="xs:anyType" />
        <xs:element name="storedsnapshot" type="xs:anyType" />
        <xs:element name="unknown" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filtertranslator" >
      <xs:complexContent>
       <xs:extension base="querytranslator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querytranslator" >
      <xs:sequence>
        <xs:element name="//errormessageconstants.error_cannot_fetch_with_iterate" type="xs:string" />
        <xs:element name="error_named_parameter_does_not_appear" type="xs:string" />
        <xs:element name="error_cannot_determine_type" type="xs:string" />
        <xs:element name="error_cannot_format_literal" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="holderinstantiator" >
      <xs:sequence>
        <xs:element name="noop_instantiator" type="holderinstantiator" nillable="true" minOccurs="0" />
        <xs:element name="transformer" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="queryreturnaliases" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionsubqueryfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytranslatorfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionproperties" >
      <xs:sequence>
        <xs:element name="hql_collection_properties" type="map" nillable="true" minOccurs="0" />
        <xs:element name="collection_index_lower" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryexecutionrequestexception" >
      <xs:complexContent>
       <xs:extension base="queryexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlgenerator" >
      <xs:complexContent>
       <xs:extension base="sqlgeneratorbase">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="trace" type="xs:anyType" />
          <xs:element name="regression_style_cross_joins" type="xs:anyType" />
          <xs:element name="/***allappendinvocationsonthebufshouldgothroughthisoutputinstancevariable.*thevalueofthisvariablemaybetemporarilysubstitutedbysqlfunctionprocessingcode*tocatchgeneratedarguments.*thisisbecausesqlfunctiontemplatesneedargumentsasseparatestringchunks*thatwillbeassembledintothetargetdialect-specificfunctioncall.*/writer" type="xs:anyType" />
          <xs:element name="" type="parseerrorhandler" nillable="true" minOccurs="0" />
          <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="outputstack" type="xs:anyType" />
          <xs:element name="printer" type="astprinter" nillable="true" minOccurs="0" />
          <xs:element name="collectedparameters" type="list" nillable="true" minOccurs="0" />
          <xs:element name="//handletracelogging~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~tracedepth" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hqllexer" >
      <xs:complexContent>
       <xs:extension base="the">
         <xs:sequence>
          <xs:element name="/***aloggerforthisclass.**/possibleid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqlastfactory" >
      <xs:complexContent>
       <xs:extension base="astfactory">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parseerrorhandler" >
      <xs:complexContent>
       <xs:extension base="errorreporter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typediscriminatormetadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractstatementexecutor" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="walker" type="hqlsqlwalker" nillable="true" minOccurs="0" />
        <xs:element name="idselectparameterspecifications" type="list" nillable="true" minOccurs="0" />
        <xs:element name="creation_warning_handler" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multitableupdateexecutor" >
      <xs:complexContent>
       <xs:extension base="abstractstatementexecutor">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="persister" type="queryable" nillable="true" minOccurs="0" />
          <xs:element name="idinsertselect" type="xs:string" />
          <xs:element name="updates" type="xs:string" />
          <xs:element name="hqlparameters" type="parameterspecification" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statementexecutor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicexecutor" >
      <xs:complexContent>
       <xs:extension base="abstractstatementexecutor">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="persister" type="queryable" nillable="true" minOccurs="0" />
          <xs:element name="sql" type="xs:string" />
          <xs:element name="parameterspecifications" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multitabledeleteexecutor" >
      <xs:complexContent>
       <xs:extension base="abstractstatementexecutor">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="persister" type="queryable" nillable="true" minOccurs="0" />
          <xs:element name="idinsertselect" type="xs:string" />
          <xs:element name="deletes" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="invalidpathexception" >
      <xs:complexContent>
       <xs:extension base="semanticexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parametertranslationsimpl" >
      <xs:sequence>
        <xs:element name="namedparameters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="ordinalparameters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidwithclauseexception" >
      <xs:complexContent>
       <xs:extension base="querysyntaxexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqlsqlwalker" >
      <xs:complexContent>
       <xs:extension base="hqlsqlbasewalker">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="trace" type="xs:anyType" />
          <xs:element name="" type="querytranslatorimpl" nillable="true" minOccurs="0" />
          <xs:element name="" type="hqlparser" nillable="true" minOccurs="0" />
          <xs:element name="" type="sessionfactoryhelper" nillable="true" minOccurs="0" />
          <xs:element name="tokenreplacements" type="map" nillable="true" minOccurs="0" />
          <xs:element name="" type="aliasgenerator" nillable="true" minOccurs="0" />
          <xs:element name="" type="literalprocessor" nillable="true" minOccurs="0" />
          <xs:element name="" type="parseerrorhandler" nillable="true" minOccurs="0" />
          <xs:element name="printer" type="astprinter" nillable="true" minOccurs="0" />
          <xs:element name="collectionfilterrole" type="xs:string" />
          <xs:element name="current" type="fromclause" nillable="true" minOccurs="0" />
          <xs:element name="" type="selectclause" nillable="true" minOccurs="0" />
          <xs:element name="selectexpressionsbyresultvariable" type="xs:anyType" />
          <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
          <xs:element name="parametercount" type="xs:long" />
          <xs:element name="namedparameters" type="map" nillable="true" minOccurs="0" />
          <xs:element name="parameters" type="xs:anyType" />
          <xs:element name="numberofparametersinsetclause" type="xs:long" />
          <xs:element name="positionalparametercount" type="xs:long" />
          <xs:element name="assignmentspecifications" type="xs:anyType" />
          <xs:element name="impliedjoype" type="xs:long" />
          <xs:element name="//handletracelogging~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~tracedepth" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlastfactory" >
      <xs:complexContent>
       <xs:extension base="astfactory">
         <xs:sequence>
          <xs:element name="walker" type="hqlsqlwalker" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="detailedsemanticexception" >
      <xs:complexContent>
       <xs:extension base="semanticexception">
         <xs:sequence>
          <xs:element name="cause" type="xs:anyType" />
          <xs:element name="showcausemessage" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querysyntaxexception" >
      <xs:complexContent>
       <xs:extension base="queryexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqltoken" >
      <xs:complexContent>
       <xs:extension base="antlr.commontoken">
         <xs:sequence>
          <xs:element name="/***trueifthistokencouldbeanidentifier.**/possibleid" type="xs:anyType" />
          <xs:element name="/***theprevioustokentype.**/tokentype" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinprocessor" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="walker" type="hqlsqlwalker" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="syntheticandfactory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astparentsfirstiterator" >
      <xs:sequence>
        <xs:element name="next,current,tree" type="xs:anyType" />
        <xs:element name="parents" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pathhelper" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="literalprocessor" >
      <xs:sequence>
        <xs:element name="/***indicatesthatfloatanddoubleliteralvaluesshould*betreatedusingthesql"exact"format(i.e.,'.001')*/exact" type="xs:long" />
        <xs:element name="/***indicatesthatfloatanddoubleliteralvaluesshould*betreatedusingthesql"approximate"format(i.e.,'1e-3')*/approximate" type="xs:long" />
        <xs:element name="/***inwhatformatshouldfloatanddoubleliteralvaluesbesent*tothedatabase?*@see#exact,#approximate*/decimal_literal_format" type="xs:long" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="walker" type="hqlsqlwalker" nillable="true" minOccurs="0" />
        <xs:element name="formatters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nodetraverser" >
      <xs:sequence>
        <xs:element name="strategy" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="syntheticandfactory" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="hqlsqlwalker" nillable="true" minOccurs="0" />
        <xs:element name="thetajoins" type="xs:anyType" />
        <xs:element name="filters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aliasgenerator" >
      <xs:sequence>
        <xs:element name="next" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astiterator" >
      <xs:sequence>
        <xs:element name="next,current" type="xs:anyType" />
        <xs:element name="parents" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astappender" >
      <xs:sequence>
        <xs:element name="parent" type="xs:anyType" />
        <xs:element name="l" type="xs:anyType" />
        <xs:element name="factory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astprinter" >
      <xs:sequence>
        <xs:element name="tokentypenamecache" type="map" nillable="true" minOccurs="0" />
        <xs:element name="showclassnames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryhelper" >
      <xs:sequence>
        <xs:element name="sfi" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="collectionpropertypingbyrole" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querynode" >
      <xs:complexContent>
       <xs:extension base="abstractrestrictablestatement">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="orderbyclause" nillable="true" minOccurs="0" />
          <xs:element name="scalarcolumnindex" type="xs:long" />
          <xs:element name="alias" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="isnulllogicoperatornode" >
      <xs:complexContent>
       <xs:extension base="abstractnullnesschecknode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dotnode" >
      <xs:complexContent>
       <xs:extension base="fromreferencenode">
         <xs:sequence>
          <xs:element name="/////////////////////////////////////////////////////////////////////////////usedonlyforregressiontesting!!!!////todo:obviouslygetridofallthisjunk)///////////////////////////////////////////////////////////////////////////usethetastyleimplicitjoins" type="xs:anyType" />
          <xs:element name="regression_style_join_suppression" type="xs:anyType" />
          <xs:element name="def_illegal_coll_deref_excp_builder" type="xs:anyType" />
          <xs:element name="illegal_coll_deref_excp_builder" type="xs:anyType" />
          <xs:element name="///////////////////////////////////////////////////////////////////////////log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="deref_unknown" type="xs:long" />
          <xs:element name="deref_entity" type="xs:long" />
          <xs:element name="deref_component" type="xs:long" />
          <xs:element name="deref_collection" type="xs:long" />
          <xs:element name="deref_primitive" type="xs:long" />
          <xs:element name="deref_identifier" type="xs:long" />
          <xs:element name="deref_java_constant" type="xs:long" />
          <xs:element name="/***theidentifierthatisthenameoftheproperty.*/propertyname" type="xs:string" />
          <xs:element name="/***thefullpath,totherootaliasofthisdotnode.*/path" type="xs:string" />
          <xs:element name="/***theunresolvedpropertypathrelativetothisdotnode.*/propertypath" type="xs:string" />
          <xs:element name="columns" type="xs:string" />
          <xs:element name="/***thetypeofjointocreate.defaultisaninnerjoin.*/joype" type="xs:long" />
          <xs:element name="/***fetchjoinornot.*/fetch" type="xs:anyType" />
          <xs:element name="/***thetypeofdereferencethathapened(deref_xxx).*/dereferencetype" type="xs:long" />
          <xs:element name="impliedjoin" type="fromelement" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapvaluenode" >
      <xs:complexContent>
       <xs:extension base="abstractmapcomponentnode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapentrynode" >
      <xs:complexContent>
       <xs:extension base="abstractmapcomponentnode">
         <xs:sequence>
          <xs:element name="scalarcolumnindex" type="xs:long" />
          <xs:element name="//size" type="list" nillable="true" minOccurs="0" />
          <xs:element name="aliases" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fromelementfactory" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="fromclause" nillable="true" minOccurs="0" />
        <xs:element name="origin" type="fromelement" nillable="true" minOccurs="0" />
        <xs:element name="path" type="xs:string" />
        <xs:element name="classalias" type="xs:string" />
        <xs:element name="columns" type="xs:string" />
        <xs:element name="implied" type="xs:anyType" />
        <xs:element name="inelementsfunction" type="xs:anyType" />
        <xs:element name="collection" type="xs:anyType" />
        <xs:element name="GeneratedName" type="queryablecollection" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="collectiontype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constructornode" >
      <xs:complexContent>
       <xs:extension base="selectexpressionlist">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="constructorarguments" type="type" nillable="true" minOccurs="0" />
          <xs:element name="ismap" type="xs:anyType" />
          <xs:element name="islist" type="xs:anyType" />
          <xs:element name="scalarcolumnindex" type="xs:long" />
          <xs:element name="aggregatedaliases" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectexpression" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="isnotnulllogicoperatornode" >
      <xs:complexContent>
       <xs:extension base="abstractnullnesschecknode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resolvablenode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggregatenode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="sqlfunction" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="countnode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="booleanliteralnode" >
      <xs:complexContent>
       <xs:extension base="literalnode">
         <xs:sequence>
          <xs:element name="expected" type="type" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexnode" >
      <xs:complexContent>
       <xs:extension base="fromreferencenode">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binarylogicoperatornode" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="literalnode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractrestrictablestatement" >
      <xs:complexContent>
       <xs:extension base="abstractstatement">
         <xs:sequence>
          <xs:element name="" type="fromclause" nillable="true" minOccurs="0" />
          <xs:element name="whereclause" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updatestatement" >
      <xs:complexContent>
       <xs:extension base="abstractrestrictablestatement">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fromclause" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="root_level" type="xs:long" />
          <xs:element name="level" type="xs:long" />
          <xs:element name="fromelements" type="set" nillable="true" minOccurs="0" />
          <xs:element name="fromelementbyclassalias" type="map" nillable="true" minOccurs="0" />
          <xs:element name="fromelementbytablealias" type="map" nillable="true" minOccurs="0" />
          <xs:element name="fromelementsbypath" type="map" nillable="true" minOccurs="0" />
          <xs:element name="/***alloftheimplicitfromxxxjoinyyyelementsthatarethedestinationofacollection.thesearecreatedfrom*indexoperatorsoncollectionpropertyreferences.*/collectionjoinfromelementsbypath" type="map" nillable="true" minOccurs="0" />
          <xs:element name="/***pointertotheparentfromclause,ifthereisone.*/parent" type="fromclause" nillable="true" minOccurs="0" />
          <xs:element name="/***collectionoffromclausesofwhichthisistheparent.*/childfromclauses" type="set" nillable="true" minOccurs="0" />
          <xs:element name="/***countsthefromelementsastheyareadded.*/fromelementcounter" type="xs:long" />
          <xs:element name="/***impliedfromelementstoaddontotheendofthefromclause.*/impliedelements" type="list" nillable="true" minOccurs="0" />
          <xs:element name="fromelementpredicate" type="xs:anyType" />
          <xs:element name="projectionlistpredicate" type="xs:anyType" />
          <xs:element name="collectionfetchpredicate" type="xs:anyType" />
          <xs:element name="explicitfrompredicate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statement" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="intoclause" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
          <xs:element name="persister" type="queryable" nillable="true" minOccurs="0" />
          <xs:element name="columnspec" type="xs:string" />
          <xs:element name="s" type="type" nillable="true" minOccurs="0" />
          <xs:element name="discriminated" type="xs:anyType" />
          <xs:element name="explicitidinsertion" type="xs:anyType" />
          <xs:element name="explicitversioninsertion" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlnode" >
      <xs:complexContent>
       <xs:extension base="node">
         <xs:sequence>
          <xs:element name="/***theoriginaltextforthenode,mostlyfordebugging.*/originaltext" type="xs:string" />
          <xs:element name="/***thedataofthisnode.nullfor'no'.*/data" type="type" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractstatement" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binaryarithmeticoperatornode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlfragment" >
      <xs:complexContent>
       <xs:extension base="node">
         <xs:sequence>
          <xs:element name="" type="joinfragment" nillable="true" minOccurs="0" />
          <xs:element name="" type="fromelement" nillable="true" minOccurs="0" />
          <xs:element name="//parametercontainerimpl~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~embeddedparameters" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pathnode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unarylogicoperatornode" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactoryawarenode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameternode" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
          <xs:element name="" type="parameterspecification" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="functionnode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractnullnesschecknode" >
      <xs:complexContent>
       <xs:extension base="unarylogicoperatornode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fromelementtype" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="fromelement" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitytype" nillable="true" minOccurs="0" />
        <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="queryablecollection" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="collectionpropertymapping" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="joinsequence" nillable="true" minOccurs="0" />
        <xs:element name="collectionsuffix" type="xs:string" />
        <xs:element name="indexcollectionselectorparamspec" type="parameterspecification" nillable="true" minOccurs="0" />
        <xs:element name="special_many2many_treatment_function_names" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectexpressionimpl" >
      <xs:complexContent>
       <xs:extension base="fromreferencenode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="impliedfromelement" >
      <xs:complexContent>
       <xs:extension base="fromelement">
         <xs:sequence>
          <xs:element name="/***trueifthisfromelementwasimpliedfromapathinthefromclause,butnot*explicitlydeclardinthefromclause.*/impliedinfromclause" type="xs:anyType" />
          <xs:element name="/***trueifthisimpliedfromelementshouldbeincludedintheprojectionlist.*/inprojectionlist" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectexpressionlist" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqlsqlwalkernode" >
      <xs:complexContent>
       <xs:extension base="sqlnode">
         <xs:sequence>
          <xs:element name="/***apointerbacktothephase2processor.*/walker" type="hqlsqlwalker" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unaryarithmeticnode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:complexContent>
       <xs:extension base="antlr.commonast">
         <xs:sequence>
          <xs:element name="filename" type="xs:string" />
          <xs:element name="line" type="xs:long" />
          <xs:element name="column" type="xs:long" />
          <xs:element name="textlength" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionfunction" >
      <xs:complexContent>
       <xs:extension base="methodnode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deletestatement" >
      <xs:complexContent>
       <xs:extension base="abstractrestrictablestatement">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fromelement" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="classname" type="xs:string" />
          <xs:element name="classalias" type="xs:string" />
          <xs:element name="tablealias" type="xs:string" />
          <xs:element name="collectiontablealias" type="xs:string" />
          <xs:element name="" type="fromclause" nillable="true" minOccurs="0" />
          <xs:element name="includesubclasses" type="xs:anyType" />
          <xs:element name="collectionjoin" type="xs:anyType" />
          <xs:element name="origin" type="fromelement" nillable="true" minOccurs="0" />
          <xs:element name="columns" type="xs:string" />
          <xs:element name="role" type="xs:string" />
          <xs:element name="fetch" type="xs:anyType" />
          <xs:element name="isallpropertyfetch" type="xs:anyType" />
          <xs:element name="filter" type="xs:anyType" />
          <xs:element name="sequence" type="xs:long" />
          <xs:element name="usefromfragment" type="xs:anyType" />
          <xs:element name="initialized" type="xs:anyType" />
          <xs:element name="elementtype" type="fromelementtype" nillable="true" minOccurs="0" />
          <xs:element name="usewherefragment" type="xs:anyType" />
          <xs:element name="destinations" type="list" nillable="true" minOccurs="0" />
          <xs:element name="manytomany" type="xs:anyType" />
          <xs:element name="withclausefragment" type="xs:string" />
          <xs:element name="withclausejoinalias" type="xs:string" />
          <xs:element name="dereferencedbysuperclassproperty" type="xs:anyType" />
          <xs:element name="dereferencedbysubclassproperty" type="xs:anyType" />
          <xs:element name="discriminator_property_name" type="xs:string" />
          <xs:element name="" type="typediscriminatormetadata" nillable="true" minOccurs="0" />
          <xs:element name="//parametercontainerimpl~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~embeddedparameters" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="javaconstantnode" >
      <xs:complexContent>
       <xs:extension base="node">
         <xs:sequence>
          <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="constantexpression" type="xs:string" />
          <xs:element name="constantvalue" type="xs:anyType" />
          <xs:element name="heuristic" type="type" nillable="true" minOccurs="0" />
          <xs:element name="expected" type="type" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fromreferencenode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="fromelement" nillable="true" minOccurs="0" />
          <xs:element name="resolved" type="xs:anyType" />
          <xs:element name="root_level" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="displayablenode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="restrictablestatement" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="betweenoperatornode" >
      <xs:complexContent>
       <xs:extension base="sqlnode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aggregatedselectexpression" >
      <xs:complexContent>
       <xs:extension base="selectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractmapcomponentnode" >
      <xs:complexContent>
       <xs:extension base="fromreferencenode">
         <xs:sequence>
          <xs:element name="columns" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="operatornode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbyclause" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unaryoperatornode" >
      <xs:complexContent>
       <xs:extension base="operatornode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="casenode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultvariablerefnode" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
          <xs:element name="" type="selectexpression" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expectedtypeawarenode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="initializeablenode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="methodnode" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="methodname" type="xs:string" />
          <xs:element name="" type="fromelement" nillable="true" minOccurs="0" />
          <xs:element name="selectcolumns" type="xs:string" />
          <xs:element name="function" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="inselect" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="case2node" >
      <xs:complexContent>
       <xs:extension base="abstractselectexpression">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectclause" >
      <xs:complexContent>
       <xs:extension base="selectexpressionlist">
         <xs:sequence>
          <xs:element name="prepared" type="xs:anyType" />
          <xs:element name="scalarselect" type="xs:anyType" />
          <xs:element name="fromelementsforload" type="list" nillable="true" minOccurs="0" />
          <xs:element name="sqlresultsqueryreturns" type="type" nillable="true" minOccurs="0" />
          <xs:element name="columnnames" type="xs:string" />
          <xs:element name="collectionfromelements" type="list" nillable="true" minOccurs="0" />
          <xs:element name="aliases" type="xs:string" />
          <xs:element name="columnnamesstartpositions" type="xs:long" />
          <xs:element name="//currentlywecanonlyhaveone..." type="aggregatedselectexpression" nillable="true" minOccurs="0" />
          <xs:element name="version2_sql" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeynode" >
      <xs:complexContent>
       <xs:extension base="abstractmapcomponentnode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binaryoperatornode" >
      <xs:complexContent>
       <xs:extension base="operatornode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identnode" >
      <xs:complexContent>
       <xs:extension base="fromreferencenode">
         <xs:sequence>
          <xs:element name="unknown" type="xs:long" />
          <xs:element name="property_ref" type="xs:long" />
          <xs:element name="component_ref" type="xs:long" />
          <xs:element name="nakedpropertyref" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertstatement" >
      <xs:complexContent>
       <xs:extension base="abstractstatement">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignmentspecification" >
      <xs:sequence>
        <xs:element name="tablenames" type="set" nillable="true" minOccurs="0" />
        <xs:element name="hqlparameters" type="parameterspecification" nillable="true" minOccurs="0" />
        <xs:element name="eq" type="xs:anyType" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="sqlassignment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parametercontainer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractselectexpression" >
      <xs:complexContent>
       <xs:extension base="hqlsqlwalkernode">
         <xs:sequence>
          <xs:element name="alias" type="xs:string" />
          <xs:element name="scalarcolumnindex" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentjoin" >
      <xs:complexContent>
       <xs:extension base="fromelement">
         <xs:sequence>
          <xs:element name="componentpath" type="xs:string" />
          <xs:element name="" type="componenttype" nillable="true" minOccurs="0" />
          <xs:element name="componentproperty" type="xs:string" />
          <xs:element name="columns" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inlogicoperatornode" >
      <xs:complexContent>
       <xs:extension base="binarylogicoperatornode">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="errorreporter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytranslatorimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="ast_log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="queryidentifier" type="xs:string" />
        <xs:element name="hql" type="xs:string" />
        <xs:element name="shallowquery" type="xs:anyType" />
        <xs:element name="tokenreplacements" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//todo:thisisonlyneededduringcompilation..canweeliminatetheinstvar?enabledfilters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="compiled" type="xs:anyType" />
        <xs:element name="GeneratedName" type="queryloader" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="statementexecutor" nillable="true" minOccurs="0" />
        <xs:element name="sqlast" type="statement" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
        <xs:element name="paramtranslations" type="parametertranslations" nillable="true" minOccurs="0" />
        <xs:element name="collectedparameterspecifications" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astquerytranslatorfactory" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hqlparser" >
      <xs:complexContent>
       <xs:extension base="the">
         <xs:sequence>
          <xs:element name="/***aforthisclass.*/log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="trace" type="xs:anyType" />
          <xs:element name="" type="parseerrorhandler" nillable="true" minOccurs="0" />
          <xs:element name="printer" type="astprinter" nillable="true" minOccurs="0" />
          <xs:element name="//handletracelogging~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~tracedepth" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="errorcounter" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="hqllog" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="error" type="list" nillable="true" minOccurs="0" />
        <xs:element name="warning" type="list" nillable="true" minOccurs="0" />
        <xs:element name="recognitionexceptions" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="havingparser" >
      <xs:complexContent>
       <xs:extension base="whereparser">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parserhelper" >
      <xs:sequence>
        <xs:element name="hql_variable_prefix" type="xs:string" />
        <xs:element name="hql_separators" type="xs:string" />
        <xs:element name="//notice:no"or.sincetheyarepartof(compound)identifierspath_separators" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbyparser" >
      <xs:sequence>
        <xs:element name="//thisusesabutnoticethatcompoundpathsarenotvalid,//onlybarenamesandsimplepaths://selectpfrompinclasseg.personorderbyp.name,p.address,p//thereasonforthisissqldoesn'tletyousortbyanexpressionyouare//notreturningintheresultset." type="pathexpressionparser" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytranslatorimpl" >
      <xs:complexContent>
       <xs:extension base="basicloader">
         <xs:sequence>
          <xs:element name="no_return_aliases" type="xs:string" />
          <xs:element name="queryidentifier" type="xs:string" />
          <xs:element name="query" type="xs:string" />
          <xs:element name="type" type="map" nillable="true" minOccurs="0" />
          <xs:element name="collections" type="map" nillable="true" minOccurs="0" />
          <xs:element name="returnedtypes" type="list" nillable="true" minOccurs="0" />
          <xs:element name="fromtypes" type="list" nillable="true" minOccurs="0" />
          <xs:element name="scalartypes" type="list" nillable="true" minOccurs="0" />
          <xs:element name="namedparameters" type="map" nillable="true" minOccurs="0" />
          <xs:element name="aliasnames" type="map" nillable="true" minOccurs="0" />
          <xs:element name="onetooneownernames" type="map" nillable="true" minOccurs="0" />
          <xs:element name="uniquekeyownerreferences" type="map" nillable="true" minOccurs="0" />
          <xs:element name="decoratedpropertypings" type="map" nillable="true" minOccurs="0" />
          <xs:element name="scalarselecttokens" type="list" nillable="true" minOccurs="0" />
          <xs:element name="wheretokens" type="list" nillable="true" minOccurs="0" />
          <xs:element name="havingtokens" type="list" nillable="true" minOccurs="0" />
          <xs:element name="joins" type="map" nillable="true" minOccurs="0" />
          <xs:element name="orderbytokens" type="list" nillable="true" minOccurs="0" />
          <xs:element name="groupbytokens" type="list" nillable="true" minOccurs="0" />
          <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
          <xs:element name="entitiestofetch" type="set" nillable="true" minOccurs="0" />
          <xs:element name="pathaliases" type="map" nillable="true" minOccurs="0" />
          <xs:element name="pathjoins" type="map" nillable="true" minOccurs="0" />
          <xs:element name="persisters" type="queryable" nillable="true" minOccurs="0" />
          <xs:element name="owners" type="xs:long" />
          <xs:element name="ownerassociationtypes" type="entitytype" nillable="true" minOccurs="0" />
          <xs:element name="names" type="xs:string" />
          <xs:element name="includeinselect" type="xs:anyType" />
          <xs:element name="selectlength" type="xs:long" />
          <xs:element name="returns" type="type" nillable="true" minOccurs="0" />
          <xs:element name="actualreturns" type="type" nillable="true" minOccurs="0" />
          <xs:element name="scalarcolumnnames" type="xs:string" />
          <xs:element name="tokenreplacements" type="map" nillable="true" minOccurs="0" />
          <xs:element name="namecount" type="xs:long" />
          <xs:element name="parametercount" type="xs:long" />
          <xs:element name="distinct" type="xs:anyType" />
          <xs:element name="compiled" type="xs:anyType" />
          <xs:element name="sql" type="xs:string" />
          <xs:element name="holder" type="xs:anyType" />
          <xs:element name="holder" type="xs:anyType" />
          <xs:element name="hasscalars" type="xs:anyType" />
          <xs:element name="shallowquery" type="xs:anyType" />
          <xs:element name="superquery" type="querytranslatorimpl" nillable="true" minOccurs="0" />
          <xs:element name="collectionpersister" type="queryablecollection" nillable="true" minOccurs="0" />
          <xs:element name="collectionownercolumn" type="xs:long" />
          <xs:element name="collectionownername" type="xs:string" />
          <xs:element name="fetchname" type="xs:string" />
          <xs:element name="suffixes" type="xs:string" />
          <xs:element name="enabledfilters" type="map" nillable="true" minOccurs="0" />
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="frompathexpressionparser" >
      <xs:complexContent>
       <xs:extension base="pathexpressionparser">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="groupbyparser" >
      <xs:sequence>
        <xs:element name="//thisisbasicallyacopy/pasteoforderbyparser...mightbeworthrefactoring//thisusesabutnoticethatcompoundpathsarenotvalid,//onlybarenamesandsimplepaths://selectpfrompinclasseg.persongroupbyp.name,p.address,p//thereasonforthisissqldoesn'tletyousortbyanexpressionyouare//notreturningintheresultset." type="pathexpressionparser" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectpathexpressionparser" >
      <xs:complexContent>
       <xs:extension base="pathexpressionparser">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pathexpressionparser" >
      <xs:sequence>
        <xs:element name="//todo:thisclassdoestoomanythings!weneedadifferent//kindofpathexpressionparserforeachofthediffferent//waysinwhichpathexpressionscanoccur//weshouldactuallyreworkthisclasstonotimplementparser//andjustprocesspathexpressionsinthemostconvenientway.//theclassisnowwaytocomplex!dotcount" type="xs:long" />
        <xs:element name="currentname" type="xs:string" />
        <xs:element name="currentproperty" type="xs:string" />
        <xs:element name="onetooneownername" type="xs:string" />
        <xs:element name="owner" type="associationtype" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="xs:string" />
        <xs:element name="collectionname" type="xs:string" />
        <xs:element name="collectionownername" type="xs:string" />
        <xs:element name="collectionrole" type="xs:string" />
        <xs:element name="componentpath" type="xs:anyType" />
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="path" type="xs:anyType" />
        <xs:element name="ignoreinitialjoin" type="xs:anyType" />
        <xs:element name="continuation" type="xs:anyType" />
        <xs:element name="//defaultmodejoype" type="xs:long" />
        <xs:element name="usethetastylejoin" type="xs:anyType" />
        <xs:element name="current" type="propertymapping" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="joinsequence" nillable="true" minOccurs="0" />
        <xs:element name="expectingcollectionindex" type="xs:anyType" />
        <xs:element name="collectionelements" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classicquerytranslatorfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="whereparser" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="pathexpressionparser" nillable="true" minOccurs="0" />
        <xs:element name="//tokensthatcloseasubexpressionexpression_terminators" type="set" nillable="true" minOccurs="0" />
        <xs:element name="//tokensthatopenasubexpressionexpression_openers" type="set" nillable="true" minOccurs="0" />
        <xs:element name="//tokensthatwouldindicateasubexpressionisabooleanexpressionboolean_operators" type="set" nillable="true" minOccurs="0" />
        <xs:element name="negations" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//handlesthingslike://aandborc//aand(borc)//notaandnotb//not(aandb)//xbetweenyandz(overloaded"and")//xin(a,b,c)(overloadedbrackets)//notnota//aisnotnull(overloaded"not")//etc......//andexpressionslike//foo" type="xs:anyType" />
        <xs:element name="negated" type="xs:anyType" />
        <xs:element name="insubselect" type="xs:anyType" />
        <xs:element name="bracketssinceselect" type="xs:long" />
        <xs:element name="subselect" type="xs:anyType" />
        <xs:element name="expectingpathcontinuation" type="xs:anyType" />
        <xs:element name="expectingindex" type="xs:long" />
        <xs:element name="//thefollowingvariablesarestacksthatkeepinformationabouteachsubexpression//inthelistofnestedsubexpressionswearecurrentlyprocessing.//wereanoddorevennumberofnotsencounterednots" type="xs:anyType" />
        <xs:element name="//thejoinstringbuiltupbycompoundpathsinsidethisexpressionjoins" type="xs:anyType" />
        <xs:element name="//aflagindicatingifthesubexpressionisknowntobebooleanbooleantests" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fromparser" >
      <xs:sequence>
        <xs:element name="peparser" type="pathexpressionparser" nillable="true" minOccurs="0" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="afterin" type="xs:anyType" />
        <xs:element name="afteras" type="xs:anyType" />
        <xs:element name="afterclass" type="xs:anyType" />
        <xs:element name="expectingjoin" type="xs:anyType" />
        <xs:element name="expectingin" type="xs:anyType" />
        <xs:element name="expectingas" type="xs:anyType" />
        <xs:element name="afterjointype" type="xs:anyType" />
        <xs:element name="joype" type="xs:long" />
        <xs:element name="afterfetch" type="xs:anyType" />
        <xs:element name="//supportcollectionmemberdeclarations//e.g."fromcustomerc,in(c.orders)aso"memberdeclarations" type="xs:anyType" />
        <xs:element name="expectingpathexpression" type="xs:anyType" />
        <xs:element name="aftermemberdeclarations" type="xs:anyType" />
        <xs:element name="collectionname" type="xs:string" />
        <xs:element name="none" type="xs:long" />
        <xs:element name="join_types" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preprocessingparser" >
      <xs:sequence>
        <xs:element name="hql_operators" type="set" nillable="true" minOccurs="0" />
        <xs:element name="replacements" type="map" nillable="true" minOccurs="0" />
        <xs:element name="quoted" type="xs:anyType" />
        <xs:element name="quotedstring" type="xs:anyType" />
        <xs:element name="parser" type="clauseparser" nillable="true" minOccurs="0" />
        <xs:element name="lasttoken" type="xs:string" />
        <xs:element name="currentcollectionprop" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectparser" >
      <xs:sequence>
        <xs:element name="//todo:arithmeticexpressions,multiplenewfoo(...)count_modifiers" type="set" nillable="true" minOccurs="0" />
        <xs:element name="aggregatefunctokenlist" type="xs:anyType" />
        <xs:element name="ready" type="xs:anyType" />
        <xs:element name="aggregate" type="xs:anyType" />
        <xs:element name="first" type="xs:anyType" />
        <xs:element name="afternew" type="xs:anyType" />
        <xs:element name="insidenew" type="xs:anyType" />
        <xs:element name="aggregateaddselectscalar" type="xs:anyType" />
        <xs:element name="holder" type="xs:anyType" />
        <xs:element name="pathexpressionparser" type="selectpathexpressionparser" nillable="true" minOccurs="0" />
        <xs:element name="aggregate" type="pathexpressionparser" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parser" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clauseparser" >
      <xs:sequence>
        <xs:element name="child" type="parser" nillable="true" minOccurs="0" />
        <xs:element name="selecttokens" type="list" nillable="true" minOccurs="0" />
        <xs:element name="cacheselecttokens" type="xs:anyType" />
        <xs:element name="byexpected" type="xs:anyType" />
        <xs:element name="parencount" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namegenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querysplitter" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="before_class_tokens" type="set" nillable="true" minOccurs="0" />
        <xs:element name="not_after_class_tokens" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parametertranslations" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryparameterexception" >
      <xs:complexContent>
       <xs:extension base="queryexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushmode" >
      <xs:sequence>
        <xs:element name="instances" type="map" nillable="true" minOccurs="0" />
        <xs:element name="level" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="/***the{@linksession}isneverflushedunless{@linksession#flush}*isexplicitlycalledbytheapplication.thismodeisvery*efficientforreadonlytransactions.**@deprecateduse{@link#manual}instead.*/never" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="/***the{@linksession}isonlyeverflushedwhen{@linksession#flush}*isexplicitlycalledbytheapplication.thismodeisvery*efficientforreadonlytransactions.*/manual" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="/***the{@linksession}isflushedwhen{@linktransaction#commit}*iscalled.*/commit" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="/***the{@linksession}issometimesflushedbeforequeryexecution*inordertoensurethatqueriesneverreturnstalestate.this*isthedefaultflushmode.*/auto" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="/***the{@linksession}isflushedbeforeeveryquery.thisis*almostalwaysunnecessaryandinefficient.*/always" type="flushmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scrollableresults" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aliastobeanresulttransformer" >
      <xs:sequence>
        <xs:element name="//implnote:duetothedelayedpopulationofsetters(setterscached//forperformance),wereallycannotproperlydefineequalityfor//thistransformerresult" type="xs:anyType" />
        <xs:element name="isinitialized" type="xs:anyType" />
        <xs:element name="aliases" type="xs:string" />
        <xs:element name="s" type="setter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basictransformeradapter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aliastobeanconstructorresulttransformer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transformers" >
      <xs:sequence>
        <xs:element name="fromaliastovalues/entities*/alias_to_entity_map" type="aliastoentitymapresulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="*/to_list" type="tolistresulttransformer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tolistresulttransformer" >
      <xs:complexContent>
       <xs:extension base="basictransformeradapter">
         <xs:sequence>
          <xs:element name="instance" type="tolistresulttransformer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="distinctrootentityresulttransformer" >
      <xs:sequence>
        <xs:element name="instance" type="distinctrootentityresulttransformer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="passthroughresulttransformer" >
      <xs:complexContent>
       <xs:extension base="basictransformeradapter">
         <xs:sequence>
          <xs:element name="instance" type="passthroughresulttransformer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resulttransformer" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="aliastoentitymapresulttransformer" >
      <xs:complexContent>
       <xs:extension base="basictransformeradapter">
         <xs:sequence>
          <xs:element name="instance" type="aliastoentitymapresulttransformer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="distinctresulttransformer" >
      <xs:complexContent>
       <xs:extension base="basictransformeradapter">
         <xs:sequence>
          <xs:element name="instance" type="distinctresulttransformer" nillable="true" minOccurs="0" />
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rootentityresulttransformer" >
      <xs:complexContent>
       <xs:extension base="basictransformeradapter">
         <xs:sequence>
          <xs:element name="instance" type="rootentityresulttransformer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="duplicatemappingexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="type" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockoptions" >
      <xs:sequence>
        <xs:element name="/***nonerepresentslockmode.none(timeout+scopedonotapply)*/none" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="/***readrepresentslockmode.read(timeout+scopedonotapply)*/read" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="/***upgraderepresentslockmode.upgrade(willwaitforeverforlockand*scopeoffalsemeaningonlyentityislocked)*/upgrade" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="aliasspecificlockmodes" type="map" nillable="true" minOccurs="0" />
        <xs:element name="/***indicatesthatthedatabaseshouldnotwaitatalltoacquirethepessimisticlock.*@see#gettimeout*/no_wait" type="xs:long" />
        <xs:element name="/***indicatesthatthereisnotimeoutfortheacquisition.*@see#gettimeout*/wait_forever" type="xs:long" />
        <xs:element name="timeout" type="xs:long" />
        <xs:element name="scope" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectionreleasemode" >
      <xs:sequence>
        <xs:element name="*explicitlyclosealliteratorsandscrollableresults.thismodemay*onlybeusedwithajtadatasource.*/after_statement" type="connectionreleasemode" nillable="true" minOccurs="0" />
        <xs:element name="*thisisthedefaultmodestartingin3.1waspreviously{@link#on_close}.*/after_transaction" type="connectionreleasemode" nillable="true" minOccurs="0" />
        <xs:element name="/***indicatesthatconnectionsshouldonlybereleasedwhenthesessionisexplicitlyclosed*ordisconnectedthisisthelegacy(hibernate2andpre-3.1)behavior.*/on_close" type="connectionreleasemode" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymode" >
      <xs:sequence>
        <xs:element name="instances" type="map" nillable="true" minOccurs="0" />
        <xs:element name="pojo" type="entitymode" nillable="true" minOccurs="0" />
        <xs:element name="dom4j" type="entitymode" nillable="true" minOccurs="0" />
        <xs:element name="map" type="entitymode" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterizedtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loggableusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usercollectiontype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enhancedusertype" >
      <xs:complexContent>
       <xs:extension base="usertype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userversiontype" >
      <xs:complexContent>
       <xs:extension base="usertype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlquery" >
      <xs:complexContent>
       <xs:extension base="query">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappingexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elementwrapper" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="parent" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicmapentitytuplizer" >
      <xs:complexContent>
       <xs:extension base="abstractentitytuplizer">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pojoentitytuplizer" >
      <xs:complexContent>
       <xs:extension base="abstractentitytuplizer">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="mapped" type="xs:anyType" />
          <xs:element name="proxyinterface" type="xs:anyType" />
          <xs:element name="lifecycleimplementor" type="xs:anyType" />
          <xs:element name="validatableimplementor" type="xs:anyType" />
          <xs:element name="lazypropertynames" type="set" nillable="true" minOccurs="0" />
          <xs:element name="optimizer" type="reflectionoptimizer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitytuplizer" >
      <xs:complexContent>
       <xs:extension base="tuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitymetamodel" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="no_version_indx" type="xs:long" />
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="rootname" type="xs:string" />
        <xs:element name="GeneratedName" type="entitytype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="identifierproperty" nillable="true" minOccurs="0" />
        <xs:element name="versioned" type="xs:anyType" />
        <xs:element name="propertyspan" type="xs:long" />
        <xs:element name="versionpropertyindex" type="xs:long" />
        <xs:element name="properties" type="standardproperty" nillable="true" minOccurs="0" />
        <xs:element name="propertynames" type="xs:string" />
        <xs:element name="propertys" type="type" nillable="true" minOccurs="0" />
        <xs:element name="propertylaziness" type="xs:anyType" />
        <xs:element name="propertyupdateability" type="xs:anyType" />
        <xs:element name="nonlazypropertyupdateability" type="xs:anyType" />
        <xs:element name="propertycheckability" type="xs:anyType" />
        <xs:element name="propertyinsertability" type="xs:anyType" />
        <xs:element name="insertinclusions" type="valueinclusion" nillable="true" minOccurs="0" />
        <xs:element name="updateinclusions" type="valueinclusion" nillable="true" minOccurs="0" />
        <xs:element name="propertynullability" type="xs:anyType" />
        <xs:element name="propertyversionability" type="xs:anyType" />
        <xs:element name="s" type="cascadestyle" nillable="true" minOccurs="0" />
        <xs:element name="hasinsertgeneratedvalues" type="xs:anyType" />
        <xs:element name="hasupdategeneratedvalues" type="xs:anyType" />
        <xs:element name="//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~propertyindexes" type="map" nillable="true" minOccurs="0" />
        <xs:element name="hascollections" type="xs:anyType" />
        <xs:element name="hasmutableproperties" type="xs:anyType" />
        <xs:element name="haslazyproperties" type="xs:anyType" />
        <xs:element name="hasnonidentifierpropertynamedid" type="xs:anyType" />
        <xs:element name="naturalidpropertynumbers" type="xs:long" />
        <xs:element name="hasimmutablenaturalid" type="xs:anyType" />
        <xs:element name="//notbecauseproxyfactorycreationcanfaillazy" type="xs:anyType" />
        <xs:element name="hascascades" type="xs:anyType" />
        <xs:element name="mutable" type="xs:anyType" />
        <xs:element name="isabstract" type="xs:anyType" />
        <xs:element name="selectbeforeupdate" type="xs:anyType" />
        <xs:element name="dynamicupdate" type="xs:anyType" />
        <xs:element name="dynamicinsert" type="xs:anyType" />
        <xs:element name="optimisticlockmode" type="xs:long" />
        <xs:element name="polymorphic" type="xs:anyType" />
        <xs:element name="//superclassentity-namesuperclass" type="xs:string" />
        <xs:element name="explicitpolymorphism" type="xs:anyType" />
        <xs:element name="inherited" type="xs:anyType" />
        <xs:element name="hassubclasses" type="xs:anyType" />
        <xs:element name="subclassentitynames" type="set" nillable="true" minOccurs="0" />
        <xs:element name="entitynamebyinheritenceclass" type="map" nillable="true" minOccurs="0" />
        <xs:element name="tuplizermapping" type="entityentitymodetotuplizermapping" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityentitymodetotuplizermapping" >
      <xs:complexContent>
       <xs:extension base="entitymodetotuplizermapping">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentitytuplizer" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="//todo:currentlykeepsgettersandsetters(insteadofpropertyaccessors)becauseofthewaygetgetter()andgetsetter()areimplementedcurrentlyyuck!" type="entitymetamodel" nillable="true" minOccurs="0" />
        <xs:element name="id" type="getter" nillable="true" minOccurs="0" />
        <xs:element name="id" type="setter" nillable="true" minOccurs="0" />
        <xs:element name="s" type="getter" nillable="true" minOccurs="0" />
        <xs:element name="s" type="setter" nillable="true" minOccurs="0" />
        <xs:element name="propertyspan" type="xs:long" />
        <xs:element name="hascustomaccessors" type="xs:anyType" />
        <xs:element name="GeneratedName" type="instantiator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="proxyfactory" nillable="true" minOccurs="0" />
        <xs:element name="identifiermappertype" type="compositetype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitytuplizerfactory" >
      <xs:complexContent>
       <xs:extension base="entitytuplizer>>">
         <xs:sequence>
          <xs:element name="entity_tup_ctor_sig" type="xs:anyType" />
          <xs:element name="defaultimplclassbymode" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dom4jentitytuplizer" >
      <xs:complexContent>
       <xs:extension base="abstractentitytuplizer">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="inheritencenodename" type="map" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="property" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="node" type="xs:string" />
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dom4jinstantiator" >
      <xs:sequence>
        <xs:element name="nodename" type="xs:string" />
        <xs:element name="isinstancenodenames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componententitymodetotuplizermapping" >
      <xs:complexContent>
       <xs:extension base="entitymodetotuplizermapping">
         <xs:sequence>
          <xs:element name="//todo:movethistosfperhhh-3517alsoseehhh-1907andcomponentmetamodel" type="componenttuplizerfactory" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dom4jcomponenttuplizer" >
      <xs:complexContent>
       <xs:extension base="abstractcomponenttuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcomponenttuplizer" >
      <xs:sequence>
        <xs:element name="s" type="getter" nillable="true" minOccurs="0" />
        <xs:element name="s" type="setter" nillable="true" minOccurs="0" />
        <xs:element name="propertyspan" type="xs:long" />
        <xs:element name="GeneratedName" type="instantiator" nillable="true" minOccurs="0" />
        <xs:element name="hascustomaccessors" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentmetamodel" >
      <xs:sequence>
        <xs:element name="//todo:willneedreferencetosessionfactorytofullycompletehhh-1907//sessionfactoryimplementorsessionfactoryrole" type="xs:string" />
        <xs:element name="iskey" type="xs:anyType" />
        <xs:element name="properties" type="standardproperty" nillable="true" minOccurs="0" />
        <xs:element name="tuplizermapping" type="componententitymodetotuplizermapping" nillable="true" minOccurs="0" />
        <xs:element name="//cachedforefficiency...propertyspan" type="xs:long" />
        <xs:element name="propertyindexes" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pojocomponenttuplizer" >
      <xs:complexContent>
       <xs:extension base="abstractcomponenttuplizer">
         <xs:sequence>
          <xs:element name="component" type="xs:anyType" />
          <xs:element name="optimizer" type="reflectionoptimizer" nillable="true" minOccurs="0" />
          <xs:element name="parent" type="getter" nillable="true" minOccurs="0" />
          <xs:element name="parent" type="setter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicmapcomponenttuplizer" >
      <xs:complexContent>
       <xs:extension base="abstractcomponenttuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componenttuplizer" >
      <xs:complexContent>
       <xs:extension base="tuplizer,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componenttuplizerfactory" >
      <xs:complexContent>
       <xs:extension base="componenttuplizer>>">
         <xs:sequence>
          <xs:element name="component_tup_ctor_sig" type="xs:anyType" />
          <xs:element name="defaultimplclassbymode" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionproperty" >
      <xs:complexContent>
       <xs:extension base="standardproperty">
         <xs:sequence>
          <xs:element name="unsavedvalue" type="versionvalue" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicmapinstantiator" >
      <xs:sequence>
        <xs:element name="key" type="xs:string" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="isinstanceentitynames" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tuplizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifierproperty" >
      <xs:complexContent>
       <xs:extension base="property">
         <xs:sequence>
          <xs:element name="virtual" type="xs:anyType" />
          <xs:element name="embedded" type="xs:anyType" />
          <xs:element name="unsavedvalue" type="identifiervalue" nillable="true" minOccurs="0" />
          <xs:element name="" type="identifiergenerator" nillable="true" minOccurs="0" />
          <xs:element name="identifierassignedbyinsert" type="xs:anyType" />
          <xs:element name="hasidentifiermapper" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pojoinstantiator" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="xs:anyType" />
        <xs:element name="mapped" type="xs:anyType" />
        <xs:element name="transientoptimizer" type="xs:anyType" />
        <xs:element name="embeddedidentifier" type="xs:anyType" />
        <xs:element name="proxyinterface" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitymodetotuplizermapping" >
      <xs:sequence>
        <xs:element name="tuplizers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardproperty" >
      <xs:complexContent>
       <xs:extension base="property">
         <xs:sequence>
          <xs:element name="lazy" type="xs:anyType" />
          <xs:element name="insertable" type="xs:anyType" />
          <xs:element name="updateable" type="xs:anyType" />
          <xs:element name="insertgenerated" type="xs:anyType" />
          <xs:element name="updategenerated" type="xs:anyType" />
          <xs:element name="nullable" type="xs:anyType" />
          <xs:element name="dirtycheckable" type="xs:anyType" />
          <xs:element name="versionable" type="xs:anyType" />
          <xs:element name="" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="" type="fetchmode" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instantiator" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyvalueexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitynameresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instantiationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="clazz" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="drivermanagerconnectionprovider" >
      <xs:sequence>
        <xs:element name="url" type="xs:string" />
        <xs:element name="connectionprops" type="xs:anyType" />
        <xs:element name="isolation" type="xs:anyType" />
        <xs:element name="pool" type="xs:anyType" />
        <xs:element name="poolsize" type="xs:long" />
        <xs:element name="checkedout" type="xs:long" />
        <xs:element name="autocommit" type="xs:anyType" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectionprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usersuppliedconnectionprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourceconnectionprovider" >
      <xs:sequence>
        <xs:element name="ds" type="xs:anyType" />
        <xs:element name="user" type="xs:string" />
        <xs:element name="pass" type="xs:string" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectionproviderfactory" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="special_properties" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplevalue" >
      <xs:sequence>
        <xs:element name="default_id_gen_strategy" type="xs:string" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="list" nillable="true" minOccurs="0" />
        <xs:element name="typename" type="xs:string" />
        <xs:element name="identifiergenerator" type="xs:anyType" />
        <xs:element name="identifiergeneratorstrategy" type="xs:string" />
        <xs:element name="nullvalue" type="xs:string" />
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="foreignkeyname" type="xs:string" />
        <xs:element name="alternateuniquekey" type="xs:anyType" />
        <xs:element name="typeparameters" type="xs:anyType" />
        <xs:element name="cascadedeleteenabled" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="property" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="value" nillable="true" minOccurs="0" />
        <xs:element name="cascade" type="xs:string" />
        <xs:element name="updateable" type="xs:anyType" />
        <xs:element name="insertable" type="xs:anyType" />
        <xs:element name="selectable" type="xs:anyType" />
        <xs:element name="optimisticlocked" type="xs:anyType" />
        <xs:element name="generation" type="propertygeneration" nillable="true" minOccurs="0" />
        <xs:element name="propertyaccessorname" type="xs:string" />
        <xs:element name="lazy" type="xs:anyType" />
        <xs:element name="optional" type="xs:anyType" />
        <xs:element name="nodename" type="xs:string" />
        <xs:element name="metaattributes" type="xs:anyType" />
        <xs:element name="GeneratedName" type="persistentclass" nillable="true" minOccurs="0" />
        <xs:element name="naturalidentifier" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependantvalue" >
      <xs:complexContent>
       <xs:extension base="simplevalue">
         <xs:sequence>
          <xs:element name="wrappedvalue" type="keyvalue" nillable="true" minOccurs="0" />
          <xs:element name="nullable" type="xs:anyType" />
          <xs:element name="updateable" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uniquekey" >
      <xs:complexContent>
       <xs:extension base="constraint">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="primarykey" >
      <xs:complexContent>
       <xs:extension base="constraint">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclass" >
      <xs:complexContent>
       <xs:extension base="persistentclass">
         <xs:sequence>
          <xs:element name="superclass" type="persistentclass" nillable="true" minOccurs="0" />
          <xs:element name="persister" type="xs:anyType" />
          <xs:element name="subclassid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoone" >
      <xs:complexContent>
       <xs:extension base="toone">
         <xs:sequence>
          <xs:element name="ignorenotfound" type="xs:anyType" />
          <xs:element name="islogicalonetoone" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="keyvalue" >
      <xs:complexContent>
       <xs:extension base="value">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metaattribute" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="values" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifierbag" >
      <xs:complexContent>
       <xs:extension base="identifiercollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rootclass" >
      <xs:complexContent>
       <xs:extension base="persistentclass">
         <xs:sequence>
          <xs:element name="default_identifier_column_name" type="xs:string" />
          <xs:element name="default_discriminator_column_name" type="xs:string" />
          <xs:element name="//maybeidentifier" type="property" nillable="true" minOccurs="0" />
          <xs:element name="//maybeidentifier" type="keyvalue" nillable="true" minOccurs="0" />
          <xs:element name="//maybeversion" type="property" nillable="true" minOccurs="0" />
          <xs:element name="polymorphic" type="xs:anyType" />
          <xs:element name="cacheconcurrencystrategy" type="xs:string" />
          <xs:element name="cacheregionname" type="xs:string" />
          <xs:element name="lazypropertiescacheable" type="xs:anyType" />
          <xs:element name="//maybediscriminator" type="value" nillable="true" minOccurs="0" />
          <xs:element name="mutable" type="xs:anyType" />
          <xs:element name="//maybeembeddedidentifier" type="xs:anyType" />
          <xs:element name="explicitpolymorphism" type="xs:anyType" />
          <xs:element name="entitypersister" type="xs:anyType" />
          <xs:element name="forcediscriminator" type="xs:anyType" />
          <xs:element name="where" type="xs:string" />
          <xs:element name="" type="table" nillable="true" minOccurs="0" />
          <xs:element name="discriminatorinsertable" type="xs:anyType" />
          <xs:element name="nextsubclassid" type="xs:long" />
          <xs:element name="declaredidentifier" type="property" nillable="true" minOccurs="0" />
          <xs:element name="declaredversion" type="property" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertygeneration" >
      <xs:sequence>
        <xs:element name="/***valuesforthispropertyarenevergeneratedbythedatabase.*/never" type="propertygeneration" nillable="true" minOccurs="0" />
        <xs:element name="/***valuesforthispropertyaregeneratedbythedatabaseoninsert.*/insert" type="propertygeneration" nillable="true" minOccurs="0" />
        <xs:element name="/***valuesforthispropertyaregeneratedbythedatabaseonbothinsertandupdate.*/always" type="propertygeneration" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="array" >
      <xs:complexContent>
       <xs:extension base="list">
         <xs:sequence>
          <xs:element name="elementclassname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="index" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="list" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractauxiliarydatabaseobject" >
      <xs:sequence>
        <xs:element name="dialectscopes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatasource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collection" >
      <xs:sequence>
        <xs:element name="default_element_column_name" type="xs:string" />
        <xs:element name="default_key_column_name" type="xs:string" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="owner" type="persistentclass" nillable="true" minOccurs="0" />
        <xs:element name="key" type="keyvalue" nillable="true" minOccurs="0" />
        <xs:element name="element" type="value" nillable="true" minOccurs="0" />
        <xs:element name="collection" type="table" nillable="true" minOccurs="0" />
        <xs:element name="role" type="xs:string" />
        <xs:element name="lazy" type="xs:anyType" />
        <xs:element name="extralazy" type="xs:anyType" />
        <xs:element name="inverse" type="xs:anyType" />
        <xs:element name="mutable" type="xs:anyType" />
        <xs:element name="subselectloadable" type="xs:anyType" />
        <xs:element name="cacheconcurrencystrategy" type="xs:string" />
        <xs:element name="cacheregionname" type="xs:string" />
        <xs:element name="orderby" type="xs:string" />
        <xs:element name="where" type="xs:string" />
        <xs:element name="manytomanywhere" type="xs:string" />
        <xs:element name="manytomanyorderby" type="xs:string" />
        <xs:element name="referencedpropertyname" type="xs:string" />
        <xs:element name="nodename" type="xs:string" />
        <xs:element name="elementnodename" type="xs:string" />
        <xs:element name="sorted" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="comparatorclassname" type="xs:string" />
        <xs:element name="orphandelete" type="xs:anyType" />
        <xs:element name="batchsize" type="xs:long" />
        <xs:element name="GeneratedName" type="fetchmode" nillable="true" minOccurs="0" />
        <xs:element name="embedded" type="xs:anyType" />
        <xs:element name="optimisticlocked" type="xs:anyType" />
        <xs:element name="collectionpersister" type="xs:anyType" />
        <xs:element name="typename" type="xs:string" />
        <xs:element name="typeparameters" type="xs:anyType" />
        <xs:element name="filters" type="xs:anyType" />
        <xs:element name="manytomanyfilters" type="xs:anyType" />
        <xs:element name="synchronizedtables" type="xs:anyType" />
        <xs:element name="customsqlinsert" type="xs:string" />
        <xs:element name="custominsertcallable" type="xs:anyType" />
        <xs:element name="insertcheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqlupdate" type="xs:string" />
        <xs:element name="customupdatecallable" type="xs:anyType" />
        <xs:element name="updatecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqldelete" type="xs:string" />
        <xs:element name="customdeletecallable" type="xs:anyType" />
        <xs:element name="deletecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqldeleteall" type="xs:string" />
        <xs:element name="customdeleteallcallable" type="xs:anyType" />
        <xs:element name="deleteallcheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="loadername" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomany" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="referencing" type="table" nillable="true" minOccurs="0" />
        <xs:element name="referencedentityname" type="xs:string" />
        <xs:element name="associatedclass" type="persistentclass" nillable="true" minOccurs="0" />
        <xs:element name="embedded" type="xs:anyType" />
        <xs:element name="ignorenotfound" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:complexContent>
       <xs:extension base="simplevalue">
         <xs:sequence>
          <xs:element name="properties" type="xs:anyType" />
          <xs:element name="componentclassname" type="xs:string" />
          <xs:element name="embedded" type="xs:anyType" />
          <xs:element name="parentproperty" type="xs:string" />
          <xs:element name="owner" type="persistentclass" nillable="true" minOccurs="0" />
          <xs:element name="dynamic" type="xs:anyType" />
          <xs:element name="metaattributes" type="map" nillable="true" minOccurs="0" />
          <xs:element name="nodename" type="xs:string" />
          <xs:element name="iskey" type="xs:anyType" />
          <xs:element name="rolename" type="xs:string" />
          <xs:element name="tuplizerimpls" type="xs:anyType" />
          <xs:element name="" type="type" nillable="true" minOccurs="0" />
          <xs:element name="built" type="identifiergenerator" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metaattributable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valuevisitor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idgenerator" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="identifiergeneratorstrategy" type="xs:string" />
        <xs:element name="params" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auxiliarydatabaseobject" >
      <xs:complexContent>
       <xs:extension base="relationalmodel,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="column" >
      <xs:sequence>
        <xs:element name="default_length" type="xs:long" />
        <xs:element name="default_precision" type="xs:long" />
        <xs:element name="default_scale" type="xs:long" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="precision" type="xs:long" />
        <xs:element name="scale" type="xs:long" />
        <xs:element name="GeneratedName" type="value" nillable="true" minOccurs="0" />
        <xs:element name="typeindex" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nullable" type="xs:anyType" />
        <xs:element name="unique" type="xs:anyType" />
        <xs:element name="sqltype" type="xs:string" />
        <xs:element name="sqltypecode" type="xs:anyType" />
        <xs:element name="quoted" type="xs:anyType" />
        <xs:element name="uniqueeger" type="xs:long" />
        <xs:element name="checkconstraint" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="defaultvalue" type="xs:string" />
        <xs:element name="customwrite" type="xs:string" />
        <xs:element name="customread" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappedsuperclass" >
      <xs:sequence>
        <xs:element name="super" type="mappedsuperclass" nillable="true" minOccurs="0" />
        <xs:element name="super" type="persistentclass" nillable="true" minOccurs="0" />
        <xs:element name="declaredproperties" type="list" nillable="true" minOccurs="0" />
        <xs:element name="mapped" type="xs:anyType" />
        <xs:element name="identifier" type="property" nillable="true" minOccurs="0" />
        <xs:element name="version" type="property" nillable="true" minOccurs="0" />
        <xs:element name="identifiermapper" type="component" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constraint" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="columns" type="list" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primitivearray" >
      <xs:complexContent>
       <xs:extension base="array">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="selectable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedef" >
      <xs:sequence>
        <xs:element name="typeclass" type="xs:string" />
        <xs:element name="parameters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formula" >
      <xs:sequence>
        <xs:element name="formulauniqueeger" type="xs:long" />
        <xs:element name="formula" type="xs:string" />
        <xs:element name="uniqueeger" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="map" >
      <xs:complexContent>
       <xs:extension base="indexedcollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleauxiliarydatabaseobject" >
      <xs:complexContent>
       <xs:extension base="abstractauxiliarydatabaseobject">
         <xs:sequence>
          <xs:element name="sqlcreate" type="xs:string" />
          <xs:element name="sqldrop" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="any" >
      <xs:complexContent>
       <xs:extension base="simplevalue">
         <xs:sequence>
          <xs:element name="identifiertypename" type="xs:string" />
          <xs:element name="metatypename" type="xs:string" />
          <xs:element name="metavalues" type="map" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentclassvisitor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="list" >
      <xs:complexContent>
       <xs:extension base="indexedcollection">
         <xs:sequence>
          <xs:element name="baseindex" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="toone" >
      <xs:complexContent>
       <xs:extension base="simplevalue">
         <xs:sequence>
          <xs:element name="" type="fetchmode" nillable="true" minOccurs="0" />
          <xs:element name="referencedpropertyname" type="xs:string" />
          <xs:element name="referencedentityname" type="xs:string" />
          <xs:element name="embedded" type="xs:anyType" />
          <xs:element name="lazy" type="xs:anyType" />
          <xs:element name="unwrapproxy" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchprofile" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="source" type="metadatasource" nillable="true" minOccurs="0" />
        <xs:element name="fetches" type="fetch" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singletablesubclass" >
      <xs:complexContent>
       <xs:extension base="subclass">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="denormalizedtable" >
      <xs:complexContent>
       <xs:extension base="table">
         <xs:sequence>
          <xs:element name="included" type="table" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclass" >
      <xs:complexContent>
       <xs:extension base="subclass">
         <xs:sequence>
          <xs:element name="" type="table" nillable="true" minOccurs="0" />
          <xs:element name="key" type="keyvalue" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentclass" >
      <xs:sequence>
        <xs:element name="pk_" type="alias" nillable="true" minOccurs="0" />
        <xs:element name="null_discriminator_mapping" type="xs:string" />
        <xs:element name="not_null_discriminator_mapping" type="xs:string" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="classname" type="xs:string" />
        <xs:element name="proxyinterfacename" type="xs:string" />
        <xs:element name="nodename" type="xs:string" />
        <xs:element name="jpaentityname" type="xs:string" />
        <xs:element name="discriminatorvalue" type="xs:string" />
        <xs:element name="lazy" type="xs:anyType" />
        <xs:element name="properties" type="xs:anyType" />
        <xs:element name="declaredproperties" type="xs:anyType" />
        <xs:element name="subclasses" type="xs:anyType" />
        <xs:element name="subclassproperties" type="xs:anyType" />
        <xs:element name="subclasstables" type="xs:anyType" />
        <xs:element name="dynamicinsert" type="xs:anyType" />
        <xs:element name="dynamicupdate" type="xs:anyType" />
        <xs:element name="batchsize" type="xs:long" />
        <xs:element name="selectbeforeupdate" type="xs:anyType" />
        <xs:element name="metaattributes" type="xs:anyType" />
        <xs:element name="joins" type="xs:anyType" />
        <xs:element name="subclassjoins" type="xs:anyType" />
        <xs:element name="filters" type="xs:anyType" />
        <xs:element name="synchronizedtables" type="xs:anyType" />
        <xs:element name="loadername" type="xs:string" />
        <xs:element name="isabstract" type="xs:anyType" />
        <xs:element name="hassubselectloadablecollections" type="xs:anyType" />
        <xs:element name="identifiermapper" type="component" nillable="true" minOccurs="0" />
        <xs:element name="//customsqlcustomsqlinsert" type="xs:string" />
        <xs:element name="custominsertcallable" type="xs:anyType" />
        <xs:element name="insertcheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqlupdate" type="xs:string" />
        <xs:element name="customupdatecallable" type="xs:anyType" />
        <xs:element name="updatecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqldelete" type="xs:string" />
        <xs:element name="customdeletecallable" type="xs:anyType" />
        <xs:element name="deletecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="temporaryidtablename" type="xs:string" />
        <xs:element name="temporaryidtableddl" type="xs:string" />
        <xs:element name="tuplizerimpls" type="xs:anyType" />
        <xs:element name="optimisticlockmode" type="xs:long" />
        <xs:element name="super" type="mappedsuperclass" nillable="true" minOccurs="0" />
        <xs:element name="declaredidentifiermapper" type="component" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoone" >
      <xs:complexContent>
       <xs:extension base="toone">
         <xs:sequence>
          <xs:element name="constrained" type="xs:anyType" />
          <xs:element name="foreignkeytype" type="foreignkeydirection" nillable="true" minOccurs="0" />
          <xs:element name="identifier" type="keyvalue" nillable="true" minOccurs="0" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bag" >
      <xs:complexContent>
       <xs:extension base="collection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foreignkey" >
      <xs:complexContent>
       <xs:extension base="constraint">
         <xs:sequence>
          <xs:element name="referenced" type="table" nillable="true" minOccurs="0" />
          <xs:element name="referencedentityname" type="xs:string" />
          <xs:element name="cascadedeleteenabled" type="xs:anyType" />
          <xs:element name="referencedcolumns" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="value" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="set" >
      <xs:complexContent>
       <xs:extension base="collection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="relationalmodel" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiercollection" >
      <xs:complexContent>
       <xs:extension base="collection">
         <xs:sequence>
          <xs:element name="default_identifier_column_name" type="xs:string" />
          <xs:element name="identifier" type="keyvalue" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="syntheticproperty" >
      <xs:complexContent>
       <xs:extension base="property">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="filterable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="join" >
      <xs:sequence>
        <xs:element name="pk_" type="alias" nillable="true" minOccurs="0" />
        <xs:element name="properties" type="xs:anyType" />
        <xs:element name="declaredproperties" type="xs:anyType" />
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="key" type="keyvalue" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="persistentclass" nillable="true" minOccurs="0" />
        <xs:element name="sequentialselect" type="xs:anyType" />
        <xs:element name="inverse" type="xs:anyType" />
        <xs:element name="optional" type="xs:anyType" />
        <xs:element name="//customsqlcustomsqlinsert" type="xs:string" />
        <xs:element name="custominsertcallable" type="xs:anyType" />
        <xs:element name="insertcheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqlupdate" type="xs:string" />
        <xs:element name="customupdatecallable" type="xs:anyType" />
        <xs:element name="updatecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="customsqldelete" type="xs:string" />
        <xs:element name="customdeletecallable" type="xs:anyType" />
        <xs:element name="deletecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="table" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="schema" type="xs:string" />
        <xs:element name="catalog" type="xs:string" />
        <xs:element name="/***containsallcolumns,includingtheprimarykey*/columns" type="map" nillable="true" minOccurs="0" />
        <xs:element name="idvalue" type="keyvalue" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="primarykey" nillable="true" minOccurs="0" />
        <xs:element name="indexes" type="map" nillable="true" minOccurs="0" />
        <xs:element name="foreignkeys" type="map" nillable="true" minOccurs="0" />
        <xs:element name="uniquekeys" type="map" nillable="true" minOccurs="0" />
        <xs:element name="uniqueeger" type="xs:long" />
        <xs:element name="quoted" type="xs:anyType" />
        <xs:element name="schemaquoted" type="xs:anyType" />
        <xs:element name="tablecounter" type="xs:long" />
        <xs:element name="checkconstraints" type="list" nillable="true" minOccurs="0" />
        <xs:element name="rowid" type="xs:string" />
        <xs:element name="subselect" type="xs:string" />
        <xs:element name="isabstract" type="xs:anyType" />
        <xs:element name="hasdenormalizedtables" type="xs:anyType" />
        <xs:element name="comment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexedcollection" >
      <xs:complexContent>
       <xs:extension base="collection">
         <xs:sequence>
          <xs:element name="default_index_column_name" type="xs:string" />
          <xs:element name="index" type="value" nillable="true" minOccurs="0" />
          <xs:element name="indexnodename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unionsubclass" >
      <xs:complexContent>
       <xs:extension base="subclass">
         <xs:sequence>
          <xs:element name="" type="table" nillable="true" minOccurs="0" />
          <xs:element name="key" type="keyvalue" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tableowner" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="backref" >
      <xs:complexContent>
       <xs:extension base="property">
         <xs:sequence>
          <xs:element name="collectionrole" type="xs:string" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexbackref" >
      <xs:complexContent>
       <xs:extension base="property">
         <xs:sequence>
          <xs:element name="collectionrole" type="xs:string" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="secondlevelcachestatisticsimpl" >
      <xs:complexContent>
       <xs:extension base="categorizedstatistics">
         <xs:sequence>
          <xs:element name="transient" type="region" nillable="true" minOccurs="0" />
          <xs:element name="hitcount" type="xs:long" />
          <xs:element name="misscount" type="xs:long" />
          <xs:element name="putcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionstatistics" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="concurrentstatisticsimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="perf_log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="volatileisstatisticsenabled" type="xs:anyType" />
        <xs:element name="volatilestarttime" type="xs:long" />
        <xs:element name="sessionopencount" type="xs:anyType" />
        <xs:element name="sessionclosecount" type="xs:anyType" />
        <xs:element name="flushcount" type="xs:anyType" />
        <xs:element name="connectcount" type="xs:anyType" />
        <xs:element name="preparestatementcount" type="xs:anyType" />
        <xs:element name="closestatementcount" type="xs:anyType" />
        <xs:element name="entityloadcount" type="xs:anyType" />
        <xs:element name="entityupdatecount" type="xs:anyType" />
        <xs:element name="entityinsertcount" type="xs:anyType" />
        <xs:element name="entitydeletecount" type="xs:anyType" />
        <xs:element name="entityfetchcount" type="xs:anyType" />
        <xs:element name="collectionloadcount" type="xs:anyType" />
        <xs:element name="collectionupdatecount" type="xs:anyType" />
        <xs:element name="collectionremovecount" type="xs:anyType" />
        <xs:element name="collectionrecreatecount" type="xs:anyType" />
        <xs:element name="collectionfetchcount" type="xs:anyType" />
        <xs:element name="secondlevelcachehitcount" type="xs:anyType" />
        <xs:element name="secondlevelcachemisscount" type="xs:anyType" />
        <xs:element name="secondlevelcacheputcount" type="xs:anyType" />
        <xs:element name="queryexecutioncount" type="xs:anyType" />
        <xs:element name="queryexecutionmaxtime" type="xs:anyType" />
        <xs:element name="volatilequeryexecutionmaxtimequery" type="xs:string" />
        <xs:element name="querycachehitcount" type="xs:anyType" />
        <xs:element name="querycachemisscount" type="xs:anyType" />
        <xs:element name="querycacheputcount" type="xs:anyType" />
        <xs:element name="committedtransactioncount" type="xs:anyType" />
        <xs:element name="transactioncount" type="xs:anyType" />
        <xs:element name="optimisticfailurecount" type="xs:anyType" />
        <xs:element name="/***secondlevelcachestatisticsperregion*/secondlevelcachestatistics" type="xs:anyType" />
        <xs:element name="/***entitystatisticspername*/entitystatistics" type="xs:anyType" />
        <xs:element name="/***collectionstatisticspername*/collectionstatistics" type="xs:anyType" />
        <xs:element name="/***entitystatisticsperquerystring(hqlorsql)*/querystatistics" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statistics" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrententitystatisticsimpl" >
      <xs:complexContent>
       <xs:extension base="categorizedstatistics">
         <xs:sequence>
          <xs:element name="loadcount" type="xs:anyType" />
          <xs:element name="updatecount" type="xs:anyType" />
          <xs:element name="insertcount" type="xs:anyType" />
          <xs:element name="deletecount" type="xs:anyType" />
          <xs:element name="fetchcount" type="xs:anyType" />
          <xs:element name="optimisticfailurecount" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="concurrentquerystatisticsimpl" >
      <xs:complexContent>
       <xs:extension base="categorizedstatistics">
         <xs:sequence>
          <xs:element name="cachehitcount" type="xs:anyType" />
          <xs:element name="cachemisscount" type="xs:anyType" />
          <xs:element name="cacheputcount" type="xs:anyType" />
          <xs:element name="executioncount" type="xs:anyType" />
          <xs:element name="executionrowcount" type="xs:anyType" />
          <xs:element name="executionmaxtime" type="xs:anyType" />
          <xs:element name="executionmintime" type="xs:anyType" />
          <xs:element name="totalexecutiontime" type="xs:anyType" />
          <xs:element name="read" type="xs:anyType" />
          <xs:element name="write" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionstatistics" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondlevelcachestatistics" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionstatisticsimpl" >
      <xs:sequence>
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statisticsimpl" >
      <xs:sequence>
        <xs:element name="//todo:weshouldprovidesomewaytogetkeysofcollectionofstatisticstomakeiteasiertoretrievefromaguiperspectivelog" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="isstatisticsenabled" type="xs:anyType" />
        <xs:element name="starttime" type="xs:long" />
        <xs:element name="sessionopencount" type="xs:long" />
        <xs:element name="sessionclosecount" type="xs:long" />
        <xs:element name="flushcount" type="xs:long" />
        <xs:element name="connectcount" type="xs:long" />
        <xs:element name="preparestatementcount" type="xs:long" />
        <xs:element name="closestatementcount" type="xs:long" />
        <xs:element name="entityloadcount" type="xs:long" />
        <xs:element name="entityupdatecount" type="xs:long" />
        <xs:element name="entityinsertcount" type="xs:long" />
        <xs:element name="entitydeletecount" type="xs:long" />
        <xs:element name="entityfetchcount" type="xs:long" />
        <xs:element name="collectionloadcount" type="xs:long" />
        <xs:element name="collectionupdatecount" type="xs:long" />
        <xs:element name="collectionremovecount" type="xs:long" />
        <xs:element name="collectionrecreatecount" type="xs:long" />
        <xs:element name="collectionfetchcount" type="xs:long" />
        <xs:element name="secondlevelcachehitcount" type="xs:long" />
        <xs:element name="secondlevelcachemisscount" type="xs:long" />
        <xs:element name="secondlevelcacheputcount" type="xs:long" />
        <xs:element name="queryexecutioncount" type="xs:long" />
        <xs:element name="queryexecutionmaxtime" type="xs:long" />
        <xs:element name="queryexecutionmaxtimequery" type="xs:string" />
        <xs:element name="querycachehitcount" type="xs:long" />
        <xs:element name="querycachemisscount" type="xs:long" />
        <xs:element name="querycacheputcount" type="xs:long" />
        <xs:element name="commitedtransactioncount" type="xs:long" />
        <xs:element name="transactioncount" type="xs:long" />
        <xs:element name="optimisticfailurecount" type="xs:long" />
        <xs:element name="/***secondlevelcachestatisticsperregion*/secondlevelcachestatistics" type="map" nillable="true" minOccurs="0" />
        <xs:element name="/***entitystatisticspername*/entitystatistics" type="map" nillable="true" minOccurs="0" />
        <xs:element name="/***collectionstatisticspername*/collectionstatistics" type="map" nillable="true" minOccurs="0" />
        <xs:element name="/***entitystatisticsperquerystring(hqlorsql)*/querystatistics" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentsecondlevelcachestatisticsimpl" >
      <xs:complexContent>
       <xs:extension base="categorizedstatistics">
         <xs:sequence>
          <xs:element name="transient" type="region" nillable="true" minOccurs="0" />
          <xs:element name="hitcount" type="xs:anyType" />
          <xs:element name="misscount" type="xs:anyType" />
          <xs:element name="putcount" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitystatistics" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionstatisticsimpl" >
      <xs:complexContent>
       <xs:extension base="categorizedstatistics">
         <xs:sequence>
          <xs:element name="loadcount" type="xs:long" />
          <xs:element name="fetchcount" type="xs:long" />
          <xs:element name="updatecount" type="xs:long" />
          <xs:element name="removecount" type="xs:long" />
          <xs:element name="recreatecount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="concurrentcollectionstatisticsimpl" >
      <xs:complexContent>
       <xs:extension base="categorizedstatistics">
         <xs:sequence>
          <xs:element name="loadcount" type="xs:anyType" />
          <xs:element name="fetchcount" type="xs:anyType" />
          <xs:element name="updatecount" type="xs:anyType" />
          <xs:element name="removecount" type="xs:anyType" />
          <xs:element name="recreatecount" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querystatistics" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querystatisticsimpl" >
      <xs:complexContent>
       <xs:extension base="categorizedstatistics">
         <xs:sequence>
          <xs:element name="/*package*/cachehitcount" type="xs:long" />
          <xs:element name="/*package*/cachemisscount" type="xs:long" />
          <xs:element name="/*package*/cacheputcount" type="xs:long" />
          <xs:element name="executioncount" type="xs:long" />
          <xs:element name="executionrowcount" type="xs:long" />
          <xs:element name="executionavgtime" type="xs:long" />
          <xs:element name="executionmaxtime" type="xs:long" />
          <xs:element name="executionmintime" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="categorizedstatistics" >
      <xs:sequence>
        <xs:element name="categoryname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitystatisticsimpl" >
      <xs:complexContent>
       <xs:extension base="categorizedstatistics">
         <xs:sequence>
          <xs:element name="loadcount" type="xs:long" />
          <xs:element name="updatecount" type="xs:long" />
          <xs:element name="insertcount" type="xs:long" />
          <xs:element name="deletecount" type="xs:long" />
          <xs:element name="fetchcount" type="xs:long" />
          <xs:element name="optimisticfailurecount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statisticsimplementor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typemismatchexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonuniqueresultexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyaccessexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="persistent" type="xs:anyType" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="wassetter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlockexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockmode" >
      <xs:sequence>
        <xs:element name="level" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="instances" type="map" nillable="true" minOccurs="0" />
        <xs:element name="*thisisthe"default"lockmode.*/none" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="/***asharedlock.objectsinthislockmodewerereadfrom*thedatabaseinthecurrenttransaction,ratherthanbeing*pulledfromacache.*/read" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name=".*@deprecatedinsteadusepessimistic_write*/upgrade" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name=".*/upgrade_nowait" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="(both*ofwhichthrowexceptionsifwriteisspecified).*/write" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="/***similiarto{@link#upgrade}exceptthat,forversionedentities,*itresultsinaforcedversionincrement.*@deprecatedinsteadusepessimistic_force_increment*/force" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="/***startofjavax.persistence.typeequivalentmodes*//***optimisticlyassumethattransactionwillnotexperiencecontentionfor*entities.theentityversionwillbeverifiednearthetransactionend.*/optimistic" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="/***optimisticlyassumethattransactionwillnotexperiencecontentionforentities.*theentityversionwillbeverifiedandincrementednearthetransactionend.*/optimistic_force_increment" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="/***implementedaspessimistic_write.*todo:introduceseparatesupportforpessimistic_read*/pessimistic_read" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="/***transactionwillobtainadatabaselockimmediately.*todo:addpessimistic_write_nowait*/pessimistic_write" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="/***transactionwillimmediatelyincrementtheentityversion.*/pessimistic_force_increment" type="lockmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidmappingexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
          <xs:element name="path" type="xs:string" />
          <xs:element name="type" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statelesssession" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachemode" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="isputenabled" type="xs:anyType" />
        <xs:element name="isgetenabled" type="xs:anyType" />
        <xs:element name="instances" type="map" nillable="true" minOccurs="0" />
        <xs:element name="/***thesessionmayreaditemsfromthecache,andadditemstothecache*/normal" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="/***thesessionwillneverinteractwiththecache,excepttoinvalidate*cacheitemswhenupdatesoccur*/ignore" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="/***thesessionmayreaditemsfromthecache,butwillnotadditems,*excepttoinvalidateitemswhenupdatesoccur*/get" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="/***thesessionwillneverreaditemsfromthecache,butwilladditems*tothecacheasitreadsthemfromthedatabase.*/put" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="acacherefresh*/refresh" type="cachemode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchingbatcherfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="connectionwrapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="borrowedconnectionproxy" >
      <xs:sequence>
        <xs:element name="proxy_interfaces" type="xs:anyType" />
        <xs:element name="GeneratedName" type="connectionmanager" nillable="true" minOccurs="0" />
        <xs:element name="useable" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonbatchingbatcher" >
      <xs:complexContent>
       <xs:extension base="abstractbatcher">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expectations" >
      <xs:complexContent>
       <xs:extension base="basicexpectation">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="usual_expected_count" type="xs:long" />
          <xs:element name="usual_param_position" type="xs:long" />
          <xs:element name="//variousinstances~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~none" type="expectation" nillable="true" minOccurs="0" />
          <xs:element name="basic" type="expectation" nillable="true" minOccurs="0" />
          <xs:element name="param" type="expectation" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="work" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbccontext" >
      <xs:complexContent>
       <xs:extension base="transactionfactory.context">
         <xs:sequence>
          <xs:element name="//todo:makethisthefactoryfor"entitymoderelated"sessions//alsomeansmakingthisthetargetoftransaction-synchandthe//thingthatknowshowtocascadethingsbetweenrelatedsessions////atthatpoint,perhapsthisthingisa"sessioncontext",and//connectionmanagerisa"jdbccontext"?a"sessioncontext"should//liveintheimplpackage...log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="owner" type="xs:anyType" />
          <xs:element name="" type="connectionmanager" nillable="true" minOccurs="0" />
          <xs:element name="transientistransactioncallbackregistered" type="xs:anyType" />
          <xs:element name="transienthibernate" type="transaction" nillable="true" minOccurs="0" />
          <xs:element name="jtasynchronization" type="callbackcoordinator" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="expectation" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonbatchingbatcherfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toomanyrowsaffectedexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="expectedrowcount" type="xs:long" />
          <xs:element name="actualrowcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbatcher" >
      <xs:sequence>
        <xs:element name="globalopenpreparedstatementcount" type="xs:long" />
        <xs:element name="globalopenresultsetcount" type="xs:long" />
        <xs:element name="openpreparedstatementcount" type="xs:long" />
        <xs:element name="openresultsetcount" type="xs:long" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="connectionmanager" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="batchupdate" type="xs:anyType" />
        <xs:element name="batchupdatesql" type="xs:string" />
        <xs:element name="statementstoclose" type="xs:anyType" />
        <xs:element name="resultsetstoclose" type="xs:anyType" />
        <xs:element name="lastquery" type="xs:anyType" />
        <xs:element name="releasing" type="xs:anyType" />
        <xs:element name="GeneratedName" type="interceptor" nillable="true" minOccurs="0" />
        <xs:element name="transactiontimeout" type="xs:long" />
        <xs:element name="istransactiontimeoutset" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batcherfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchingbatcher" >
      <xs:complexContent>
       <xs:extension base="abstractbatcher">
         <xs:sequence>
          <xs:element name="batchsize" type="xs:long" />
          <xs:element name="s" type="expectation" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="formatter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formatstyle" >
      <xs:sequence>
        <xs:element name="basic" type="formatstyle" nillable="true" minOccurs="0" />
        <xs:element name="ddl" type="formatstyle" nillable="true" minOccurs="0" />
        <xs:element name="none" type="formatstyle" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="formatter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlstatementlogger" >
      <xs:sequence>
        <xs:element name="//todo:for4.0//log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="logtostdout" type="xs:anyType" />
        <xs:element name="formatsql" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicformatterimpl" >
      <xs:sequence>
        <xs:element name="begin_clauses" type="set" nillable="true" minOccurs="0" />
        <xs:element name="end_clauses" type="set" nillable="true" minOccurs="0" />
        <xs:element name="logical" type="set" nillable="true" minOccurs="0" />
        <xs:element name="quantifiers" type="set" nillable="true" minOccurs="0" />
        <xs:element name="dml" type="set" nillable="true" minOccurs="0" />
        <xs:element name="misc" type="set" nillable="true" minOccurs="0" />
        <xs:element name="indent" type="xs:string" />
        <xs:element name="initial" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ddlformatterimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchedtoomanyrowsaffectedexception" >
      <xs:complexContent>
       <xs:extension base="toomanyrowsaffectedexception">
         <xs:sequence>
          <xs:element name="batchposition" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchfailedexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="connectionmanager" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="transientfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="releasemode" type="connectionreleasemode" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="xs:anyType" />
        <xs:element name="transientborrowed" type="xs:anyType" />
        <xs:element name="wasconnectionsupplied" type="xs:anyType" />
        <xs:element name="transient" type="batcher" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="interceptor" nillable="true" minOccurs="0" />
        <xs:element name="isclosed" type="xs:anyType" />
        <xs:element name="transientisflushing" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batcher" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryloader" >
      <xs:complexContent>
       <xs:extension base="basicloader">
         <xs:sequence>
          <xs:element name="/***thequerytranslatorthatisdelegatingtothisobject.*/querytranslator" type="querytranslatorimpl" nillable="true" minOccurs="0" />
          <xs:element name="entitypersisters" type="queryable" nillable="true" minOccurs="0" />
          <xs:element name="entityaliases" type="xs:string" />
          <xs:element name="sqlaliases" type="xs:string" />
          <xs:element name="sqlaliassuffixes" type="xs:string" />
          <xs:element name="includeinselect" type="xs:anyType" />
          <xs:element name="collectionsuffixes" type="xs:string" />
          <xs:element name="hasscalars" type="xs:anyType" />
          <xs:element name="scalarcolumnnames" type="xs:string" />
          <xs:element name="sqlresultsqueryreturns" type="type" nillable="true" minOccurs="0" />
          <xs:element name="sqlaliasbyentityalias" type="map" nillable="true" minOccurs="0" />
          <xs:element name="ownerassociationtypes" type="entitytype" nillable="true" minOccurs="0" />
          <xs:element name="owners" type="xs:long" />
          <xs:element name="entityeagerpropertyfetches" type="xs:anyType" />
          <xs:element name="collectionowners" type="xs:long" />
          <xs:element name="collectionpersisters" type="queryablecollection" nillable="true" minOccurs="0" />
          <xs:element name="selectlength" type="xs:long" />
          <xs:element name="implicit" type="resulttransformer" nillable="true" minOccurs="0" />
          <xs:element name="queryreturnaliases" type="xs:string" />
          <xs:element name="defaults" type="lockmode" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityaliases" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinwalker" >
      <xs:sequence>
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="associations" type="list" nillable="true" minOccurs="0" />
        <xs:element name="visitedassociationkeys" type="set" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="loadqueryinfluencers" nillable="true" minOccurs="0" />
        <xs:element name="suffixes" type="xs:string" />
        <xs:element name="collectionsuffixes" type="xs:string" />
        <xs:element name="persisters" type="loadable" nillable="true" minOccurs="0" />
        <xs:element name="owners" type="xs:long" />
        <xs:element name="ownerassociationtypes" type="entitytype" nillable="true" minOccurs="0" />
        <xs:element name="s" type="collectionpersister" nillable="true" minOccurs="0" />
        <xs:element name="collectionowners" type="xs:long" />
        <xs:element name="aliases" type="xs:string" />
        <xs:element name="GeneratedName" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="array" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionaliases" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loader" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="columnnamecache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertypath" >
      <xs:sequence>
        <xs:element name="parent" type="propertypath" nillable="true" minOccurs="0" />
        <xs:element name="property" type="xs:string" />
        <xs:element name="fullpath" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractentityjoinwalker" >
      <xs:complexContent>
       <xs:extension base="joinwalker">
         <xs:sequence>
          <xs:element name="persister" type="outerjoinloadable" nillable="true" minOccurs="0" />
          <xs:element name="alias" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generatedcollectionaliases" >
      <xs:sequence>
        <xs:element name="suffix" type="xs:string" />
        <xs:element name="keyaliases" type="xs:string" />
        <xs:element name="indexaliases" type="xs:string" />
        <xs:element name="elementaliases" type="xs:string" />
        <xs:element name="identifieralias" type="xs:string" />
        <xs:element name="userprovidedaliases" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionreturn" >
      <xs:complexContent>
       <xs:extension base="nonscalarreturn">
         <xs:sequence>
          <xs:element name="ownerentityname" type="xs:string" />
          <xs:element name="ownerproperty" type="xs:string" />
          <xs:element name="" type="collectionaliases" nillable="true" minOccurs="0" />
          <xs:element name="element" type="entityaliases" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchreturn" >
      <xs:complexContent>
       <xs:extension base="nonscalarreturn">
         <xs:sequence>
          <xs:element name="owner" type="nonscalarreturn" nillable="true" minOccurs="0" />
          <xs:element name="ownerproperty" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columncollectionaliases" >
      <xs:sequence>
        <xs:element name="keyaliases" type="xs:string" />
        <xs:element name="indexaliases" type="xs:string" />
        <xs:element name="elementaliases" type="xs:string" />
        <xs:element name="identifieralias" type="xs:string" />
        <xs:element name="userprovidedaliases" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionfetchreturn" >
      <xs:complexContent>
       <xs:extension base="fetchreturn">
         <xs:sequence>
          <xs:element name="" type="collectionaliases" nillable="true" minOccurs="0" />
          <xs:element name="element" type="entityaliases" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="return" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customquery" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonscalarreturn" >
      <xs:sequence>
        <xs:element name="alias" type="xs:string" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scalarreturn" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="columnalias" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customloader" >
      <xs:complexContent>
       <xs:extension base="loader">
         <xs:sequence>
          <xs:element name="//currently*not*cachableifautodiscovertypesisineffect(e.g."select*...")sql" type="xs:string" />
          <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
          <xs:element name="namedparameterbindpoints" type="map" nillable="true" minOccurs="0" />
          <xs:element name="entitypersisters" type="queryable" nillable="true" minOccurs="0" />
          <xs:element name="entiytowners" type="xs:long" />
          <xs:element name="" type="entityaliases" nillable="true" minOccurs="0" />
          <xs:element name="collectionpersisters" type="queryablecollection" nillable="true" minOccurs="0" />
          <xs:element name="collectionowners" type="xs:long" />
          <xs:element name="" type="collectionaliases" nillable="true" minOccurs="0" />
          <xs:element name="s" type="lockmode" nillable="true" minOccurs="0" />
          <xs:element name="sqlaliases//stringsqlaliassuffixesrowprocessor" type="xs:anyType" />
          <xs:element name="results" type="type" nillable="true" minOccurs="0" />
          <xs:element name="transformeraliases" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlqueryparser" >
      <xs:sequence>
        <xs:element name="hibernate_placeholder_prefix" type="xs:string" />
        <xs:element name="domain_placeholder" type="xs:string" />
        <xs:element name="catalog_placeholder" type="xs:string" />
        <xs:element name="schema_placeholder" type="xs:string" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="originalquery" type="xs:string" />
        <xs:element name="context" type="xs:anyType" />
        <xs:element name="namedparameters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="aliasesfound" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlcustomquery" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
        <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
        <xs:element name="namedparameterbindpoints" type="map" nillable="true" minOccurs="0" />
        <xs:element name="customqueryreturns" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlqueryreturnprocessor" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="queryreturns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" />
        <xs:element name="//listpersisters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="alias2owneralias" type="map" nillable="true" minOccurs="0" />
        <xs:element name="alias2persister" type="map" nillable="true" minOccurs="0" />
        <xs:element name="alias2suffix" type="map" nillable="true" minOccurs="0" />
        <xs:element name="alias2collectionpersister" type="map" nillable="true" minOccurs="0" />
        <xs:element name="alias2collectionsuffix" type="map" nillable="true" minOccurs="0" />
        <xs:element name="entitypropertyresults" type="map" nillable="true" minOccurs="0" />
        <xs:element name="collectionpropertyresults" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//listscalartypes" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="//listcollectionowneraliases" type="xs:long" />
        <xs:element name="collectionsuffixseed" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rootreturn" >
      <xs:complexContent>
       <xs:extension base="nonscalarreturn">
         <xs:sequence>
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="" type="entityaliases" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityfetchreturn" >
      <xs:complexContent>
       <xs:extension base="fetchreturn">
         <xs:sequence>
          <xs:element name="" type="entityaliases" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiplebagfetchexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="bagroles" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentityloader" >
      <xs:complexContent>
       <xs:extension base="outerjoinloader">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="persister" type="outerjoinloadable" nillable="true" minOccurs="0" />
          <xs:element name="uniquekey" type="type" nillable="true" minOccurs="0" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadeentityjoinwalker" >
      <xs:complexContent>
       <xs:extension base="abstractentityjoinwalker">
         <xs:sequence>
          <xs:element name="cascadeaction" type="cascadingaction" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityloader" >
      <xs:complexContent>
       <xs:extension base="abstractentityloader">
         <xs:sequence>
          <xs:element name="batchloader" type="xs:anyType" />
          <xs:element name="compositekeymanytoonetargetindices" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionelementloader" >
      <xs:complexContent>
       <xs:extension base="outerjoinloader">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="persister" type="outerjoinloadable" nillable="true" minOccurs="0" />
          <xs:element name="key" type="type" nillable="true" minOccurs="0" />
          <xs:element name="index" type="type" nillable="true" minOccurs="0" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uniqueentityloader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchingentityloader" >
      <xs:sequence>
        <xs:element name="s" type="loader" nillable="true" minOccurs="0" />
        <xs:element name="batchsizes" type="xs:long" />
        <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
        <xs:element name="id" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityjoinwalker" >
      <xs:complexContent>
       <xs:extension base="abstractentityjoinwalker">
         <xs:sequence>
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
          <xs:element name="compositekeymanytoonetargetindices" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadeentityloader" >
      <xs:complexContent>
       <xs:extension base="abstractentityloader">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicloader" >
      <xs:complexContent>
       <xs:extension base="loader">
         <xs:sequence>
          <xs:element name="no_suffix" type="xs:string" />
          <xs:element name="descriptors" type="entityaliases" nillable="true" minOccurs="0" />
          <xs:element name="collectiondescriptors" type="collectionaliases" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="outerjoinloader" >
      <xs:complexContent>
       <xs:extension base="basicloader">
         <xs:sequence>
          <xs:element name="persisters" type="loadable" nillable="true" minOccurs="0" />
          <xs:element name="s" type="collectionpersister" nillable="true" minOccurs="0" />
          <xs:element name="collectionowners" type="xs:long" />
          <xs:element name="aliases" type="xs:string" />
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
          <xs:element name="array" type="lockmode" nillable="true" minOccurs="0" />
          <xs:element name="owners" type="xs:long" />
          <xs:element name="ownerassociationtypes" type="entitytype" nillable="true" minOccurs="0" />
          <xs:element name="sql" type="xs:string" />
          <xs:element name="suffixes" type="xs:string" />
          <xs:element name="collectionsuffixes" type="xs:string" />
          <xs:element name="" type="loadqueryinfluencers" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criterialoader" >
      <xs:complexContent>
       <xs:extension base="outerjoinloader">
         <xs:sequence>
          <xs:element name="//todo:thisclassdependsdirectlyuponcriteriaimpl,//intheimplpackage...addacriteriaimplementor//interface//note:unlikeallotherloaders,thisoneisnot//multithreaded,orcacheable!!translator" type="criteriaquerytranslator" nillable="true" minOccurs="0" />
          <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
          <xs:element name="results" type="type" nillable="true" minOccurs="0" />
          <xs:element name="useraliases" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaquerytranslator" >
      <xs:sequence>
        <xs:element name="root_sql_alias" type="xs:string" />
        <xs:element name="outerquerytranslator" type="criteriaquery" nillable="true" minOccurs="0" />
        <xs:element name="rootcriteria" type="criteriaimpl" nillable="true" minOccurs="0" />
        <xs:element name="rootentityname" type="xs:string" />
        <xs:element name="rootsqlalias" type="xs:string" />
        <xs:element name="aliascount" type="xs:long" />
        <xs:element name="criteriaentitynames" type="map" nillable="true" minOccurs="0" />
        <xs:element name="criteriasqlalias" type="map" nillable="true" minOccurs="0" />
        <xs:element name="aliascriteria" type="map" nillable="true" minOccurs="0" />
        <xs:element name="associationpathcriteria" type="map" nillable="true" minOccurs="0" />
        <xs:element name="associationpathjointypes" type="map" nillable="true" minOccurs="0" />
        <xs:element name="withclause" type="map" nillable="true" minOccurs="0" />
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriajoinwalker" >
      <xs:complexContent>
       <xs:extension base="abstractentityjoinwalker">
         <xs:sequence>
          <xs:element name="//todo:addacriteriaimplementorinterface//thisclassdependsdirectlyuponcriteriaimplintheimplpackage...translator" type="criteriaquerytranslator" nillable="true" minOccurs="0" />
          <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
          <xs:element name="results" type="type" nillable="true" minOccurs="0" />
          <xs:element name="useraliases" type="xs:string" />
          <xs:element name="useralias" type="list" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnentityaliases" >
      <xs:complexContent>
       <xs:extension base="defaultentityaliases">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultentityaliases" >
      <xs:sequence>
        <xs:element name="suffixedkeycolumns" type="xs:string" />
        <xs:element name="suffixedversioncolumn" type="xs:string" />
        <xs:element name="suffixedpropertycolumns" type="xs:string" />
        <xs:element name="suffixeddiscriminatorcolumn" type="xs:string" />
        <xs:element name="suffix" type="xs:string" />
        <xs:element name="rowidalias" type="xs:string" />
        <xs:element name="userprovidedaliases" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outerjoinableassociation" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertypath" nillable="true" minOccurs="0" />
        <xs:element name="joinabletype" type="associationtype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="joinable" nillable="true" minOccurs="0" />
        <xs:element name="//belongtootherpersisterlhsalias" type="xs:string" />
        <xs:element name="lhscolumns" type="xs:string" />
        <xs:element name="rhsalias" type="xs:string" />
        <xs:element name="rhscolumns" type="xs:string" />
        <xs:element name="joype" type="xs:long" />
        <xs:element name="on" type="xs:string" />
        <xs:element name="enabledfilters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="hasrestriction" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanyjoinwalker" >
      <xs:complexContent>
       <xs:extension base="collectionjoinwalker">
         <xs:sequence>
          <xs:element name="onetomanypersister" type="queryablecollection" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselectonetomanyloader" >
      <xs:complexContent>
       <xs:extension base="onetomanyloader">
         <xs:sequence>
          <xs:element name="keys" type="xs:anyType" />
          <xs:element name="s" type="type" nillable="true" minOccurs="0" />
          <xs:element name="values" type="xs:anyType" />
          <xs:element name="namedparameters" type="map" nillable="true" minOccurs="0" />
          <xs:element name="namedparameterloc" type="map" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionloader" >
      <xs:complexContent>
       <xs:extension base="outerjoinloader">
         <xs:sequence>
          <xs:element name="collectionpersister" type="queryablecollection" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiccollectionjoinwalker" >
      <xs:complexContent>
       <xs:extension base="collectionjoinwalker">
         <xs:sequence>
          <xs:element name="collectionpersister" type="queryablecollection" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetomanyloader" >
      <xs:complexContent>
       <xs:extension base="collectionloader">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionjoinwalker" >
      <xs:complexContent>
       <xs:extension base="joinwalker">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subselectcollectionloader" >
      <xs:complexContent>
       <xs:extension base="basiccollectionloader">
         <xs:sequence>
          <xs:element name="keys" type="xs:anyType" />
          <xs:element name="s" type="type" nillable="true" minOccurs="0" />
          <xs:element name="values" type="xs:anyType" />
          <xs:element name="namedparameters" type="map" nillable="true" minOccurs="0" />
          <xs:element name="namedparameterloc" type="map" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchingcollectioninitializer" >
      <xs:sequence>
        <xs:element name="s" type="loader" nillable="true" minOccurs="0" />
        <xs:element name="batchsizes" type="xs:long" />
        <xs:element name="GeneratedName" type="collectionpersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basiccollectionloader" >
      <xs:complexContent>
       <xs:extension base="collectionloader">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectioninitializer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lrumap" >
      <xs:complexContent>
       <xs:extension base="linkedhashmap">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="maxentries" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcexceptionreporter" >
      <xs:complexContent>
       <xs:extension base="warninghandlerloggingsupport">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="default_exception_msg" type="xs:string" />
          <xs:element name="default_warning_msg" type="xs:string" />
          <xs:element name="standard_warning_handler" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringhelper" >
      <xs:sequence>
        <xs:element name="alias_truncate_length" type="xs:long" />
        <xs:element name="whitespace" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="markerobject" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyiterator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="map" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplemrucache" >
      <xs:sequence>
        <xs:element name="default_strong_ref_count" type="xs:long" />
        <xs:element name="strongreferencecount" type="xs:long" />
        <xs:element name="transientcache" type="lrumap" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlhelper" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="default_dtd_resolver" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterhelper" >
      <xs:sequence>
        <xs:element name="filternames" type="xs:string" />
        <xs:element name="filterconditions" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="byteshelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identityset" >
      <xs:sequence>
        <xs:element name="dump_value" type="xs:anyType" />
        <xs:element name="map" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="softlimitmrucache" >
      <xs:complexContent>
       <xs:extension base="softreference">
         <xs:sequence>
          <xs:element name="/***thedefaultstrongreferencecount.*/default_strong_ref_count" type="xs:long" />
          <xs:element name="/***thedefaultsoftreferencecount.*/default_soft_ref_count" type="xs:long" />
          <xs:element name="strongrefcount" type="xs:long" />
          <xs:element name="softrefcount" type="xs:long" />
          <xs:element name="transientstrongrefcache" type="lrumap" nillable="true" minOccurs="0" />
          <xs:element name="transientsoftrefcache" type="lrumap" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="equalshelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="comparablecomparator" >
      <xs:sequence>
        <xs:element name="instance" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singletoniterator" >
      <xs:sequence>
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="hasnext" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arrayhelper" >
      <xs:sequence>
        <xs:element name="true" type="xs:anyType" />
        <xs:element name="false" type="xs:anyType" />
        <xs:element name="empty__array" type="xs:string" />
        <xs:element name="empty__array" type="xs:long" />
        <xs:element name="empty__array" type="xs:anyType" />
        <xs:element name="empty__array" type="xs:anyType" />
        <xs:element name="empty__array" type="xs:anyType" />
        <xs:element name="empty__array" type="type" nillable="true" minOccurs="0" />
        <xs:element name="seed" type="xs:long" />
        <xs:element name="prime_numer" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dtdentityresolver" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="hibernate_namespace" type="xs:string" />
        <xs:element name="old_hibernate_namespace" type="xs:string" />
        <xs:element name="user_namespace" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identitymap" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="map" nillable="true" minOccurs="0" />
        <xs:element name="entryarray" type="xs:anyType" />
        <xs:element name="transientdirty" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinediterator" >
      <xs:sequence>
        <xs:element name="s" type="xs:anyType" />
        <xs:element name="s" type="xs:anyType" />
        <xs:element name="//indexofcurrentiteratorinthewrappediteratorsarraycurrentiteratorindex" type="xs:long" />
        <xs:element name="//thecurrentcurrent" type="xs:anyType" />
        <xs:element name="//thelastusedlastused" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertieshelper" >
      <xs:sequence>
        <xs:element name="placeholder_start" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cloneable" >
      <xs:sequence>
        <xs:element name="reader_method_args" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="confighelper" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="externalsessionfactoryconfig" >
      <xs:sequence>
        <xs:element name="mapresources" type="xs:string" />
        <xs:element name="dialect" type="xs:string" />
        <xs:element name="defaultschema" type="xs:string" />
        <xs:element name="defaultcatalog" type="xs:string" />
        <xs:element name="maximumfetchdepth" type="xs:string" />
        <xs:element name="jdbcfetchsize" type="xs:string" />
        <xs:element name="jdbcbatchsize" type="xs:string" />
        <xs:element name="batchversioneddataenabled" type="xs:string" />
        <xs:element name="jdbcscrollableresultsetenabled" type="xs:string" />
        <xs:element name="getgeneratedkeysenabled" type="xs:string" />
        <xs:element name="streamsforbinaryenabled" type="xs:string" />
        <xs:element name="reflectionoptimizationenabled" type="xs:string" />
        <xs:element name="querysubstitutions" type="xs:string" />
        <xs:element name="showsqlenabled" type="xs:string" />
        <xs:element name="commentsenabled" type="xs:string" />
        <xs:element name="cacheproviderclass" type="xs:string" />
        <xs:element name="cacheproviderconfig" type="xs:string" />
        <xs:element name="cacheregionprefix" type="xs:string" />
        <xs:element name="secondlevelcacheenabled" type="xs:string" />
        <xs:element name="minimalputsenabled" type="xs:string" />
        <xs:element name="querycacheenabled" type="xs:string" />
        <xs:element name="additionalproperties" type="map" nillable="true" minOccurs="0" />
        <xs:element name="excludedpropertynames" type="set" nillable="true" minOccurs="0" />
        <xs:element name="customlisteners" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emptyiterator" >
      <xs:sequence>
        <xs:element name="instance" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="calendarcomparator" >
      <xs:sequence>
        <xs:element name="instance" type="calendarcomparator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingreader" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="assumed_orm_xsd_version" type="xs:string" />
        <xs:element name="instance" type="mappingreader" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmldocumentimpl" >
      <xs:sequence>
        <xs:element name="tree" type="xs:anyType" />
        <xs:element name="GeneratedName" type="origin" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="originimpl" >
      <xs:sequence>
        <xs:element name="type" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmldocument" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="errorlogger" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="//capturetheinitialerrorerror" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="origin" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionhelper" >
      <xs:sequence>
        <xs:element name="minimum_initial_capacity" type="xs:long" />
        <xs:element name="load_factor" type="xs:double" />
        <xs:element name="empty_" type="list" nillable="true" minOccurs="0" />
        <xs:element name="empty_" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="empty_" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtahelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializationhelper" >
      <xs:complexContent>
       <xs:extension base="objectinputstream">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naminghelper" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflecthelper" >
      <xs:sequence>
        <xs:element name="//todo:thisdependencyiskindabadbasic_property_accessor" type="propertyaccessor" nillable="true" minOccurs="0" />
        <xs:element name="direct_property_accessor" type="propertyaccessor" nillable="true" minOccurs="0" />
        <xs:element name="no_param_signature" type="xs:anyType" />
        <xs:element name="no_params" type="xs:anyType" />
        <xs:element name="single_object_param_signature" type="xs:anyType" />
        <xs:element name="object_equals" type="xs:anyType" />
        <xs:element name="object_hashcode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate" >
      <xs:sequence>
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#boolean}instead.*/boolean" type="booleantype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#true_false}instead.*/true_false" type="truefalsetype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#yes_no}instead.*/yes_no" type="yesnotype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#byte}instead.*/byte" type="bytetype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#short}instead.*/short" type="shorttype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#integer}instead.*/integer" type="integertype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#long}instead.*/long" type="longtype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#float}instead.*/float" type="floattype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#double}instead.*/double" type="doubletype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#big_integer}instead.*/big_integer" type="bigintegertype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#big_decimal}instead.*/big_decimal" type="bigdecimaltype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#character}instead.*/character" type="charactertype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#string}instead.*/string" type="stringtype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#time}instead.*/time" type="timetype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#date}instead.*/date" type="datetype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#timestamp}instead.*/timestamp" type="timestamptype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#binary}instead.*/binary" type="binarytype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#wrapper_binary}instead.*/wrapper_binary" type="wrapperbinarytype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#char_array}instead.*/char_array" type="chararraytype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#character_array}instead.*/character_array" type="characterarraytype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#image}instead.*/image" type="imagetype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#text}instead.*/text" type="texttype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#materialized_blob}instead.*/materialized_blob" type="materializedblobtype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#materialized_clob}instead.*/materialized_clob" type="materializedclobtype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#blob}instead.*/blob" type="blobtype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#clob}instead.*/clob" type="clobtype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#wrapper_materialized_blob}instead.*/wrapper_materialized_blob" type="wrappedmaterializedblobtype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#wrapper_characters_clob}instead.*/wrapper_characters_clob" type="characterarrayclobtype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#characters_clob}instead.*/characters_clob" type="primitivecharacterarrayclobtype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#calendar}instead.*/calendar" type="calendartype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#calendar_date}instead.*/calendar_date" type="calendardatetype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#locale}instead.*/locale" type="localetype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#currency}instead.*/currency" type="currencytype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#timezone}instead.*/timezone" type="timezonetype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#class}instead.*/class" type="classtype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@linkorg.hibernate.type.standardbasictypes#serializable}instead.*/serializable" type="serializabletype" nillable="true" minOccurs="0" />
        <xs:element name="type.*@deprecateduse{@link#instance}instead.*/object" type="objecttype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityregion" >
      <xs:complexContent>
       <xs:extension base="transactionaldataregion">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nocachingregionfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityaccessstrategyadapter" >
      <xs:sequence>
        <xs:element name="region" type="entityregion" nillable="true" minOccurs="0" />
        <xs:element name="ccs" type="cacheconcurrencystrategy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="settings" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestampsregionadapter" >
      <xs:complexContent>
       <xs:extension base="basegeneraldataregionadapter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseregionadapter" >
      <xs:sequence>
        <xs:element name="underlying" type="cache" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="settings" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticcachesourceadapter" >
      <xs:sequence>
        <xs:element name="datadescription" type="cachedatadescription" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionregionadapter" >
      <xs:complexContent>
       <xs:extension base="basetransactionaldataregionadapter">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityregionadapter" >
      <xs:complexContent>
       <xs:extension base="basetransactionaldataregionadapter">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basegeneraldataregionadapter" >
      <xs:complexContent>
       <xs:extension base="baseregionadapter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basetransactionaldataregionadapter" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="metadata" type="cachedatadescription" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="regionfactorycacheproviderbridge" >
      <xs:sequence>
        <xs:element name="def_provider" type="xs:string" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cacheprovider" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="settings" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionaccessstrategyadapter" >
      <xs:sequence>
        <xs:element name="region" type="collectionregion" nillable="true" minOccurs="0" />
        <xs:element name="ccs" type="cacheconcurrencystrategy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="settings" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryresultsregionadapter" >
      <xs:complexContent>
       <xs:extension base="basegeneraldataregionadapter">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachedatadescriptionimpl" >
      <xs:sequence>
        <xs:element name="mutable" type="xs:anyType" />
        <xs:element name="versioned" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractjndiboundcacheprovider" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="cache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesstype" >
      <xs:sequence>
        <xs:element name="read_only" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="read_write" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="nonstrict_read_write" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="transactional" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="softlock" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionregionaccessstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityregionaccessstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="region" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterkey" >
      <xs:sequence>
        <xs:element name="filtername" type="xs:string" />
        <xs:element name="filterparameters" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querycache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querykey" >
      <xs:sequence>
        <xs:element name="sqlquery" type="xs:string" />
        <xs:element name="positionalparameters" type="type" nillable="true" minOccurs="0" />
        <xs:element name="positionalparametervalues" type="xs:anyType" />
        <xs:element name="namedparameters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="firstrow" type="xs:anyType" />
        <xs:element name="maxrows" type="xs:anyType" />
        <xs:element name="GeneratedName" type="entitymode" nillable="true" minOccurs="0" />
        <xs:element name="filterkeys" type="set" nillable="true" minOccurs="0" />
        <xs:element name="//theuserprovided,nottheoneusedwith"selectnew".heretoavoidmangling//transformed/non-transformedresults.customtransformer" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="/***forperformancereasons,thehashcodeiscachedhowever,itismarkedtransientsothatitcanbe*recalculatedaspartoftheserializationprocesswhichallowsdistributedquerycachestoworkproperly.*/transienthashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardquerycachefactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="regionfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readwritecache" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cache" nillable="true" minOccurs="0" />
        <xs:element name="nextlockid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticcache" >
      <xs:complexContent>
       <xs:extension base="cache">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheconcurrencystrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hashtablecacheprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachekey" >
      <xs:sequence>
        <xs:element name="key" type="xs:anyType" />
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="entityorrolename" type="xs:string" />
        <xs:element name="GeneratedName" type="entitymode" nillable="true" minOccurs="0" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestamper" >
      <xs:sequence>
        <xs:element name="counter" type="xs:long" />
        <xs:element name="time" type="xs:long" />
        <xs:element name="bin_digits" type="xs:long" />
        <xs:element name="one_ms" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generaldataregion" >
      <xs:complexContent>
       <xs:extension base="region">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readonlycache" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="cache" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonstrictreadwritecache" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="cache" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hashtablecache" >
      <xs:sequence>
        <xs:element name="hashtable" type="map" nillable="true" minOccurs="0" />
        <xs:element name="regionname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionaldataregion" >
      <xs:complexContent>
       <xs:extension base="region">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nocacheprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionawarecache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachedatadescription" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionalcache" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryresultsregion" >
      <xs:complexContent>
       <xs:extension base="generaldataregion">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestampsregion" >
      <xs:complexContent>
       <xs:extension base="generaldataregion">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nocachingenabledexception" >
      <xs:complexContent>
       <xs:extension base="cacheexception">
         <xs:sequence>
          <xs:element name="msg" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionregion" >
      <xs:complexContent>
       <xs:extension base="transactionaldataregion">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unstructuredcacheentry" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="structuredmapcacheentry" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheentrystructure" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheentry" >
      <xs:sequence>
        <xs:element name="disassembledstate" type="xs:anyType" />
        <xs:element name="subclass" type="xs:string" />
        <xs:element name="lazypropertiesareunfetched" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="structuredcollectioncacheentry" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="structuredcacheentry" >
      <xs:sequence>
        <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectioncacheentry" >
      <xs:sequence>
        <xs:element name="state" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticcachesource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardquerycache" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="cacheregion" type="queryresultsregion" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="updatetimestampscache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatetimestampscache" >
      <xs:sequence>
        <xs:element name="region_name" type="xs:string" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="readwritelock" type="xs:anyType" />
        <xs:element name="region" type="timestampsregion" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querycachefactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonuniqueobjectexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="identifier" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeymanytomany" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedquery" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedefs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ondelete" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anymetadefs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazytoone" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="any" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedqueries" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columntransformers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discriminatoroptions" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namednativequery" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discriminatorformula" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronize" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ondeleteaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="source" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flushmodetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="target" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchprofiles" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tuplizers" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loader" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlock" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sourcetype" >
      <xs:sequence>
        <xs:element name="typename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sorttype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generated" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterdefs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionofelements" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascade" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columns" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchsize" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="table" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchmode" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetch" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazycollectionoption" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persister" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filters" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notfound" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterdef" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="check" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkey" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderby" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselect" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesstype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlupdate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqldelete" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionid" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinformula" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="type" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namednativequeries" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anymetadef" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sort" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columntransformer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlinsert" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazytooneoption" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="forcediscriminator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheconcurrencystrategy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="accesstype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="where" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tuplizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="polymorphismtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultcheckstyle" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreignkey" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterjointable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metavalue" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="index" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formula" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedef" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wherejointable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joincolumnorformula" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notfoundaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterjointables" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlocktype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazycollection" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoany" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeytype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationtime" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachemodetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paramdef" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericgenerators" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexcolumn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqldeleteall" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchprofile" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joincolumnsorformulas" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tables" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pessimisticlockexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionfilterkeyparameterspecification" >
      <xs:sequence>
        <xs:element name="collectionrole" type="xs:string" />
        <xs:element name="key" type="type" nillable="true" minOccurs="0" />
        <xs:element name="queryparameterposition" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedparameterspecification" >
      <xs:complexContent>
       <xs:extension base="abstractexplicitparameterspecification">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versiontypeseedparameterspecification" >
      <xs:sequence>
        <xs:element name="type" type="versiontype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterspecification" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicfilterparameterspecification" >
      <xs:sequence>
        <xs:element name="filtername" type="xs:string" />
        <xs:element name="parametername" type="xs:string" />
        <xs:element name="definedparameter" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitparameterspecification" >
      <xs:complexContent>
       <xs:extension base="parameterspecification">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractexplicitparameterspecification" >
      <xs:sequence>
        <xs:element name="sourceline" type="xs:long" />
        <xs:element name="sourcecolumn" type="xs:long" />
        <xs:element name="expected" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="positionalparameterspecification" >
      <xs:complexContent>
       <xs:extension base="abstractexplicitparameterspecification">
         <xs:sequence>
          <xs:element name="hqlposition" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="query" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scrollmode" >
      <xs:sequence>
        <xs:element name="resultsettype" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="instances" type="map" nillable="true" minOccurs="0" />
        <xs:element name="/***@seejava.sql.resultset.type_forward_only*/forward_only" type="scrollmode" nillable="true" minOccurs="0" />
        <xs:element name="/***@seejava.sql.resultset.type_scroll_sensitive*/scroll_sensitive" type="scrollmode" nillable="true" minOccurs="0" />
        <xs:element name="/***notethatsincethehibernatesessionactsasacache,you*mightneedtoexpicitlyevictobjects,ifyouneedtosee*changesmadebyothertransactions.*@seejava.sql.resultset.type_scroll_insensitive*/scroll_insensitive" type="scrollmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobhelper" >
      <xs:complexContent>
       <xs:extension base="the">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="staleobjectstateexception" >
      <xs:complexContent>
       <xs:extension base="stalestateexception">
         <xs:sequence>
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="identifier" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionremoveaction" >
      <xs:complexContent>
       <xs:extension base="collectionaction">
         <xs:sequence>
          <xs:element name="emptysnapshot" type="xs:anyType" />
          <xs:element name="affectedowner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityaction" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="instance" type="xs:anyType" />
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="transientpersister" type="entitypersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityidentityinsertaction" >
      <xs:complexContent>
       <xs:extension base="entityaction">
         <xs:sequence>
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="isdelayed" type="xs:anyType" />
          <xs:element name="delayed" type="entitykey" nillable="true" minOccurs="0" />
          <xs:element name="//cacheentrycacheentrygeneratedid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityverifyversionprocess" >
      <xs:sequence>
        <xs:element name="/***@noinspectionfieldcanbelocal,unuseddeclaration*/" type="xs:anyType" />
        <xs:element name="entry" type="entityentry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bulkoperationcleanupaction" >
      <xs:sequence>
        <xs:element name="affectedtablespaces" type="xs:anyType" />
        <xs:element name="entitycleanups" type="xs:anyType" />
        <xs:element name="collectioncleanups" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionupdateaction" >
      <xs:complexContent>
       <xs:extension base="collectionaction">
         <xs:sequence>
          <xs:element name="emptysnapshot" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityinsertaction" >
      <xs:complexContent>
       <xs:extension base="entityaction">
         <xs:sequence>
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="version" type="xs:anyType" />
          <xs:element name="cacheentry" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionrecreateaction" >
      <xs:complexContent>
       <xs:extension base="collectionaction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionaction" >
      <xs:sequence>
        <xs:element name="transientpersister" type="collectionpersister" nillable="true" minOccurs="0" />
        <xs:element name="key" type="xs:anyType" />
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="collectionrole" type="xs:string" />
        <xs:element name="collection" type="persistentcollection" nillable="true" minOccurs="0" />
        <xs:element name="aftertransactionprocess" type="aftertransactioncompletionprocess" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitydeleteaction" >
      <xs:complexContent>
       <xs:extension base="entityaction">
         <xs:sequence>
          <xs:element name="version" type="xs:anyType" />
          <xs:element name="iscascadedeleteenabled" type="xs:anyType" />
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="lock" type="softlock" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="delayedpostinsertidentifier" >
      <xs:sequence>
        <xs:element name="sequence" type="xs:long" />
        <xs:element name="sequence" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityincrementversionprocess" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="entry" type="entityentry" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aftertransactioncompletionprocess" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="executable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityupdateaction" >
      <xs:complexContent>
       <xs:extension base="entityaction">
         <xs:sequence>
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="previousstate" type="xs:anyType" />
          <xs:element name="previousversion" type="xs:anyType" />
          <xs:element name="dirtyfields" type="xs:long" />
          <xs:element name="hasdirtycollection" type="xs:anyType" />
          <xs:element name="rowid" type="xs:anyType" />
          <xs:element name="nextversion" type="xs:anyType" />
          <xs:element name="cacheentry" type="xs:anyType" />
          <xs:element name="lock" type="softlock" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beforetransactioncompletionprocess" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unresolvableobjectexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="identifier" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="sqle" type="xs:anyType" />
          <xs:element name="sql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlqueryresultmappingbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytecodeprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classtransformer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflectionoptimizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractclasstransformerimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="classfilter" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="fieldfilter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyfactoryfactoryimpl" >
      <xs:sequence>
        <xs:element name="ize_filter" type="xs:anyType" />
        <xs:element name="callback_types" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bytecodeproviderimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflectionoptimizerimpl" >
      <xs:sequence>
        <xs:element name="transientinstantiationoptimizer" type="instantiationoptimizeradapter" nillable="true" minOccurs="0" />
        <xs:element name="transientaccessoptimizer" type="accessoptimizeradapter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instantiationoptimizeradapter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="fastclass" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accessoptimizeradapter" >
      <xs:sequence>
        <xs:element name="property_get_exception" type="xs:string" />
        <xs:element name="property_set_exception" type="xs:string" />
        <xs:element name="mapped" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cglibclasstransformer" >
      <xs:complexContent>
       <xs:extension base="abstractclasstransformerimpl">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="instrumentedclassloader" >
      <xs:complexContent>
       <xs:extension base="classloader">
         <xs:sequence>
          <xs:element name="" type="classtransformer" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicproxyfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyfactoryfactoryimpl" >
      <xs:sequence>
        <xs:element name="ize_filter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bytecodeproviderimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bulkaccessorexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="mycause" type="xs:anyType" />
          <xs:element name="index" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reflectionoptimizerimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transformingclassloader" >
      <xs:complexContent>
       <xs:extension base="classloader">
         <xs:sequence>
          <xs:element name="parent" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fieldhandler" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instantiationoptimizeradapter" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="fastclass" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accessoptimizeradapter" >
      <xs:sequence>
        <xs:element name="property_get_exception" type="xs:string" />
        <xs:element name="property_set_exception" type="xs:string" />
        <xs:element name="GeneratedName" type="bulkaccessor" nillable="true" minOccurs="0" />
        <xs:element name="mapped" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldfilter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bulkaccessorfactory" >
      <xs:sequence>
        <xs:element name="package_name_prefix" type="xs:string" />
        <xs:element name="bulkacessor_class_name" type="xs:string" />
        <xs:element name="object_class_name" type="xs:string" />
        <xs:element name="generated_getter_name" type="xs:string" />
        <xs:element name="generated_setter_name" type="xs:string" />
        <xs:element name="get_setter_desc" type="xs:string" />
        <xs:element name="throwable_class_name" type="xs:string" />
        <xs:element name="bulkexception_class_name" type="xs:string" />
        <xs:element name="counter" type="xs:long" />
        <xs:element name="targetbean" type="xs:anyType" />
        <xs:element name="getternames" type="xs:string" />
        <xs:element name="setternames" type="xs:string" />
        <xs:element name="types" type="xs:anyType" />
        <xs:element name="writedirectory" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="javassistclasstransformer" >
      <xs:complexContent>
       <xs:extension base="abstractclasstransformerimpl">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bulkaccessor" >
      <xs:sequence>
        <xs:element name="target" type="xs:anyType" />
        <xs:element name="getters,setters" type="xs:string" />
        <xs:element name="types" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fastclass" >
      <xs:sequence>
        <xs:element name="empty__array" type="xs:anyType" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldtransformer" >
      <xs:sequence>
        <xs:element name="each_read_method_prefix" type="xs:string" />
        <xs:element name="each_write_method_prefix" type="xs:string" />
        <xs:element name="field_handled_type_name" type="xs:string" />
        <xs:element name="handler_field_name" type="xs:string" />
        <xs:element name="field_handler_type_name" type="xs:string" />
        <xs:element name="handler_field_descriptor" type="xs:string" />
        <xs:element name="getfieldhandler_method_name" type="xs:string" />
        <xs:element name="setfieldhandler_method_name" type="xs:string" />
        <xs:element name="getfieldhandler_method_descriptor" type="xs:string" />
        <xs:element name="setfieldhandler_method_descriptor" type="xs:string" />
        <xs:element name="filter" type="fieldfilter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldhandled" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="logger" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instrumenter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cglibinstrumenter" >
      <xs:complexContent>
       <xs:extension base="abstractinstrumenter">
         <xs:sequence>
          <xs:element name="class_filter" type="basicclassfilter" nillable="true" minOccurs="0" />
          <xs:element name="provider" type="bytecodeproviderimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="executionexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractinstrumenter" >
      <xs:sequence>
        <xs:element name="zip_magic" type="xs:long" />
        <xs:element name="class_magic" type="xs:long" />
        <xs:element name="GeneratedName" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="javassistinstrumenter" >
      <xs:complexContent>
       <xs:extension base="abstractinstrumenter">
         <xs:sequence>
          <xs:element name="class_filter" type="basicclassfilter" nillable="true" minOccurs="0" />
          <xs:element name="provider" type="bytecodeproviderimpl" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyfactoryfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classfilter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bytecodehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicclassfilter" >
      <xs:sequence>
        <xs:element name="includedpackages" type="xs:string" />
        <xs:element name="includedclassnames" type="set" nillable="true" minOccurs="0" />
        <xs:element name="isallempty" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fieldfilter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classdescriptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryobserver" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="replicationmode" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="instances" type="map" nillable="true" minOccurs="0" />
        <xs:element name="/***throwanexceptionwhenarowalreadyexists.*/exception" type="replicationmode" nillable="true" minOccurs="0" />
        <xs:element name="/***ignorereplicatedentitieswhenarowalreadyexists.*/ignore" type="replicationmode" nillable="true" minOccurs="0" />
        <xs:element name="/***overwriteexistingrowswhenarowalreadyexists.*/overwrite" type="replicationmode" nillable="true" minOccurs="0" />
        <xs:element name="/***whenarowalreadyexists,choosethelatestversion.*/latest_version" type="replicationmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingnotfoundexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
          <xs:element name="path" type="xs:string" />
          <xs:element name="type" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hbmbinder" >
      <xs:complexContent>
       <xs:extension base="not">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionpropertyholder" >
      <xs:complexContent>
       <xs:extension base="abstractpropertyholder">
         <xs:sequence>
          <xs:element name="" type="collection" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="binderhelper" >
      <xs:sequence>
        <xs:element name="annotation__default" type="xs:string" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="primitive_names" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonesecondpass" >
      <xs:sequence>
        <xs:element name="mappedby" type="xs:string" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="ownerentity" type="xs:string" />
        <xs:element name="ownerproperty" type="xs:string" />
        <xs:element name="GeneratedName" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="ignorenotfound" type="xs:anyType" />
        <xs:element name="inferreddata" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="targetentity" type="xs:anyType" />
        <xs:element name="cascadeondelete" type="xs:anyType" />
        <xs:element name="optional" type="xs:anyType" />
        <xs:element name="cascadestrategy" type="xs:string" />
        <xs:element name="joincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="improvednamingstrategy" >
      <xs:sequence>
        <xs:element name="/***aconvenientsingletoninstance*/instance" type="namingstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertypreloadeddata" >
      <xs:sequence>
        <xs:element name="defaultaccess" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="returnedclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3joincolumn" >
      <xs:complexContent>
       <xs:extension base="ejb3column">
         <xs:sequence>
          <xs:element name="/***propertynamerepatedtothiscolumn*/referencedcolumn" type="xs:string" />
          <xs:element name="mappedby" type="xs:string" />
          <xs:element name="//propertynameonthemappedbysideifanymappedbypropertyname" type="xs:string" />
          <xs:element name="//tablenameonthemappedbysideifanymappedbytablename" type="xs:string" />
          <xs:element name="mappedbyentityname" type="xs:string" />
          <xs:element name="jpa2elementcollection" type="xs:anyType" />
          <xs:element name="manytomanyownersideentityname" type="xs:string" />
          <xs:element name="//keepitjdk1.4compliant//implicitwayno_reference" type="xs:long" />
          <xs:element name="//referencetothepkinanexplicitorderpk_reference" type="xs:long" />
          <xs:element name="//referencetononpkcolumnsnon_pk_reference" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3dtdentityresolver" >
      <xs:complexContent>
       <xs:extension base="dtdentityresolver">
         <xs:sequence>
          <xs:element name="instance" type="xs:anyType" />
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="resolved" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexcolumn" >
      <xs:complexContent>
       <xs:extension base="ejb3column">
         <xs:sequence>
          <xs:element name="base" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetmappingbinder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondarytablesecondpass" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="entitybinder" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="annotatedclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotatedclasstype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querysecondpass" >
      <xs:complexContent>
       <xs:extension base="secondpass">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="settings" >
      <xs:sequence>
        <xs:element name="//booleanshowsql//booleanformatsql" type="sqlstatementlogger" nillable="true" minOccurs="0" />
        <xs:element name="maximumfetchdepth" type="xs:anyType" />
        <xs:element name="querysubstitutions" type="map" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="jdbcbatchsize" type="xs:long" />
        <xs:element name="defaultbatchfetchsize" type="xs:long" />
        <xs:element name="scrollableresultsetsenabled" type="xs:anyType" />
        <xs:element name="getgeneratedkeysenabled" type="xs:anyType" />
        <xs:element name="defaultschemaname" type="xs:string" />
        <xs:element name="defaultcatalogname" type="xs:string" />
        <xs:element name="jdbcfetchsize" type="xs:anyType" />
        <xs:element name="sessionfactoryname" type="xs:string" />
        <xs:element name="autocreateschema" type="xs:anyType" />
        <xs:element name="autodropschema" type="xs:anyType" />
        <xs:element name="autoupdateschema" type="xs:anyType" />
        <xs:element name="autovalidateschema" type="xs:anyType" />
        <xs:element name="querycacheenabled" type="xs:anyType" />
        <xs:element name="structuredcacheentriesenabled" type="xs:anyType" />
        <xs:element name="secondlevelcacheenabled" type="xs:anyType" />
        <xs:element name="cacheregionprefix" type="xs:string" />
        <xs:element name="minimalputsenabled" type="xs:anyType" />
        <xs:element name="commentsenabled" type="xs:anyType" />
        <xs:element name="statisticsenabled" type="xs:anyType" />
        <xs:element name="jdbcbatchversioneddata" type="xs:anyType" />
        <xs:element name="identifierrollbackenabled" type="xs:anyType" />
        <xs:element name="flushbeforecompletionenabled" type="xs:anyType" />
        <xs:element name="autoclosesessionenabled" type="xs:anyType" />
        <xs:element name="GeneratedName" type="connectionreleasemode" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="regionfactory" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="querycachefactory" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="connectionprovider" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="transactionfactory" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="transactionmanagerlookup" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="batcherfactory" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="querytranslatorfactory" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlexceptionconverter" nillable="true" minOccurs="0" />
        <xs:element name="wrapresultsetsenabled" type="xs:anyType" />
        <xs:element name="orderupdatesenabled" type="xs:anyType" />
        <xs:element name="orderinsertsenabled" type="xs:anyType" />
        <xs:element name="default" type="entitymode" nillable="true" minOccurs="0" />
        <xs:element name="datadefinitionimplicitcommit" type="xs:anyType" />
        <xs:element name="datadefinitionintransactionsupported" type="xs:anyType" />
        <xs:element name="strictjpaqlcompliance" type="xs:anyType" />
        <xs:element name="namedquerystartupcheckingenabled" type="xs:anyType" />
        <xs:element name="GeneratedName" type="entitytuplizerfactory" nillable="true" minOccurs="0" />
        <xs:element name="checknullability" type="xs:anyType" />
        <xs:element name="//componenttuplizerfactorycomponenttuplizerfactorytodo:hhh-3517andhhh-1907//bytecodeproviderbytecodeprovider" type="jdbcsupport" nillable="true" minOccurs="0" />
        <xs:element name="importfiles" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="environment" >
      <xs:sequence>
        <xs:element name="implementortousewhenobtainingconnections*/connection_provider" type="xs:string" />
        <xs:element name="/***jdbcdriverclass*/driver" type="xs:string" />
        <xs:element name="/***jdbctransactionisolationlevel*/isolation" type="xs:string" />
        <xs:element name="/***jdbcurl*/url" type="xs:string" />
        <xs:element name="/***jdbcuser*/user" type="xs:string" />
        <xs:element name="/***jdbcpassword*/pass" type="xs:string" />
        <xs:element name="/***jdbcautocommitmode*/autocommit" type="xs:string" />
        <xs:element name="/***maximumnumberofinactiveconnectionsforhibernate'sconnectionpool*/pool_size" type="xs:string" />
        <xs:element name="jndiname*/datasource" type="xs:string" />
        <xs:element name="/***prefixforarbitraryjdbcconnectionproperties*/connection_prefix" type="xs:string" />
        <xs:element name="*/jndi_class" type="xs:string" />
        <xs:element name="*/jndi_url" type="xs:string" />
        <xs:element name="properties*/jndi_prefix" type="xs:string" />
        <xs:element name="*/session_factory_name" type="xs:string" />
        <xs:element name="/***hibernatesql{@linkorg.hibernate.dialect.dialect}class*/dialect" type="xs:string" />
        <xs:element name="/***{@linkorg.hibernate.dialect.resolver.dialectresolver}classestoregisterwiththe*{@linkorg.hibernate.dialect.resolver.dialectfactory}*/dialect_resolvers" type="xs:string" />
        <xs:element name="/***adefaultdatabaseschema(owner)nametouseforunqualifiedtablenames*/default_schema" type="xs:string" />
        <xs:element name="/***adefaultdatabasecatalognametouseforunqualifiedtablenames*/default_catalog" type="xs:string" />
        <xs:element name="/***enableloggingofgeneratedsqltotheconsole*/show_sql" type="xs:string" />
        <xs:element name="/***enableformattingofsqlloggedtotheconsole*/format_sql" type="xs:string" />
        <xs:element name="/***addcommentstothegeneratedsql*/use_sql_comments" type="xs:string" />
        <xs:element name="/***maximumdepthofouterjoinfetching*/max_fetch_depth" type="xs:string" />
        <xs:element name="/***thedefaultbatchsizeforbatchfetching*/default_batch_fetch_size" type="xs:string" />
        <xs:element name="streamstoread/writebinarydatafrom/tojdbc*/use_streams_for_binary" type="xs:string" />
        <xs:element name=",ie.theuserissupplyingjdbcconnections.*/use_scrollable_resultset" type="xs:string" />
        <xs:element name="/***tellsthejdbcdrivertoattempttoretrieverowidwiththejdbc3.0preparedstatement.getgeneratedkeys()*method.ingeneral,performancewillbebetterifthispropertyissettotrueandtheunderlying*jdbcdriversupportsgetgeneratedkeys().*/use_get_generated_keys" type="xs:string" />
        <xs:element name=",jdbcdriverdefaultsettingswillbeused.*/statement_fetch_size" type="xs:string" />
        <xs:element name="/***maximumjdbcbatchsize.anonzerovalueenablesbatchupdates.*/statement_batch_size" type="xs:string" />
        <xs:element name="/***selectacustombatcher.*/batch_strategy" type="xs:string" />
        <xs:element name="/***shouldversioneddatabeincludedinbatching?*/batch_versioned_data" type="xs:string" />
        <xs:element name="/***anxsltresourceusedtogenerate"custom"xml*/output_stylesheet" type="xs:string" />
        <xs:element name="/***maximumsizeofc3p0connectionpool*/c3p0_max_size" type="xs:string" />
        <xs:element name="/***minimumsizeofc3p0connectionpool*/c3p0_min_size" type="xs:string" />
        <xs:element name="/***maximumidletimeforc3p0connectionpool*/c3p0_timeout" type="xs:string" />
        <xs:element name="/***maximumsizeofc3p0statementcache*/c3p0_max_statements" type="xs:string" />
        <xs:element name="/***numberofconnectionsacquiredwhenpoolisexhausted*/c3p0_acquire_increment" type="xs:string" />
        <xs:element name="/***idletimebeforeac3p0pooledconnectionisvalidated*/c3p0_idle_test_period" type="xs:string" />
        <xs:element name="/***proxool/hibernatepropertyprefix*/proxool_prefix" type="xs:string" />
        <xs:element name=")*/proxool_xml" type="xs:string" />
        <xs:element name=")*/proxool_properties" type="xs:string" />
        <xs:element name=")*/proxool_existing_pool" type="xs:string" />
        <xs:element name=")*/proxool_pool_alias" type="xs:string" />
        <xs:element name="/***enableautomaticsessioncloseatendoftransaction*/auto_close_session" type="xs:string" />
        <xs:element name="callback*/flush_before_completion" type="xs:string" />
        <xs:element name="/***specifieshowhibernateshouldreleasejdbcconnections.*/release_connections" type="xs:string" />
        <xs:element name="/***contextscopingimplfor{@linkorg.hibernate.sessionfactory#getcurrentsession()}processing.*/current_session_context_class" type="xs:string" />
        <xs:element name="s*/transaction_strategy" type="xs:string" />
        <xs:element name="s*/default_transaction_strategy" type="xs:string" />
        <xs:element name="*/transaction_manager_strategy" type="xs:string" />
        <xs:element name="*/default_transaction_manager_strategy" type="xs:string" />
        <xs:element name="object*/user_transaction" type="xs:string" />
        <xs:element name="implementationclass*/cache_provider" type="xs:string" />
        <xs:element name="/***the{@linkorg.hibernate.cache.regionfactory}implementationclass*/cache_region_factory" type="xs:string" />
        <xs:element name="implementationclass*/cache_provider_config" type="xs:string" />
        <xs:element name="jndinamespace,ifpre-boundtojndi.*/cache_namespace" type="xs:string" />
        <xs:element name="/***enablethequerycache(disabledbydefault)*/use_query_cache" type="xs:string" />
        <xs:element name="implementationclass.*/query_cache_factory" type="xs:string" />
        <xs:element name="/***enablethesecond-levelcache(enabledbydefault)*/use_second_level_cache" type="xs:string" />
        <xs:element name="/***optimizethecacheforminimalputsinsteadofminimalgets*/use_minimal_puts" type="xs:string" />
        <xs:element name="regionnameprefix*/cache_region_prefix" type="xs:string" />
        <xs:element name="/***enableuseofstructuredsecond-levelcacheentries*/use_structured_cache" type="xs:string" />
        <xs:element name="/***enablestatisticscollection*/generate_statistics" type="xs:string" />
        <xs:element name="use_identifier_rollback" type="xs:string" />
        <xs:element name="/***usebytecodelibrariesoptimizedpropertyaccess*/use_reflection_optimizer" type="xs:string" />
        <xs:element name="/***theclassnameofthehqlqueryparserfactory*/query_translator" type="xs:string" />
        <xs:element name="/***acomma-separatedlistoftokensubstitutionstousewhentranslatingahibernate*querytosql*/query_substitutions" type="xs:string" />
        <xs:element name="*mainlyintendedfortestenvironments.*/query_startup_checking" type="xs:string" />
        <xs:element name=".*/hbm2ddl_auto" type="xs:string" />
        <xs:element name="*/hbm2ddl_import_files" type="xs:string" />
        <xs:element name="/***the{@linkorg.hibernate.exception.sqlexceptionconverter}touseforconvertingsqlexceptions*tohibernate'sjdbcexceptionhierarchy.thedefaultistousetheconfigured*{@linkorg.hibernate.dialect.dialect}'spreferredsqlexceptionconverter.*/sql_exception_converter" type="xs:string" />
        <xs:element name="/***enablewrappingofjdbcresultsetsinordertospeedupcolumnnamelookupsfor*brokenjdbcdrivers*/wrap_result_sets" type="xs:string" />
        <xs:element name="/***enableorderingofupdatestatementsbyprimarykeyvalue*/order_updates" type="xs:string" />
        <xs:element name="/***enableorderingofinsertstatementsforthepurposeofmoreefficientjdbcbatching.*/order_inserts" type="xs:string" />
        <xs:element name="/***theentitymodeinwhichsetthesessionopenedfromthesessionfactory.*/default_entity_mode" type="xs:string" />
        <xs:element name="/***thejacccontextidofthedeployment*/jacc_contextid" type="xs:string" />
        <xs:element name="/***shouldalldatabaseidentifiersbequoted.*/globally_quoted_identifiers" type="xs:string" />
        <xs:element name="/***enablenullabilitychecking.*raisesanexceptionifapropertymarkedasnot-nullisnull.*defaulttofalseifbeanvalidationispresentintheclasspathandhibernateannotationsisused,*trueotherwise.*/check_nullability" type="xs:string" />
        <xs:element name="bytecode_provider" type="xs:string" />
        <xs:element name="jpaql_strict_compliance" type="xs:string" />
        <xs:element name="/***whenusingpooled{@linkorg.hibernate.id.enhanced.optimizeroptimizers},preferinterpretingthe*databasevalueasthelower(lo)boundary.thedefaultistointerpretitasthehighboundary.*/prefer_pooled_values_lo" type="xs:string" />
        <xs:element name="/***themaximumnumberofstrongreferencesmaintainedby{@linkorg.hibernate.util.softlimitmrucache}.defaultis128.*/query_plan_cache_max_strong_references" type="xs:string" />
        <xs:element name="/***themaximumnumberofsoftreferencesmaintainedby{@linkorg.hibernate.util.softlimitmrucache}.defaultis2048.*/query_plan_cache_max_soft_references" type="xs:string" />
        <xs:element name="bytecode_provider_instance" type="bytecodeprovider" nillable="true" minOccurs="0" />
        <xs:element name="enable_binary_streams" type="xs:anyType" />
        <xs:element name="enable_reflection_optimizer" type="xs:anyType" />
        <xs:element name="jvm_supports_linked_hash_collections" type="xs:anyType" />
        <xs:element name="jvm_has_timestamp_bug" type="xs:anyType" />
        <xs:element name="jvm_has_jdk14_timestamp" type="xs:anyType" />
        <xs:element name="jvm_supports_get_generated_keys" type="xs:anyType" />
        <xs:element name="global_" type="xs:anyType" />
        <xs:element name="isolation_levels" type="xs:anyType" />
        <xs:element name="obsolete_properties" type="map" nillable="true" minOccurs="0" />
        <xs:element name="renamed_properties" type="map" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="verifyfetchprofilereferencesecondpass" >
      <xs:sequence>
        <xs:element name="fetchprofilename" type="xs:string" />
        <xs:element name="fetch" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3namingstrategy" >
      <xs:sequence>
        <xs:element name="instance" type="namingstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fksecondpass" >
      <xs:sequence>
        <xs:element name="value" type="simplevalue" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
        <xs:element name="/***uniquecounterisneededtodifferentiate2instancesoffksecondpass*astheyarecompared.*fairlyhackybutibmvmsometimesreturnsthesamehashcodefor2differentobjects*todoisitdoabletorelyontheejb3joincolumnnames?notsureattheycouldbeinferred*/uniquecounter" type="xs:long" />
        <xs:element name="globalcounter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pkdrivenbydefaultmapsidsecondpass" >
      <xs:sequence>
        <xs:element name="referencedentityname" type="xs:string" />
        <xs:element name="columns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
        <xs:element name="value" type="simplevalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyholderbuilder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="secondpass" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationbinder" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="default_cache_concurrency_strategy" type="cacheconcurrencystrategy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectnamesource" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadatasourcetype" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setsimplevaluetypesecondpass" >
      <xs:sequence>
        <xs:element name="binder" type="simplevaluebinder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyholder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3discriminatorcolumn" >
      <xs:complexContent>
       <xs:extension base="ejb3column">
         <xs:sequence>
          <xs:element name="default_discriminator_column_name" type="xs:string" />
          <xs:element name="default_discriminator_type" type="xs:string" />
          <xs:element name="default_discriminator_length" type="xs:long" />
          <xs:element name="discriminatortypename" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnsbuilder" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="nullability" nillable="true" minOccurs="0" />
        <xs:element name="property" type="xs:anyType" />
        <xs:element name="inferreddata" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitybinder" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="ejb3column" nillable="true" minOccurs="0" />
        <xs:element name="joincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="objectnamenormalizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toonebinder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="recoverableexception" >
      <xs:complexContent>
       <xs:extension base="annotationexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namingstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings" >
      <xs:complexContent>
       <xs:extension base="queue">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentpropertyholder" >
      <xs:complexContent>
       <xs:extension base="abstractpropertyholder">
         <xs:sequence>
          <xs:element name="//todointroduceaoverridetable()methodforcolumnsheldbysectableratherthanthehack//joinsperrealtablenameinclasspropertyholder" type="component" nillable="true" minOccurs="0" />
          <xs:element name="isorwithinembeddedid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accesstype" >
      <xs:sequence>
        <xs:element name="accesstype" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritancestate" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
        <xs:element name="/***hassibling(eithermappedsuperclassentity)*/hassiblings" type="xs:anyType" />
        <xs:element name="/***amotherentityisavailable*/hasparents" type="xs:anyType" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="isembeddablesuperclass" type="xs:anyType" />
        <xs:element name="inheritancestateperclass" type="xs:anyType" />
        <xs:element name="classestoprocessformappedsuperclass" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="hasidclassorembeddedid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typesafeactivator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="factory_property" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatetraversableresolver" >
      <xs:sequence>
        <xs:element name="associations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanvalidationeventlistener" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="xs:anyType" />
        <xs:element name="associationsperentitypersister" type="xs:anyType" />
        <xs:element name="GeneratedName" type="groupsperoperation" nillable="true" minOccurs="0" />
        <xs:element name="initialized" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupsperoperation" >
      <xs:sequence>
        <xs:element name="jpa_group_prefix" type="xs:string" />
        <xs:element name="hibernate_group_prefix" type="xs:string" />
        <xs:element name="default_groups" type="xs:anyType" />
        <xs:element name="empty_groups" type="xs:anyType" />
        <xs:element name="groupsperoperation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanvalidationactivator" >
      <xs:sequence>
        <xs:element name="bv_discovery_class" type="xs:string" />
        <xs:element name="type_safe_activator_class" type="xs:string" />
        <xs:element name="type_safe_ddl_method" type="xs:string" />
        <xs:element name="type_safe_activator_method" type="xs:string" />
        <xs:element name="mode_property" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uniqueconstraintholder" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="columns" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyinferreddata" >
      <xs:sequence>
        <xs:element name="defaultaccess" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="property" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="declaringclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetmappingsecondpass" >
      <xs:complexContent>
       <xs:extension base="resultsetmappingbinder">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="path" type="xs:string" />
          <xs:element name="" type="mappings" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultnamingstrategy" >
      <xs:sequence>
        <xs:element name="/***thesingletoninstance*/instance" type="namingstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertydata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extendsqueueentry" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
          <xs:element name="explicitname" type="xs:string" />
          <xs:element name="mappingpackage" type="xs:string" />
          <xs:element name="metadataxml" type="xmldocument" nillable="true" minOccurs="0" />
          <xs:element name="entitynames" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatesearcheventlistenerregister" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="/***classnameoftheclassneededtoenablesearch.*/full_text_index_event_listener_class" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedsqlquerysecondpass" >
      <xs:complexContent>
       <xs:extension base="resultsetmappingbinder">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="queryelem" type="xs:anyType" />
          <xs:element name="path" type="xs:string" />
          <xs:element name="" type="mappings" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configuration" >
      <xs:complexContent>
       <xs:extension base="secondpass>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="/***settingusedtogivethenameofthedefault{@linkorg.hibernate.annotations.cacheconcurrencystrategy}*tousewheneither{@linkjavax.persistence.cacheable@cacheable}or*{@linkorg.hibernate.annotations.cache@cache}isused.{@linkorg.hibernate.annotations.cache@cache(strategy" type="xs:string" />
          <xs:element name="/***settingwhichindicateswhetherornotthenew{@linkorg.hibernate.id.identifiergenerator}areused*forauto,tableandsequence.*defaulttofalsetokeepbackwardcompatibility.*/use_new_id_generator_mappings" type="xs:string" />
          <xs:element name="artefact_processing_order" type="xs:string" />
          <xs:element name="/***classnameoftheclassneededtoenablesearch.*/search_startup_class" type="xs:string" />
          <xs:element name="/***methodtocalltoenablesearch.*/search_startup_method" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="transient" type="xs:anyType" />
          <xs:element name="classes" type="xs:anyType" />
          <xs:element name="imports" type="xs:anyType" />
          <xs:element name="collections" type="xs:anyType" />
          <xs:element name="tables" type="xs:anyType" />
          <xs:element name="auxiliarydatabaseobjects" type="auxiliarydatabaseobject" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="namedqueries" type="xs:anyType" />
          <xs:element name="namedsqlqueries" type="xs:anyType" />
          <xs:element name="sqlresultsetmappings" type="xs:anyType" />
          <xs:element name="typedefs" type="xs:anyType" />
          <xs:element name="filterdefinitions" type="xs:anyType" />
          <xs:element name="fetchprofiles" type="xs:anyType" />
          <xs:element name="tablenamebinding" type="map" nillable="true" minOccurs="0" />
          <xs:element name="columnnamebindingpertable" type="map" nillable="true" minOccurs="0" />
          <xs:element name="secondpasses" type="secondpass" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="propertyreferences" type="xs:anyType" />
          <xs:element name="extendsqueue" type="xs:anyType" />
          <xs:element name="sqlfunctions" type="xs:anyType" />
          <xs:element name="" type="typeresolver" nillable="true" minOccurs="0" />
          <xs:element name="" type="entitytuplizerfactory" nillable="true" minOccurs="0" />
          <xs:element name="//componenttuplizerfactorycomponenttuplizerfactorytodo:hhh-3517andhhh-1907" type="interceptor" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="entitynotfounddelegate" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="xmlhelper" nillable="true" minOccurs="0" />
          <xs:element name="" type="namingstrategy" nillable="true" minOccurs="0" />
          <xs:element name="" type="persisterclassprovider" nillable="true" minOccurs="0" />
          <xs:element name="" type="sessionfactoryobserver" nillable="true" minOccurs="0" />
          <xs:element name="" type="eventlisteners" nillable="true" minOccurs="0" />
          <xs:element name="" type="settingsfactory" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="mapping" nillable="true" minOccurs="0" />
          <xs:element name="identifiergeneratorfactory" type="defaultidentifiergeneratorfactory" nillable="true" minOccurs="0" />
          <xs:element name="mappedsuperclasses" type="xs:anyType" />
          <xs:element name="namedgenerators" type="xs:anyType" />
          <xs:element name="joins" type="xs:anyType" />
          <xs:element name="classtypes" type="xs:anyType" />
          <xs:element name="defaultnamedquerynames" type="xs:anyType" />
          <xs:element name="defaultnamednativequerynames" type="xs:anyType" />
          <xs:element name="defaultsqlresultsetmappingnames" type="xs:anyType" />
          <xs:element name="defaultnamedgenerators" type="xs:anyType" />
          <xs:element name="generatortables" type="xs:anyType" />
          <xs:element name="uniqueconstraintholdersbytable" type="xs:anyType" />
          <xs:element name="mappedbyresolver" type="xs:anyType" />
          <xs:element name="propertyrefresolver" type="xs:anyType" />
          <xs:element name="anymetadefs" type="xs:anyType" />
          <xs:element name="caches" type="xs:anyType" />
          <xs:element name="insecondpass" type="xs:anyType" />
          <xs:element name="isdefaultprocessed" type="xs:anyType" />
          <xs:element name="isvalidatornotpresentlogged" type="xs:anyType" />
          <xs:element name="propertiesannotatedwithmapsid" type="xs:anyType" />
          <xs:element name="propertiesannotatedwithidandtoone" type="xs:anyType" />
          <xs:element name="specjproprietarysyntaxenabled" type="xs:anyType" />
          <xs:element name="legacy_validator_event_listener" type="xs:string" />
          <xs:element name="search_event_listener_registerer_class" type="xs:string" />
          <xs:element name="normalizer" type="objectnamenormalizer" nillable="true" minOccurs="0" />
          <xs:element name="default_artefact_processing_order" type="metadatasourcetype" nillable="true" minOccurs="0" />
          <xs:element name="metadatasourceprecedence" type="metadatasourcetype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrappedinferreddata" >
      <xs:sequence>
        <xs:element name="wrappedinferreddata" type="propertydata" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="createkeysecondpass" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="rootclass" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="joinedsubclass" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpropertyholder" >
      <xs:sequence>
        <xs:element name="parent" type="abstractpropertyholder" nillable="true" minOccurs="0" />
        <xs:element name="holdercolumnoverride" type="xs:anyType" />
        <xs:element name="currentpropertycolumnoverride" type="xs:anyType" />
        <xs:element name="holderjoincolumnoverride" type="xs:anyType" />
        <xs:element name="currentpropertyjoincolumnoverride" type="xs:anyType" />
        <xs:element name="holderjointableoverride" type="xs:anyType" />
        <xs:element name="currentpropertyjointableoverride" type="xs:anyType" />
        <xs:element name="path" type="xs:string" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="isinidclass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extendedmappings" >
      <xs:complexContent>
       <xs:extension base="mappings">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertycontainer" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="explicitclassdefined" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="fieldaccessmap" type="xs:anyType" />
        <xs:element name="propertyaccessmap" type="xs:anyType" />
        <xs:element name="/***theclassforwhichthiscontaineriscreated.*/" type="xs:anyType" />
        <xs:element name="entityatstake" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idbagbinder" >
      <xs:complexContent>
       <xs:extension base="bagbinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bagbinder" >
      <xs:complexContent>
       <xs:extension base="collectionbinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querybinder" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaoverridenannotationreader" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="annotationtoxml" type="xs:anyType" />
          <xs:element name="schema_validation" type="xs:string" />
          <xs:element name="" type="filter" nillable="true" minOccurs="0" />
          <xs:element name="" type="xmlcontext" nillable="true" minOccurs="0" />
          <xs:element name="classname" type="xs:string" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="s" type="xs:anyType" />
          <xs:element name="annotationsmap" type="xs:anyType" />
          <xs:element name="word_separator" type="xs:string" />
          <xs:element name="transientelementsforproperty" type="xs:anyType" />
          <xs:element name="mirroredattribute" type="xs:anyType" />
          <xs:element name="element" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlcontext" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="globals" type="xs:anyType" />
        <xs:element name="classoverriding" type="xs:anyType" />
        <xs:element name="defaultsoverriding" type="xs:anyType" />
        <xs:element name="defaultelements" type="xs:anyType" />
        <xs:element name="defaultentitylisteners" type="xs:anyType" />
        <xs:element name="hascontext" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpametadataprovider" >
      <xs:sequence>
        <xs:element name="transientdelegate" type="xs:anyType" />
        <xs:element name="defaults" type="xs:anyType" />
        <xs:element name="cache" type="xs:anyType" />
        <xs:element name="//alloftheabovecanbesafelyrebuiltfrom:onlythisobjectisserialized" type="xmlcontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primitivearraybinder" >
      <xs:complexContent>
       <xs:extension base="arraybinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplevaluebinder" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="returnedclassname" type="xs:string" />
        <xs:element name="columns" type="ejb3column" nillable="true" minOccurs="0" />
        <xs:element name="persistentclassname" type="xs:string" />
        <xs:element name="explicittype" type="xs:string" />
        <xs:element name="typeparameters" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="simplevalue" nillable="true" minOccurs="0" />
        <xs:element name="isversion" type="xs:anyType" />
        <xs:element name="timestampversiontype" type="xs:string" />
        <xs:element name="//isamapkeykey" type="xs:anyType" />
        <xs:element name="referencedentityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionbinder" >
      <xs:complexContent>
       <xs:extension base="collectionpersister>">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="collection" nillable="true" minOccurs="0" />
          <xs:element name="propertyname" type="xs:string" />
          <xs:element name="" type="propertyholder" nillable="true" minOccurs="0" />
          <xs:element name="batchsize" type="xs:long" />
          <xs:element name="mappedby" type="xs:string" />
          <xs:element name="collectiontype" type="xs:anyType" />
          <xs:element name="targetentity" type="xs:anyType" />
          <xs:element name="" type="mappings" nillable="true" minOccurs="0" />
          <xs:element name="inversejoincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
          <xs:element name="cascadestrategy" type="xs:string" />
          <xs:element name="cacheconcurrencystrategy" type="xs:string" />
          <xs:element name="cacheregionname" type="xs:string" />
          <xs:element name="onetomany" type="xs:anyType" />
          <xs:element name="" type="indexcolumn" nillable="true" minOccurs="0" />
          <xs:element name="orderby" type="xs:string" />
          <xs:element name="hqlorderby" type="xs:string" />
          <xs:element name="issorted" type="xs:anyType" />
          <xs:element name="comparator" type="xs:anyType" />
          <xs:element name="hastobesorted" type="xs:anyType" />
          <xs:element name="cascadedeleteenabled" type="xs:anyType" />
          <xs:element name="mapkeypropertyname" type="xs:string" />
          <xs:element name="insertable" type="xs:anyType" />
          <xs:element name="updatable" type="xs:anyType" />
          <xs:element name="fkjoincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
          <xs:element name="isexplicitassociationtable" type="xs:anyType" />
          <xs:element name="elementcolumns" type="ejb3column" nillable="true" minOccurs="0" />
          <xs:element name="isembedded" type="xs:anyType" />
          <xs:element name="property" type="xs:anyType" />
          <xs:element name="ignorenotfound" type="xs:anyType" />
          <xs:element name="" type="tablebinder" nillable="true" minOccurs="0" />
          <xs:element name="mapkeycolumns" type="ejb3column" nillable="true" minOccurs="0" />
          <xs:element name="mapkeymanytomanycolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
          <xs:element name="localgenerators" type="xs:anyType" />
          <xs:element name="inheritancestateperclass" type="xs:anyType" />
          <xs:element name="declaringclass" type="xs:anyType" />
          <xs:element name="declaringclassset" type="xs:anyType" />
          <xs:element name="" type="accesstype" nillable="true" minOccurs="0" />
          <xs:element name="hibernateextensionmapping" type="xs:anyType" />
          <xs:element name="joincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraybinder" >
      <xs:complexContent>
       <xs:extension base="listbinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapbinder" >
      <xs:complexContent>
       <xs:extension base="collectionbinder">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nullability" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setbinder" >
      <xs:complexContent>
       <xs:extension base="collectionbinder">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitybinder" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="annotatedclass" type="xs:anyType" />
        <xs:element name="GeneratedName" type="persistentclass" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="discriminatorvalue" type="xs:string" />
        <xs:element name="forcediscriminator" type="xs:anyType" />
        <xs:element name="insertablediscriminator" type="xs:anyType" />
        <xs:element name="dynamicinsert" type="xs:anyType" />
        <xs:element name="dynamicupdate" type="xs:anyType" />
        <xs:element name="explicithibernateentityannotation" type="xs:anyType" />
        <xs:element name="GeneratedName" type="optimisticlocktype" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="polymorphismtype" nillable="true" minOccurs="0" />
        <xs:element name="selectbeforeupdate" type="xs:anyType" />
        <xs:element name="batchsize" type="xs:long" />
        <xs:element name="lazy" type="xs:anyType" />
        <xs:element name="proxyclass" type="xs:anyType" />
        <xs:element name="where" type="xs:string" />
        <xs:element name="secondarytables" type="xs:anyType" />
        <xs:element name="secondarytablejoins" type="xs:anyType" />
        <xs:element name="cacheconcurrentstrategy" type="xs:string" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="filters" type="xs:anyType" />
        <xs:element name="GeneratedName" type="inheritancestate" nillable="true" minOccurs="0" />
        <xs:element name="ignoreidannotations" type="xs:anyType" />
        <xs:element name="cachelazyproperty" type="xs:anyType" />
        <xs:element name="property" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="wrapidsinembeddedcomponents" type="xs:anyType" />
        <xs:element name="subselect" type="xs:string" />
        <xs:element name="sec_tbl_ns_helper" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customizablecolumns" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="s" type="column" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablebinder" >
      <xs:sequence>
        <xs:element name="//todomoveittoagetter/setterstrategylog" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="schema" type="xs:string" />
        <xs:element name="catalog" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="isabstract" type="xs:anyType" />
        <xs:element name="uniqueconstraints" type="uniqueconstraintholder" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="uniqueconstraintsconstraints" type="xs:string" />
        <xs:element name="denormalizedsuper" type="table" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="ownerentitytable" type="xs:string" />
        <xs:element name="associatedentitytable" type="xs:string" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="ownerentity" type="xs:string" />
        <xs:element name="associatedentity" type="xs:string" />
        <xs:element name="isjpa2elementcollection" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertybinder" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="returnedclassname" type="xs:string" />
        <xs:element name="lazy" type="xs:anyType" />
        <xs:element name="GeneratedName" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="ejb3column" nillable="true" minOccurs="0" />
        <xs:element name="holder" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="value" nillable="true" minOccurs="0" />
        <xs:element name="insertable" type="xs:anyType" />
        <xs:element name="updatable" type="xs:anyType" />
        <xs:element name="cascade" type="xs:string" />
        <xs:element name="GeneratedName" type="simplevaluebinder" nillable="true" minOccurs="0" />
        <xs:element name="declaringclass" type="xs:anyType" />
        <xs:element name="declaringclassset" type="xs:anyType" />
        <xs:element name="embedded" type="xs:anyType" />
        <xs:element name="GeneratedName" type="entitybinder" nillable="true" minOccurs="0" />
        <xs:element name="isxtomany" type="xs:anyType" />
        <xs:element name="referencedentityname" type="xs:string" />
        <xs:element name="/*			*propertycanbenull			*preferpropertynametoproperty.getname()sincesomeareoverloaded			*/property" type="xs:anyType" />
        <xs:element name="returnedclass" type="xs:anyType" />
        <xs:element name="isid" type="xs:anyType" />
        <xs:element name="inheritancestateperclass" type="xs:anyType" />
        <xs:element name="mapping" type="property" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="listbinder" >
      <xs:complexContent>
       <xs:extension base="collectionbinder">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapkeycolumndelegator" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="column" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetmappingsecondpass" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="ann" type="xs:anyType" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="isdefault" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeyjoincolumndelegator" >
      <xs:complexContent>
       <xs:extension base="annotation>">
         <xs:sequence>
          <xs:element name="column" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="copyidentifiercomponentsecondpass" >
      <xs:sequence>
        <xs:element name="referencedentityname" type="xs:string" />
        <xs:element name="GeneratedName" type="component" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="joincolumns" type="ejb3joincolumn" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classpropertyholder" >
      <xs:complexContent>
       <xs:extension base="abstractpropertyholder">
         <xs:sequence>
          <xs:element name="" type="persistentclass" nillable="true" minOccurs="0" />
          <xs:element name="joins" type="xs:anyType" />
          <xs:element name="joinsperrealtablename" type="xs:anyType" />
          <xs:element name="" type="entitybinder" nillable="true" minOccurs="0" />
          <xs:element name="inheritancestateperclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclassfksecondpass" >
      <xs:complexContent>
       <xs:extension base="fksecondpass">
         <xs:sequence>
          <xs:element name="entity" type="joinedsubclass" nillable="true" minOccurs="0" />
          <xs:element name="" type="mappings" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3column" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="mapping" type="column" nillable="true" minOccurs="0" />
        <xs:element name="insertable" type="xs:anyType" />
        <xs:element name="updatable" type="xs:anyType" />
        <xs:element name="secondarytablename" type="xs:string" />
        <xs:element name="joins" type="xs:anyType" />
        <xs:element name="GeneratedName" type="propertyholder" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="isimplicit" type="xs:anyType" />
        <xs:element name="default_column_length" type="xs:long" />
        <xs:element name="sqltype" type="xs:string" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="precision" type="xs:long" />
        <xs:element name="scale" type="xs:long" />
        <xs:element name="logicalcolumnname" type="xs:string" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="unique" type="xs:anyType" />
        <xs:element name="nullable" type="xs:anyType" />
        <xs:element name="formula" type="xs:string" />
        <xs:element name="GeneratedName" type="formula" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="readexpression" type="xs:string" />
        <xs:element name="writeexpression" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="settingsfactory" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="def_cache_reg_factory" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultcomponentsafenamingstrategy" >
      <xs:complexContent>
       <xs:extension base="ejb3namingstrategy">
         <xs:sequence>
          <xs:element name="instance" type="namingstrategy" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notyetimplementedexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexoruniquekeysecondpass" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="table" nillable="true" minOccurs="0" />
        <xs:element name="indexname" type="xs:string" />
        <xs:element name="columns" type="xs:string" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="column" type="ejb3column" nillable="true" minOccurs="0" />
        <xs:element name="unique" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="annotationconfiguration" >
      <xs:complexContent>
       <xs:extension base="configuration">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionsecondpass" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mappings" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="collection" nillable="true" minOccurs="0" />
        <xs:element name="localinheritedmetas" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toonefksecondpass" >
      <xs:complexContent>
       <xs:extension base="fksecondpass">
         <xs:sequence>
          <xs:element name="unique" type="xs:anyType" />
          <xs:element name="" type="mappings" nillable="true" minOccurs="0" />
          <xs:element name="path" type="xs:string" />
          <xs:element name="entityclassname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertynotfoundexception" >
      <xs:complexContent>
       <xs:extension base="mappingexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querytimeoutexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typelocatorimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="typeresolver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchingscrollableresultsimpl" >
      <xs:complexContent>
       <xs:extension base="abstractscrollableresults">
         <xs:sequence>
          <xs:element name="currentrow" type="xs:anyType" />
          <xs:element name="currentposition" type="xs:long" />
          <xs:element name="maxposition" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractqueryimpl" >
      <xs:sequence>
        <xs:element name="unset_parameter" type="xs:anyType" />
        <xs:element name="unset_type" type="xs:anyType" />
        <xs:element name="query" type="xs:string" />
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="parametermetadata" nillable="true" minOccurs="0" />
        <xs:element name="//parameterbindvalues...values" type="list" nillable="true" minOccurs="0" />
        <xs:element name="types" type="list" nillable="true" minOccurs="0" />
        <xs:element name="namedparameters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="namedparameterlists" type="map" nillable="true" minOccurs="0" />
        <xs:element name="optional" type="xs:anyType" />
        <xs:element name="optionalid" type="xs:anyType" />
        <xs:element name="optionalentityname" type="xs:string" />
        <xs:element name="selection" type="rowselection" nillable="true" minOccurs="0" />
        <xs:element name="cacheable" type="xs:anyType" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="GeneratedName" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="session" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="session" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="collectionkey" type="xs:anyType" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="GeneratedName" type="resulttransformer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterimpl" >
      <xs:sequence>
        <xs:element name="marker" type="xs:string" />
        <xs:element name="transientdefinition" type="filterdefinition" nillable="true" minOccurs="0" />
        <xs:element name="filtername" type="xs:string" />
        <xs:element name="parameters" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="uuid_generator" type="identifiergenerator" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="transiententitypersisters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="classmetadata" type="xs:anyType" />
        <xs:element name="transientcollectionpersisters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="transientcollectionmetadata" type="map" nillable="true" minOccurs="0" />
        <xs:element name="collectionrolesbyentityparticipant" type="xs:anyType" />
        <xs:element name="transientidentifiergenerators" type="map" nillable="true" minOccurs="0" />
        <xs:element name="transientnamedqueries" type="map" nillable="true" minOccurs="0" />
        <xs:element name="transientnamedsqlqueries" type="map" nillable="true" minOccurs="0" />
        <xs:element name="transientsqlresultsetpings" type="map" nillable="true" minOccurs="0" />
        <xs:element name="transientfilters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="transientfetchprofiles" type="map" nillable="true" minOccurs="0" />
        <xs:element name="transientimports" type="map" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="interceptor" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="settings" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="xs:anyType" />
        <xs:element name="transient" type="schemaexport" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="xs:anyType" />
        <xs:element name="transient" type="querycache" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="updatetimestampscache" nillable="true" minOccurs="0" />
        <xs:element name="querycaches" type="xs:anyType" />
        <xs:element name="allcacheregions" type="xs:anyType" />
        <xs:element name="transient" type="statistics" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="eventlisteners" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="currentsessioncontext" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="entitynotfounddelegate" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="sqlfunctionregistry" nillable="true" minOccurs="0" />
        <xs:element name="transientobserver" type="sessionfactoryobserver" nillable="true" minOccurs="0" />
        <xs:element name="transiententitynameresolvers" type="xs:anyType" />
        <xs:element name="transient" type="queryplancache" nillable="true" minOccurs="0" />
        <xs:element name="transientaccess" type="cache" nillable="true" minOccurs="0" />
        <xs:element name="transientisclosed" type="xs:anyType" />
        <xs:element name="transient" type="typeresolver" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="typehelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scrollableresultsimpl" >
      <xs:complexContent>
       <xs:extension base="abstractscrollableresults">
         <xs:sequence>
          <xs:element name="currentrow" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statelesssessionimpl" >
      <xs:complexContent>
       <xs:extension base="abstractsessionimpl">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="" type="jdbccontext" nillable="true" minOccurs="0" />
          <xs:element name="temporary" type="persistencecontext" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactoryobjectfactory" >
      <xs:sequence>
        <xs:element name="//tostoptheclassfrombeingunloadedinstance" type="sessionfactoryobjectfactory" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="instances" type="xs:anyType" />
        <xs:element name="named_instances" type="xs:anyType" />
        <xs:element name="listener" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaimpl" >
      <xs:sequence>
        <xs:element name="entityorclassname" type="xs:string" />
        <xs:element name="transientsession" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="rootalias" type="xs:string" />
        <xs:element name="criterionentries" type="list" nillable="true" minOccurs="0" />
        <xs:element name="orderentries" type="list" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="projection" nillable="true" minOccurs="0" />
        <xs:element name="projection" type="criteria" nillable="true" minOccurs="0" />
        <xs:element name="subcriteria" type="list" nillable="true" minOccurs="0" />
        <xs:element name="fetchmodes" type="map" nillable="true" minOccurs="0" />
        <xs:element name="lockmodes" type="map" nillable="true" minOccurs="0" />
        <xs:element name="maxresults" type="xs:anyType" />
        <xs:element name="firstresult" type="xs:anyType" />
        <xs:element name="timeout" type="xs:anyType" />
        <xs:element name="fetchsize" type="xs:anyType" />
        <xs:element name="cacheable" type="xs:anyType" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="GeneratedName" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="session" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="session" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="GeneratedName" type="resulttransformer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonflushedchangesimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="nonflushedchangesbyentitymode" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractscrollableresults" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="ps" type="xs:anyType" />
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="loader" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="queryparameters" nillable="true" minOccurs="0" />
        <xs:element name="s" type="type" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="holderinstantiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionfilterimpl" >
      <xs:complexContent>
       <xs:extension base="queryimpl">
         <xs:sequence>
          <xs:element name="collection" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsessionimpl" >
      <xs:sequence>
        <xs:element name="transientfactory" type="sessionfactoryimpl" nillable="true" minOccurs="0" />
        <xs:element name="closed" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlqueryimpl" >
      <xs:complexContent>
       <xs:extension base="abstractqueryimpl">
         <xs:sequence>
          <xs:element name="queryreturns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="queryreturnbuilders" type="xs:anyType" />
          <xs:element name="autodiscovertypes" type="xs:anyType" />
          <xs:element name="queryspaces" type="xs:anyType" />
          <xs:element name="callable" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iteratorimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="rs" type="xs:anyType" />
        <xs:element name="session" type="eventsource" nillable="true" minOccurs="0" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="s" type="type" nillable="true" minOccurs="0" />
        <xs:element name="single" type="xs:anyType" />
        <xs:element name="currentresult" type="xs:anyType" />
        <xs:element name="hasnext" type="xs:anyType" />
        <xs:element name="names" type="xs:string" />
        <xs:element name="ps" type="xs:anyType" />
        <xs:element name="GeneratedName" type="holderinstantiator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionimpl" >
      <xs:complexContent>
       <xs:extension base="abstractsessionimpl">
         <xs:sequence>
          <xs:element name="//todo:needtofindacleanwaytohandlethe"eventsource"role//aseperateclasssresponsibleforgenerating/dispatchingeventsjustduplicatesmostofthesessionmethods...//passingaroundseperateretointerceptor,factory,actionqueue,andpersistentcontextisnotmanageable...log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="entitymode" nillable="true" minOccurs="0" />
          <xs:element name="//forejb3transientautoclear" type="xs:anyType" />
          <xs:element name="transienttimestamp" type="xs:long" />
          <xs:element name="transient" type="flushmode" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="cachemode" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="interceptor" nillable="true" minOccurs="0" />
          <xs:element name="transientdontflushfromfind" type="xs:long" />
          <xs:element name="transient" type="actionqueue" nillable="true" minOccurs="0" />
          <xs:element name="transientpersistencecontext" type="statefulpersistencecontext" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="jdbccontext" nillable="true" minOccurs="0" />
          <xs:element name="transientlisteners" type="eventlisteners" nillable="true" minOccurs="0" />
          <xs:element name="transientflushbeforecompletionenabled" type="xs:anyType" />
          <xs:element name="transientautoclosesessionenabled" type="xs:anyType" />
          <xs:element name="transient" type="connectionreleasemode" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="loadqueryinfluencers" nillable="true" minOccurs="0" />
          <xs:element name="transientroot" type="session" nillable="true" minOccurs="0" />
          <xs:element name="transientchildsessionsbyentitymode" type="map" nillable="true" minOccurs="0" />
          <xs:element name="transient" type="entitynameresolver" nillable="true" minOccurs="0" />
          <xs:element name="transientlobhelper" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryimpl" >
      <xs:complexContent>
       <xs:extension base="abstractqueryimpl">
         <xs:sequence>
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionfactorystub" >
      <xs:sequence>
        <xs:element name="uuid_generator" type="identifiergenerator" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="transientimpl" type="sessionfactory" nillable="true" minOccurs="0" />
        <xs:element name="transientservice" type="hibernateservice" nillable="true" minOccurs="0" />
        <xs:element name="uuid" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateservice" >
      <xs:complexContent>
       <xs:extension base="externalsessionfactoryconfig">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="boundname" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statisticsservicembean" >
      <xs:complexContent>
       <xs:extension base="statistics">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statisticsservice" >
      <xs:sequence>
        <xs:element name="//todo:weprobablyshouldhaveastatisticsnotpublishedexception,tomakeitcleansf" type="sessionfactory" nillable="true" minOccurs="0" />
        <xs:element name="sfjndiname" type="xs:string" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="stats" type="statistics" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateservicembean" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="messagehelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="printer" >
      <xs:sequence>
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sybase11joinfragment" >
      <xs:complexContent>
       <xs:extension base="joinfragment">
         <xs:sequence>
          <xs:element name="afterfrom" type="xs:anyType" />
          <xs:element name="afterwhere" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertselect" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="tablename" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="columnnames" type="list" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="select" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="disjunctionfragment" >
      <xs:sequence>
        <xs:element name="buffer" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="template" >
      <xs:sequence>
        <xs:element name="keywords" type="xs:anyType" />
        <xs:element name="before_table_keywords" type="xs:anyType" />
        <xs:element name="function_keywords" type="xs:anyType" />
        <xs:element name="template" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="update" >
      <xs:sequence>
        <xs:element name="tablename" type="xs:string" />
        <xs:element name="versioncolumnname" type="xs:string" />
        <xs:element name="where" type="xs:string" />
        <xs:element name="assignments" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="primarykeycolumns" type="map" nillable="true" minOccurs="0" />
        <xs:element name="columns" type="map" nillable="true" minOccurs="0" />
        <xs:element name="wherecolumns" type="map" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="delete" >
      <xs:sequence>
        <xs:element name="tablename" type="xs:string" />
        <xs:element name="versioncolumnname" type="xs:string" />
        <xs:element name="where" type="xs:string" />
        <xs:element name="primarykeycolumns" type="map" nillable="true" minOccurs="0" />
        <xs:element name="comment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alias" >
      <xs:sequence>
        <xs:element name="length" type="xs:long" />
        <xs:element name="suffix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ansicasefragment" >
      <xs:complexContent>
       <xs:extension base="casefragment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ansijoinfragment" >
      <xs:complexContent>
       <xs:extension base="joinfragment">
         <xs:sequence>
          <xs:element name="buffer" type="xs:anyType" />
          <xs:element name="conditions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclejoinfragment" >
      <xs:complexContent>
       <xs:extension base="joinfragment">
         <xs:sequence>
          <xs:element name="afterfrom" type="xs:anyType" />
          <xs:element name="afterwhere" type="xs:anyType" />
          <xs:element name="operators" type="set" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleselect" >
      <xs:sequence>
        <xs:element name="//aliasdefault_alias" type="xs:string" />
        <xs:element name="orderby" type="xs:string" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="columns" type="list" nillable="true" minOccurs="0" />
        <xs:element name="aliases" type="map" nillable="true" minOccurs="0" />
        <xs:element name="wheretokens" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryjoinfragment" >
      <xs:complexContent>
       <xs:extension base="joinfragment">
         <xs:sequence>
          <xs:element name="afterfrom" type="xs:anyType" />
          <xs:element name="afterwhere" type="xs:anyType" />
          <xs:element name="" type="dialect" nillable="true" minOccurs="0" />
          <xs:element name="usethetastyleinnerjoins" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="conditionfragment" >
      <xs:sequence>
        <xs:element name="tablealias" type="xs:string" />
        <xs:element name="lhs" type="xs:string" />
        <xs:element name="rhs" type="xs:string" />
        <xs:element name="op" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryselect" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="joins" type="joinfragment" nillable="true" minOccurs="0" />
        <xs:element name="select" type="xs:anyType" />
        <xs:element name="where" type="xs:anyType" />
        <xs:element name="groupby" type="xs:anyType" />
        <xs:element name="orderby" type="xs:anyType" />
        <xs:element name="having" type="xs:anyType" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="distinct" type="xs:anyType" />
        <xs:element name="dont_space_tokens" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="decodecasefragment" >
      <xs:complexContent>
       <xs:extension base="casefragment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbyfragmentrenderer" >
      <xs:complexContent>
       <xs:extension base="generatedorderbyfragmentrenderer">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="printer" type="astprinter" nillable="true" minOccurs="0" />
          <xs:element name="//handletracelogging~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~tracedepth" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbyfragment" >
      <xs:complexContent>
       <xs:extension base="nodesupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="translationcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortkey" >
      <xs:complexContent>
       <xs:extension base="nodesupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortspecification" >
      <xs:complexContent>
       <xs:extension base="nodesupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="factory" >
      <xs:complexContent>
       <xs:extension base="astfactory">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collationspecification" >
      <xs:complexContent>
       <xs:extension base="nodesupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderbyfragmenttranslator" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="context" type="translationcontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbyfragmentparser" >
      <xs:complexContent>
       <xs:extension base="generatedorderbyfragmentparser">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="context" type="translationcontext" nillable="true" minOccurs="0" />
          <xs:element name="//handletracelogging~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~tracedepth" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderingspecification" >
      <xs:complexContent>
       <xs:extension base="nodesupport">
         <xs:sequence>
          <xs:element name="resolved" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nodesupport" >
      <xs:complexContent>
       <xs:extension base="commonast">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="infragment" >
      <xs:sequence>
        <xs:element name="null" type="xs:string" />
        <xs:element name="not_null" type="xs:string" />
        <xs:element name="columnname" type="xs:string" />
        <xs:element name="values" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectfragment" >
      <xs:sequence>
        <xs:element name="suffix" type="xs:string" />
        <xs:element name="columns" type="list" nillable="true" minOccurs="0" />
        <xs:element name="//aliases" type="list" nillable="true" minOccurs="0" />
        <xs:element name="extraselectlist" type="xs:string" />
        <xs:element name="usedaliases" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aliasgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="casefragment" >
      <xs:sequence>
        <xs:element name="returncolumnname" type="xs:string" />
        <xs:element name="cases" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derbycasefragment" >
      <xs:complexContent>
       <xs:extension base="casefragment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mckoicasefragment" >
      <xs:complexContent>
       <xs:extension base="casefragment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cachejoinfragment" >
      <xs:complexContent>
       <xs:extension base="ansijoinfragment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insert" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="tablename" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="columns" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hsqlcasefragment" >
      <xs:complexContent>
       <xs:extension base="casefragment">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="select" >
      <xs:sequence>
        <xs:element name="selectclause" type="xs:string" />
        <xs:element name="fromclause" type="xs:string" />
        <xs:element name="outerjoinsafterfrom" type="xs:string" />
        <xs:element name="whereclause" type="xs:string" />
        <xs:element name="outerjoinsafterwhere" type="xs:string" />
        <xs:element name="orderbyclause" type="xs:string" />
        <xs:element name="groupbyclause" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="GeneratedName" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="guesstimatedbuffersize" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinfragment" >
      <xs:sequence>
        <xs:element name="inner_join" type="xs:long" />
        <xs:element name="full_join" type="xs:long" />
        <xs:element name="left_outer_join" type="xs:long" />
        <xs:element name="right_outer_join" type="xs:long" />
        <xs:element name="hasfiltercondition" type="xs:anyType" />
        <xs:element name="hasthetajoins" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="forupdatefragment" >
      <xs:sequence>
        <xs:element name="aliases" type="xs:anyType" />
        <xs:element name="isnowaitenabled" type="xs:anyType" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockoptions" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectexpression" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyinitializationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockacquisitionexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlstateconverter" >
      <xs:sequence>
        <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
        <xs:element name="sql_grammar_categories" type="set" nillable="true" minOccurs="0" />
        <xs:element name="data_categories" type="set" nillable="true" minOccurs="0" />
        <xs:element name="integrity_violation_categories" type="set" nillable="true" minOccurs="0" />
        <xs:element name="connection_categories" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="templatedviolatedconstraintnameextracter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlexceptionconverter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericjdbcexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcconnectionexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="constraintviolationexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
          <xs:element name="constraintname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="violatedconstraintnameextracter" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlgrammarexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dataexception" >
      <xs:complexContent>
       <xs:extension base="jdbcexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlexceptionconverterfactory" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcexceptionhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachesqlstateconverter" >
      <xs:sequence>
        <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
        <xs:element name="sql_grammar_categories" type="set" nillable="true" minOccurs="0" />
        <xs:element name="data_categories" type="set" nillable="true" minOccurs="0" />
        <xs:element name="integrity_violation_categories" type="set" nillable="true" minOccurs="0" />
        <xs:element name="connection_categories" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityuniquekey" >
      <xs:sequence>
        <xs:element name="uniquekeyname" type="xs:string" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="key" type="xs:anyType" />
        <xs:element name="key" type="type" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitymode" nillable="true" minOccurs="0" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="executeupdateresultcheckstyle" >
      <xs:sequence>
        <xs:element name="/***donotperformchecking.eitherusersimplydoesnotwantchecking,oris*indicatinga{@linkjava.sql.callablestatement}executioninwhichthe*checksarebeingperformedexplicitlyandfailuresarehandledthrough*propogationof{@linkjava.sql.sqlexception}s.*/none" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="/***performrow-countchecking.rowcountsaretheintvaluesreturnedbyboth*{@linkjava.sql.preparedstatement#executeupdate()}and*{@linkjava.sql.statement#executebatch()}.thesevaluesarechecked*againstsomeexpectedcount.*/count" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="/***essentiallythesameas{@link#count}exceptthattherowcountactually*comesfromanoutputparameterregisteredaspartofa*{@linkjava.sql.callablestatement}.thisstyleexplicitlyprohibits*statementbatchingfrombeingused...*/param" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionimplementor" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchfetchqueue" >
      <xs:sequence>
        <xs:element name="marker" type="xs:anyType" />
        <xs:element name="*todo:thiswouldbebetterasasequencedreferenceset,butnosuchbeastexists!*/batchloadableentitykeys" type="map" nillable="true" minOccurs="0" />
        <xs:element name="/***aof{@linksubselectfetchsubselect-fetchdescriptors}keyedbythe*{@linkentitykey)againstwhichthedescriptorisregistered.*/subselectsbyentitykey" type="map" nillable="true" minOccurs="0" />
        <xs:element name="/***theowningpersistencecontext.*/context" type="persistencecontext" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullability" >
      <xs:sequence>
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="checknullability" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadqueryinfluencers" >
      <xs:sequence>
        <xs:element name="/***referenceusefulforcaseswherewearecreatingloadsql*outsidethecontextofanyinfluencers.onesuchexampleis*anythingcreatedbythesessionfactory.*/none" type="loadqueryinfluencers" nillable="true" minOccurs="0" />
        <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="internalfetchprofile" type="xs:string" />
        <xs:element name="enabledfilters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="enabledfetchprofilenames" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterbinder" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versioning" >
      <xs:sequence>
        <xs:element name="/***applynooptimisticlocking*/optimistic_lock_none" type="xs:long" />
        <xs:element name="/***applyoptimisitclockingbasedonthedefinedversionortimestamp*property.*/optimistic_lock_version" type="xs:long" />
        <xs:element name="properties.*/optimistic_lock_all" type="xs:long" />
        <xs:element name="properties.*/optimistic_lock_dirty" type="xs:long" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadingaction" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="//theimplementations~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/***@seeorg.hibernate.session#delete(object)*/delete" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#lock(object,lockmode)*/lock" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#refresh(object)*/refresh" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#evict(object)*/evict" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#saveorupdate(object)*/save_update" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#merge(object)*/merge" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.classic.session#saveorupdatecopy(object)*/save_update_copy" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#persist(object)*/persist" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***executepersistduringflushtime**@seeorg.hibernate.session#persist(object)*/persist_on_flush" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="/***@seeorg.hibernate.session#replicate(object,org.hibernate.replicationmode)*/replicate" type="cascadingaction" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiervalue" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="/***alwaysassumethetransientinstanceisnewlyinstantiated*/any" type="identifiervalue" nillable="true" minOccurs="0" />
        <xs:element name="/***neverassumethetransientinstanceisnewlyinstantiated*/none" type="identifiervalue" nillable="true" minOccurs="0" />
        <xs:element name="/***assumethetransientinstanceisnewlyinstantiatediftheidentifier*isnull.*/null" type="identifiervalue" nillable="true" minOccurs="0" />
        <xs:element name="/***assumenothing.*/undefined" type="identifiervalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statefulpersistencecontext" >
      <xs:sequence>
        <xs:element name="no_row" type="xs:anyType" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="proxy_warn_log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="init_coll_size" type="xs:long" />
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="//loadedentityinstances,byentitykeyentitiesbykey" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//loadedentityinstances,byentityuniquekeyentitiesbyuniquekey" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//identityofentityentryinstances,bytheentityinstanceentityentries" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//entityproxies,byentitykeyproxiesbykey" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//snapshotsofcurrentdatabasestateforentities//thathave*not*beenloadedentitysnapshotsbykey" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//identityofarrayholderarrayholderinstances,bythearrayinstancearrayholders" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//identityofcollectionentryinstances,bythecollectionwrappercollectionentries" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//collectionwrappers,bythecollectionkey//key" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//setofentitykeysofdeletedobjectsnullifiableentitykeys" type="xs:anyType" />
        <xs:element name="//propertiesthatwehavetriedtoload,andnotfoundinthedatabasenullassociations" type="xs:anyType" />
        <xs:element name="//aofcollectionwrappersthatwereinstantiatingduringresultset//processing,thatwewillneedtoinitializeattheendofthequerynonlazycollections" type="list" nillable="true" minOccurs="0" />
        <xs:element name="//acontainerforcollectionsweloadupwhentheowningentityisnot//yetloaded...fornow,thisispurelytransient!unownedcollections" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//parententitiescachebytheirchildforcascading//maybeemptyornotcontainsallrelationparentsbychild" type="map" nillable="true" minOccurs="0" />
        <xs:element name="cascading" type="xs:long" />
        <xs:element name="loadcounter" type="xs:long" />
        <xs:element name="flushing" type="xs:anyType" />
        <xs:element name="defaultreadonly" type="xs:anyType" />
        <xs:element name="hasnonreadonlyentities" type="xs:anyType" />
        <xs:element name="GeneratedName" type="loadcontexts" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="batchfetchqueue" nillable="true" minOccurs="0" />
        <xs:element name="insertedkeysmap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitykey" >
      <xs:sequence>
        <xs:element name="identifier" type="xs:anyType" />
        <xs:element name="rootentityname" type="xs:string" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="identifier" type="type" nillable="true" minOccurs="0" />
        <xs:element name="isbatchloadable" type="xs:anyType" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="hashcode" type="xs:long" />
        <xs:element name="GeneratedName" type="entitymode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionloadcontext" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="loadcontexts" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="localloadingcollectionkeys" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityloadcontext" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="loadcontexts" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="//todo:needmap?theprobisaproperkey,right?hydratingentities" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadingcollectionentry" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="persister" type="collectionpersister" nillable="true" minOccurs="0" />
        <xs:element name="key" type="xs:anyType" />
        <xs:element name="collection" type="persistentcollection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadcontexts" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="persistencecontext" nillable="true" minOccurs="0" />
        <xs:element name="collectionloadcontexts" type="map" nillable="true" minOccurs="0" />
        <xs:element name="entityloadcontexts" type="map" nillable="true" minOccurs="0" />
        <xs:element name="xrefloadingcollectionentries" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselectfetch" >
      <xs:sequence>
        <xs:element name="resultingentitykeys" type="set" nillable="true" minOccurs="0" />
        <xs:element name="query" type="xs:string" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="GeneratedName" type="loadable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="queryparameters" nillable="true" minOccurs="0" />
        <xs:element name="namedparameterloc" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedsqlquerydefinition" >
      <xs:complexContent>
       <xs:extension base="namedquerydefinition">
         <xs:sequence>
          <xs:element name="queryreturns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" />
          <xs:element name="queryspaces" type="xs:anyType" />
          <xs:element name="callable" type="xs:anyType" />
          <xs:element name="resultsetref" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonflushedchanges" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedquerydefinition" >
      <xs:sequence>
        <xs:element name="query" type="xs:string" />
        <xs:element name="cacheable" type="xs:anyType" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="timeout" type="xs:anyType" />
        <xs:element name="fetchsize" type="xs:anyType" />
        <xs:element name="GeneratedName" type="flushmode" nillable="true" minOccurs="0" />
        <xs:element name="parametertypes" type="map" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cachemode" nillable="true" minOccurs="0" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="comment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unsavedvaluefactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="association" >
      <xs:sequence>
        <xs:element name="owner" type="entitypersister" nillable="true" minOccurs="0" />
        <xs:element name="associationpath" type="xs:string" />
        <xs:element name="role" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchprofile" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="fetches" type="xs:anyType" />
        <xs:element name="containsjoinfetchedcollection" type="xs:anyType" />
        <xs:element name="containsjoinfetchedbag" type="xs:anyType" />
        <xs:element name="bagjoin" type="fetch" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetch" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="association" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreignkeys" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractlobcreator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextuallobcreator" >
      <xs:complexContent>
       <xs:extension base="abstractlobcreator">
         <xs:sequence>
          <xs:element name="" type="lobcreationcontext" nillable="true" minOccurs="0" />
          <xs:element name="creation_method_sig" type="xs:anyType" />
          <xs:element name="creation_method_args" type="xs:anyType" />
          <xs:element name="create_blob_callback" type="xs:anyType" />
          <xs:element name="create_clob_callback" type="xs:anyType" />
          <xs:element name="create_nclob_callback" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcsupportloader" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="no_arg_sig" type="xs:anyType" />
        <xs:element name="no_args" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nclobproxy" >
      <xs:complexContent>
       <xs:extension base="{@link">
         <xs:sequence>
          <xs:element name="proxy_interfaces" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blobproxy" >
      <xs:sequence>
        <xs:element name="proxy_interfaces" type="xs:anyType" />
        <xs:element name="stream" type="xs:anyType" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="needsreset" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blobimplementer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columnnamecache" >
      <xs:sequence>
        <xs:element name="load_factor" type="xs:double" />
        <xs:element name="columnnametoindexcache" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clobproxy" >
      <xs:sequence>
        <xs:element name="proxy_interfaces" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="needsreset" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbcsupportimpl" >
      <xs:sequence>
        <xs:element name="usecontextuallobcreation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobcreator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wrappedblob" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializablenclobproxy" >
      <xs:complexContent>
       <xs:extension base="serializableclobproxy">
         <xs:sequence>
          <xs:element name="nclob_" type="xs:anyType" />
          <xs:element name="proxy_interfaces" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="clobimplementer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializableblobproxy" >
      <xs:sequence>
        <xs:element name="proxy_interfaces" type="xs:anyType" />
        <xs:element name="transient" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wrappedclob" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializableclobproxy" >
      <xs:sequence>
        <xs:element name="proxy_interfaces" type="xs:anyType" />
        <xs:element name="transient" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetwrapperproxy" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="proxy_interfaces" type="xs:anyType" />
        <xs:element name="rs" type="xs:anyType" />
        <xs:element name="GeneratedName" type="columnnamecache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lobcreationcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nclobimplementer" >
      <xs:complexContent>
       <xs:extension base="clobimplementer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readerinputstream" >
      <xs:complexContent>
       <xs:extension base="inputstream">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbcsupport" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="streamutils" >
      <xs:sequence>
        <xs:element name="default_chunk_size" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="noncontextuallobcreator" >
      <xs:complexContent>
       <xs:extension base="abstractlobcreator">
         <xs:sequence>
          <xs:element name="instance" type="noncontextuallobcreator" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="status" >
      <xs:sequence>
        <xs:element name="managed" type="status" nillable="true" minOccurs="0" />
        <xs:element name="read_only" type="status" nillable="true" minOccurs="0" />
        <xs:element name="deleted" type="status" nillable="true" minOccurs="0" />
        <xs:element name="gone" type="status" nillable="true" minOccurs="0" />
        <xs:element name="loading" type="status" nillable="true" minOccurs="0" />
        <xs:element name="saving" type="status" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinsequence" >
      <xs:sequence>
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="joins" type="list" nillable="true" minOccurs="0" />
        <xs:element name="usethetastyle" type="xs:anyType" />
        <xs:element name="conditions" type="xs:anyType" />
        <xs:element name="rootalias" type="xs:string" />
        <xs:element name="root" type="joinable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="next" type="joinsequence" nillable="true" minOccurs="0" />
        <xs:element name="isfrompart" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetmappingdefinition" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="queryreturns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionfactoryimplementor" >
      <xs:complexContent>
       <xs:extension base="mapping,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionvalue" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="/***assumethetransientinstanceisnewlyinstantiatediftheversion*isnull,otherwiseassumeitisadetachedinstance.*/null" type="versionvalue" nillable="true" minOccurs="0" />
        <xs:element name="/***assumethetransientinstanceisnewlyinstantiatediftheversion*isnull,otherwisedefertotheidentifierunsaved-value.*/undefined" type="versionvalue" nillable="true" minOccurs="0" />
        <xs:element name="/***assumethetransientinstanceisnewlyinstantiatediftheversion*isnegative,otherwiseassumeitisadetachedinstance.*/negative" type="versionvalue" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterdefinition" >
      <xs:sequence>
        <xs:element name="filtername" type="xs:string" />
        <xs:element name="defaultfiltercondition" type="xs:string" />
        <xs:element name="parametertypes" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityentry" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="status" nillable="true" minOccurs="0" />
        <xs:element name="previous" type="status" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="loadedstate" type="xs:anyType" />
        <xs:element name="deletedstate" type="xs:anyType" />
        <xs:element name="existsindatabase" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="//forconveniencetosavesomelookupstransientpersister" type="entitypersister" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitymode" nillable="true" minOccurs="0" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="//cached(lazy-initialized)transientcached" type="entitykey" nillable="true" minOccurs="0" />
        <xs:element name="isbeingreplicated" type="xs:anyType" />
        <xs:element name="//note:thisisnotupdatedwhenpropertiesarefetchedlazily!loadedwithlazypropertiesunfetched" type="xs:anyType" />
        <xs:element name="transientrowid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associationkey" >
      <xs:sequence>
        <xs:element name="ownerkey" type="entitykey" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="actionqueue" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="init_queue_list_size" type="xs:long" />
        <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="//objectinsertions,updates,anddeletionshavelistsemanticsbecause//theymusthappenintherightordersoastorespectreferential//integrityinsertions" type="xs:anyType" />
        <xs:element name="deletions" type="xs:anyType" />
        <xs:element name="updates" type="xs:anyType" />
        <xs:element name="//actuallythesemanticsofthenextthreearereally"bag"//notethat,unlikeobjects,collectioninsertions,updates,//deletionsarenotreallyrememberedbetweenflushes.we//justre-usethesamelistsforconvenience.collectioncreations" type="xs:anyType" />
        <xs:element name="collectionupdates" type="xs:anyType" />
        <xs:element name="collectionremovals" type="xs:anyType" />
        <xs:element name="aftertransactionprocesses" type="xs:anyType" />
        <xs:element name="beforetransactionprocesses" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedvalue" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="GeneratedName" type="entitymode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="valueinclusion" >
      <xs:sequence>
        <xs:element name="none" type="valueinclusion" nillable="true" minOccurs="0" />
        <xs:element name="full" type="valueinclusion" nillable="true" minOccurs="0" />
        <xs:element name="partial" type="valueinclusion" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascade" >
      <xs:sequence>
        <xs:element name="/***acascadepothatoccursjustaftertheinsertionoftheparententityand*justbeforedeletion*/after_insert_before_delete" type="xs:long" />
        <xs:element name="/***acascadepothatoccursjustbeforetheinsertionoftheparententityand*justafterdeletion*/before_insert_after_delete" type="xs:long" />
        <xs:element name="/***acascadepothatoccursjustaftertheinsertionoftheparententityand*justbeforedeletion,insideacollection*/after_insert_before_delete_via_collection" type="xs:long" />
        <xs:element name="/***acascadepothatoccursjustafterupdateoftheparententity*/after_update" type="xs:long" />
        <xs:element name="/***acascadepothatoccursjustbeforethesessionisflushed*/before_flush" type="xs:long" />
        <xs:element name="/***acascadepothatoccursjustafterevictionoftheparententityfromthe*sessioncache*/after_evict" type="xs:long" />
        <xs:element name="/***acascadepothatoccursjustafterlockingatransientparententityothe*sessioncache*/before_refresh" type="xs:long" />
        <xs:element name="/***acascadepothatoccursjustafterrefreshingaparententity*/after_lock" type="xs:long" />
        <xs:element name="/***acascadepothatoccursjustbeforemergingfromatransientparententityo*theobjectinthesessioncache*/before_merge" type="xs:long" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="cascadeto" type="xs:long" />
        <xs:element name="GeneratedName" type="eventsource" nillable="true" minOccurs="0" />
        <xs:element name="action" type="cascadingaction" nillable="true" minOccurs="0" />
        <xs:element name="componentpath" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryparameters" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="positionalparameters" type="type" nillable="true" minOccurs="0" />
        <xs:element name="positionalparametervalues" type="xs:anyType" />
        <xs:element name="namedparameters" type="map" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockoptions" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="rowselection" nillable="true" minOccurs="0" />
        <xs:element name="cacheable" type="xs:anyType" />
        <xs:element name="cacheregion" type="xs:string" />
        <xs:element name="comment" type="xs:string" />
        <xs:element name="GeneratedName" type="scrollmode" nillable="true" minOccurs="0" />
        <xs:element name="collectionkeys" type="xs:anyType" />
        <xs:element name="optional" type="xs:anyType" />
        <xs:element name="optionalentityname" type="xs:string" />
        <xs:element name="optionalid" type="xs:anyType" />
        <xs:element name="isreadonlyinitialized" type="xs:anyType" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="callable" type="xs:anyType" />
        <xs:element name="autodiscovertypes" type="xs:anyType" />
        <xs:element name="isnaturalkeylookup" type="xs:anyType" />
        <xs:element name="//whyisallothersnon?" type="resulttransformer" nillable="true" minOccurs="0" />
        <xs:element name="processedsql" type="xs:string" />
        <xs:element name="processedpositionalparameters" type="type" nillable="true" minOccurs="0" />
        <xs:element name="processedpositionalparametervalues" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadestyle" >
      <xs:complexContent>
       <xs:extension base="cascadestyle">
         <xs:sequence>
          <xs:element name="/***save/delete/update/evict/lock/replicate/merge/persist+deleteorphans*/all_delete_orphan" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***save/delete/update/evict/lock/replicate/merge/persist*/all" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***save/update*/update" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***lock*/lock" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***refresh*/refresh" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***evict*/evict" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***replicate*/replicate" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***merge*/merge" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***create*/persist" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***delete*/delete" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***delete+deleteorphans*/delete_orphan" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="/***nocascades*/none" type="cascadestyle" nillable="true" minOccurs="0" />
          <xs:element name="styles" type="map" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryplancache" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="*usedsolelyforcachingparammetadatafornative-sqlqueries,see{@link#getsqlparametermetadata}fora*discussionastowhy...*/sqlparammetadatacache" type="simplemrucache" nillable="true" minOccurs="0" />
        <xs:element name="/***thecacheoftheactualplans...*/plancache" type="softlimitmrucache" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parametermetadata" >
      <xs:sequence>
        <xs:element name="empty_ordinals" type="ordinalparameterdescriptor" nillable="true" minOccurs="0" />
        <xs:element name="ordinaldescriptors" type="ordinalparameterdescriptor" nillable="true" minOccurs="0" />
        <xs:element name="nameddescriptor" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="returnmetadata" >
      <xs:sequence>
        <xs:element name="returnaliases" type="xs:string" />
        <xs:element name="returns" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ordinalparameterdescriptor" >
      <xs:sequence>
        <xs:element name="ordinalposition" type="xs:long" />
        <xs:element name="expected" type="type" nillable="true" minOccurs="0" />
        <xs:element name="sourcelocation" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namedparameterdescriptor" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="expected" type="type" nillable="true" minOccurs="0" />
        <xs:element name="sourcelocations" type="xs:long" />
        <xs:element name="jpastyle" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryplan" >
      <xs:sequence>
        <xs:element name="sourcequery" type="xs:string" />
        <xs:element name="customquery" type="sqlcustomquery" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hqlqueryplan" >
      <xs:sequence>
        <xs:element name="hereforshallow/non-shallowqueries...log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="sourcequery" type="xs:string" />
        <xs:element name="translators" type="querytranslator" nillable="true" minOccurs="0" />
        <xs:element name="sqls" type="xs:string" />
        <xs:element name="GeneratedName" type="parametermetadata" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="returnmetadata" nillable="true" minOccurs="0" />
        <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
        <xs:element name="enabledfilternames" type="set" nillable="true" minOccurs="0" />
        <xs:element name="shallow" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlquerynonscalarreturn" >
      <xs:sequence>
        <xs:element name="alias" type="xs:string" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="propertyresults" type="xs:anyType" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryjoinreturn" >
      <xs:complexContent>
       <xs:extension base="nativesqlquerynonscalarreturn">
         <xs:sequence>
          <xs:element name="owneralias" type="xs:string" />
          <xs:element name="ownerproperty" type="xs:string" />
          <xs:element name="hashcode" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryspecification" >
      <xs:sequence>
        <xs:element name="query" type="xs:string" />
        <xs:element name="queryreturns" type="nativesqlqueryreturn" nillable="true" minOccurs="0" />
        <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryreturn" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlquerycollectionreturn" >
      <xs:complexContent>
       <xs:extension base="nativesqlquerynonscalarreturn">
         <xs:sequence>
          <xs:element name="ownerentityname" type="xs:string" />
          <xs:element name="ownerproperty" type="xs:string" />
          <xs:element name="hashcode" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryrootreturn" >
      <xs:complexContent>
       <xs:extension base="nativesqlquerynonscalarreturn">
         <xs:sequence>
          <xs:element name="returnentityname" type="xs:string" />
          <xs:element name="hashcode" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryscalarreturn" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="columnalias" type="xs:string" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querymetadata" >
      <xs:sequence>
        <xs:element name="sourcequery" type="xs:string" />
        <xs:element name="GeneratedName" type="parametermetadata" nillable="true" minOccurs="0" />
        <xs:element name="returnaliases" type="xs:string" />
        <xs:element name="returns" type="type" nillable="true" minOccurs="0" />
        <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paramlocationrecognizer" >
      <xs:sequence>
        <xs:element name="namedparameterdescriptions" type="map" nillable="true" minOccurs="0" />
        <xs:element name="ordinalparameterlocation" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterparser" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filterqueryplan" >
      <xs:complexContent>
       <xs:extension base="an">
         <xs:sequence>
          <xs:element name="collectionrole" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collections" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionkey" >
      <xs:sequence>
        <xs:element name="role" type="xs:string" />
        <xs:element name="key" type="xs:anyType" />
        <xs:element name="key" type="type" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="hashcode" type="xs:long" />
        <xs:element name="GeneratedName" type="entitymode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateiterator" >
      <xs:complexContent>
       <xs:extension base="iterator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="twophaseload" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionentry" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="//attributesmaintainedbetweenflushcycles//session-start/post-flushpersistentstatesnapshot" type="xs:anyType" />
        <xs:element name="//allowthecollectionsnapshottobeserializedrole" type="xs:string" />
        <xs:element name="//"loaded"meansthereferencethatisconsistent//withthecurrentdatabasestatetransientloadedpersister" type="collectionpersister" nillable="true" minOccurs="0" />
        <xs:element name="loadedkey" type="xs:anyType" />
        <xs:element name="//attributesusedonlyduringflushcycle//duringflush,wenavigatetheobjectgraphto//collectionsanddecidewhattodowiththemtransientreached" type="xs:anyType" />
        <xs:element name="transientprocessed" type="xs:anyType" />
        <xs:element name="transientdoupdate" type="xs:anyType" />
        <xs:element name="transientdoremove" type="xs:anyType" />
        <xs:element name="transientdorecreate" type="xs:anyType" />
        <xs:element name="//ifweinstantiateacollectionduringtheflush()process,//wemustignoreitfortherestoftheflush()transientignore" type="xs:anyType" />
        <xs:element name="//"current"meansthereferencethatwasfoundduringflush()transientcurrentpersister" type="collectionpersister" nillable="true" minOccurs="0" />
        <xs:element name="transientcurrentkey" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rowselection" >
      <xs:sequence>
        <xs:element name="firstrow" type="xs:anyType" />
        <xs:element name="maxrows" type="xs:anyType" />
        <xs:element name="timeout" type="xs:anyType" />
        <xs:element name="fetchsize" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="isolater" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullsynchronizationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="isolatedwork" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synchronizationregistry" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="synchronizations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistencecontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uuidgenerator" >
      <xs:sequence>
        <xs:element name="uuid_gen_strategy" type="xs:string" />
        <xs:element name="uuid_gen_strategy_class" type="xs:string" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="strategy" type="uuidgenerationstrategy" nillable="true" minOccurs="0" />
        <xs:element name="valuetransformer" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectgenerator" >
      <xs:complexContent>
       <xs:extension base="abstractpostinsertgenerator">
         <xs:sequence>
          <xs:element name="uniquekeypropertyname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identitygenerator" >
      <xs:complexContent>
       <xs:extension base="abstractpostinsertgenerator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractuuidgenerator" >
      <xs:sequence>
        <xs:element name="ip" type="xs:long" />
        <xs:element name="counter" type="xs:long" />
        <xs:element name="jvm" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablegenerator" >
      <xs:complexContent>
       <xs:extension base="transactionhelper">
         <xs:sequence>
          <xs:element name="/*columnandtableshouldberenamedbutitwouldbreaktheapi*//***thecolumnparameter*/column" type="xs:string" />
          <xs:element name="/***defaultcolumnname*/default_column_name" type="xs:string" />
          <xs:element name="/***thetableparameter*/table" type="xs:string" />
          <xs:element name="/***defaulttablename*/default_table_name" type="xs:string" />
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="identifier" type="type" nillable="true" minOccurs="0" />
          <xs:element name="tablename" type="xs:string" />
          <xs:element name="columnname" type="xs:string" />
          <xs:element name="query" type="xs:string" />
          <xs:element name="update" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablehilogenerator" >
      <xs:complexContent>
       <xs:extension base="tablegenerator">
         <xs:sequence>
          <xs:element name="/***themax_loparameter*/max_lo" type="xs:string" />
          <xs:element name="hilooptimizer" type="xs:anyType" />
          <xs:element name="maxlo" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositenestedgeneratedvaluegenerator" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="generationplans" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiergenerationexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpostinsertgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplehilopertablegenerator" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="id_table" type="xs:string" />
          <xs:element name="pk_column_name" type="xs:string" />
          <xs:element name="pk_value_name" type="xs:string" />
          <xs:element name="value_column_name" type="xs:string" />
          <xs:element name="pk_length_name" type="xs:string" />
          <xs:element name="default_pk_length" type="xs:long" />
          <xs:element name="default_table" type="xs:string" />
          <xs:element name="default_pk_column" type="xs:string" />
          <xs:element name="default_value_column" type="xs:string" />
          <xs:element name="tablename" type="xs:string" />
          <xs:element name="pkcolumnname" type="xs:string" />
          <xs:element name="valuecolumnname" type="xs:string" />
          <xs:element name="query" type="xs:string" />
          <xs:element name="insert" type="xs:string" />
          <xs:element name="update" type="xs:string" />
          <xs:element name="//hiloparamsmax_lo" type="xs:string" />
          <xs:element name="maxlo" type="xs:long" />
          <xs:element name="hilooptimizer" type="xs:anyType" />
          <xs:element name="return" type="xs:anyType" />
          <xs:element name="keysize" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configurable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiergeneratorfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultidentifiergeneratorfactory" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="transient" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="generatorstrategytoclassnamemap" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentidentifiergenerator" >
      <xs:complexContent>
       <xs:extension base="identifiergenerator">
         <xs:sequence>
          <xs:element name="/***theconfigurationparameterholdingtheschemaname*/schema" type="xs:string" />
          <xs:element name="/***theconfigurationparameterholdingthetablenameforthe*generatedid*/table" type="xs:string" />
          <xs:element name="/***theconfigurationparameterholdingthetablenamesforall*tablesforwhichtheidmustbeunique*/tables" type="xs:string" />
          <xs:element name="/***theconfigurationparameterholdingtheprimarykeycolumn*nameofthegeneratedid*/pk" type="xs:string" />
          <xs:element name="/***theconfigurationparameterholdingthecatalogname*/catalog" type="xs:string" />
          <xs:element name="/***thekeyunderwhcihtofindthe{@linkorg.hibernate.cfg.objectnamenormalizer}intheconfigparammap.*/identifier_normalizer" type="xs:string" />
          <xs:element name="sql_statement_logger" type="sqlstatementlogger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="incrementgenerator" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="return" type="xs:anyType" />
        <xs:element name="sql" type="xs:string" />
        <xs:element name="previousvalueholder" type="integraldatatypeholder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uuidhexgenerator" >
      <xs:complexContent>
       <xs:extension base="abstractuuidgenerator">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="warned" type="xs:anyType" />
          <xs:element name="sep" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiergeneratorhelper" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="/***markerobjectreturnedfrom{@linkidentifiergenerator#generate}toindicatethatweshouldshort-circuitany*continuedgeneratedidchecking.currentlythisisonlyusedinthecaseofthe*{@linkorg.hibernate.id.foreigngeneratorforeign}generatorasawaytosignalthatweshouldusetheassociated*entity'sidvalue.*/short_circuit_indicator" type="xs:anyType" />
        <xs:element name="/***markerobjectreturnedfrom{@linkidentifiergenerator#generate}toindicatethattheentity'sidentifierwill*begeneratedaspartofthedatbaseinsertion.*/post_insert_indicator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uuidgenerationstrategy" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequenceidentitygenerator" >
      <xs:complexContent>
       <xs:extension base="sequencegenerator">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetidentifierconsumer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postinsertidentifiergenerator" >
      <xs:complexContent>
       <xs:extension base="identifiergenerator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiergenerator" >
      <xs:sequence>
        <xs:element name="/***theconfigurationparameterholdingtheentityname*/entity_name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreigngenerator" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="propertyname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiergeneratinginsert" >
      <xs:complexContent>
       <xs:extension base="insert">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="insertgeneratedidentifierdelegate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractselectingdelegate" >
      <xs:sequence>
        <xs:element name="persister" type="postinsertidentitypersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="binder" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="insertselectidentityinsert" >
      <xs:complexContent>
       <xs:extension base="identifiergeneratinginsert">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractreturningdelegate" >
      <xs:sequence>
        <xs:element name="persister" type="postinsertidentitypersister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="helper" >
      <xs:sequence>
        <xs:element name="address_s" type="xs:anyType" />
        <xs:element name="address_" type="xs:long" />
        <xs:element name="address_hex_" type="xs:string" />
        <xs:element name="jvm_identifier_s" type="xs:anyType" />
        <xs:element name="jvm_identifier_" type="xs:long" />
        <xs:element name="jvm_identifier_hex_" type="xs:string" />
        <xs:element name="//counter~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~counter" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customversiononestrategy" >
      <xs:sequence>
        <xs:element name="mostsignificantbits" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardrandomstrategy" >
      <xs:sequence>
        <xs:element name="instance" type="standardrandomstrategy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencehilogenerator" >
      <xs:complexContent>
       <xs:extension base="sequencegenerator">
         <xs:sequence>
          <xs:element name="max_lo" type="xs:string" />
          <xs:element name="maxlo" type="xs:long" />
          <xs:element name="hilooptimizer" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assigned" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postinsertidentitypersister" >
      <xs:complexContent>
       <xs:extension base="entitypersister">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="guidgenerator" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="warned" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiergeneratoraggregator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integraldatatypeholder" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencegenerator" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="/***thesequenceparameter*/sequence" type="xs:string" />
        <xs:element name=".*/parameters" type="xs:string" />
        <xs:element name="sequencename" type="xs:string" />
        <xs:element name="parameters" type="xs:string" />
        <xs:element name="identifier" type="type" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencestructure" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="sequencename" type="xs:string" />
        <xs:element name="initialvalue" type="xs:long" />
        <xs:element name="incrementsize" type="xs:long" />
        <xs:element name="numbertype" type="xs:anyType" />
        <xs:element name="sql" type="xs:string" />
        <xs:element name="applyincrementsizetosourcevalues" type="xs:anyType" />
        <xs:element name="accesscounter" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablestructure" >
      <xs:complexContent>
       <xs:extension base="transactionhelper">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="sql_statement_logger" type="sqlstatementlogger" nillable="true" minOccurs="0" />
          <xs:element name="tablename" type="xs:string" />
          <xs:element name="valuecolumnname" type="xs:string" />
          <xs:element name="initialvalue" type="xs:long" />
          <xs:element name="incrementsize" type="xs:long" />
          <xs:element name="numbertype" type="xs:anyType" />
          <xs:element name="selectquery" type="xs:string" />
          <xs:element name="updatequery" type="xs:string" />
          <xs:element name="applyincrementsizetosourcevalues" type="xs:anyType" />
          <xs:element name="accesscounter" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencestylegenerator" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="//generalpurposeparameters~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~sequence_param" type="xs:string" />
        <xs:element name="def_sequence_name" type="xs:string" />
        <xs:element name="initial_param" type="xs:string" />
        <xs:element name="default_initial_value" type="xs:long" />
        <xs:element name="increment_param" type="xs:string" />
        <xs:element name="default_increment_size" type="xs:long" />
        <xs:element name="opt_param" type="xs:string" />
        <xs:element name="force_tbl_param" type="xs:string" />
        <xs:element name="//table-specificparameters~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~value_column_param" type="xs:string" />
        <xs:element name="def_value_column" type="xs:string" />
        <xs:element name="//state~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" type="databasestructure" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="optimizer" nillable="true" minOccurs="0" />
        <xs:element name="identifier" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimizer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="databasestructure" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tablegenerator" >
      <xs:complexContent>
       <xs:extension base="transactionhelper">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="config_prefer_segment_per_entity" type="xs:string" />
          <xs:element name="table_param" type="xs:string" />
          <xs:element name="def_table" type="xs:string" />
          <xs:element name="value_column_param" type="xs:string" />
          <xs:element name="def_value_column" type="xs:string" />
          <xs:element name="segment_column_param" type="xs:string" />
          <xs:element name="def_segment_column" type="xs:string" />
          <xs:element name="segment_value_param" type="xs:string" />
          <xs:element name="def_segment_value" type="xs:string" />
          <xs:element name="segment_length_param" type="xs:string" />
          <xs:element name="def_segment_length" type="xs:long" />
          <xs:element name="initial_param" type="xs:string" />
          <xs:element name="default_initial_value" type="xs:long" />
          <xs:element name="increment_param" type="xs:string" />
          <xs:element name="default_increment_size" type="xs:long" />
          <xs:element name="opt_param" type="xs:string" />
          <xs:element name="identifier" type="type" nillable="true" minOccurs="0" />
          <xs:element name="tablename" type="xs:string" />
          <xs:element name="segmentcolumnname" type="xs:string" />
          <xs:element name="segmentvalue" type="xs:string" />
          <xs:element name="segmentvaluelength" type="xs:long" />
          <xs:element name="valuecolumnname" type="xs:string" />
          <xs:element name="initialvalue" type="xs:long" />
          <xs:element name="incrementsize" type="xs:long" />
          <xs:element name="selectquery" type="xs:string" />
          <xs:element name="insertquery" type="xs:string" />
          <xs:element name="updatequery" type="xs:string" />
          <xs:element name="" type="optimizer" nillable="true" minOccurs="0" />
          <xs:element name="accesscount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accesscallback" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimizerfactory" >
      <xs:complexContent>
       <xs:extension base="optimizersupport">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="none" type="xs:string" />
          <xs:element name="hilo" type="xs:string" />
          <xs:element name="legacy_hilo" type="xs:string" />
          <xs:element name="pool" type="xs:string" />
          <xs:element name="pool_lo" type="xs:string" />
          <xs:element name="ctor_sig" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtasessioncontext" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="transientcurrentsession" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedsessioncontext" >
      <xs:sequence>
        <xs:element name="context" type="xs:anyType" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadlocalsessioncontext" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="session_proxy_interfaces" type="xs:anyType" />
        <xs:element name="/***amaintainingcurrentsessionsforthegivenexecutionthread.*theactualvariableisajava.util.maptoaccountfor*thepossibilityformultiplesessionfactorysbeingusedduringexecution*ofthegiventhread.*/context" type="xs:anyType" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="currentsessioncontext" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteria" >
      <xs:complexContent>
       <xs:extension base="criteriaspecification">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ingres9dialect" >
      <xs:complexContent>
       <xs:extension base="ingresdialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="progressdialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracle9idialect" >
      <xs:complexContent>
       <xs:extension base="oracle8idialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracle8idialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
          <xs:element name="oracle_types_class_name" type="xs:string" />
          <xs:element name="deprecated_oracle_types_class_name" type="xs:string" />
          <xs:element name="init_oracletypes_cursor_value" type="xs:long" />
          <xs:element name="//not-toavoidpossibleclasscastexceptionsifusingdifferentoracledrivers.oraclecursortypesqltype" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractselectlockingstrategy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="waitforeversql" type="xs:string" />
        <xs:element name="nowaitsql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlockingstrategy" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pessimisticreadselectlockingstrategy" >
      <xs:complexContent>
       <xs:extension base="abstractselectlockingstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pessimisticreadupdatelockingstrategy" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockingstrategy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pessimisticforceincrementlockingstrategy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectlockingstrategy" >
      <xs:complexContent>
       <xs:extension base="abstractselectlockingstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updatelockingstrategy" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticforceincrementlockingstrategy" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pessimisticwriteupdatelockingstrategy" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockable" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lockmode" nillable="true" minOccurs="0" />
        <xs:element name="sql" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pessimisticwriteselectlockingstrategy" >
      <xs:complexContent>
       <xs:extension base="abstractselectlockingstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqldialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="/***constraint-nameextractorforpostgrescontraintviolationexceptions.*orginallycontributedbydennybartelt.*/extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mimersqldialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="national_char_length" type="xs:long" />
          <xs:element name="binary_max_length" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sapdbdialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlinnodbdialect" >
      <xs:complexContent>
       <xs:extension base="mysqldialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ingres10dialect" >
      <xs:complexContent>
       <xs:extension base="ingres9dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverdialect" >
      <xs:complexContent>
       <xs:extension base="abstracttransactsqldialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typenames" >
      <xs:sequence>
        <xs:element name="weighted" type="xs:anyType" />
        <xs:element name="defaults" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstracttransactsqldialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hsqldialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="/***versionis18for1.8or20for2.0*/hsqldbversion" type="xs:long" />
          <xs:element name="extracter_18" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
          <xs:element name="/***hsqldb2.0messageshavechanged*messagesmaybelocalized-thereforeusethecommon,non-localeelement"table:"*/extracter_20" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sybasease15dialect" >
      <xs:complexContent>
       <xs:extension base="abstracttransactsqldialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlmyisamdialect" >
      <xs:complexContent>
       <xs:extension base="mysqldialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresplusdialect" >
      <xs:complexContent>
       <xs:extension base="postgresqldialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultcolumnreferencestrategy" >
      <xs:sequence>
        <xs:element name="instances" type="map" nillable="true" minOccurs="0" />
        <xs:element name="/***thisstrategysaystoreferencetheresultcolumnsbythequalifiedcolumnname*foundintheresultsource.thisstrategyisnotstrictlyallowedbyansisql*butishibernate'slegacybehaviorandisalsothefastestofthestrategiesthus*itshouldbeusedifsupportedbytheunderlyingdatabase.*/source" type="resultcolumnreferencestrategy" nillable="true" minOccurs="0" />
        <xs:element name="*theotherqnsisqlcompliantapproachis{@link#ordinal}.*/alias" type="resultcolumnreferencestrategy" nillable="true" minOccurs="0" />
        <xs:element name="*theotherqnsisqlcompliantapproachis{@link#alias}.*/ordinal" type="resultcolumnreferencestrategy" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cache71dialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sybasedialect" >
      <xs:complexContent>
       <xs:extension base="abstracttransactsqldialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="informixdialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqldialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derbydialect" >
      <xs:complexContent>
       <xs:extension base="db2dialect">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="driverversionmajor" type="xs:long" />
          <xs:element name="driverversionminor" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dialect" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="default_batch_size" type="xs:string" />
        <xs:element name="no_batch" type="xs:string" />
        <xs:element name="/***charactersusedforquotingsqlidentifiers*/quote" type="xs:string" />
        <xs:element name="closed_quote" type="xs:string" />
        <xs:element name="streambindinglobtypes" type="basictype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="typenames" nillable="true" minOccurs="0" />
        <xs:element name="hibernate" type="typenames" nillable="true" minOccurs="0" />
        <xs:element name="dialectspecificoverrides" type="basictype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="sqlfunctions" type="xs:anyType" />
        <xs:element name="sqlkeywords" type="xs:anyType" />
        <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sybase11dialect" >
      <xs:complexContent>
       <xs:extension base="abstracttransactsqldialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracle9dialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
          <xs:element name="//not-toavoidpossibleclasscastexceptionsifusingdifferentoracledrivers.oracletypes_cursor_value" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysql5dialect" >
      <xs:complexContent>
       <xs:extension base="mysqldialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestendialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracledialect" >
      <xs:complexContent>
       <xs:extension base="oracle9dialect">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdatastoredialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ingresdialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interbasedialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2dialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysql5innodbdialect" >
      <xs:complexContent>
       <xs:extension base="mysql5dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="frontbasedialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mckoidialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2390dialect" >
      <xs:complexContent>
       <xs:extension base="db2dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserver2005dialect" >
      <xs:complexContent>
       <xs:extension base="sqlserverdialect">
         <xs:sequence>
          <xs:element name="select" type="xs:string" />
          <xs:element name="from" type="xs:string" />
          <xs:element name="distinct" type="xs:string" />
          <xs:element name="max_length" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="db2400dialect" >
      <xs:complexContent>
       <xs:extension base="db2dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="columnaliasextractor" >
      <xs:sequence>
        <xs:element name="/***anextractorwhichuses{@linkresultsetmetadata#getcolumnlabel}*/column_label_extractor" type="columnaliasextractor" nillable="true" minOccurs="0" />
        <xs:element name="/***anextractorwhichuses{@linkresultsetmetadata#getcolumnname}*/column_name_extractor" type="columnaliasextractor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oracle10gdialect" >
      <xs:complexContent>
       <xs:extension base="oracle9idialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="firebirddialect" >
      <xs:complexContent>
       <xs:extension base="interbasedialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="h2dialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="querysequence" type="xs:string" />
          <xs:element name="extracter" type="violatedconstraintnameextracter" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sybaseanywheredialect" >
      <xs:complexContent>
       <xs:extension base="abstracttransactsqldialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="templaterenderer" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="template" type="xs:string" />
        <xs:element name="chunks" type="xs:string" />
        <xs:element name="paramindexes" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ansitrimemulationfunction" >
      <xs:complexContent>
       <xs:extension base="abstractansitrimemulationfunction">
         <xs:sequence>
          <xs:element name="ltrim" type="xs:string" />
          <xs:element name="rtrim" type="xs:string" />
          <xs:element name="replace" type="xs:string" />
          <xs:element name="space_placeholder" type="xs:string" />
          <xs:element name="leading_space_trim_template" type="xs:string" />
          <xs:element name="trailing_space_trim_template" type="xs:string" />
          <xs:element name="both_space_trim_template" type="xs:string" />
          <xs:element name="//skipthefromkeywordinparamsboth_space_trim_from_template" type="xs:string" />
          <xs:element name="*/leading_trim_template" type="xs:string" />
          <xs:element name="*note:essentiallythesameseriesofcallsasoutlinedin{@link#leading_trim_template}exceptthathere,*insteadofleft-trimmingtheaddedspaces,weright-trimthemtoremovethemfromtheendofthetext.*/trailing_trim_template" type="xs:string" />
          <xs:element name="*note:again,wehaveaseriesofcallsthatisessentiallythesameasoutlinedin{@link#leading_trim_template}*exceptthathereweperformbothleft(leading)andright(trailing)trimming.*/both_trim_template" type="xs:string" />
          <xs:element name="leadingspacetrim" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="trailingspacetrim" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="bothspacetrim" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="bothspacetrimfrom" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="leadingtrim" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="trailingtrim" type="sqlfunction" nillable="true" minOccurs="0" />
          <xs:element name="bothtrim" type="sqlfunction" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="noargsqlfunction" >
      <xs:sequence>
        <xs:element name="return" type="type" nillable="true" minOccurs="0" />
        <xs:element name="hasparenthesesifnoarguments" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classicavgfunction" >
      <xs:complexContent>
       <xs:extension base="standardsqlfunction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="trimfunctiontemplate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derbyconcatfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="convertfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="castfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfunctionregistry" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="userfunctions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardsqlfunction" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="registered" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="standardansisqlaggregationfunctions" >
      <xs:complexContent>
       <xs:extension base="standardsqlfunction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractansitrimemulationfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="positionsubstringfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="charindexfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfunctiontemplate" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
        <xs:element name="renderer" type="templaterenderer" nillable="true" minOccurs="0" />
        <xs:element name="hasparenthesesifnoargs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classicsumfunction" >
      <xs:complexContent>
       <xs:extension base="standardsqlfunction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="varargssqlfunction" >
      <xs:sequence>
        <xs:element name="begin" type="xs:string" />
        <xs:element name="sep" type="xs:string" />
        <xs:element name="end" type="xs:string" />
        <xs:element name="registered" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conditionalparenthesisfunction" >
      <xs:complexContent>
       <xs:extension base="standardsqlfunction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classiccountfunction" >
      <xs:complexContent>
       <xs:extension base="standardsqlfunction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ansitrimfunction" >
      <xs:complexContent>
       <xs:extension base="trimfunctiontemplate">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="avgwithargumentcastfunction" >
      <xs:complexContent>
       <xs:extension base="standardansisqlaggregationfunctions.avgfunction">
         <xs:sequence>
          <xs:element name="casttype" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standardjdbcescapefunction" >
      <xs:complexContent>
       <xs:extension base="standardsqlfunction">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nvlfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfunction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rdmsos2200dialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserver2008dialect" >
      <xs:complexContent>
       <xs:extension base="sqlserverdialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datadirectoracle9dialect" >
      <xs:complexContent>
       <xs:extension base="oracle9dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="teradatadialect" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dialectresolverset" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="resolvers" type="list" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicsqlexceptionconverter" >
      <xs:sequence>
        <xs:element name="instance" type="basicsqlexceptionconverter" nillable="true" minOccurs="0" />
        <xs:element name="msg" type="xs:string" />
        <xs:element name="converter" type="sqlstateconverter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicdialectresolver" >
      <xs:complexContent>
       <xs:extension base="abstractdialectresolver">
         <xs:sequence>
          <xs:element name="version_insensitive_version" type="xs:long" />
          <xs:element name="matchingname" type="xs:string" />
          <xs:element name="matchingversion" type="xs:long" />
          <xs:element name="dialect" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="standarddialectresolver" >
      <xs:complexContent>
       <xs:extension base="abstractdialectresolver{">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractdialectresolver" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectresolver" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectfactory" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="dialect_resolvers" type="dialectresolverset" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pointbasedialect" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.dialect.dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persisterclassprovider" >
      <xs:complexContent>
       <xs:extension base="entitypersister>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persisterfactory" >
      <xs:sequence>
        <xs:element name="persister_constructor_args" type="xs:anyType" />
        <xs:element name="collection_persister_constructor_args" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unionsubclassentitypersister" >
      <xs:complexContent>
       <xs:extension base="abstractentitypersister">
         <xs:sequence>
          <xs:element name="//theclasshierarchystructuresubquery" type="xs:string" />
          <xs:element name="tablename" type="xs:string" />
          <xs:element name="subclassclosure" type="xs:string" />
          <xs:element name="spaces" type="xs:string" />
          <xs:element name="subclassspaces" type="xs:string" />
          <xs:element name="discriminatorsqlvalue" type="xs:string" />
          <xs:element name="subclassbydiscriminatorvalue" type="map" nillable="true" minOccurs="0" />
          <xs:element name="constraintorderedtablenames" type="xs:string" />
          <xs:element name="constraintorderedkeycolumnnames" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclassentitypersister" >
      <xs:complexContent>
       <xs:extension base="abstractentitypersister">
         <xs:sequence>
          <xs:element name="//theclasshierarchystructuretablespan" type="xs:long" />
          <xs:element name="tablenames" type="xs:string" />
          <xs:element name="naturalordertablenames" type="xs:string" />
          <xs:element name="tablekeycolumns" type="xs:string" />
          <xs:element name="tablekeycolumnreaders" type="xs:string" />
          <xs:element name="tablekeycolumnreadertemplates" type="xs:string" />
          <xs:element name="naturalordertablekeycolumns" type="xs:string" />
          <xs:element name="naturalordertablekeycolumnreaders" type="xs:string" />
          <xs:element name="naturalordertablekeycolumnreadertemplates" type="xs:string" />
          <xs:element name="naturalordercascadedeleteenabled" type="xs:anyType" />
          <xs:element name="spaces" type="xs:string" />
          <xs:element name="subclassclosure" type="xs:string" />
          <xs:element name="subclasstablenameclosure" type="xs:string" />
          <xs:element name="subclasstablekeycolumnclosure" type="xs:string" />
          <xs:element name="isclassorsuperclasstable" type="xs:anyType" />
          <xs:element name="naturalorderpropertytablenumbers" type="xs:long" />
          <xs:element name="propertytablenumbers" type="xs:long" />
          <xs:element name="subclasspropertytablenumberclosure" type="xs:long" />
          <xs:element name="subclasscolumntablenumberclosure" type="xs:long" />
          <xs:element name="subclassformulatablenumberclosure" type="xs:long" />
          <xs:element name="subclasstablesequentialselect" type="xs:anyType" />
          <xs:element name="subclasstableislazyclosure" type="xs:anyType" />
          <xs:element name="//subclassdiscriminationworksbyassigningparticular//valuestocertaincombinationsofnullprimarykey//valuesintheouterjoinusingansqlcasesubclassesbydiscriminatorvalue" type="map" nillable="true" minOccurs="0" />
          <xs:element name="discriminatorvalues" type="xs:string" />
          <xs:element name="notnullcolumnnames" type="xs:string" />
          <xs:element name="notnullcolumntablenumbers" type="xs:long" />
          <xs:element name="constraintorderedtablenames" type="xs:string" />
          <xs:element name="constraintorderedkeycolumnnames" type="xs:string" />
          <xs:element name="discriminatorsql" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlloadable" >
      <xs:complexContent>
       <xs:extension base="loadable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singletableentitypersister" >
      <xs:complexContent>
       <xs:extension base="abstractentitypersister">
         <xs:sequence>
          <xs:element name="//theclasshierarchystructurejoinspan" type="xs:long" />
          <xs:element name="qualifiedtablenames" type="xs:string" />
          <xs:element name="isinversetable" type="xs:anyType" />
          <xs:element name="isnullabletable" type="xs:anyType" />
          <xs:element name="keycolumnnames" type="xs:string" />
          <xs:element name="cascadedeleteenabled" type="xs:anyType" />
          <xs:element name="hassequentialselects" type="xs:anyType" />
          <xs:element name="spaces" type="xs:string" />
          <xs:element name="subclassclosure" type="xs:string" />
          <xs:element name="subclasstablenameclosure" type="xs:string" />
          <xs:element name="subclasstableislazyclosure" type="xs:anyType" />
          <xs:element name="isinversesubclasstable" type="xs:anyType" />
          <xs:element name="isnullablesubclasstable" type="xs:anyType" />
          <xs:element name="subclasstablesequentialselect" type="xs:anyType" />
          <xs:element name="subclasstablekeycolumnclosure" type="xs:string" />
          <xs:element name="isclassorsuperclasstable" type="xs:anyType" />
          <xs:element name="propertytablenumbers" type="xs:long" />
          <xs:element name="subclasspropertytablenumberclosure" type="xs:long" />
          <xs:element name="subclasscolumntablenumberclosure" type="xs:long" />
          <xs:element name="subclassformulatablenumberclosure" type="xs:long" />
          <xs:element name="//discriminatorcolumnsubclassesbydiscriminatorvalue" type="map" nillable="true" minOccurs="0" />
          <xs:element name="forcediscriminator" type="xs:anyType" />
          <xs:element name="discriminatorcolumnname" type="xs:string" />
          <xs:element name="discriminatorcolumnreaders" type="xs:string" />
          <xs:element name="discriminatorcolumnreadertemplate" type="xs:string" />
          <xs:element name="discriminatorformula" type="xs:string" />
          <xs:element name="discriminatorformulatemplate" type="xs:string" />
          <xs:element name="discriminatoralias" type="xs:string" />
          <xs:element name="discriminator" type="type" nillable="true" minOccurs="0" />
          <xs:element name="discriminatorsqlvalue" type="xs:string" />
          <xs:element name="discriminatorinsertable" type="xs:anyType" />
          <xs:element name="constraintorderedtablenames" type="xs:string" />
          <xs:element name="constraintorderedkeycolumnnames" type="xs:string" />
          <xs:element name="//propertytablenumbersbyname" type="map" nillable="true" minOccurs="0" />
          <xs:element name="sequentialselectstringsbyentityname" type="map" nillable="true" minOccurs="0" />
          <xs:element name="null_discriminator" type="xs:anyType" />
          <xs:element name="not_null_discriminator" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uniquekeyloadable" >
      <xs:complexContent>
       <xs:extension base="loadable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discriminatortype" >
      <xs:complexContent>
       <xs:extension base="abstracttype">
         <xs:sequence>
          <xs:element name="underlying" type="type" nillable="true" minOccurs="0" />
          <xs:element name="persister" type="loadable" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpropertymapping" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="typesbypropertypath" type="map" nillable="true" minOccurs="0" />
        <xs:element name="columnsbypropertypath" type="map" nillable="true" minOccurs="0" />
        <xs:element name="columnreadersbypropertypath" type="map" nillable="true" minOccurs="0" />
        <xs:element name="columnreadertemplatesbypropertypath" type="map" nillable="true" minOccurs="0" />
        <xs:element name="formulatemplatesbypropertypath" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractentitypersister" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="entity_class" type="xs:string" />
        <xs:element name="//movedupfromabstractentitypersister~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="cacheaccessstrategy" type="entityregionaccessstrategy" nillable="true" minOccurs="0" />
        <xs:element name="islazypropertiescacheable" type="xs:anyType" />
        <xs:element name="GeneratedName" type="cacheentrystructure" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="entitymetamodel" nillable="true" minOccurs="0" />
        <xs:element name="roottablekeycolumnnames" type="xs:string" />
        <xs:element name="roottablekeycolumnreaders" type="xs:string" />
        <xs:element name="roottablekeycolumnreadertemplates" type="xs:string" />
        <xs:element name="identifieraliases" type="xs:string" />
        <xs:element name="identifiercolumnspan" type="xs:long" />
        <xs:element name="versioncolumnname" type="xs:string" />
        <xs:element name="hasformulaproperties" type="xs:anyType" />
        <xs:element name="batchsize" type="xs:long" />
        <xs:element name="hassubselectloadablecollections" type="xs:anyType" />
        <xs:element name="rowidname" type="xs:string" />
        <xs:element name="lazyproperties" type="set" nillable="true" minOccurs="0" />
        <xs:element name="//theoptionalsqldefinedinthewhereattributesqlwhere" type="xs:string" />
        <xs:element name="sqlwheretemplate" type="xs:string" />
        <xs:element name="propertycolumnspans" type="xs:long" />
        <xs:element name="propertysubclassnames" type="xs:string" />
        <xs:element name="propertycolumnaliases" type="xs:string" />
        <xs:element name="propertycolumnnames" type="xs:string" />
        <xs:element name="propertycolumnformulatemplates" type="xs:string" />
        <xs:element name="propertycolumnreadertemplates" type="xs:string" />
        <xs:element name="propertycolumnwriters" type="xs:string" />
        <xs:element name="propertycolumnupdateable" type="xs:anyType" />
        <xs:element name="propertycolumninsertable" type="xs:anyType" />
        <xs:element name="propertyuniqueness" type="xs:anyType" />
        <xs:element name="propertyselectable" type="xs:anyType" />
        <xs:element name="lazypropertynames" type="xs:string" />
        <xs:element name="lazypropertynumbers" type="xs:long" />
        <xs:element name="lazypropertys" type="type" nillable="true" minOccurs="0" />
        <xs:element name="lazypropertycolumnaliases" type="xs:string" />
        <xs:element name="subclasspropertynameclosure" type="xs:string" />
        <xs:element name="subclasspropertysubclassnameclosure" type="xs:string" />
        <xs:element name="subclasspropertyclosure" type="type" nillable="true" minOccurs="0" />
        <xs:element name="subclasspropertyformulatemplateclosure" type="xs:string" />
        <xs:element name="subclasspropertycolumnnameclosure" type="xs:string" />
        <xs:element name="subclasspropertycolumnreaderclosure" type="xs:string" />
        <xs:element name="subclasspropertycolumnreadertemplateclosure" type="xs:string" />
        <xs:element name="subclasspropertyclosure" type="fetchmode" nillable="true" minOccurs="0" />
        <xs:element name="subclasspropertynullabilityclosure" type="xs:anyType" />
        <xs:element name="propertydefinedonsubclass" type="xs:anyType" />
        <xs:element name="subclasspropertycolumnnumberclosure" type="xs:long" />
        <xs:element name="subclasspropertyformulanumberclosure" type="xs:long" />
        <xs:element name="subclasspropertyclosure" type="cascadestyle" nillable="true" minOccurs="0" />
        <xs:element name="subclasscolumnclosure" type="xs:string" />
        <xs:element name="subclasscolumnlazyclosure" type="xs:anyType" />
        <xs:element name="subclasscolumnaliasclosure" type="xs:string" />
        <xs:element name="subclasscolumnselectableclosure" type="xs:anyType" />
        <xs:element name="subclasscolumnreadertemplateclosure" type="xs:string" />
        <xs:element name="subclassformulaclosure" type="xs:string" />
        <xs:element name="subclassformulatemplateclosure" type="xs:string" />
        <xs:element name="subclassformulaaliasclosure" type="xs:string" />
        <xs:element name="subclassformulalazyclosure" type="xs:anyType" />
        <xs:element name="//dynamicfiltersattachedtotheclass-level" type="filterhelper" nillable="true" minOccurs="0" />
        <xs:element name="affectingfetchprofilenames" type="set" nillable="true" minOccurs="0" />
        <xs:element name="uniquekeyloaders" type="map" nillable="true" minOccurs="0" />
        <xs:element name="lockers" type="map" nillable="true" minOccurs="0" />
        <xs:element name="loaders" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//sqlssqlversionselect" type="xs:string" />
        <xs:element name="sqlsnapshotselect" type="xs:string" />
        <xs:element name="sqllazyselect" type="xs:string" />
        <xs:element name="sqlidentityinsert" type="xs:string" />
        <xs:element name="sqlupdatebyrowid" type="xs:string" />
        <xs:element name="sqllazyupdatebyrowid" type="xs:string" />
        <xs:element name="sqldeletes" type="xs:string" />
        <xs:element name="sqlinserts" type="xs:string" />
        <xs:element name="sqlupdates" type="xs:string" />
        <xs:element name="sqllazyupdates" type="xs:string" />
        <xs:element name="sqlinsertgeneratedvaluesselect" type="xs:string" />
        <xs:element name="sqlupdategeneratedvaluesselect" type="xs:string" />
        <xs:element name="insertcallable" type="xs:anyType" />
        <xs:element name="updatecallable" type="xs:anyType" />
        <xs:element name="deletecallable" type="xs:anyType" />
        <xs:element name="customsqlinsert" type="xs:string" />
        <xs:element name="customsqlupdate" type="xs:string" />
        <xs:element name="customsqldelete" type="xs:string" />
        <xs:element name="insertresultcheckstyles" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="updateresultcheckstyles" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="deleteresultcheckstyles" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="identitydelegate" type="insertgeneratedidentifierdelegate" nillable="true" minOccurs="0" />
        <xs:element name="tablehascolumns" type="xs:anyType" />
        <xs:element name="loadername" type="xs:string" />
        <xs:element name="queryloader" type="uniqueentityloader" nillable="true" minOccurs="0" />
        <xs:element name="temporaryidtablename" type="xs:string" />
        <xs:element name="temporaryidtableddl" type="xs:string" />
        <xs:element name="subclasspropertyaliases" type="map" nillable="true" minOccurs="0" />
        <xs:element name="subclasspropertycolumnnames" type="map" nillable="true" minOccurs="0" />
        <xs:element name="propertymapping" type="basicentitypropertymapping" nillable="true" minOccurs="0" />
        <xs:element name="discriminator_alias" type="xs:string" />
        <xs:element name="GeneratedName" type="discriminatormetadata" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitypersister" >
      <xs:complexContent>
       <xs:extension base="optimisticcachesource">
         <xs:sequence>
          <xs:element name="/***thepropertynameofthe"special"identifierpropertyinhql*/entity_id" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discriminatormetadata" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicentitypropertymapping" >
      <xs:complexContent>
       <xs:extension base="abstractpropertymapping">
         <xs:sequence>
          <xs:element name="persister" type="abstractentitypersister" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadable" >
      <xs:complexContent>
       <xs:extension base="entitypersister">
         <xs:sequence>
          <xs:element name="rowid_alias" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedqueryloader" >
      <xs:sequence>
        <xs:element name="queryname" type="xs:string" />
        <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outerjoinloadable" >
      <xs:complexContent>
       <xs:extension base="loadable,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockable" >
      <xs:complexContent>
       <xs:extension base="entitypersister">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryable" >
      <xs:complexContent>
       <xs:extension base="the">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeelementpropertymapping" >
      <xs:complexContent>
       <xs:extension base="abstractpropertymapping">
         <xs:sequence>
          <xs:element name="" type="compositetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlloadablecollection" >
      <xs:complexContent>
       <xs:extension base="queryablecollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionpersister" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionpropertymapping" >
      <xs:sequence>
        <xs:element name="memberpersister" type="queryablecollection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryablecollection" >
      <xs:complexContent>
       <xs:extension base="propertymapping,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elementpropertymapping" >
      <xs:sequence>
        <xs:element name="elementcolumns" type="xs:string" />
        <xs:element name="GeneratedName" type="type" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcollectionpersister" >
      <xs:sequence>
        <xs:element name="//todo:encapsulatetheprotectedinstancevariables!role" type="xs:string" />
        <xs:element name="//sqlstatementssqldelete" type="xs:string" />
        <xs:element name="sqlinsertrow" type="xs:string" />
        <xs:element name="sqlupdaterow" type="xs:string" />
        <xs:element name="sqldeleterow" type="xs:string" />
        <xs:element name="sqlselectsize" type="xs:string" />
        <xs:element name="sqlselectrowbyindex" type="xs:string" />
        <xs:element name="sqldetectrowbyindex" type="xs:string" />
        <xs:element name="sqldetectrowbyelement" type="xs:string" />
        <xs:element name="sqlwhere" type="xs:string" />
        <xs:element name="sqlorderbytemplate" type="xs:string" />
        <xs:element name="sqlwheretemplate" type="xs:string" />
        <xs:element name="hasorder" type="xs:anyType" />
        <xs:element name="haswhere" type="xs:anyType" />
        <xs:element name="baseindex" type="xs:long" />
        <xs:element name="nodename" type="xs:string" />
        <xs:element name="elementnodename" type="xs:string" />
        <xs:element name="indexnodename" type="xs:string" />
        <xs:element name="indexcontainsformula" type="xs:anyType" />
        <xs:element name="elementispureformula" type="xs:anyType" />
        <xs:element name="//skey" type="type" nillable="true" minOccurs="0" />
        <xs:element name="index" type="type" nillable="true" minOccurs="0" />
        <xs:element name="element" type="type" nillable="true" minOccurs="0" />
        <xs:element name="identifier" type="type" nillable="true" minOccurs="0" />
        <xs:element name="keycolumnnames" type="xs:string" />
        <xs:element name="indexcolumnnames" type="xs:string" />
        <xs:element name="indexformulatemplates" type="xs:string" />
        <xs:element name="indexformulas" type="xs:string" />
        <xs:element name="indexcolumnissettable" type="xs:anyType" />
        <xs:element name="elementcolumnnames" type="xs:string" />
        <xs:element name="elementcolumnwriters" type="xs:string" />
        <xs:element name="elementcolumnreaders" type="xs:string" />
        <xs:element name="elementcolumnreadertemplates" type="xs:string" />
        <xs:element name="elementformulatemplates" type="xs:string" />
        <xs:element name="elementformulas" type="xs:string" />
        <xs:element name="elementcolumnissettable" type="xs:anyType" />
        <xs:element name="elementcolumnisinprimarykey" type="xs:anyType" />
        <xs:element name="indexcolumnaliases" type="xs:string" />
        <xs:element name="elementcolumnaliases" type="xs:string" />
        <xs:element name="keycolumnaliases" type="xs:string" />
        <xs:element name="identifiercolumnname" type="xs:string" />
        <xs:element name="identifiercolumnalias" type="xs:string" />
        <xs:element name="//privateunquotedidentifiercolumnnamequalifiedtablename" type="xs:string" />
        <xs:element name="queryloadername" type="xs:string" />
        <xs:element name="isprimitivearray" type="xs:anyType" />
        <xs:element name="isarray" type="xs:anyType" />
        <xs:element name="hasindex" type="xs:anyType" />
        <xs:element name="hasidentifier" type="xs:anyType" />
        <xs:element name="islazy" type="xs:anyType" />
        <xs:element name="isextralazy" type="xs:anyType" />
        <xs:element name="isinverse" type="xs:anyType" />
        <xs:element name="ismutable" type="xs:anyType" />
        <xs:element name="isversioned" type="xs:anyType" />
        <xs:element name="batchsize" type="xs:long" />
        <xs:element name="GeneratedName" type="fetchmode" nillable="true" minOccurs="0" />
        <xs:element name="hasorphandelete" type="xs:anyType" />
        <xs:element name="subselectloadable" type="xs:anyType" />
        <xs:element name="//extrainformationabouttheelementtypeelement" type="xs:anyType" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="sqlexceptionconverter" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
        <xs:element name="ownerpersister" type="entitypersister" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="identifiergenerator" nillable="true" minOccurs="0" />
        <xs:element name="element" type="propertymapping" nillable="true" minOccurs="0" />
        <xs:element name="elementpersister" type="entitypersister" nillable="true" minOccurs="0" />
        <xs:element name="cacheaccessstrategy" type="collectionregionaccessstrategy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="collectiontype" nillable="true" minOccurs="0" />
        <xs:element name="initializer" type="collectioninitializer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="cacheentrystructure" nillable="true" minOccurs="0" />
        <xs:element name="//dynamicfiltersforthecollection" type="filterhelper" nillable="true" minOccurs="0" />
        <xs:element name="//dynamicfiltersspecificallyformany-to-manyinsidethecollectionmanytomany" type="filterhelper" nillable="true" minOccurs="0" />
        <xs:element name="manytomanywhere" type="xs:string" />
        <xs:element name="manytomanywheretemplate" type="xs:string" />
        <xs:element name="hasmanytomanyorder" type="xs:anyType" />
        <xs:element name="manytomanyorderbytemplate" type="xs:string" />
        <xs:element name="//customsqlinsertcallable" type="xs:anyType" />
        <xs:element name="updatecallable" type="xs:anyType" />
        <xs:element name="deletecallable" type="xs:anyType" />
        <xs:element name="deleteallcallable" type="xs:anyType" />
        <xs:element name="insertcheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="updatecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="deletecheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="deleteallcheckstyle" type="executeupdateresultcheckstyle" nillable="true" minOccurs="0" />
        <xs:element name="spaces" type="xs:anyType" />
        <xs:element name="collectionpropertycolumnaliases" type="map" nillable="true" minOccurs="0" />
        <xs:element name="collectionpropertycolumnnames" type="map" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="indexfragments" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanypersister" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionpersister">
         <xs:sequence>
          <xs:element name="cascadedeleteenabled" type="xs:anyType" />
          <xs:element name="keyisnullable" type="xs:anyType" />
          <xs:element name="keyisupdateable" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionpropertynames" >
      <xs:sequence>
        <xs:element name="collection_size" type="xs:string" />
        <xs:element name="collection_elements" type="xs:string" />
        <xs:element name="collection_indices" type="xs:string" />
        <xs:element name="collection_max_index" type="xs:string" />
        <xs:element name="collection_min_index" type="xs:string" />
        <xs:element name="collection_max_element" type="xs:string" />
        <xs:element name="collection_min_element" type="xs:string" />
        <xs:element name="collection_index" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basiccollectionpersister" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionpersister">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedquerycollectioninitializer" >
      <xs:sequence>
        <xs:element name="queryname" type="xs:string" />
        <xs:element name="persister" type="collectionpersister" nillable="true" minOccurs="0" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="query" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dom4jaccessor" >
      <xs:complexContent>
       <xs:extension base="dom4jgetter">
         <xs:sequence>
          <xs:element name="nodename" type="xs:string" />
          <xs:element name="property" type="type" nillable="true" minOccurs="0" />
          <xs:element name="factory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chainedpropertyaccessor" >
      <xs:sequence>
        <xs:element name="chain" type="propertyaccessor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="backrefpropertyaccessor" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="//cachethesesincetheyarestateless//thisonecouldevenbe...setter" type="xs:anyType" />
        <xs:element name="getter" type="xs:anyType" />
        <xs:element name="/***aplaceholderforapropertyvalue,indicatingthat*wedon'tknowthevalueofthebackreference*/unknown" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getter" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedpropertyaccessor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessorfactory" >
      <xs:sequence>
        <xs:element name="basic_property_accessor" type="propertyaccessor" nillable="true" minOccurs="0" />
        <xs:element name="direct_property_accessor" type="propertyaccessor" nillable="true" minOccurs="0" />
        <xs:element name="map_accessor" type="propertyaccessor" nillable="true" minOccurs="0" />
        <xs:element name="noop_accessor" type="propertyaccessor" nillable="true" minOccurs="0" />
        <xs:element name="embedded_property_accessor" type="propertyaccessor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyaccessor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="noopaccessor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicpropertyaccessor" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapaccessor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="directpropertyaccessor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="setter" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexpropertyaccessor" >
      <xs:sequence>
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="entityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dom4jproxy" >
      <xs:sequence>
        <xs:element name="li" type="dom4jlazyinitializer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dom4jproxyfactory" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dom4jlazyinitializer" >
      <xs:complexContent>
       <xs:extension base="abstractlazyinitializer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateproxy" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basiclazyinitializer" >
      <xs:complexContent>
       <xs:extension base="abstractlazyinitializer">
         <xs:sequence>
          <xs:element name="invoke_implementation" type="xs:anyType" />
          <xs:element name="persistent" type="xs:anyType" />
          <xs:element name="getidentifier" type="xs:anyType" />
          <xs:element name="setidentifier" type="xs:anyType" />
          <xs:element name="overridesequals" type="xs:anyType" />
          <xs:element name="replacement" type="xs:anyType" />
          <xs:element name="componentidtype" type="compositetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cgliblazyinitializer" >
      <xs:complexContent>
       <xs:extension base="basiclazyinitializer">
         <xs:sequence>
          <xs:element name="ize_filter" type="xs:anyType" />
          <xs:element name="interfaces" type="xs:anyType" />
          <xs:element name="constructed" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializableproxy" >
      <xs:complexContent>
       <xs:extension base="abstractserializableproxy">
         <xs:sequence>
          <xs:element name="persistent" type="xs:anyType" />
          <xs:element name="interfaces" type="xs:anyType" />
          <xs:element name="getidentifiermethod" type="xs:anyType" />
          <xs:element name="setidentifiermethod" type="xs:anyType" />
          <xs:element name="getidentifiermethodname" type="xs:string" />
          <xs:element name="setidentifiermethodname" type="xs:string" />
          <xs:element name="setidentifiermethodparams" type="xs:anyType" />
          <xs:element name="componentidtype" type="compositetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cglibproxyfactory" >
      <xs:sequence>
        <xs:element name="no_es" type="xs:anyType" />
        <xs:element name="persistent" type="xs:anyType" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="interfaces" type="xs:anyType" />
        <xs:element name="getidentifier" type="xs:anyType" />
        <xs:element name="setidentifier" type="xs:anyType" />
        <xs:element name="componentidtype" type="compositetype" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializableproxy" >
      <xs:complexContent>
       <xs:extension base="abstractserializableproxy">
         <xs:sequence>
          <xs:element name="persistent" type="xs:anyType" />
          <xs:element name="interfaces" type="xs:anyType" />
          <xs:element name="getidentifiermethod" type="xs:anyType" />
          <xs:element name="setidentifiermethod" type="xs:anyType" />
          <xs:element name="getidentifiermethodname" type="xs:string" />
          <xs:element name="setidentifiermethodname" type="xs:string" />
          <xs:element name="setidentifiermethodparams" type="xs:anyType" />
          <xs:element name="componentidtype" type="compositetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="javassistlazyinitializer" >
      <xs:complexContent>
       <xs:extension base="basiclazyinitializer">
         <xs:sequence>
          <xs:element name="ize_filter" type="xs:anyType" />
          <xs:element name="interfaces" type="xs:anyType" />
          <xs:element name="constructed" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="javassistproxyfactory" >
      <xs:sequence>
        <xs:element name="no_es" type="xs:anyType" />
        <xs:element name="persistent" type="xs:anyType" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="interfaces" type="xs:anyType" />
        <xs:element name="getidentifier" type="xs:anyType" />
        <xs:element name="setidentifier" type="xs:anyType" />
        <xs:element name="componentidtype" type="compositetype" nillable="true" minOccurs="0" />
        <xs:element name="factory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maplazyinitializer" >
      <xs:complexContent>
       <xs:extension base="abstractlazyinitializer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapproxy" >
      <xs:sequence>
        <xs:element name="li" type="maplazyinitializer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapproxyfactory" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernateproxyhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractlazyinitializer" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="target" type="xs:anyType" />
        <xs:element name="initialized" type="xs:anyType" />
        <xs:element name="readonly" type="xs:anyType" />
        <xs:element name="unwrap" type="xs:anyType" />
        <xs:element name="transientsession" type="sessionimplementor" nillable="true" minOccurs="0" />
        <xs:element name="readonlybeforeattachedtosession" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitynotfounddelegate" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractserializableproxy" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="readonly" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyinitializer" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readerinputstream" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.engine.jdbc.readerinputstream">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sunonetransactionmanagerlookup" >
      <xs:complexContent>
       <xs:extension base="jnditransactionmanagerlookup">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="webspheretransactionmanagerlookup" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="wsversion" type="xs:long" />
        <xs:element name="tmf" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bestransactionmanagerlookup" >
      <xs:complexContent>
       <xs:extension base="jnditransactionmanagerlookup">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jdbctransactionfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jonastransactionmanagerlookup" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aftercompletionaction" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatesynchronizationimpl" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="coordinator" type="callbackcoordinator" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="callbackcoordinator" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="ctx" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jdbccontext" nillable="true" minOccurs="0" />
        <xs:element name="jta" type="transaction" nillable="true" minOccurs="0" />
        <xs:element name="hibernatetransaction" type="xs:anyType" />
        <xs:element name="GeneratedName" type="beforecompletionmanagedflushchecker" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="aftercompletionaction" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="exceptionmapper" nillable="true" minOccurs="0" />
        <xs:element name="standard_managed_flush_checker" type="beforecompletionmanagedflushchecker" nillable="true" minOccurs="0" />
        <xs:element name="standard_exception_mapper" type="exceptionmapper" nillable="true" minOccurs="0" />
        <xs:element name="standard_after_completion_action" type="aftercompletionaction" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beforecompletionmanagedflushchecker" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="exceptionmapper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbctransaction" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="synchronizationregistry" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbccontext" nillable="true" minOccurs="0" />
        <xs:element name="transactioncontext" type="xs:anyType" />
        <xs:element name="toggleautocommit" type="xs:anyType" />
        <xs:element name="begun" type="xs:anyType" />
        <xs:element name="rolledback" type="xs:anyType" />
        <xs:element name="committed" type="xs:anyType" />
        <xs:element name="commitfailed" type="xs:anyType" />
        <xs:element name="callback" type="xs:anyType" />
        <xs:element name="timeout" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jotmtransactionmanagerlookup" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jbosstransactionmanagerlookup" >
      <xs:complexContent>
       <xs:extension base="jnditransactionmanagerlookup">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jnditransactionmanagerlookup" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cmttransactionfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oriontransactionmanagerlookup" >
      <xs:complexContent>
       <xs:extension base="jnditransactionmanagerlookup">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="weblogictransactionmanagerlookup" >
      <xs:complexContent>
       <xs:extension base="jnditransactionmanagerlookup">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionmanagerlookupfactory" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtatransactionfactory" >
      <xs:sequence>
        <xs:element name="default_user_transaction_name" type="xs:string" />
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="usertransactionname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtatransaction" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbccontext" nillable="true" minOccurs="0" />
        <xs:element name="transactioncontext" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="newtransaction" type="xs:anyType" />
        <xs:element name="begun" type="xs:anyType" />
        <xs:element name="commitfailed" type="xs:anyType" />
        <xs:element name="commitsucceeded" type="xs:anyType" />
        <xs:element name="callback" type="xs:anyType" />
        <xs:element name="null" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="websphereextendedjtatransactionlookup" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cmttransaction" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jdbccontext" nillable="true" minOccurs="0" />
        <xs:element name="transactioncontext" type="xs:anyType" />
        <xs:element name="begun" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jbosstsstandalonetransactionmanagerlookup" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jrun4transactionmanagerlookup" >
      <xs:complexContent>
       <xs:extension base="jnditransactionmanagerlookup">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionfactoryfactory" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachesynchronization" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
        <xs:element name="ctx" type="xs:anyType" />
        <xs:element name="GeneratedName" type="jdbccontext" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="transaction" nillable="true" minOccurs="0" />
        <xs:element name="hibernatetransaction" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oc4jtransactionmanagerlookup" >
      <xs:complexContent>
       <xs:extension base="jnditransactionmanagerlookup">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="btmtransactionmanagerlookup" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resintransactionmanagerlookup" >
      <xs:complexContent>
       <xs:extension base="jnditransactionmanagerlookup">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionmanagerlookup" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postloadevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractevent" >
      <xs:sequence>
        <xs:element name="session" type="eventsource" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="refresheventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persisteventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="destructible" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="initializable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eventlisteners" >
      <xs:complexContent>
       <xs:extension base="cloneable">
         <xs:sequence>
          <xs:element name="s" type="loadeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="saveorupdateeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="mergeeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="persisteventlistener" nillable="true" minOccurs="0" />
          <xs:element name="persistonflusheventlisteners" type="persisteventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="replicateeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="deleteeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="autoflusheventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="dirtycheckeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="flusheventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="evicteventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="lockeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="refresheventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="flushentityeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="initializecollectioneventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="postloadeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="preloadeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="predeleteeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="preupdateeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="preinserteventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="postdeleteeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="postupdateeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="postinserteventlistener" nillable="true" minOccurs="0" />
          <xs:element name="postcommitdeleteeventlisteners" type="postdeleteeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="postcommitupdateeventlisteners" type="postupdateeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="postcommitinserteventlisteners" type="postinserteventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="precollectionrecreateeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="postcollectionrecreateeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="precollectionremoveeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="postcollectionremoveeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="precollectionupdateeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="s" type="postcollectionupdateeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="saveeventlisteners" type="saveorupdateeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="updateeventlisteners" type="saveorupdateeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="saveorupdatecopyeventlisteners" type="mergeeventlistener" nillable="true" minOccurs="0" />
          <xs:element name="eventinterfacefromtype" type="map" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="saveorupdateevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="requestedid" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="entry" type="entityentry" nillable="true" minOccurs="0" />
          <xs:element name="resultid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="replicateevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="replicationmode" nillable="true" minOccurs="0" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deleteevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="cascadedeleteenabled" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="precollectionrecreateevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deleteeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postinsertevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="default_lock_mode" type="lockmode" nillable="true" minOccurs="0" />
          <xs:element name="entityid" type="xs:anyType" />
          <xs:element name="entityclassname" type="xs:string" />
          <xs:element name="instancetoload" type="xs:anyType" />
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
          <xs:element name="isassociationfetch" type="xs:anyType" />
          <xs:element name="result" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="evicteventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preloadevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="saveorupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcollectionupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preinserteventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="initializecollectionevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcollectionremoveeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="refreshevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="lockoptions" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postinserteventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flusheventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="replicateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preloadeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="loadeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
          <xs:element name="reload" type="xs:anyType" />
          <xs:element name="get" type="xs:anyType" />
          <xs:element name="load" type="xs:anyType" />
          <xs:element name="immediate_load" type="xs:anyType" />
          <xs:element name="internal_load_eager" type="xs:anyType" />
          <xs:element name="internal_load_lazy" type="xs:anyType" />
          <xs:element name="internal_load_nullable" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultflushentityeventlistener" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultreplicateeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractsaveeventlistener">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultmergeeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractsaveeventlistener">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractvisitor" >
      <xs:sequence>
        <xs:element name="session" type="eventsource" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyvisitor" >
      <xs:complexContent>
       <xs:extension base="abstractvisitor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultinitializecollectioneventlistener" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultdeleteeventlistener" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultlockeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractlockupgradeeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushvisitor" >
      <xs:complexContent>
       <xs:extension base="abstractvisitor">
         <xs:sequence>
          <xs:element name="owner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsaveeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractreassociateeventlistener">
         <xs:sequence>
          <xs:element name="persistent" type="xs:long" />
          <xs:element name="transient" type="xs:long" />
          <xs:element name="detached" type="xs:long" />
          <xs:element name="deleted" type="xs:long" />
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultsaveorupdatecopyeventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultmergeeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultsaveorupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractsaveeventlistener">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reattachvisitor" >
      <xs:complexContent>
       <xs:extension base="proxyvisitor">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="owneridentifier" type="xs:anyType" />
          <xs:element name="owner" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultsaveorupdateeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractflushingeventlistener" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="evictvisitor" >
      <xs:complexContent>
       <xs:extension base="abstractvisitor">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultpersistonflusheventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultpersisteventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultdirtycheckeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractflushingeventlistener">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrapvisitor" >
      <xs:complexContent>
       <xs:extension base="proxyvisitor">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
          <xs:element name="substitute" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onreplicatevisitor" >
      <xs:complexContent>
       <xs:extension base="reattachvisitor">
         <xs:sequence>
          <xs:element name="isupdate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultsaveeventlistener" >
      <xs:complexContent>
       <xs:extension base="defaultsaveorupdateeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onlockvisitor" >
      <xs:complexContent>
       <xs:extension base="reattachvisitor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultpostloadeventlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultevicteventlistener" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultpersisteventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractsaveeventlistener">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultrefresheventlistener" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultflusheventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractflushingeventlistener">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractreassociateeventlistener" >
      <xs:sequence>
        <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultloadeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractlockupgradeeventlistener">
         <xs:sequence>
          <xs:element name="removed_entity_marker" type="xs:anyType" />
          <xs:element name="inconsistent_rtn_class_marker" type="xs:anyType" />
          <xs:element name="default_lock_mode" type="lockmode" nillable="true" minOccurs="0" />
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onupdatevisitor" >
      <xs:complexContent>
       <xs:extension base="reattachvisitor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultpreloadeventlistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultautoflusheventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractflushingeventlistener">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlockupgradeeventlistener" >
      <xs:complexContent>
       <xs:extension base="abstractreassociateeventlistener">
         <xs:sequence>
          <xs:element name="log" type="logger" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventcache" >
      <xs:sequence>
        <xs:element name="entitytocopy" type="map" nillable="true" minOccurs="0" />
        <xs:element name="//keyisanentityinvolvedwiththeoperationperformedbythelistener//valuecanbeeitheracopyoftheentityortheentityitselfentitytooperatedonflag" type="map" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dirtycollectionsearchvisitor" >
      <xs:complexContent>
       <xs:extension base="abstractvisitor">
         <xs:sequence>
          <xs:element name="dirty" type="xs:anyType" />
          <xs:element name="propertyversionability" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoflushevent" >
      <xs:complexContent>
       <xs:extension base="flushevent">
         <xs:sequence>
          <xs:element name="queryspaces" type="set" nillable="true" minOccurs="0" />
          <xs:element name="flushrequired" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eventsource" >
      <xs:complexContent>
       <xs:extension base="sessionimplementor,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcollectionevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="collection" type="persistentcollection" nillable="true" minOccurs="0" />
          <xs:element name="affectedowner" type="xs:anyType" />
          <xs:element name="affectedownerid" type="xs:anyType" />
          <xs:element name="affectedownerentityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preinsertevent" >
      <xs:complexContent>
       <xs:extension base="abstractpredatabaseoperationevent">
         <xs:sequence>
          <xs:element name="state" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mergeeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="precollectionupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoflusheventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpredatabaseoperationevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcollectionrecreateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="precollectionremoveeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcollectionrecreateevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushentityevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="propertyvalues" type="xs:anyType" />
          <xs:element name="databasesnapshot" type="xs:anyType" />
          <xs:element name="dirtyproperties" type="xs:long" />
          <xs:element name="hasdirtycollection" type="xs:anyType" />
          <xs:element name="dirtycheckpossible" type="xs:anyType" />
          <xs:element name="dirtycheckhandledbyinterceptor" type="xs:anyType" />
          <xs:element name="" type="entityentry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergeevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="requestedid" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="result" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="precollectionupdateevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcollectionremoveevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postdeleteeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="preupdateevent" >
      <xs:complexContent>
       <xs:extension base="abstractpredatabaseoperationevent">
         <xs:sequence>
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="oldstate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dirtycheckevent" >
      <xs:complexContent>
       <xs:extension base="flushevent">
         <xs:sequence>
          <xs:element name="dirty" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flushentityeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="evictevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postdeleteevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="deletedstate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="precollectionrecreateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postloadeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="predeleteeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dirtycheckeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postupdateevent" >
      <xs:complexContent>
       <xs:extension base="abstractevent">
         <xs:sequence>
          <xs:element name="entity" type="xs:anyType" />
          <xs:element name="persister" type="entitypersister" nillable="true" minOccurs="0" />
          <xs:element name="state" type="xs:anyType" />
          <xs:element name="oldstate" type="xs:anyType" />
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="dirtyproperties" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcollectionupdateevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="precollectionremoveevent" >
      <xs:complexContent>
       <xs:extension base="abstractcollectionevent">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="predeleteevent" >
      <xs:complexContent>
       <xs:extension base="abstractpredatabaseoperationevent">
         <xs:sequence>
          <xs:element name="deletedstate" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postupdateeventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="initializecollectioneventlistener" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="session" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="objectnotfoundexception" >
      <xs:complexContent>
       <xs:extension base="unresolvableobjectexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrongclassexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="identifier" type="xs:anyType" />
          <xs:element name="entityname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unknownprofileexception" >
      <xs:complexContent>
       <xs:extension base="hibernateexception">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testingdatabaseinfo" >
      <xs:sequence>
        <xs:element name="volatiledriver" type="xs:string" />
        <xs:element name="volatileurl" type="xs:string" />
        <xs:element name="volatileuser" type="xs:string" />
        <xs:element name="volatilepass" type="xs:string" />
        <xs:element name="GeneratedName" type="dialect" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doctor" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclassproxyinterfacetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idoctor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertiestest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializablething" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringhelpertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="base_package" type="xs:string" />
          <xs:element name="_helper_fqn" type="xs:string" />
          <xs:element name="_helper_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializationhelpertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="custom" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicformattertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querykeytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="query_" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractholdertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablehilogeneratortest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="gen_table" type="xs:string" />
          <xs:element name="gen_column" type="xs:string" />
          <xs:element name="cfg" type="configuration" nillable="true" minOccurs="0" />
          <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="generator" type="tablehilogenerator" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencestyleconfigunittest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimizerunittest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customversiononestrategytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigintegerholdertest" >
      <xs:complexContent>
       <xs:extension base="abstractholdertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencehilogeneratortest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="test_sequence" type="xs:string" />
          <xs:element name="cfg" type="configuration" nillable="true" minOccurs="0" />
          <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="generator" type="sequencehilogenerator" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigdecimalholdertest" >
      <xs:complexContent>
       <xs:extension base="abstractholdertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencehilogeneratornoincrementtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="test_sequence" type="xs:string" />
          <xs:element name="cfg" type="configuration" nillable="true" minOccurs="0" />
          <xs:element name="sessionfactory" type="sessionfactoryimplementor" nillable="true" minOccurs="0" />
          <xs:element name="generator" type="sequencehilogenerator" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longholdertest" >
      <xs:complexContent>
       <xs:extension base="abstractholdertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserver2005dialecttestcase" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testingdialects" >
      <xs:complexContent>
       <xs:extension base="dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dialectresolvertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dialectfactorytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derbydialecttestcase" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mocks" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicpropertyaccessortest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="trivialtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="templatetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="property_mapping" type="propertymapping" nillable="true" minOccurs="0" />
          <xs:element name="mapper" type="columnmapper" nillable="true" minOccurs="0" />
          <xs:element name="" type="dialect" nillable="true" minOccurs="0" />
          <xs:element name="function_registry" type="sqlfunctionregistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basictyperegistrytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="registry" type="basictyperegistry" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="session" type="sessionimplementor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringvaluemappingtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="stringjavadescriptor" type="stringtypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="varcharsqldescriptor" type="varchartypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="clobsqldescriptor" type="clobtypedescriptor" nillable="true" minOccurs="0" />
          <xs:element name="" type="wrapperoptions" nillable="true" minOccurs="0" />
          <xs:element name="column_name" type="xs:string" />
          <xs:element name="bind_position" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetproxy" >
      <xs:sequence>
        <xs:element name="methodname" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringclobimpl" >
      <xs:sequence>
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="preparedstatementproxy" >
      <xs:sequence>
        <xs:element name="methodname" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bigintegerdescriptortest" >
      <xs:complexContent>
       <xs:extension base="abstractdescriptortest<biginteger>">
         <xs:sequence>
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="copy" type="xs:anyType" />
          <xs:element name="different" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringdescriptortest" >
      <xs:complexContent>
       <xs:extension base="abstractdescriptortest<string>">
         <xs:sequence>
          <xs:element name="original" type="xs:string" />
          <xs:element name="copy" type="xs:string" />
          <xs:element name="different" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractdescriptortest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="typedescriptor" type="xs:anyType" />
          <xs:element name="testdata" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blobdescriptortest" >
      <xs:complexContent>
       <xs:extension base="abstractdescriptortest<blob>">
         <xs:sequence>
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="copy" type="xs:anyType" />
          <xs:element name="different" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="booleandescriptortest" >
      <xs:complexContent>
       <xs:extension base="abstractdescriptortest<boolean>">
         <xs:sequence>
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="copy" type="xs:anyType" />
          <xs:element name="different" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigdecimaldescriptortest" >
      <xs:complexContent>
       <xs:extension base="abstractdescriptortest<bigdecimal>">
         <xs:sequence>
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="copy" type="xs:anyType" />
          <xs:element name="different" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterparsertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
</xs:schema> 