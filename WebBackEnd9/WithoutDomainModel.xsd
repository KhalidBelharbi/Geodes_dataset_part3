<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="zerocoordinates" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="insurance" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="policynumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="coordinates" >
      <xs:sequence>
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="latitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="truck" >
      <xs:complexContent>
       <xs:extension base="vehicle">
         <xs:sequence>
          <xs:element name="make" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mixedconfigurationtest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:complexContent>
       <xs:extension base="vehicle">
         <xs:sequence>
          <xs:element name="make" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlmetacompletetest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="businessentity" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="businessid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="businessid" >
      <xs:sequence>
        <xs:element name="businessid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddableconfiguredinxmltest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addressimpl" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="targetannotationtest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="shop" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="post" >
      <xs:complexContent>
       <xs:extension base="userrole>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attachmentgroup" >
      <xs:complexContent>
       <xs:extension base="attachmentgroup,">
         <xs:sequence>
          <xs:element name="posts" type="xs:anyType" />
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typesmappedsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="attachmentgrouppost" >
      <xs:complexContent>
       <xs:extension base="userrole,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddableandmappedsuperclass" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="suppresswarningsannotationnotgeneratedtest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="suppresswarningsannotationgeneratedtest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ref" >
      <xs:complexContent>
       <xs:extension base="abstractref">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractref" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedidwithinheritancetest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedidnoinheritancetest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="snn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlperson" >
      <xs:sequence>
        <xs:element name="id" type="personid" nillable="true" minOccurs="0" />
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blobtest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="qualifiedteachers" type="teacher" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="teacher" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="qualifiedfor" type="course" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlonlytest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="option" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="period" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tire" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="period" >
      <xs:sequence>
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlonly" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlmetadatacompletesinglepersistenceunittest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="separatecompilationunitstest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:complexContent>
       <xs:extension base="mappedsuperclass">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street1" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="inhabitants" type="inhabitant" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesstypetest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="building" >
      <xs:complexContent>
       <xs:extension base="area">
         <xs:sequence>
          <xs:element name="" type="address" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="area" >
      <xs:sequence>
        <xs:element name="length" type="xs:long" />
        <xs:element name="width" type="xs:long" />
        <xs:element name="height" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="livingbeing" >
      <xs:sequence>
        <xs:element name="isreallyalive" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inhabitant" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="pets" type="pet" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="iso2code" type="xs:string" />
        <xs:element name="nonpersistent" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pet" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hotel" >
      <xs:sequence>
        <xs:element name="webmaster" type="user" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detail" >
      <xs:sequence>
        <xs:element name="length" type="xs:anyType" />
        <xs:element name="width" type="xs:anyType" />
        <xs:element name="height" type="xs:anyType" />
        <xs:element name="nonpersistent" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arraytest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testutil" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
        <xs:element name="path_separator" type="xs:string" />
        <xs:element name="resource_separator" type="xs:string" />
        <xs:element name="package_separator" type="xs:string" />
        <xs:element name="meta_model_class_postfix" type="xs:string" />
        <xs:element name="out_base_dir" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ignorecompilationerrors" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compilationrunner" >
      <xs:complexContent>
       <xs:extension base="blockjunit4classrunner">
         <xs:sequence>
          <xs:element name="testentities" type="xs:anyType" />
          <xs:element name="precompileentities" type="xs:anyType" />
          <xs:element name="mappingfiles" type="xs:anyType" />
          <xs:element name="processoroptions" type="xs:anyType" />
          <xs:element name="packagename" type="xs:string" />
          <xs:element name="ignorecompilationerrors" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="withprocessoroption" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compilationtest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="withclasses" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testforissue" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="withmappingfiles" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compilationstatement" >
      <xs:complexContent>
       <xs:extension base="statement">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="package_separator" type="xs:string" />
          <xs:element name="annotation_processor_option_prefix" type="xs:string" />
          <xs:element name="source_base_dir_property" type="xs:string" />
          <xs:element name="source_base_dir" type="xs:string" />
          <xs:element name="original" type="xs:anyType" />
          <xs:element name="testentities" type="xs:anyType" />
          <xs:element name="precompileentities" type="xs:anyType" />
          <xs:element name="xmlmappingfiles" type="xs:anyType" />
          <xs:element name="processoroptions" type="xs:anyType" />
          <xs:element name="ignorecompilationerrors" type="xs:anyType" />
          <xs:element name="compilationdiagnostics" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street1" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mammal" >
      <xs:complexContent>
       <xs:extension base="livingbeing">
         <xs:sequence>
          <xs:element name="id" type="xs:string" />
          <xs:element name="subclass" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlmappingtest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="livingbeing" >
      <xs:sequence>
        <xs:element name="reallyalive" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ignoreinvalidxmltest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="boy" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nicknames" type="xs:anyType" />
        <xs:element name="favorite" type="superhero" nillable="true" minOccurs="0" />
        <xs:element name="knowsheroes" type="superhero" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="savedby" type="superhero" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fakehero" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="building" >
      <xs:complexContent>
       <xs:extension base="area">
         <xs:sequence>
          <xs:element name="" type="address" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="snafu" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpa21descriptortest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericstest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rawtypestest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hostel" >
      <xs:sequence>
        <xs:element name="roomsbyname" type="xs:anyType" />
        <xs:element name="cleaners" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="elementcollectiontest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="room" >
      <xs:sequence>
        <xs:element name="length" type="xs:anyType" />
        <xs:element name="width" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritancetest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="foo" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="building" >
      <xs:complexContent>
       <xs:extension base="area">
         <xs:sequence>
          <xs:element name="builtin" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="area" >
      <xs:sequence>
        <xs:element name="length" type="xs:long" />
        <xs:element name="width" type="xs:long" />
        <xs:element name="height" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unmappedclassinhierarchytest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedbase" >
      <xs:sequence>
        <xs:element name="creation" type="xs:dateTime" />
        <xs:element name="updon" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="normalextendsmapped" >
      <xs:complexContent>
       <xs:extension base="mappedbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="normalextendsentity" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistencebase" >
      <xs:sequence>
        <xs:element name="created" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deepinheritancetest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringutiltest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hashcodetest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usertypetest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddableaccesstypetest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="base" >
      <xs:sequence>
        <xs:element name="uuid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddableentity" >
      <xs:sequence>
        <xs:element name="stuffs" type="istuff" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="istuff" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generatedannotationtest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="skipgeneratedannotationtest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generationdatetest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultpackagetest" >
      <xs:complexContent>
       <xs:extension base="compilationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metaattribute" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metacollection" >
      <xs:complexContent>
       <xs:extension base="metaattribute">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="importcontext" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metasingleattribute" >
      <xs:complexContent>
       <xs:extension base="metaattribute">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metaentity" >
      <xs:complexContent>
       <xs:extension base="importcontext">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="context" >
      <xs:sequence>
        <xs:element name="default_persistence_xml_location" type="xs:string" />
        <xs:element name="metaentities" type="xs:anyType" />
        <xs:element name="metaembeddables" type="xs:anyType" />
        <xs:element name="accesstypeinformation" type="xs:anyType" />
        <xs:element name="pe" type="xs:anyType" />
        <xs:element name="logdebug" type="xs:anyType" />
        <xs:element name="lazyxmlparsing" type="xs:anyType" />
        <xs:element name="persistencexmllocation" type="xs:string" />
        <xs:element name="ormxmlfiles" type="xs:anyType" />
        <xs:element name="/***whetherallmappingfilesarexml-mapping-metadata-complete.inthiscasenoannotationprocessingwilltake*place.*/fullyxmlconfigured" type="xs:anyType" />
        <xs:element name="addgeneratedannotation" type="xs:anyType" />
        <xs:element name="addgenerationdate" type="xs:anyType" />
        <xs:element name="addsuppresswarningsannotation" type="xs:anyType" />
        <xs:element name="persistenceunitdefault" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="//keeptrackofallclassesforwhichmodelhavebeengeneratedgeneratedmodelclasses" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metaattributegenerationvisitor" >
      <xs:complexContent>
       <xs:extension base="simpletypevisitor6<annotationmetaattribute,">
         <xs:sequence>
          <xs:element name="/***fqcnofthehibernatespecific@targetannotation.wedonotusetheclassdirectlytoavoiddependingonhibernate*core.*/org_hibernate_annotations_target" type="xs:string" />
          <xs:element name="/***fqcnofthehibernatespecific@typeannotation.wedonotusetheclassdirectlytoavoiddependingonhibernate*core.*/org_hibernate_annotations_type" type="xs:string" />
          <xs:element name="entity" type="annotationmetaentity" nillable="true" minOccurs="0" />
          <xs:element name="" type="context" nillable="true" minOccurs="0" />
          <xs:element name="" type="context" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationmetacollection" >
      <xs:complexContent>
       <xs:extension base="annotationmetaattribute">
         <xs:sequence>
          <xs:element name="collectiontype" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationmetamap" >
      <xs:complexContent>
       <xs:extension base="annotationmetacollection">
         <xs:sequence>
          <xs:element name="keytype" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationmetasingleattribute" >
      <xs:complexContent>
       <xs:extension base="annotationmetaattribute">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationmetaentity" >
      <xs:complexContent>
       <xs:extension base="element>">
         <xs:sequence>
          <xs:element name="" type="importcontext" nillable="true" minOccurs="0" />
          <xs:element name="element" type="xs:anyType" />
          <xs:element name="members" type="xs:anyType" />
          <xs:element name="" type="context" nillable="true" minOccurs="0" />
          <xs:element name="entityaccesstypeinfo" type="accesstypeinformation" nillable="true" minOccurs="0" />
          <xs:element name="*alsonote,thatiftwodifferentclasseswithdifferentaccesstypesembedthisentityorextendthismapped*super-class,theaccesstypeoftheembeddable/super-classwillbetheoneofthelastembedding/sub-classing*entityprocessed.theresultisnotdetermined(that'sokaccordingtothespec).*/initialized" type="xs:anyType" />
          <xs:element name="/***anothermetaentityforthesametypewhichshouldbemergedlazilywiththismetaentity.doingthemerge*lazilyisrequiredforembeddedablesandmappedsupertypestoonlypullinthosemembersmatchingtheaccess*typeasconfiguredviatheembeddingentityorsubclass(alsoseemetagen-85).*/entitytomerge" type="metaentity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="annotationmetaattribute" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="parent" type="annotationmetaentity" nillable="true" minOccurs="0" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlmetacollection" >
      <xs:complexContent>
       <xs:extension base="xmlmetaattribute">
         <xs:sequence>
          <xs:element name="collectiontype" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpadescriptorparser" >
      <xs:sequence>
        <xs:element name="default_orm_xml_location" type="xs:string" />
        <xs:element name="serialization_file_name" type="xs:string" />
        <xs:element name="persistence_schema" type="xs:string" />
        <xs:element name="orm_schema" type="xs:string" />
        <xs:element name="GeneratedName" type="context" nillable="true" minOccurs="0" />
        <xs:element name="entitymappings" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xmlparserhelper" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlmetasingleattribute" >
      <xs:complexContent>
       <xs:extension base="xmlmetaattribute">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlmetaattribute" >
      <xs:sequence>
        <xs:element name="hostingentity" type="xmlmetaentity" nillable="true" minOccurs="0" />
        <xs:element name="propertyname" type="xs:string" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlmetamap" >
      <xs:complexContent>
       <xs:extension base="xmlmetacollection">
         <xs:sequence>
          <xs:element name="keytype" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="xmlmetaentity" >
      <xs:complexContent>
       <xs:extension base="typemirror>">
         <xs:sequence>
          <xs:element name="collections" type="xs:anyType" />
          <xs:element name="clazzname" type="xs:string" />
          <xs:element name="packagename" type="xs:string" />
          <xs:element name="defaultpackagename" type="xs:string" />
          <xs:element name="" type="importcontext" nillable="true" minOccurs="0" />
          <xs:element name="members" type="metaattribute" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="element" type="xs:anyType" />
          <xs:element name="" type="context" nillable="true" minOccurs="0" />
          <xs:element name="ismetacomplete" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="accesstypeinfo" type="accesstypeinformation" nillable="true" minOccurs="0" />
          <xs:element name="*alsonote,thatiftwodifferentclasseswithdifferentaccesstypesembedthisentityorextendthismapped*super-class,theaccesstypeoftheembeddable/super-classwillbetheoneofthelastembedding/sub-classing*entityprocessed.theresultisnotdetermined(that'sokaccordingtothespec).*/initialized" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classwriter" >
      <xs:complexContent>
       <xs:extension base=""">
         <xs:sequence>
          <xs:element name="meta_model_class_name_suffix" type="xs:string" />
          <xs:element name="simple_date_format" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="importcontextimpl" >
      <xs:sequence>
        <xs:element name="imports" type="xs:anyType" />
        <xs:element name="imports" type="xs:anyType" />
        <xs:element name="simplenames" type="xs:anyType" />
        <xs:element name="basepackage" type="xs:string" />
        <xs:element name="line_separator" type="xs:string" />
        <xs:element name="primitives" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metamodelgenerationexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filetimestampchecker" >
      <xs:sequence>
        <xs:element name="lastmodifiedcache" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typeutils" >
      <xs:complexContent>
       <xs:extension base="annotationmirror>">
         <xs:sequence>
          <xs:element name="default_annotation_parameter_name" type="xs:string" />
          <xs:element name="primitives" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringutil" >
      <xs:sequence>
        <xs:element name="name_separator" type="xs:string" />
        <xs:element name="property_prefix_get" type="xs:string" />
        <xs:element name="property_prefix_is" type="xs:string" />
        <xs:element name="property_prefix_has" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesstypeinformation" >
      <xs:sequence>
        <xs:element name="fqcn" type="xs:string" />
        <xs:element name="/***accesstypeexplicitlyspecifiedinxmloronanentity.*/explicit" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="/***thedefaulttypeforenentity.thistypemightchangeduringtheparsing/discoveringprocess.thereason*forthatistheabilitytomixandmatchxmlandannotationconfiguration.*/default" type="accesstype" nillable="true" minOccurs="0" />
        <xs:element name="default_access_type" type="accesstype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contextprovidingvalidationeventhandler" >
      <xs:sequence>
        <xs:element name="linenumber" type="xs:long" />
        <xs:element name="columnnumber" type="xs:long" />
        <xs:element name="message" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpanamespacetransformingeventreader" >
      <xs:complexContent>
       <xs:extension base="eventreaderdelegate">
         <xs:sequence>
          <xs:element name="version_attribute_name" type="xs:string" />
          <xs:element name="default_version" type="xs:string" />
          <xs:element name="default_persistence_namespace" type="xs:string" />
          <xs:element name="default_orm_namespace" type="xs:string" />
          <xs:element name="namespace_mapping" type="xs:anyType" />
          <xs:element name="start_element_to_namespace_uri" type="xs:anyType" />
          <xs:element name="empty_prefix" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="currentdocumentnamespaceuri" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlparserhelper" >
      <xs:sequence>
        <xs:element name="/***pathseparatorusedforresourceloading*/resource_path_separator" type="xs:string" />
        <xs:element name="/***theexpectednumberofxmlschemasmanagedbythisclass.usedtosetthe*initialcachesize.*/number_of_schemas" type="xs:long" />
        <xs:element name="xml_input_factory" type="xs:anyType" />
        <xs:element name="schema_cache" type="xs:anyType" />
        <xs:element name="GeneratedName" type="context" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlparsingexception" >
      <xs:complexContent>
       <xs:extension base="exception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesstype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="constants" >
      <xs:sequence>
        <xs:element name="//wearetryingtotoreferencejpaannotationsdirectlyentity" type="xs:string" />
        <xs:element name="mapped_superclass" type="xs:string" />
        <xs:element name="embeddable" type="xs:string" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="embedded_id" type="xs:string" />
        <xs:element name="transient" type="xs:string" />
        <xs:element name="basic" type="xs:string" />
        <xs:element name="one_to_one" type="xs:string" />
        <xs:element name="one_to_many" type="xs:string" />
        <xs:element name="many_to_one" type="xs:string" />
        <xs:element name="many_to_many" type="xs:string" />
        <xs:element name="map_key_class" type="xs:string" />
        <xs:element name="element_collection" type="xs:string" />
        <xs:element name="access" type="xs:string" />
        <xs:element name="collections" type="xs:anyType" />
        <xs:element name="basic_types" type="xs:anyType" />
        <xs:element name="basic_array_types" type="xs:anyType" />
        <xs:element name="path_separator" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpametamodelentityprocessor" >
      <xs:complexContent>
       <xs:extension base="abstractprocessor">
         <xs:sequence>
          <xs:element name="debug_option" type="xs:string" />
          <xs:element name="persistence_xml_option" type="xs:string" />
          <xs:element name="orm_xml_option" type="xs:string" />
          <xs:element name="fully_annotation_configured_option" type="xs:string" />
          <xs:element name="lazy_xml_parsing" type="xs:string" />
          <xs:element name="add_generation_date" type="xs:string" />
          <xs:element name="add_generated_annotation" type="xs:string" />
          <xs:element name="add_suppress_warnings_annotation" type="xs:string" />
          <xs:element name="allow_other_processors_to_claim_annotations" type="xs:anyType" />
          <xs:element name="" type="context" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
</xs:schema> 