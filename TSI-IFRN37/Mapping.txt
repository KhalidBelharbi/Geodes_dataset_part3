ClassDiagram.Class>> Privilege =>=>=> RelationalSchema.Table>> privilege;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Organization =>=>=> RelationalSchema.Table>> organization;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Foo =>=>=> RelationalSchema.Table>> foo;
ClassDiagram.Class>> Privilege =>=>=> RelationalSchema.Table>> privilege;
ClassDiagram.Class>> NoticeMessage =>=>=> RelationalSchema.Table>> noticemessage;
ClassDiagram.Attribut>> Privilege.id:Long =>=>=> RelationalSchema.Column>> privilege.id PRIMARY KEY;
ClassDiagram.Attribut>> Privilege.name:String =>=>=> RelationalSchema.Column>> privilege.name;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.enabled:boolean =>=>=> RelationalSchema.Column>> user.enabled;
ClassDiagram.Attribut>> User.isusing2fa:boolean =>=>=> RelationalSchema.Column>> user.isusing2fa;
ClassDiagram.Attribut>> Role.id:Long =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.name:String =>=>=> RelationalSchema.Column>> role.name;
ClassDiagram.Attribut>> Organization.id:Long =>=>=> RelationalSchema.Column>> organization.id PRIMARY KEY;
ClassDiagram.Attribut>> Organization.name:String =>=>=> RelationalSchema.Column>> organization.name;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> Foo.id:Long =>=>=> RelationalSchema.Column>> foo.id PRIMARY KEY;
ClassDiagram.Attribut>> Foo.name:String =>=>=> RelationalSchema.Column>> foo.name;
ClassDiagram.Attribut>> Privilege.id:Long =>=>=> RelationalSchema.Column>> privilege.id PRIMARY KEY;
ClassDiagram.Attribut>> Privilege.name:String =>=>=> RelationalSchema.Column>> privilege.name;
ClassDiagram.Attribut>> NoticeMessage.id:Integer =>=>=> RelationalSchema.Column>> noticemessage.id PRIMARY KEY;
ClassDiagram.Attribut>> NoticeMessage.content:String =>=>=> RelationalSchema.Column>> noticemessage.content;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>collection<role>: users_roles(user_id:User [PK] #FK to User,role_id:collection<role> [PK] #FK to collection<role>);
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>collection<privilege>: roles_privileges(role_id:Role [PK] #FK to Role,privilege_id:collection<privilege> [PK] #FK to collection<privilege>);
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<privilege>: users_privileges(user_id:User [PK] #FK to User,privilege_id:set<privilege> [PK] #FK to set<privilege>);
Many-To-One relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>organization represented by ClassDiagram.Atrribute>>id;
