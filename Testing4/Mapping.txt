ClassDiagram.Class>> NotificationMessageLineDTO =>=>=> RelationalSchema.Table>> notificationmessagelinedto;
ClassDiagram.Class>> NotificationMessageDTO =>=>=> RelationalSchema.Table>> notificationmessagedto;
ClassDiagram.Class>> NotificationMessageArchLineDTO =>=>=> RelationalSchema.Table>> notificationmessagearchlinedto;
ClassDiagram.Class>> NotificationMessageArchDTO =>=>=> RelationalSchema.Table>> notificationmessagearchdto;
ClassDiagram.Class>> NotificationMessageTypeDTO =>=>=> RelationalSchema.Table>> notificationmessagetypedto;
ClassDiagram.Class>> NotificationMessageSectionDTO =>=>=> RelationalSchema.Table>> notificationmessagesectiondto;
ClassDiagram.Class>> EDITypeDTO =>=>=> RelationalSchema.Table>> editypedto;
ClassDiagram.Class>> EDIFileFieldDTO =>=>=> RelationalSchema.Table>> edifilefielddto;
ClassDiagram.Class>> EDIFileDTO =>=>=> RelationalSchema.Table>> edifiledto;
ClassDiagram.Class>> EDIFileExceptionCodeDTO =>=>=> RelationalSchema.Table>> edifileexceptioncodedto;
ClassDiagram.Class>> EDIFileStatusDTO =>=>=> RelationalSchema.Table>> edifilestatusdto;
ClassDiagram.Class>> EDIFileRecordDTO =>=>=> RelationalSchema.Table>> edifilerecorddto;
ClassDiagram.Class>> ReportTypeDTO =>=>=> RelationalSchema.Table>> reporttypedto;
ClassDiagram.Class>> IntegerReportParameterDTO =>=>=> RelationalSchema.Table>> integerreportparameterdto;
ClassDiagram.Class>> BooleanReportParameterDTO =>=>=> RelationalSchema.Table>> booleanreportparameterdto;
ClassDiagram.Class>> DateReportParameterDTO =>=>=> RelationalSchema.Table>> datereportparameterdto;
ClassDiagram.Class>> ListReportParameterDTO =>=>=> RelationalSchema.Table>> listreportparameterdto;
ClassDiagram.Class>> StringReportParameterDTO =>=>=> RelationalSchema.Table>> stringreportparameterdto;
ClassDiagram.Class>> ReportParameterDTO =>=>=> RelationalSchema.Table>> reportparameterdto;
ClassDiagram.Class>> ReportDTO =>=>=> RelationalSchema.Table>> reportdto;
ClassDiagram.Class>> AgeingEntityStepDTO =>=>=> RelationalSchema.Table>> ageingentitystepdto;
ClassDiagram.Class>> ProcessRunUserDTO =>=>=> RelationalSchema.Table>> processrunuserdto;
ClassDiagram.Class>> ProcessRunTotalPmDTO =>=>=> RelationalSchema.Table>> processruntotalpmdto;
ClassDiagram.Class>> PaperInvoiceBatchDTO =>=>=> RelationalSchema.Table>> paperinvoicebatchdto;
ClassDiagram.Class>> BillingProcessFailedUserDTO =>=>=> RelationalSchema.Table>> billingprocessfaileduserdto;
ClassDiagram.Class>> PeriodUnitDTO =>=>=> RelationalSchema.Table>> periodunitdto;
ClassDiagram.Class>> BillingProcessConfigurationDTO =>=>=> RelationalSchema.Table>> billingprocessconfigurationdto;
ClassDiagram.Class>> BillingProcessDTO =>=>=> RelationalSchema.Table>> billingprocessdto;
ClassDiagram.Class>> BatchProcessInfoDTO =>=>=> RelationalSchema.Table>> batchprocessinfodto;
ClassDiagram.Class>> ProcessRunStatusDTO =>=>=> RelationalSchema.Table>> processrunstatusdto;
ClassDiagram.Class>> ProcessRunDTO =>=>=> RelationalSchema.Table>> processrundto;
ClassDiagram.Class>> ProcessRunTotalDTO =>=>=> RelationalSchema.Table>> processruntotaldto;
ClassDiagram.Class>> PluggableTaskTypeCategoryDTO =>=>=> RelationalSchema.Table>> pluggabletasktypecategorydto;
ClassDiagram.Class>> PluggableTaskDTO =>=>=> RelationalSchema.Table>> pluggabletaskdto;
ClassDiagram.Class>> PluggableTaskParameterDTO =>=>=> RelationalSchema.Table>> pluggabletaskparameterdto;
ClassDiagram.Class>> PluggableTaskTypeDTO =>=>=> RelationalSchema.Table>> pluggabletasktypedto;
ClassDiagram.Class>> InvoiceLineDTO =>=>=> RelationalSchema.Table>> invoicelinedto;
ClassDiagram.Class>> InvoiceLineTypeDTO =>=>=> RelationalSchema.Table>> invoicelinetypedto;
ClassDiagram.Class>> InvoiceDTO =>=>=> RelationalSchema.Table>> invoicedto;
ClassDiagram.Class>> InvoiceDeliveryMethodDTO =>=>=> RelationalSchema.Table>> invoicedeliverymethoddto;
ClassDiagram.Class>> InvoiceStatusDTO =>=>=> RelationalSchema.Table>> invoicestatusdto;
ClassDiagram.Class>> SuretaxTransactionLogDTO =>=>=> RelationalSchema.Table>> suretaxtransactionlogdto;
ClassDiagram.Class>> InvoiceTemplateVersionDTO =>=>=> RelationalSchema.Table>> invoicetemplateversiondto;
ClassDiagram.Class>> InvoiceTemplateFileDTO =>=>=> RelationalSchema.Table>> invoicetemplatefiledto;
ClassDiagram.Class>> InvoiceTemplateDTO =>=>=> RelationalSchema.Table>> invoicetemplatedto;
ClassDiagram.Class>> BoaBaiProcessingErrorDTO =>=>=> RelationalSchema.Table>> boabaiprocessingerrordto;
ClassDiagram.Class>> BoaBaiProcessedFileDTO =>=>=> RelationalSchema.Table>> boabaiprocessedfiledto;
ClassDiagram.Class>> BlacklistDTO =>=>=> RelationalSchema.Table>> blacklistdto;
ClassDiagram.Class>> PaymentTransferDTO =>=>=> RelationalSchema.Table>> paymenttransferdto;
ClassDiagram.Class>> PaymentInformationDTO =>=>=> RelationalSchema.Table>> paymentinformationdto;
ClassDiagram.Class>> PaymentResultDTO =>=>=> RelationalSchema.Table>> paymentresultdto;
ClassDiagram.Class>> PaymentAuthorizationDTO =>=>=> RelationalSchema.Table>> paymentauthorizationdto;
ClassDiagram.Class>> PaymentInstrumentInfoDTO =>=>=> RelationalSchema.Table>> paymentinstrumentinfodto;
ClassDiagram.Class>> PaymentDTO =>=>=> RelationalSchema.Table>> paymentdto;
ClassDiagram.Class>> PaymentInvoiceMapDTO =>=>=> RelationalSchema.Table>> paymentinvoicemapdto;
ClassDiagram.Class>> PaymentMethodTemplateDTO =>=>=> RelationalSchema.Table>> paymentmethodtemplatedto;
ClassDiagram.Class>> PaymentMethodDTO =>=>=> RelationalSchema.Table>> paymentmethoddto;
ClassDiagram.Class>> PaymentMethodTypeDTO =>=>=> RelationalSchema.Table>> paymentmethodtypedto;
ClassDiagram.Class>> EventLogModuleDTO =>=>=> RelationalSchema.Table>> eventlogmoduledto;
ClassDiagram.Class>> EventLogDTO =>=>=> RelationalSchema.Table>> eventlogdto;
ClassDiagram.Class>> EventLogMessageDTO =>=>=> RelationalSchema.Table>> eventlogmessagedto;
ClassDiagram.Class>> PreferenceTypeDTO =>=>=> RelationalSchema.Table>> preferencetypedto;
ClassDiagram.Class>> NotificationCategoryDTO =>=>=> RelationalSchema.Table>> notificationcategorydto;
ClassDiagram.Class>> PreferenceDTO =>=>=> RelationalSchema.Table>> preferencedto;
ClassDiagram.Class>> OrderProvisioningCommandDTO =>=>=> RelationalSchema.Table>> orderprovisioningcommanddto;
ClassDiagram.Class>> ProvisioningCommandDTO =>=>=> RelationalSchema.Table>> provisioningcommanddto;
ClassDiagram.Class>> OrderLineProvisioningCommandDTO =>=>=> RelationalSchema.Table>> orderlineprovisioningcommanddto;
ClassDiagram.Class>> PaymentProvisioningCommandDTO =>=>=> RelationalSchema.Table>> paymentprovisioningcommanddto;
ClassDiagram.Class>> AssetProvisioningCommandDTO =>=>=> RelationalSchema.Table>> assetprovisioningcommanddto;
ClassDiagram.Class>> ProvisioningRequestDTO =>=>=> RelationalSchema.Table>> provisioningrequestdto;
ClassDiagram.Class>> ProvisioningStatusDTO =>=>=> RelationalSchema.Table>> provisioningstatusdto;
ClassDiagram.Class>> UserPasswordDTO =>=>=> RelationalSchema.Table>> userpassworddto;
ClassDiagram.Class>> CustomerDTO =>=>=> RelationalSchema.Table>> customerdto;
ClassDiagram.Class>> CustomerPriceDTO =>=>=> RelationalSchema.Table>> customerpricedto;
ClassDiagram.Class>> UserStatusDTO =>=>=> RelationalSchema.Table>> userstatusdto;
ClassDiagram.Class>> AccountTypePriceDTO =>=>=> RelationalSchema.Table>> accounttypepricedto;
ClassDiagram.Class>> UserCodeDTO =>=>=> RelationalSchema.Table>> usercodedto;
ClassDiagram.Class>> ResetPasswordCodeDTO =>=>=> RelationalSchema.Table>> resetpasswordcodedto;
ClassDiagram.Class>> CustomerAccountInfoTypeMetaField =>=>=> RelationalSchema.Table>> customeraccountinfotypemetafield;
ClassDiagram.Class>> UserDTO =>=>=> RelationalSchema.Table>> userdto;
ClassDiagram.Class>> CompanyDTO =>=>=> RelationalSchema.Table>> companydto;
ClassDiagram.Class>> AccountInformationTypeDTO =>=>=> RelationalSchema.Table>> accountinformationtypedto;
ClassDiagram.Class>> UserCodeLinkDTO =>=>=> RelationalSchema.Table>> usercodelinkdto;
ClassDiagram.Class>> UserCodeOrderLinkDTO =>=>=> RelationalSchema.Table>> usercodeorderlinkdto;
ClassDiagram.Class>> UserCodeCustomerLinkDTO =>=>=> RelationalSchema.Table>> usercodecustomerlinkdto;
ClassDiagram.Class>> SubscriberStatusDTO =>=>=> RelationalSchema.Table>> subscriberstatusdto;
ClassDiagram.Class>> MatchingFieldDTO =>=>=> RelationalSchema.Table>> matchingfielddto;
ClassDiagram.Class>> CustomerNoteDTO =>=>=> RelationalSchema.Table>> customernotedto;
ClassDiagram.Class>> AccountTypeDTO =>=>=> RelationalSchema.Table>> accounttypedto;
ClassDiagram.Class>> RoleDTO =>=>=> RelationalSchema.Table>> roledto;
ClassDiagram.Class>> PermissionTypeDTO =>=>=> RelationalSchema.Table>> permissiontypedto;
ClassDiagram.Class>> PermissionUserDTO =>=>=> RelationalSchema.Table>> permissionuserdto;
ClassDiagram.Class>> PermissionDTO =>=>=> RelationalSchema.Table>> permissiondto;
ClassDiagram.Class>> PaymentCommissionDTO =>=>=> RelationalSchema.Table>> paymentcommissiondto;
ClassDiagram.Class>> CommissionProcessConfigurationDTO =>=>=> RelationalSchema.Table>> commissionprocessconfigurationdto;
ClassDiagram.Class>> PartnerPayout =>=>=> RelationalSchema.Table>> partnerpayout;
ClassDiagram.Class>> PartnerCommissionExceptionDTO =>=>=> RelationalSchema.Table>> partnercommissionexceptiondto;
ClassDiagram.Class>> PartnerDTO =>=>=> RelationalSchema.Table>> partnerdto;
ClassDiagram.Class>> InvoiceCommissionDTO =>=>=> RelationalSchema.Table>> invoicecommissiondto;
ClassDiagram.Class>> CustomerCommissionDTO =>=>=> RelationalSchema.Table>> customercommissiondto;
ClassDiagram.Class>> PartnerReferralCommissionDTO =>=>=> RelationalSchema.Table>> partnerreferralcommissiondto;
ClassDiagram.Class>> ReferralCommissionDTO =>=>=> RelationalSchema.Table>> referralcommissiondto;
ClassDiagram.Class>> CommissionProcessRunDTO =>=>=> RelationalSchema.Table>> commissionprocessrundto;
ClassDiagram.Class>> PartnerCommissionLineDTO =>=>=> RelationalSchema.Table>> partnercommissionlinedto;
ClassDiagram.Class>> PartnerCommissionValueDTO =>=>=> RelationalSchema.Table>> partnercommissionvaluedto;
ClassDiagram.Class>> CommissionDTO =>=>=> RelationalSchema.Table>> commissiondto;
ClassDiagram.Class>> ContactDTO =>=>=> RelationalSchema.Table>> contactdto;
ClassDiagram.Class>> ContactMapDTO =>=>=> RelationalSchema.Table>> contactmapdto;
ClassDiagram.Class>> DataTableQueryEntryDTO =>=>=> RelationalSchema.Table>> datatablequeryentrydto;
ClassDiagram.Class>> PriceModelDTO =>=>=> RelationalSchema.Table>> pricemodeldto;
ClassDiagram.Class>> DataTableQueryDTO =>=>=> RelationalSchema.Table>> datatablequerydto;
ClassDiagram.Class>> RouteRateCardDTO =>=>=> RelationalSchema.Table>> routeratecarddto;
ClassDiagram.Class>> RouteDTO =>=>=> RelationalSchema.Table>> routedto;
ClassDiagram.Class>> RatingUnitDTO =>=>=> RelationalSchema.Table>> ratingunitdto;
ClassDiagram.Class>> RateCardDTO =>=>=> RelationalSchema.Table>> ratecarddto;
ClassDiagram.Class>> CustomerUsagePoolDTO =>=>=> RelationalSchema.Table>> customerusagepooldto;
ClassDiagram.Class>> ComsumptionActionDTO =>=>=> RelationalSchema.Table>> comsumptionactiondto;
ClassDiagram.Class>> UsagePoolDTO =>=>=> RelationalSchema.Table>> usagepooldto;
ClassDiagram.Class>> UsagePoolConsumptionLogDTO =>=>=> RelationalSchema.Table>> usagepoolconsumptionlogdto;
ClassDiagram.Class>> UsagePoolConsumptionActionDTO =>=>=> RelationalSchema.Table>> usagepoolconsumptionactiondto;
ClassDiagram.Class>> OrderProcessDTO =>=>=> RelationalSchema.Table>> orderprocessdto;
ClassDiagram.Class>> OrderChangeTypeDTO =>=>=> RelationalSchema.Table>> orderchangetypedto;
ClassDiagram.Class>> OrderLineUsagePoolDTO =>=>=> RelationalSchema.Table>> orderlineusagepooldto;
ClassDiagram.Class>> OrderStatusDTO =>=>=> RelationalSchema.Table>> orderstatusdto;
ClassDiagram.Class>> OrderBillingTypeDTO =>=>=> RelationalSchema.Table>> orderbillingtypedto;
ClassDiagram.Class>> OrderChangeDTO =>=>=> RelationalSchema.Table>> orderchangedto;
ClassDiagram.Class>> OrderChangePlanItemDTO =>=>=> RelationalSchema.Table>> orderchangeplanitemdto;
ClassDiagram.Class>> OrderLineDTO =>=>=> RelationalSchema.Table>> orderlinedto;
ClassDiagram.Class>> OrderPeriodDTO =>=>=> RelationalSchema.Table>> orderperioddto;
ClassDiagram.Class>> OrderChangeStatusDTO =>=>=> RelationalSchema.Table>> orderchangestatusdto;
ClassDiagram.Class>> OrderDTO =>=>=> RelationalSchema.Table>> orderdto;
ClassDiagram.Class>> OrderLineTypeDTO =>=>=> RelationalSchema.Table>> orderlinetypedto;
ClassDiagram.Class>> ItemDTO =>=>=> RelationalSchema.Table>> itemdto;
ClassDiagram.Class>> PlanDTO =>=>=> RelationalSchema.Table>> plandto;
ClassDiagram.Class>> ItemTypeDTO =>=>=> RelationalSchema.Table>> itemtypedto;
ClassDiagram.Class>> AssetReservationDTO =>=>=> RelationalSchema.Table>> assetreservationdto;
ClassDiagram.Class>> ItemDependencyOnItemDTO =>=>=> RelationalSchema.Table>> itemdependencyonitemdto;
ClassDiagram.Class>> EntityItemPrice =>=>=> RelationalSchema.Table>> entityitemprice;
ClassDiagram.Class>> AssetStatusDTO =>=>=> RelationalSchema.Table>> assetstatusdto;
ClassDiagram.Class>> AssetAssignmentDTO =>=>=> RelationalSchema.Table>> assetassignmentdto;
ClassDiagram.Class>> ItemDependencyDTO =>=>=> RelationalSchema.Table>> itemdependencydto;
ClassDiagram.Class>> PlanItemDTO =>=>=> RelationalSchema.Table>> planitemdto;
ClassDiagram.Class>> AssetDTO =>=>=> RelationalSchema.Table>> assetdto;
ClassDiagram.Class>> PlanItemBundleDTO =>=>=> RelationalSchema.Table>> planitembundledto;
ClassDiagram.Class>> AssetTransitionDTO =>=>=> RelationalSchema.Table>> assettransitiondto;
ClassDiagram.Class>> ItemDependencyOnItemTypeDTO =>=>=> RelationalSchema.Table>> itemdependencyonitemtypedto;
ClassDiagram.Class>> CustomerEnrollmentDTO =>=>=> RelationalSchema.Table>> customerenrollmentdto;
ClassDiagram.Class>> CustomerEnrollmentCommentDTO =>=>=> RelationalSchema.Table>> customerenrollmentcommentdto;
ClassDiagram.Class>> MediationConfiguration =>=>=> RelationalSchema.Table>> mediationconfiguration;
ClassDiagram.Class>> ChargeSessionDTO =>=>=> RelationalSchema.Table>> chargesessiondto;
ClassDiagram.Class>> ReservedAmountDTO =>=>=> RelationalSchema.Table>> reservedamountdto;
ClassDiagram.Class>> DiscountLineDTO =>=>=> RelationalSchema.Table>> discountlinedto;
ClassDiagram.Class>> DiscountDTO =>=>=> RelationalSchema.Table>> discountdto;
ClassDiagram.Attribut>> NotificationMessageLineDTO.id:int =>=>=> RelationalSchema.Column>> notificationmessagelinedto.id PRIMARY KEY;
ClassDiagram.Attribut>> NotificationMessageLineDTO.content:String =>=>=> RelationalSchema.Column>> notificationmessagelinedto.content;
ClassDiagram.Attribut>> NotificationMessageLineDTO.versionnum:int =>=>=> RelationalSchema.Column>> notificationmessagelinedto.versionnum;
ClassDiagram.Attribut>> NotificationMessageDTO.id:int =>=>=> RelationalSchema.Column>> notificationmessagedto.id PRIMARY KEY;
ClassDiagram.Attribut>> NotificationMessageDTO.useflag:short =>=>=> RelationalSchema.Column>> notificationmessagedto.useflag;
ClassDiagram.Attribut>> NotificationMessageDTO.versionnum:int =>=>=> RelationalSchema.Column>> notificationmessagedto.versionnum;
ClassDiagram.Attribut>> NotificationMessageDTO.includeattachment:Integer =>=>=> RelationalSchema.Column>> notificationmessagedto.includeattachment;
ClassDiagram.Attribut>> NotificationMessageDTO.attachmentdesign:String =>=>=> RelationalSchema.Column>> notificationmessagedto.attachmentdesign;
ClassDiagram.Attribut>> NotificationMessageDTO.attachmenttype:String =>=>=> RelationalSchema.Column>> notificationmessagedto.attachmenttype;
ClassDiagram.Attribut>> NotificationMessageDTO.notifyadmin:Integer =>=>=> RelationalSchema.Column>> notificationmessagedto.notifyadmin;
ClassDiagram.Attribut>> NotificationMessageDTO.notifypartner:Integer =>=>=> RelationalSchema.Column>> notificationmessagedto.notifypartner;
ClassDiagram.Attribut>> NotificationMessageDTO.notifyparent:Integer =>=>=> RelationalSchema.Column>> notificationmessagedto.notifyparent;
ClassDiagram.Attribut>> NotificationMessageDTO.notifyallparents:Integer =>=>=> RelationalSchema.Column>> notificationmessagedto.notifyallparents;
ClassDiagram.Attribut>> NotificationMessageDTO.mediumtypes:List<NotificationMediumType> =>=>=> RelationalSchema.Column>> notificationmessagedto.mediumtypes;
ClassDiagram.Attribut>> NotificationMessageArchLineDTO.id:int =>=>=> RelationalSchema.Column>> notificationmessagearchlinedto.id PRIMARY KEY;
ClassDiagram.Attribut>> NotificationMessageArchLineDTO.section:int =>=>=> RelationalSchema.Column>> notificationmessagearchlinedto.section;
ClassDiagram.Attribut>> NotificationMessageArchLineDTO.content:String =>=>=> RelationalSchema.Column>> notificationmessagearchlinedto.content;
ClassDiagram.Attribut>> NotificationMessageArchLineDTO.versionnum:int =>=>=> RelationalSchema.Column>> notificationmessagearchlinedto.versionnum;
ClassDiagram.Attribut>> NotificationMessageArchDTO.id:int =>=>=> RelationalSchema.Column>> notificationmessagearchdto.id PRIMARY KEY;
ClassDiagram.Attribut>> NotificationMessageArchDTO.typeid:Integer =>=>=> RelationalSchema.Column>> notificationmessagearchdto.typeid;
ClassDiagram.Attribut>> NotificationMessageArchDTO.createtime:Date =>=>=> RelationalSchema.Column>> notificationmessagearchdto.createtime;
ClassDiagram.Attribut>> NotificationMessageArchDTO.resultmessage:String =>=>=> RelationalSchema.Column>> notificationmessagearchdto.resultmessage;
ClassDiagram.Attribut>> NotificationMessageArchDTO.versionnum:int =>=>=> RelationalSchema.Column>> notificationmessagearchdto.versionnum;
ClassDiagram.Attribut>> NotificationMessageTypeDTO.id:int =>=>=> RelationalSchema.Column>> notificationmessagetypedto.id PRIMARY KEY;
ClassDiagram.Attribut>> NotificationMessageTypeDTO.versionnum:int =>=>=> RelationalSchema.Column>> notificationmessagetypedto.versionnum;
ClassDiagram.Attribut>> NotificationMessageSectionDTO.id:int =>=>=> RelationalSchema.Column>> notificationmessagesectiondto.id PRIMARY KEY;
ClassDiagram.Attribut>> NotificationMessageSectionDTO.section:Integer =>=>=> RelationalSchema.Column>> notificationmessagesectiondto.section;
ClassDiagram.Attribut>> NotificationMessageSectionDTO.versionnum:int =>=>=> RelationalSchema.Column>> notificationmessagesectiondto.versionnum;
ClassDiagram.Attribut>> EDITypeDTO.id:int =>=>=> RelationalSchema.Column>> editypedto.id PRIMARY KEY;
ClassDiagram.Attribut>> EDITypeDTO.name:String =>=>=> RelationalSchema.Column>> editypedto.name;
ClassDiagram.Attribut>> EDITypeDTO.path:String =>=>=> RelationalSchema.Column>> editypedto.path;
ClassDiagram.Attribut>> EDITypeDTO.global:Integer =>=>=> RelationalSchema.Column>> editypedto.global;
ClassDiagram.Attribut>> EDITypeDTO.versionnum:int =>=>=> RelationalSchema.Column>> editypedto.versionnum;
ClassDiagram.Attribut>> EDITypeDTO.createtime:Date =>=>=> RelationalSchema.Column>> editypedto.createtime;
ClassDiagram.Attribut>> EDITypeDTO.edisuffix:String =>=>=> RelationalSchema.Column>> editypedto.edisuffix;
ClassDiagram.Attribut>> EDIFileFieldDTO.id:int =>=>=> RelationalSchema.Column>> edifilefielddto.id PRIMARY KEY;
ClassDiagram.Attribut>> EDIFileFieldDTO.edifilefieldkey:String =>=>=> RelationalSchema.Column>> edifilefielddto.edifilefieldkey;
ClassDiagram.Attribut>> EDIFileFieldDTO.edifilefieldvalue:String =>=>=> RelationalSchema.Column>> edifilefielddto.edifilefieldvalue;
ClassDiagram.Attribut>> EDIFileFieldDTO.edifilefieldorder:Integer =>=>=> RelationalSchema.Column>> edifilefielddto.edifilefieldorder;
ClassDiagram.Attribut>> EDIFileFieldDTO.comment:String =>=>=> RelationalSchema.Column>> edifilefielddto.comment;
ClassDiagram.Attribut>> EDIFileDTO.id:int =>=>=> RelationalSchema.Column>> edifiledto.id PRIMARY KEY;
ClassDiagram.Attribut>> EDIFileDTO.name:String =>=>=> RelationalSchema.Column>> edifiledto.name;
ClassDiagram.Attribut>> EDIFileDTO.createtime:Date =>=>=> RelationalSchema.Column>> edifiledto.createtime;
ClassDiagram.Attribut>> EDIFileDTO.type:TransactionType =>=>=> RelationalSchema.Column>> edifiledto.type;
ClassDiagram.Attribut>> EDIFileDTO.versionnum:int =>=>=> RelationalSchema.Column>> edifiledto.versionnum;
ClassDiagram.Attribut>> EDIFileDTO.comment:String =>=>=> RelationalSchema.Column>> edifiledto.comment;
ClassDiagram.Attribut>> EDIFileExceptionCodeDTO.id:int =>=>=> RelationalSchema.Column>> edifileexceptioncodedto.id PRIMARY KEY;
ClassDiagram.Attribut>> EDIFileExceptionCodeDTO.exceptioncode:String =>=>=> RelationalSchema.Column>> edifileexceptioncodedto.exceptioncode;
ClassDiagram.Attribut>> EDIFileExceptionCodeDTO.description:String =>=>=> RelationalSchema.Column>> edifileexceptioncodedto.description;
ClassDiagram.Attribut>> EDIFileExceptionCodeDTO.versionnum:int =>=>=> RelationalSchema.Column>> edifileexceptioncodedto.versionnum;
ClassDiagram.Attribut>> EDIFileStatusDTO.id:int =>=>=> RelationalSchema.Column>> edifilestatusdto.id PRIMARY KEY;
ClassDiagram.Attribut>> EDIFileStatusDTO.name:String =>=>=> RelationalSchema.Column>> edifilestatusdto.name;
ClassDiagram.Attribut>> EDIFileStatusDTO.createtime:Date =>=>=> RelationalSchema.Column>> edifilestatusdto.createtime;
ClassDiagram.Attribut>> EDIFileStatusDTO.versionnum:int =>=>=> RelationalSchema.Column>> edifilestatusdto.versionnum;
ClassDiagram.Attribut>> EDIFileStatusDTO.iserror:boolean =>=>=> RelationalSchema.Column>> edifilestatusdto.iserror;
ClassDiagram.Attribut>> EDIFileRecordDTO.id:int =>=>=> RelationalSchema.Column>> edifilerecorddto.id PRIMARY KEY;
ClassDiagram.Attribut>> EDIFileRecordDTO.edifilerecordheader:String =>=>=> RelationalSchema.Column>> edifilerecorddto.edifilerecordheader;
ClassDiagram.Attribut>> EDIFileRecordDTO.recordorder:Integer =>=>=> RelationalSchema.Column>> edifilerecorddto.recordorder;
ClassDiagram.Attribut>> EDIFileRecordDTO.creationtime:Date =>=>=> RelationalSchema.Column>> edifilerecorddto.creationtime;
ClassDiagram.Attribut>> EDIFileRecordDTO.versionnum:int =>=>=> RelationalSchema.Column>> edifilerecorddto.versionnum;
ClassDiagram.Attribut>> EDIFileRecordDTO.totalfilefield:Integer =>=>=> RelationalSchema.Column>> edifilerecorddto.totalfilefield;
ClassDiagram.Attribut>> EDIFileRecordDTO.comment:String =>=>=> RelationalSchema.Column>> edifilerecorddto.comment;
ClassDiagram.Attribut>> ReportTypeDTO.id:int =>=>=> RelationalSchema.Column>> reporttypedto.id PRIMARY KEY;
ClassDiagram.Attribut>> ReportTypeDTO.name:String =>=>=> RelationalSchema.Column>> reporttypedto.name;
ClassDiagram.Attribut>> ReportTypeDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> reporttypedto.versionnum;
ClassDiagram.Attribut>> IntegerReportParameterDTO.value:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> BooleanReportParameterDTO.value:Boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> DateReportParameterDTO.value:Date =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ListReportParameterDTO.value:List<String> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> StringReportParameterDTO.value:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ReportParameterDTO.id:Integer =>=>=> RelationalSchema.Column>> reportparameterdto.id PRIMARY KEY;
ClassDiagram.Attribut>> ReportParameterDTO.name:String =>=>=> RelationalSchema.Column>> reportparameterdto.name;
ClassDiagram.Attribut>> ReportDTO.base_path:String =>=>=> RelationalSchema.Column>> reportdto.base_path;
ClassDiagram.Attribut>> ReportDTO.id:int =>=>=> RelationalSchema.Column>> reportdto.id PRIMARY KEY;
ClassDiagram.Attribut>> ReportDTO.name:String =>=>=> RelationalSchema.Column>> reportdto.name;
ClassDiagram.Attribut>> ReportDTO.filename:String =>=>=> RelationalSchema.Column>> reportdto.filename;
ClassDiagram.Attribut>> ReportDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> reportdto.versionnum;
ClassDiagram.Attribut>> ReportDTO.childentities:List<Integer> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> AgeingEntityStepDTO.id:int =>=>=> RelationalSchema.Column>> ageingentitystepdto.id PRIMARY KEY;
ClassDiagram.Attribut>> AgeingEntityStepDTO.days:int =>=>=> RelationalSchema.Column>> ageingentitystepdto.days;
ClassDiagram.Attribut>> AgeingEntityStepDTO.retrypayment:int =>=>=> RelationalSchema.Column>> ageingentitystepdto.retrypayment;
ClassDiagram.Attribut>> AgeingEntityStepDTO.suspend:int =>=>=> RelationalSchema.Column>> ageingentitystepdto.suspend;
ClassDiagram.Attribut>> AgeingEntityStepDTO.sendnotification:int =>=>=> RelationalSchema.Column>> ageingentitystepdto.sendnotification;
ClassDiagram.Attribut>> AgeingEntityStepDTO.versionnum:int =>=>=> RelationalSchema.Column>> ageingentitystepdto.versionnum;
ClassDiagram.Attribut>> ProcessRunUserDTO.status_failed:Integer =>=>=> RelationalSchema.Column>> processrunuserdto.status_failed;
ClassDiagram.Attribut>> ProcessRunUserDTO.status_succeeded:Integer =>=>=> RelationalSchema.Column>> processrunuserdto.status_succeeded;
ClassDiagram.Attribut>> ProcessRunUserDTO.id:int =>=>=> RelationalSchema.Column>> processrunuserdto.id PRIMARY KEY;
ClassDiagram.Attribut>> ProcessRunUserDTO.status:Integer =>=>=> RelationalSchema.Column>> processrunuserdto.status;
ClassDiagram.Attribut>> ProcessRunUserDTO.created:Date =>=>=> RelationalSchema.Column>> processrunuserdto.created;
ClassDiagram.Attribut>> ProcessRunUserDTO.versionnum:int =>=>=> RelationalSchema.Column>> processrunuserdto.versionnum;
ClassDiagram.Attribut>> ProcessRunTotalPmDTO.id:int =>=>=> RelationalSchema.Column>> processruntotalpmdto.id PRIMARY KEY;
ClassDiagram.Attribut>> ProcessRunTotalPmDTO.total:BigDecimal =>=>=> RelationalSchema.Column>> processruntotalpmdto.total;
ClassDiagram.Attribut>> ProcessRunTotalPmDTO.versionnum:int =>=>=> RelationalSchema.Column>> processruntotalpmdto.versionnum;
ClassDiagram.Attribut>> PaperInvoiceBatchDTO.id:int =>=>=> RelationalSchema.Column>> paperinvoicebatchdto.id PRIMARY KEY;
ClassDiagram.Attribut>> PaperInvoiceBatchDTO.totalinvoices:int =>=>=> RelationalSchema.Column>> paperinvoicebatchdto.totalinvoices;
ClassDiagram.Attribut>> PaperInvoiceBatchDTO.delivery:Date =>=>=> RelationalSchema.Column>> paperinvoicebatchdto.delivery;
ClassDiagram.Attribut>> PaperInvoiceBatchDTO.isselfmanaged:int =>=>=> RelationalSchema.Column>> paperinvoicebatchdto.isselfmanaged;
ClassDiagram.Attribut>> PaperInvoiceBatchDTO.billingprocesses:BillingProcessDTO =>=>=> RelationalSchema.Column>> paperinvoicebatchdto.billingprocesses;
ClassDiagram.Attribut>> PaperInvoiceBatchDTO.versionnum:int =>=>=> RelationalSchema.Column>> paperinvoicebatchdto.versionnum;
ClassDiagram.Attribut>> BillingProcessFailedUserDTO.id:int =>=>=> RelationalSchema.Column>> billingprocessfaileduserdto.id PRIMARY KEY;
ClassDiagram.Attribut>> BillingProcessFailedUserDTO.batchprocessdto:BatchProcessInfoDTO =>=>=> RelationalSchema.Column>> billingprocessfaileduserdto.batchprocessdto;
ClassDiagram.Attribut>> BillingProcessFailedUserDTO.GeneratedName:UserDTO =>=>=> RelationalSchema.Column>> billingprocessfaileduserdto.GeneratedName;
ClassDiagram.Attribut>> BillingProcessFailedUserDTO.versionnum:int =>=>=> RelationalSchema.Column>> billingprocessfaileduserdto.versionnum;
ClassDiagram.Attribut>> PeriodUnitDTO.month:int =>=>=> RelationalSchema.Column>> periodunitdto.month;
ClassDiagram.Attribut>> PeriodUnitDTO.week:int =>=>=> RelationalSchema.Column>> periodunitdto.week;
ClassDiagram.Attribut>> PeriodUnitDTO.day:int =>=>=> RelationalSchema.Column>> periodunitdto.day;
ClassDiagram.Attribut>> PeriodUnitDTO.year:int =>=>=> RelationalSchema.Column>> periodunitdto.year;
ClassDiagram.Attribut>> PeriodUnitDTO.semi_monthly:int =>=>=> RelationalSchema.Column>> periodunitdto.semi_monthly;
ClassDiagram.Attribut>> PeriodUnitDTO.id:int =>=>=> RelationalSchema.Column>> periodunitdto.id PRIMARY KEY;
ClassDiagram.Attribut>> PeriodUnitDTO.partners:Set<PartnerDTO> =>=>=> RelationalSchema.Column>> periodunitdto.partners;
ClassDiagram.Attribut>> PeriodUnitDTO.orderperioddtos:Set<OrderPeriodDTO> =>=>=> RelationalSchema.Column>> periodunitdto.orderperioddtos;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.id:int =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.id PRIMARY KEY;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.GeneratedName:PeriodUnitDTO =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.GeneratedName;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.nextrun:Date =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.nextrun;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.generatereport:Integer =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.generatereport;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.retries:Integer =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.retries;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.daysforretry:Integer =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.daysforretry;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.daysforreport:Integer =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.daysforreport;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.reviewstatus:int =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.reviewstatus;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.duedateunitid:int =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.duedateunitid;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.duedatevalue:int =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.duedatevalue;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.dffm:Integer =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.dffm;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.onlyrecurring:Integer =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.onlyrecurring;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.invoicedateprocess:Integer =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.invoicedateprocess;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.maximumperiods:int =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.maximumperiods;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.autopaymentapplication:int =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.autopaymentapplication;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.versionnum:int =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.versionnum;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.lastdayofmonth:Boolean =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.lastdayofmonth;
ClassDiagram.Attribut>> BillingProcessConfigurationDTO.GeneratedName:ProratingType =>=>=> RelationalSchema.Column>> billingprocessconfigurationdto.GeneratedName;
ClassDiagram.Attribut>> BillingProcessDTO.id:int =>=>=> RelationalSchema.Column>> billingprocessdto.id PRIMARY KEY;
ClassDiagram.Attribut>> BillingProcessDTO.GeneratedName:PeriodUnitDTO =>=>=> RelationalSchema.Column>> billingprocessdto.GeneratedName;
ClassDiagram.Attribut>> BillingProcessDTO.billing:Date =>=>=> RelationalSchema.Column>> billingprocessdto.billing;
ClassDiagram.Attribut>> BillingProcessDTO.periodvalue:int =>=>=> RelationalSchema.Column>> billingprocessdto.periodvalue;
ClassDiagram.Attribut>> BillingProcessDTO.isreview:int =>=>=> RelationalSchema.Column>> billingprocessdto.isreview;
ClassDiagram.Attribut>> BillingProcessDTO.retriestodo:int =>=>=> RelationalSchema.Column>> billingprocessdto.retriestodo;
ClassDiagram.Attribut>> BillingProcessDTO.batchinfos:Set<BatchProcessInfoDTO> =>=>=> RelationalSchema.Column>> billingprocessdto.batchinfos;
ClassDiagram.Attribut>> BillingProcessDTO.versionnum:int =>=>=> RelationalSchema.Column>> billingprocessdto.versionnum;
ClassDiagram.Attribut>> BillingProcessDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> billingprocessdto.log;
ClassDiagram.Attribut>> BatchProcessInfoDTO.id:int =>=>=> RelationalSchema.Column>> batchprocessinfodto.id PRIMARY KEY;
ClassDiagram.Attribut>> BatchProcessInfoDTO.GeneratedName:BillingProcessDTO =>=>=> RelationalSchema.Column>> batchprocessinfodto.GeneratedName;
ClassDiagram.Attribut>> BatchProcessInfoDTO.//todo:ifweincludebatchtablesinjbillingschema,thisvaluewillbereplacedbyentityjobexecutionid:Integer =>=>=> RelationalSchema.Column>> batchprocessinfodto.//todo:ifweincludebatchtablesinjbillingschema,thisvaluewillbereplacedbyentityjobexecutionid;
ClassDiagram.Attribut>> BatchProcessInfoDTO.totalfailedusers:Integer =>=>=> RelationalSchema.Column>> batchprocessinfodto.totalfailedusers;
ClassDiagram.Attribut>> BatchProcessInfoDTO.totalsuccessfulusers:Integer =>=>=> RelationalSchema.Column>> batchprocessinfodto.totalsuccessfulusers;
ClassDiagram.Attribut>> BatchProcessInfoDTO.versionnum:int =>=>=> RelationalSchema.Column>> batchprocessinfodto.versionnum;
ClassDiagram.Attribut>> ProcessRunDTO.id:int =>=>=> RelationalSchema.Column>> processrundto.id PRIMARY KEY;
ClassDiagram.Attribut>> ProcessRunDTO.GeneratedName:BillingProcessDTO =>=>=> RelationalSchema.Column>> processrundto.GeneratedName;
ClassDiagram.Attribut>> ProcessRunDTO.run:Date =>=>=> RelationalSchema.Column>> processrundto.run;
ClassDiagram.Attribut>> ProcessRunDTO.started:Date =>=>=> RelationalSchema.Column>> processrundto.started;
ClassDiagram.Attribut>> ProcessRunDTO.finished:Date =>=>=> RelationalSchema.Column>> processrundto.finished;
ClassDiagram.Attribut>> ProcessRunDTO.invoicesgenerated:Integer =>=>=> RelationalSchema.Column>> processrundto.invoicesgenerated;
ClassDiagram.Attribut>> ProcessRunDTO.paymentfinished:Date =>=>=> RelationalSchema.Column>> processrundto.paymentfinished;
ClassDiagram.Attribut>> ProcessRunDTO.versionnum:int =>=>=> RelationalSchema.Column>> processrundto.versionnum;
ClassDiagram.Attribut>> ProcessRunTotalDTO.id:int =>=>=> RelationalSchema.Column>> processruntotaldto.id PRIMARY KEY;
ClassDiagram.Attribut>> ProcessRunTotalDTO.GeneratedName:CurrencyDTO =>=>=> RelationalSchema.Column>> processruntotaldto.GeneratedName;
ClassDiagram.Attribut>> ProcessRunTotalDTO.totalinvoiced:BigDecimal =>=>=> RelationalSchema.Column>> processruntotaldto.totalinvoiced;
ClassDiagram.Attribut>> ProcessRunTotalDTO.totalpaid:BigDecimal =>=>=> RelationalSchema.Column>> processruntotaldto.totalpaid;
ClassDiagram.Attribut>> ProcessRunTotalDTO.totalnotpaid:BigDecimal =>=>=> RelationalSchema.Column>> processruntotaldto.totalnotpaid;
ClassDiagram.Attribut>> ProcessRunTotalDTO.versionnum:int =>=>=> RelationalSchema.Column>> processruntotaldto.versionnum;
ClassDiagram.Attribut>> PluggableTaskTypeCategoryDTO.id:Integer =>=>=> RelationalSchema.Column>> pluggabletasktypecategorydto.id PRIMARY KEY;
ClassDiagram.Attribut>> PluggableTaskTypeCategoryDTO.interfacename:String =>=>=> RelationalSchema.Column>> pluggabletasktypecategorydto.interfacename;
ClassDiagram.Attribut>> PluggableTaskDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> pluggabletaskdto.log;
ClassDiagram.Attribut>> PluggableTaskDTO.//thisisinsynchwiththedb(pluggabletasktype)type_email:Integer =>=>=> RelationalSchema.Column>> pluggabletaskdto.//thisisinsynchwiththedb(pluggabletasktype)type_email;
ClassDiagram.Attribut>> PluggableTaskDTO.id:Integer =>=>=> RelationalSchema.Column>> pluggabletaskdto.id PRIMARY KEY;
ClassDiagram.Attribut>> PluggableTaskDTO.entityid:Integer =>=>=> RelationalSchema.Column>> pluggabletaskdto.entityid;
ClassDiagram.Attribut>> PluggableTaskDTO.processingorder:Integer =>=>=> RelationalSchema.Column>> pluggabletaskdto.processingorder;
ClassDiagram.Attribut>> PluggableTaskDTO.notes:String =>=>=> RelationalSchema.Column>> pluggabletaskdto.notes;
ClassDiagram.Attribut>> PluggableTaskDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> pluggabletaskdto.versionnum;
ClassDiagram.Attribut>> PluggableTaskParameterDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> pluggabletaskparameterdto.log;
ClassDiagram.Attribut>> PluggableTaskParameterDTO.GeneratedName:int =>=>=> RelationalSchema.Column>> pluggabletaskparameterdto.GeneratedName;
ClassDiagram.Attribut>> PluggableTaskParameterDTO.str:int =>=>=> RelationalSchema.Column>> pluggabletaskparameterdto.str;
ClassDiagram.Attribut>> PluggableTaskParameterDTO.flo:int =>=>=> RelationalSchema.Column>> pluggabletaskparameterdto.flo;
ClassDiagram.Attribut>> PluggableTaskParameterDTO.//mappedcolumsid:Integer =>=>=> RelationalSchema.Column>> pluggabletaskparameterdto.//mappedcolumsid PRIMARY KEY;
ClassDiagram.Attribut>> PluggableTaskParameterDTO.name:String =>=>=> RelationalSchema.Column>> pluggabletaskparameterdto.name;
ClassDiagram.Attribut>> PluggableTaskParameterDTO.intvalue:Integer =>=>=> RelationalSchema.Column>> pluggabletaskparameterdto.intvalue;
ClassDiagram.Attribut>> PluggableTaskParameterDTO.strvalue:String =>=>=> RelationalSchema.Column>> pluggabletaskparameterdto.strvalue;
ClassDiagram.Attribut>> PluggableTaskParameterDTO.floatvalue:BigDecimal =>=>=> RelationalSchema.Column>> pluggabletaskparameterdto.floatvalue;
ClassDiagram.Attribut>> PluggableTaskParameterDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> pluggabletaskparameterdto.versionnum;
ClassDiagram.Attribut>> PluggableTaskParameterDTO.//internalfields//thisindicatesthedatatypeofthevaluetype:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> PluggableTaskParameterDTO.value:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> PluggableTaskTypeDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> pluggabletasktypedto.log;
ClassDiagram.Attribut>> PluggableTaskTypeDTO.pk:Integer =>=>=> RelationalSchema.Column>> pluggabletasktypedto.pk PRIMARY KEY;
ClassDiagram.Attribut>> PluggableTaskTypeDTO.classname:String =>=>=> RelationalSchema.Column>> pluggabletasktypedto.classname;
ClassDiagram.Attribut>> PluggableTaskTypeDTO.minparameters:Integer =>=>=> RelationalSchema.Column>> pluggabletasktypedto.minparameters;
ClassDiagram.Attribut>> InvoiceLineDTO.id:int =>=>=> RelationalSchema.Column>> invoicelinedto.id PRIMARY KEY;
ClassDiagram.Attribut>> InvoiceLineDTO.amount:BigDecimal =>=>=> RelationalSchema.Column>> invoicelinedto.amount;
ClassDiagram.Attribut>> InvoiceLineDTO.quantity:BigDecimal =>=>=> RelationalSchema.Column>> invoicelinedto.quantity;
ClassDiagram.Attribut>> InvoiceLineDTO.price:BigDecimal =>=>=> RelationalSchema.Column>> invoicelinedto.price;
ClassDiagram.Attribut>> InvoiceLineDTO.deleted:Integer =>=>=> RelationalSchema.Column>> invoicelinedto.deleted;
ClassDiagram.Attribut>> InvoiceLineDTO.description:String =>=>=> RelationalSchema.Column>> invoicelinedto.description;
ClassDiagram.Attribut>> InvoiceLineDTO.sourceuserid:Integer =>=>=> RelationalSchema.Column>> invoicelinedto.sourceuserid;
ClassDiagram.Attribut>> InvoiceLineDTO.ispercentage:Integer =>=>=> RelationalSchema.Column>> invoicelinedto.ispercentage;
ClassDiagram.Attribut>> InvoiceLineDTO.versionnum:int =>=>=> RelationalSchema.Column>> invoicelinedto.versionnum;
ClassDiagram.Attribut>> InvoiceLineTypeDTO.id:int =>=>=> RelationalSchema.Column>> invoicelinetypedto.id PRIMARY KEY;
ClassDiagram.Attribut>> InvoiceLineTypeDTO.description:String =>=>=> RelationalSchema.Column>> invoicelinetypedto.description;
ClassDiagram.Attribut>> InvoiceLineTypeDTO.orderposition:int =>=>=> RelationalSchema.Column>> invoicelinetypedto.orderposition;
ClassDiagram.Attribut>> InvoiceDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> invoicedto.log;
ClassDiagram.Attribut>> InvoiceDTO.process:int =>=>=> RelationalSchema.Column>> invoicedto.process;
ClassDiagram.Attribut>> InvoiceDTO.do_not_process:int =>=>=> RelationalSchema.Column>> invoicedto.do_not_process;
ClassDiagram.Attribut>> InvoiceDTO.id:int =>=>=> RelationalSchema.Column>> invoicedto.id PRIMARY KEY;
ClassDiagram.Attribut>> InvoiceDTO.GeneratedName:BillingProcessDTO =>=>=> RelationalSchema.Column>> invoicedto.GeneratedName;
ClassDiagram.Attribut>> InvoiceDTO.GeneratedName:CurrencyDTO =>=>=> RelationalSchema.Column>> invoicedto.GeneratedName;
ClassDiagram.Attribut>> InvoiceDTO.createtime:Date =>=>=> RelationalSchema.Column>> invoicedto.createtime;
ClassDiagram.Attribut>> InvoiceDTO.due:Date =>=>=> RelationalSchema.Column>> invoicedto.due;
ClassDiagram.Attribut>> InvoiceDTO.total:BigDecimal =>=>=> RelationalSchema.Column>> invoicedto.total;
ClassDiagram.Attribut>> InvoiceDTO.paymentattempts:int =>=>=> RelationalSchema.Column>> invoicedto.paymentattempts;
ClassDiagram.Attribut>> InvoiceDTO.balance:BigDecimal =>=>=> RelationalSchema.Column>> invoicedto.balance;
ClassDiagram.Attribut>> InvoiceDTO.carriedbalance:BigDecimal =>=>=> RelationalSchema.Column>> invoicedto.carriedbalance;
ClassDiagram.Attribut>> InvoiceDTO.inprocesspayment:int =>=>=> RelationalSchema.Column>> invoicedto.inprocesspayment;
ClassDiagram.Attribut>> InvoiceDTO.isreview:Integer =>=>=> RelationalSchema.Column>> invoicedto.isreview;
ClassDiagram.Attribut>> InvoiceDTO.deleted:Integer =>=>=> RelationalSchema.Column>> invoicedto.deleted;
ClassDiagram.Attribut>> InvoiceDTO.customernotes:String =>=>=> RelationalSchema.Column>> invoicedto.customernotes;
ClassDiagram.Attribut>> InvoiceDTO.publicnumber:String =>=>=> RelationalSchema.Column>> invoicedto.publicnumber;
ClassDiagram.Attribut>> InvoiceDTO.lastreminder:Date =>=>=> RelationalSchema.Column>> invoicedto.lastreminder;
ClassDiagram.Attribut>> InvoiceDTO.overduestep:Integer =>=>=> RelationalSchema.Column>> invoicedto.overduestep;
ClassDiagram.Attribut>> InvoiceDTO.createtimestamp:Date =>=>=> RelationalSchema.Column>> invoicedto.createtimestamp;
ClassDiagram.Attribut>> InvoiceDTO.versionnum:int =>=>=> RelationalSchema.Column>> invoicedto.versionnum;
ClassDiagram.Attribut>> InvoiceDTO.//fortransitiontojpacurrencyname:String =>=>=> RelationalSchema.Column>> invoicedto.//fortransitiontojpacurrencyname;
ClassDiagram.Attribut>> InvoiceDTO.currencysymbol:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> InvoiceDeliveryMethodDTO.id:int =>=>=> RelationalSchema.Column>> invoicedeliverymethoddto.id PRIMARY KEY;
ClassDiagram.Attribut>> InvoiceStatusDTO.invoicedtos:Set<InvoiceDTO> =>=>=> RelationalSchema.Column>> invoicestatusdto.invoicedtos;
ClassDiagram.Attribut>> SuretaxTransactionLogDTO.id:int =>=>=> RelationalSchema.Column>> suretaxtransactionlogdto.id PRIMARY KEY;
ClassDiagram.Attribut>> SuretaxTransactionLogDTO.transactionid:String =>=>=> RelationalSchema.Column>> suretaxtransactionlogdto.transactionid;
ClassDiagram.Attribut>> SuretaxTransactionLogDTO.transactiontype:String =>=>=> RelationalSchema.Column>> suretaxtransactionlogdto.transactiontype;
ClassDiagram.Attribut>> SuretaxTransactionLogDTO.transactiondata:String =>=>=> RelationalSchema.Column>> suretaxtransactionlogdto.transactiondata;
ClassDiagram.Attribut>> SuretaxTransactionLogDTO.transactiondate:Timestamp =>=>=> RelationalSchema.Column>> suretaxtransactionlogdto.transactiondate;
ClassDiagram.Attribut>> SuretaxTransactionLogDTO.responsetransactionid:Integer =>=>=> RelationalSchema.Column>> suretaxtransactionlogdto.responsetransactionid;
ClassDiagram.Attribut>> SuretaxTransactionLogDTO.requesttype:String =>=>=> RelationalSchema.Column>> suretaxtransactionlogdto.requesttype;
ClassDiagram.Attribut>> InvoiceTemplateVersionDTO.id:Integer =>=>=> RelationalSchema.Column>> invoicetemplateversiondto.id PRIMARY KEY;
ClassDiagram.Attribut>> InvoiceTemplateVersionDTO.versionnumber:String =>=>=> RelationalSchema.Column>> invoicetemplateversiondto.versionnumber;
ClassDiagram.Attribut>> InvoiceTemplateVersionDTO.tagname:String =>=>=> RelationalSchema.Column>> invoicetemplateversiondto.tagname;
ClassDiagram.Attribut>> InvoiceTemplateVersionDTO.createdtime:Date =>=>=> RelationalSchema.Column>> invoicetemplateversiondto.createdtime;
ClassDiagram.Attribut>> InvoiceTemplateVersionDTO.size:Integer =>=>=> RelationalSchema.Column>> invoicetemplateversiondto.size;
ClassDiagram.Attribut>> InvoiceTemplateVersionDTO.userid:Integer =>=>=> RelationalSchema.Column>> invoicetemplateversiondto.userid;
ClassDiagram.Attribut>> InvoiceTemplateVersionDTO.templatejson:String =>=>=> RelationalSchema.Column>> invoicetemplateversiondto.templatejson;
ClassDiagram.Attribut>> InvoiceTemplateVersionDTO.useforinvoice:Boolean =>=>=> RelationalSchema.Column>> invoicetemplateversiondto.useforinvoice;
ClassDiagram.Attribut>> InvoiceTemplateFileDTO.id:long =>=>=> RelationalSchema.Column>> invoicetemplatefiledto.id PRIMARY KEY;
ClassDiagram.Attribut>> InvoiceTemplateFileDTO.name:String =>=>=> RelationalSchema.Column>> invoicetemplatefiledto.name;
ClassDiagram.Attribut>> InvoiceTemplateFileDTO.data:byte =>=>=> RelationalSchema.Column>> invoicetemplatefiledto.data;
ClassDiagram.Attribut>> InvoiceTemplateDTO.id:int =>=>=> RelationalSchema.Column>> invoicetemplatedto.id PRIMARY KEY;
ClassDiagram.Attribut>> InvoiceTemplateDTO.invoiceid:Integer =>=>=> RelationalSchema.Column>> invoicetemplatedto.invoiceid;
ClassDiagram.Attribut>> InvoiceTemplateDTO.templatejson:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> InvoiceTemplateDTO.name:String =>=>=> RelationalSchema.Column>> invoicetemplatedto.name;
ClassDiagram.Attribut>> BoaBaiProcessingErrorDTO.id:int =>=>=> RelationalSchema.Column>> boabaiprocessingerrordto.id PRIMARY KEY;
ClassDiagram.Attribut>> BoaBaiProcessingErrorDTO.filename:String =>=>=> RelationalSchema.Column>> boabaiprocessingerrordto.filename;
ClassDiagram.Attribut>> BoaBaiProcessingErrorDTO.rawdata:String =>=>=> RelationalSchema.Column>> boabaiprocessingerrordto.rawdata;
ClassDiagram.Attribut>> BoaBaiProcessingErrorDTO.processingerrors:String =>=>=> RelationalSchema.Column>> boabaiprocessingerrordto.processingerrors;
ClassDiagram.Attribut>> BoaBaiProcessedFileDTO.id:int =>=>=> RelationalSchema.Column>> boabaiprocessedfiledto.id PRIMARY KEY;
ClassDiagram.Attribut>> BoaBaiProcessedFileDTO.filename:String =>=>=> RelationalSchema.Column>> boabaiprocessedfiledto.filename;
ClassDiagram.Attribut>> BlacklistDTO.//constants//blacklisttypestype_user_id:Integer =>=>=> RelationalSchema.Column>> blacklistdto.//constants//blacklisttypestype_user_id;
ClassDiagram.Attribut>> BlacklistDTO.type_name:Integer =>=>=> RelationalSchema.Column>> blacklistdto.type_name;
ClassDiagram.Attribut>> BlacklistDTO.type_cc_number:Integer =>=>=> RelationalSchema.Column>> blacklistdto.type_cc_number;
ClassDiagram.Attribut>> BlacklistDTO.type_address:Integer =>=>=> RelationalSchema.Column>> blacklistdto.type_address;
ClassDiagram.Attribut>> BlacklistDTO.type_ip_address:Integer =>=>=> RelationalSchema.Column>> blacklistdto.type_ip_address;
ClassDiagram.Attribut>> BlacklistDTO.type_phone_number:Integer =>=>=> RelationalSchema.Column>> blacklistdto.type_phone_number;
ClassDiagram.Attribut>> BlacklistDTO.//blacklistsourcessource_customer_service:Integer =>=>=> RelationalSchema.Column>> blacklistdto.//blacklistsourcessource_customer_service;
ClassDiagram.Attribut>> BlacklistDTO.source_external_upload:Integer =>=>=> RelationalSchema.Column>> blacklistdto.source_external_upload;
ClassDiagram.Attribut>> BlacklistDTO.source_user_status_change:Integer =>=>=> RelationalSchema.Column>> blacklistdto.source_user_status_change;
ClassDiagram.Attribut>> BlacklistDTO.source_billing_process:Integer =>=>=> RelationalSchema.Column>> blacklistdto.source_billing_process;
ClassDiagram.Attribut>> BlacklistDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> blacklistdto.log;
ClassDiagram.Attribut>> BlacklistDTO.//mappedcolumnsid:Integer =>=>=> RelationalSchema.Column>> blacklistdto.//mappedcolumnsid PRIMARY KEY;
ClassDiagram.Attribut>> BlacklistDTO.create:Date =>=>=> RelationalSchema.Column>> blacklistdto.create;
ClassDiagram.Attribut>> BlacklistDTO.type:Integer =>=>=> RelationalSchema.Column>> blacklistdto.type;
ClassDiagram.Attribut>> BlacklistDTO.source:Integer =>=>=> RelationalSchema.Column>> blacklistdto.source;
ClassDiagram.Attribut>> BlacklistDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> blacklistdto.versionnum;
ClassDiagram.Attribut>> PaymentTransferDTO.id:int =>=>=> RelationalSchema.Column>> paymenttransferdto.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentTransferDTO.fromuserid:Integer =>=>=> RelationalSchema.Column>> paymenttransferdto.fromuserid;
ClassDiagram.Attribut>> PaymentTransferDTO.touserid:Integer =>=>=> RelationalSchema.Column>> paymenttransferdto.touserid;
ClassDiagram.Attribut>> PaymentTransferDTO.amount:BigDecimal =>=>=> RelationalSchema.Column>> paymenttransferdto.amount;
ClassDiagram.Attribut>> PaymentTransferDTO.createtime:Date =>=>=> RelationalSchema.Column>> paymenttransferdto.createtime;
ClassDiagram.Attribut>> PaymentTransferDTO.createdby:Integer =>=>=> RelationalSchema.Column>> paymenttransferdto.createdby;
ClassDiagram.Attribut>> PaymentTransferDTO.deleted:int =>=>=> RelationalSchema.Column>> paymenttransferdto.deleted;
ClassDiagram.Attribut>> PaymentTransferDTO.paymenttransfernotes:String =>=>=> RelationalSchema.Column>> paymenttransferdto.paymenttransfernotes;
ClassDiagram.Attribut>> PaymentInformationDTO.id:Integer =>=>=> RelationalSchema.Column>> paymentinformationdto.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentInformationDTO.processingorder:Integer =>=>=> RelationalSchema.Column>> paymentinformationdto.processingorder;
ClassDiagram.Attribut>> PaymentInformationDTO.deleted:Integer =>=>=> RelationalSchema.Column>> paymentinformationdto.deleted;
ClassDiagram.Attribut>> PaymentInformationDTO.metafields:List<MetaFieldValue> =>=>=> RelationalSchema.Column>> paymentinformationdto.metafields;
ClassDiagram.Attribut>> PaymentInformationDTO.versionnum:int =>=>=> RelationalSchema.Column>> paymentinformationdto.versionnum;
ClassDiagram.Attribut>> PaymentInformationDTO.paymentmethod:PaymentMethodDTO =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> PaymentInformationDTO.//transientfieldsblacklisted:boolean =>=>=> RelationalSchema.Column>> paymentinformationdto.//transientfieldsblacklisted;
ClassDiagram.Attribut>> PaymentResultDTO.id:int =>=>=> RelationalSchema.Column>> paymentresultdto.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentAuthorizationDTO.id:int =>=>=> RelationalSchema.Column>> paymentauthorizationdto.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentAuthorizationDTO.processor:String =>=>=> RelationalSchema.Column>> paymentauthorizationdto.processor;
ClassDiagram.Attribut>> PaymentAuthorizationDTO.code1:String =>=>=> RelationalSchema.Column>> paymentauthorizationdto.code1;
ClassDiagram.Attribut>> PaymentAuthorizationDTO.code2:String =>=>=> RelationalSchema.Column>> paymentauthorizationdto.code2;
ClassDiagram.Attribut>> PaymentAuthorizationDTO.code3:String =>=>=> RelationalSchema.Column>> paymentauthorizationdto.code3;
ClassDiagram.Attribut>> PaymentAuthorizationDTO.approvalcode:String =>=>=> RelationalSchema.Column>> paymentauthorizationdto.approvalcode;
ClassDiagram.Attribut>> PaymentAuthorizationDTO.avs:String =>=>=> RelationalSchema.Column>> paymentauthorizationdto.avs;
ClassDiagram.Attribut>> PaymentAuthorizationDTO.transactionid:String =>=>=> RelationalSchema.Column>> paymentauthorizationdto.transactionid;
ClassDiagram.Attribut>> PaymentAuthorizationDTO.md5:String =>=>=> RelationalSchema.Column>> paymentauthorizationdto.md5;
ClassDiagram.Attribut>> PaymentAuthorizationDTO.create:Date =>=>=> RelationalSchema.Column>> paymentauthorizationdto.create;
ClassDiagram.Attribut>> PaymentAuthorizationDTO.cardcode:String =>=>=> RelationalSchema.Column>> paymentauthorizationdto.cardcode;
ClassDiagram.Attribut>> PaymentAuthorizationDTO.responsemessage:String =>=>=> RelationalSchema.Column>> paymentauthorizationdto.responsemessage;
ClassDiagram.Attribut>> PaymentAuthorizationDTO.versionnum:int =>=>=> RelationalSchema.Column>> paymentauthorizationdto.versionnum;
ClassDiagram.Attribut>> PaymentInstrumentInfoDTO.id:Integer =>=>=> RelationalSchema.Column>> paymentinstrumentinfodto.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentDTO.id:int =>=>=> RelationalSchema.Column>> paymentdto.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentDTO.GeneratedName:CurrencyDTO =>=>=> RelationalSchema.Column>> paymentdto.GeneratedName;
ClassDiagram.Attribut>> PaymentDTO.attempt:Integer =>=>=> RelationalSchema.Column>> paymentdto.attempt;
ClassDiagram.Attribut>> PaymentDTO.amount:BigDecimal =>=>=> RelationalSchema.Column>> paymentdto.amount;
ClassDiagram.Attribut>> PaymentDTO.createtime:Date =>=>=> RelationalSchema.Column>> paymentdto.createtime;
ClassDiagram.Attribut>> PaymentDTO.deleted:int =>=>=> RelationalSchema.Column>> paymentdto.deleted;
ClassDiagram.Attribut>> PaymentDTO.isrefund:int =>=>=> RelationalSchema.Column>> paymentdto.isrefund;
ClassDiagram.Attribut>> PaymentDTO.payoutid:PartnerPayout =>=>=> RelationalSchema.Column>> paymentdto.payoutid;
ClassDiagram.Attribut>> PaymentDTO.balance:BigDecimal =>=>=> RelationalSchema.Column>> paymentdto.balance;
ClassDiagram.Attribut>> PaymentDTO.uptime:Date =>=>=> RelationalSchema.Column>> paymentdto.uptime;
ClassDiagram.Attribut>> PaymentDTO.ispreauth:Integer =>=>=> RelationalSchema.Column>> paymentdto.ispreauth;
ClassDiagram.Attribut>> PaymentDTO.//creditcardcreditcard:PaymentInformationDTO =>=>=> RelationalSchema.Column>> paymentdto.//creditcardcreditcard;
ClassDiagram.Attribut>> PaymentDTO.versionnum:int =>=>=> RelationalSchema.Column>> paymentdto.versionnum;
ClassDiagram.Attribut>> PaymentDTO.paymentperiod:Integer =>=>=> RelationalSchema.Column>> paymentdto.paymentperiod;
ClassDiagram.Attribut>> PaymentDTO.paymentnotes:String =>=>=> RelationalSchema.Column>> paymentdto.paymentnotes;
ClassDiagram.Attribut>> PaymentDTO.transferredpayments:List<PaymentTransferDTO> =>=>=> RelationalSchema.Column>> paymentdto.transferredpayments;
ClassDiagram.Attribut>> PaymentInvoiceMapDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> paymentinvoicemapdto.log;
ClassDiagram.Attribut>> PaymentInvoiceMapDTO.id:int =>=>=> RelationalSchema.Column>> paymentinvoicemapdto.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentInvoiceMapDTO.amount:BigDecimal =>=>=> RelationalSchema.Column>> paymentinvoicemapdto.amount;
ClassDiagram.Attribut>> PaymentInvoiceMapDTO.createtime:Date =>=>=> RelationalSchema.Column>> paymentinvoicemapdto.createtime;
ClassDiagram.Attribut>> PaymentInvoiceMapDTO.versionnum:int =>=>=> RelationalSchema.Column>> paymentinvoicemapdto.versionnum;
ClassDiagram.Attribut>> PaymentMethodTemplateDTO.serialversionuid:long =>=>=> RelationalSchema.Column>> paymentmethodtemplatedto.serialversionuid;
ClassDiagram.Attribut>> PaymentMethodTemplateDTO.id:int =>=>=> RelationalSchema.Column>> paymentmethodtemplatedto.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentMethodTemplateDTO.templatename:String =>=>=> RelationalSchema.Column>> paymentmethodtemplatedto.templatename;
ClassDiagram.Attribut>> PaymentMethodTemplateDTO.version:int =>=>=> RelationalSchema.Column>> paymentmethodtemplatedto.version;
ClassDiagram.Attribut>> PaymentMethodDTO.id:int =>=>=> RelationalSchema.Column>> paymentmethoddto.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentMethodTypeDTO.serialversionuid:long =>=>=> RelationalSchema.Column>> paymentmethodtypedto.serialversionuid;
ClassDiagram.Attribut>> PaymentMethodTypeDTO.id:int =>=>=> RelationalSchema.Column>> paymentmethodtypedto.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentMethodTypeDTO.methodname:String =>=>=> RelationalSchema.Column>> paymentmethodtypedto.methodname;
ClassDiagram.Attribut>> PaymentMethodTypeDTO.isrecurring:boolean =>=>=> RelationalSchema.Column>> paymentmethodtypedto.isrecurring;
ClassDiagram.Attribut>> PaymentMethodTypeDTO.allaccounttype:Boolean =>=>=> RelationalSchema.Column>> paymentmethodtypedto.allaccounttype;
ClassDiagram.Attribut>> PaymentMethodTypeDTO.version:int =>=>=> RelationalSchema.Column>> paymentmethodtypedto.version;
ClassDiagram.Attribut>> EventLogModuleDTO.id:int =>=>=> RelationalSchema.Column>> eventlogmoduledto.id PRIMARY KEY;
ClassDiagram.Attribut>> EventLogDTO.id:Integer =>=>=> RelationalSchema.Column>> eventlogdto.id PRIMARY KEY;
ClassDiagram.Attribut>> EventLogDTO.foreignid:int =>=>=> RelationalSchema.Column>> eventlogdto.foreignid;
ClassDiagram.Attribut>> EventLogDTO.createtime:Date =>=>=> RelationalSchema.Column>> eventlogdto.createtime;
ClassDiagram.Attribut>> EventLogDTO.levelfield:int =>=>=> RelationalSchema.Column>> eventlogdto.levelfield;
ClassDiagram.Attribut>> EventLogDTO.oldnum:Integer =>=>=> RelationalSchema.Column>> eventlogdto.oldnum;
ClassDiagram.Attribut>> EventLogDTO.oldstr:String =>=>=> RelationalSchema.Column>> eventlogdto.oldstr;
ClassDiagram.Attribut>> EventLogDTO.old:Date =>=>=> RelationalSchema.Column>> eventlogdto.old;
ClassDiagram.Attribut>> EventLogDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> eventlogdto.versionnum;
ClassDiagram.Attribut>> EventLogMessageDTO.id:int =>=>=> RelationalSchema.Column>> eventlogmessagedto.id PRIMARY KEY;
ClassDiagram.Attribut>> PreferenceTypeDTO.id:int =>=>=> RelationalSchema.Column>> preferencetypedto.id PRIMARY KEY;
ClassDiagram.Attribut>> PreferenceTypeDTO.defaultvalue:String =>=>=> RelationalSchema.Column>> preferencetypedto.defaultvalue;
ClassDiagram.Attribut>> PreferenceTypeDTO.GeneratedName:ValidationRule =>=>=> RelationalSchema.Column>> preferencetypedto.GeneratedName;
ClassDiagram.Attribut>> NotificationCategoryDTO.id:int =>=>=> RelationalSchema.Column>> notificationcategorydto.id PRIMARY KEY;
ClassDiagram.Attribut>> PreferenceDTO.id:int =>=>=> RelationalSchema.Column>> preferencedto.id PRIMARY KEY;
ClassDiagram.Attribut>> PreferenceDTO.GeneratedName:JbillingTable =>=>=> RelationalSchema.Column>> preferencedto.GeneratedName;
ClassDiagram.Attribut>> PreferenceDTO.foreignid:int =>=>=> RelationalSchema.Column>> preferencedto.foreignid;
ClassDiagram.Attribut>> PreferenceDTO.value:String =>=>=> RelationalSchema.Column>> preferencedto.value;
ClassDiagram.Attribut>> ProvisioningCommandDTO.id:int =>=>=> RelationalSchema.Column>> provisioningcommanddto.id PRIMARY KEY;
ClassDiagram.Attribut>> ProvisioningCommandDTO.name:String =>=>=> RelationalSchema.Column>> provisioningcommanddto.name;
ClassDiagram.Attribut>> ProvisioningCommandDTO.executionorder:Integer =>=>=> RelationalSchema.Column>> provisioningcommanddto.executionorder;
ClassDiagram.Attribut>> ProvisioningCommandDTO.create:Date =>=>=> RelationalSchema.Column>> provisioningcommanddto.create;
ClassDiagram.Attribut>> ProvisioningCommandDTO.lastup:Date =>=>=> RelationalSchema.Column>> provisioningcommanddto.lastup;
ClassDiagram.Attribut>> ProvisioningCommandDTO.commandstatus:ProvisioningCommandStatus =>=>=> RelationalSchema.Column>> provisioningcommanddto.commandstatus;
ClassDiagram.Attribut>> ProvisioningCommandDTO.parametermap:Map<String,String> =>=>=> RelationalSchema.Column>> provisioningcommanddto.parametermap;
ClassDiagram.Attribut>> ProvisioningCommandDTO.versionnum:int =>=>=> RelationalSchema.Column>> provisioningcommanddto.versionnum;
ClassDiagram.Attribut>> ProvisioningRequestDTO.id:int =>=>=> RelationalSchema.Column>> provisioningrequestdto.id PRIMARY KEY;
ClassDiagram.Attribut>> ProvisioningRequestDTO.//uniqueidentifier-uuidoftherequest(differentthanthedbid)identifier:String =>=>=> RelationalSchema.Column>> provisioningrequestdto.//uniqueidentifier-uuidoftherequest(differentthanthedbid)identifier;
ClassDiagram.Attribut>> ProvisioningRequestDTO.commanddto:ProvisioningCommandDTO =>=>=> RelationalSchema.Column>> provisioningrequestdto.commanddto;
ClassDiagram.Attribut>> ProvisioningRequestDTO.processor:String =>=>=> RelationalSchema.Column>> provisioningrequestdto.processor;
ClassDiagram.Attribut>> ProvisioningRequestDTO.executionorder:Integer =>=>=> RelationalSchema.Column>> provisioningrequestdto.executionorder;
ClassDiagram.Attribut>> ProvisioningRequestDTO.create:Date =>=>=> RelationalSchema.Column>> provisioningrequestdto.create;
ClassDiagram.Attribut>> ProvisioningRequestDTO.submit:Date =>=>=> RelationalSchema.Column>> provisioningrequestdto.submit;
ClassDiagram.Attribut>> ProvisioningRequestDTO.submitrequest:String =>=>=> RelationalSchema.Column>> provisioningrequestdto.submitrequest;
ClassDiagram.Attribut>> ProvisioningRequestDTO.rollbackrequest:String =>=>=> RelationalSchema.Column>> provisioningrequestdto.rollbackrequest;
ClassDiagram.Attribut>> ProvisioningRequestDTO.continueontype:String =>=>=> RelationalSchema.Column>> provisioningrequestdto.continueontype;
ClassDiagram.Attribut>> ProvisioningRequestDTO.requeststatus:ProvisioningRequestStatus =>=>=> RelationalSchema.Column>> provisioningrequestdto.requeststatus;
ClassDiagram.Attribut>> ProvisioningRequestDTO.resultreceived:Date =>=>=> RelationalSchema.Column>> provisioningrequestdto.resultreceived;
ClassDiagram.Attribut>> ProvisioningRequestDTO.resultmap:Map<String,String> =>=>=> RelationalSchema.Column>> provisioningrequestdto.resultmap;
ClassDiagram.Attribut>> ProvisioningRequestDTO.versionnum:int =>=>=> RelationalSchema.Column>> provisioningrequestdto.versionnum;
ClassDiagram.Attribut>> UserPasswordDTO.id:Integer =>=>=> RelationalSchema.Column>> userpassworddto.id PRIMARY KEY;
ClassDiagram.Attribut>> UserPasswordDTO.created:Date =>=>=> RelationalSchema.Column>> userpassworddto.created;
ClassDiagram.Attribut>> UserPasswordDTO.password:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> UserPasswordDTO.encryptedpassword:String =>=>=> RelationalSchema.Column>> userpassworddto.encryptedpassword;
ClassDiagram.Attribut>> CustomerDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> customerdto.log;
ClassDiagram.Attribut>> CustomerDTO.id:int =>=>=> RelationalSchema.Column>> customerdto.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerDTO.referralfeepaid:Integer =>=>=> RelationalSchema.Column>> customerdto.referralfeepaid;
ClassDiagram.Attribut>> CustomerDTO.autopaymenttype:Integer =>=>=> RelationalSchema.Column>> customerdto.autopaymenttype;
ClassDiagram.Attribut>> CustomerDTO.duedateunitid:Integer =>=>=> RelationalSchema.Column>> customerdto.duedateunitid;
ClassDiagram.Attribut>> CustomerDTO.duedatevalue:Integer =>=>=> RelationalSchema.Column>> customerdto.duedatevalue;
ClassDiagram.Attribut>> CustomerDTO.dffm:Integer =>=>=> RelationalSchema.Column>> customerdto.dffm;
ClassDiagram.Attribut>> CustomerDTO.isparent:Integer =>=>=> RelationalSchema.Column>> customerdto.isparent;
ClassDiagram.Attribut>> CustomerDTO.excludeaging:int =>=>=> RelationalSchema.Column>> customerdto.excludeaging;
ClassDiagram.Attribut>> CustomerDTO.invoicechild:Integer =>=>=> RelationalSchema.Column>> customerdto.invoicechild;
ClassDiagram.Attribut>> CustomerDTO.useparentpricing:boolean =>=>=> RelationalSchema.Column>> customerdto.useparentpricing;
ClassDiagram.Attribut>> CustomerDTO.dynamicbalance:BigDecimal =>=>=> RelationalSchema.Column>> customerdto.dynamicbalance;
ClassDiagram.Attribut>> CustomerDTO.autorecharge:BigDecimal =>=>=> RelationalSchema.Column>> customerdto.autorecharge;
ClassDiagram.Attribut>> CustomerDTO.creditlimit:BigDecimal =>=>=> RelationalSchema.Column>> customerdto.creditlimit;
ClassDiagram.Attribut>> CustomerDTO.creditnotificationlimit1:BigDecimal =>=>=> RelationalSchema.Column>> customerdto.creditnotificationlimit1;
ClassDiagram.Attribut>> CustomerDTO.creditnotificationlimit2:BigDecimal =>=>=> RelationalSchema.Column>> customerdto.creditnotificationlimit2;
ClassDiagram.Attribut>> CustomerDTO.versionnum:int =>=>=> RelationalSchema.Column>> customerdto.versionnum;
ClassDiagram.Attribut>> CustomerDTO.lastinvoice:Date =>=>=> RelationalSchema.Column>> customerdto.lastinvoice;
ClassDiagram.Attribut>> CustomerDTO.nextinvoice:Date =>=>=> RelationalSchema.Column>> customerdto.nextinvoice;
ClassDiagram.Attribut>> CustomerDTO.mainsubscription:MainSubscriptionDTO =>=>=> RelationalSchema.Column>> customerdto.mainsubscription;
ClassDiagram.Attribut>> CustomerDTO.invoicedesign:String =>=>=> RelationalSchema.Column>> customerdto.invoicedesign;
ClassDiagram.Attribut>> CustomerDTO.aitmetafieldmap:Map<Integer,List<MetaFieldValue>> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CustomerDTO.//#4501-customautorechargerechargethreshold:BigDecimal =>=>=> RelationalSchema.Column>> customerdto.//#4501-customautorechargerechargethreshold;
ClassDiagram.Attribut>> CustomerDTO.monthlylimit:BigDecimal =>=>=> RelationalSchema.Column>> customerdto.monthlylimit;
ClassDiagram.Attribut>> CustomerDTO.currentmonthlyamount:BigDecimal =>=>=> RelationalSchema.Column>> customerdto.currentmonthlyamount;
ClassDiagram.Attribut>> CustomerDTO.currentmonth:Date =>=>=> RelationalSchema.Column>> customerdto.currentmonth;
ClassDiagram.Attribut>> CustomerPriceDTO.id:CustomerPricePK =>=>=> RelationalSchema.Column>> customerpricedto.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerPriceDTO.createtime:Date =>=>=> RelationalSchema.Column>> customerpricedto.createtime;
ClassDiagram.Attribut>> CustomerPriceDTO.pricesubscription:Date =>=>=> RelationalSchema.Column>> customerpricedto.pricesubscription;
ClassDiagram.Attribut>> CustomerPriceDTO.priceexpiry:Date =>=>=> RelationalSchema.Column>> customerpricedto.priceexpiry;
ClassDiagram.Attribut>> UserStatusDTO.id:int =>=>=> RelationalSchema.Column>> userstatusdto.id PRIMARY KEY;
ClassDiagram.Attribut>> UserStatusDTO.canlogin:int =>=>=> RelationalSchema.Column>> userstatusdto.canlogin;
ClassDiagram.Attribut>> AccountTypePriceDTO.id:AccountTypePricePK =>=>=> RelationalSchema.Column>> accounttypepricedto.id PRIMARY KEY;
ClassDiagram.Attribut>> AccountTypePriceDTO.createtime:Date =>=>=> RelationalSchema.Column>> accounttypepricedto.createtime;
ClassDiagram.Attribut>> AccountTypePriceDTO.priceexpiry:Date =>=>=> RelationalSchema.Column>> accounttypepricedto.priceexpiry;
ClassDiagram.Attribut>> UserCodeDTO.id:int =>=>=> RelationalSchema.Column>> usercodedto.id PRIMARY KEY;
ClassDiagram.Attribut>> UserCodeDTO./***uniqueidentifiertoidentifythisuser*/identifier:String =>=>=> RelationalSchema.Column>> usercodedto./***uniqueidentifiertoidentifythisuser*/identifier;
ClassDiagram.Attribut>> UserCodeDTO./***areferencethatmightbeusedinanexternalsystem*/externalreference:String =>=>=> RelationalSchema.Column>> usercodedto./***areferencethatmightbeusedinanexternalsystem*/externalreference;
ClassDiagram.Attribut>> UserCodeDTO./***whattypeofprogramdoesthetranslationidrelateto*/type:String =>=>=> RelationalSchema.Column>> usercodedto./***whattypeofprogramdoesthetranslationidrelateto*/type;
ClassDiagram.Attribut>> UserCodeDTO./***descriptionoftheprogramtype*/typedescription:String =>=>=> RelationalSchema.Column>> usercodedto./***descriptionoftheprogramtype*/typedescription;
ClassDiagram.Attribut>> UserCodeDTO.validfrom:Date =>=>=> RelationalSchema.Column>> usercodedto.validfrom;
ClassDiagram.Attribut>> UserCodeDTO.validto:Date =>=>=> RelationalSchema.Column>> usercodedto.validto;
ClassDiagram.Attribut>> ResetPasswordCodeDTO.id:Integer =>=>=> RelationalSchema.Column>> resetpasswordcodedto.id PRIMARY KEY;
ClassDiagram.Attribut>> ResetPasswordCodeDTO.created:Date =>=>=> RelationalSchema.Column>> resetpasswordcodedto.created;
ClassDiagram.Attribut>> ResetPasswordCodeDTO.token:String =>=>=> RelationalSchema.Column>> resetpasswordcodedto.token;
ClassDiagram.Attribut>> ResetPasswordCodeDTO.newpassword:String =>=>=> RelationalSchema.Column>> resetpasswordcodedto.newpassword;
ClassDiagram.Attribut>> CustomerAccountInfoTypeMetaField.id:int =>=>=> RelationalSchema.Column>> customeraccountinfotypemetafield.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerAccountInfoTypeMetaField.effective:Date =>=>=> RelationalSchema.Column>> customeraccountinfotypemetafield.effective;
ClassDiagram.Attribut>> UserDTO.id:int =>=>=> RelationalSchema.Column>> userdto.id PRIMARY KEY;
ClassDiagram.Attribut>> UserDTO.username:String =>=>=> RelationalSchema.Column>> userdto.username;
ClassDiagram.Attribut>> UserDTO.password:String =>=>=> RelationalSchema.Column>> userdto.password;
ClassDiagram.Attribut>> UserDTO.deleted:int =>=>=> RelationalSchema.Column>> userdto.deleted;
ClassDiagram.Attribut>> UserDTO.enabled:boolean =>=>=> RelationalSchema.Column>> userdto.enabled;
ClassDiagram.Attribut>> UserDTO.accountexpired:boolean =>=>=> RelationalSchema.Column>> userdto.accountexpired;
ClassDiagram.Attribut>> UserDTO.accountlocked:boolean =>=>=> RelationalSchema.Column>> userdto.accountlocked;
ClassDiagram.Attribut>> UserDTO.passwordexpired:boolean =>=>=> RelationalSchema.Column>> userdto.passwordexpired;
ClassDiagram.Attribut>> UserDTO.createtime:Date =>=>=> RelationalSchema.Column>> userdto.createtime;
ClassDiagram.Attribut>> UserDTO.laststatuschange:Date =>=>=> RelationalSchema.Column>> userdto.laststatuschange;
ClassDiagram.Attribut>> UserDTO.lastlogin:Date =>=>=> RelationalSchema.Column>> userdto.lastlogin;
ClassDiagram.Attribut>> UserDTO.accountdisabled:Date =>=>=> RelationalSchema.Column>> userdto.accountdisabled;
ClassDiagram.Attribut>> UserDTO.failedattempts:int =>=>=> RelationalSchema.Column>> userdto.failedattempts;
ClassDiagram.Attribut>> UserDTO.changepassword:Date =>=>=> RelationalSchema.Column>> userdto.changepassword;
ClassDiagram.Attribut>> UserDTO.GeneratedName:CurrencyDTO =>=>=> RelationalSchema.Column>> userdto.GeneratedName;
ClassDiagram.Attribut>> UserDTO.contact:ContactDTO =>=>=> RelationalSchema.Column>> userdto.contact;
ClassDiagram.Attribut>> UserDTO.partnersforuserid:PartnerDTO =>=>=> RelationalSchema.Column>> userdto.partnersforuserid;
ClassDiagram.Attribut>> UserDTO.encryptionscheme:Integer =>=>=> RelationalSchema.Column>> userdto.encryptionscheme;
ClassDiagram.Attribut>> UserDTO.versionnum:int =>=>=> RelationalSchema.Column>> userdto.versionnum;
ClassDiagram.Attribut>> UserDTO.//paymentinstrumentspaymentinstruments:List<PaymentInformationDTO> =>=>=> RelationalSchema.Column>> userdto.//paymentinstrumentspaymentinstruments;
ClassDiagram.Attribut>> UserDTO.accountlockedtime:Date =>=>=> RelationalSchema.Column>> userdto.accountlockedtime;
ClassDiagram.Attribut>> CompanyDTO.id:int =>=>=> RelationalSchema.Column>> companydto.id PRIMARY KEY;
ClassDiagram.Attribut>> CompanyDTO.GeneratedName:CurrencyDTO =>=>=> RelationalSchema.Column>> companydto.GeneratedName;
ClassDiagram.Attribut>> CompanyDTO.externalid:String =>=>=> RelationalSchema.Column>> companydto.externalid;
ClassDiagram.Attribut>> CompanyDTO.description:String =>=>=> RelationalSchema.Column>> companydto.description;
ClassDiagram.Attribut>> CompanyDTO.createtime:Date =>=>=> RelationalSchema.Column>> companydto.createtime;
ClassDiagram.Attribut>> CompanyDTO.invoiceasreseller:boolean =>=>=> RelationalSchema.Column>> companydto.invoiceasreseller;
ClassDiagram.Attribut>> CompanyDTO.orderperioddtos:Set<OrderPeriodDTO> =>=>=> RelationalSchema.Column>> companydto.orderperioddtos;
ClassDiagram.Attribut>> CompanyDTO.currencydtos:Set<CurrencyDTO> =>=>=> RelationalSchema.Column>> companydto.currencydtos;
ClassDiagram.Attribut>> CompanyDTO.versionnum:int =>=>=> RelationalSchema.Column>> companydto.versionnum;
ClassDiagram.Attribut>> CompanyDTO.deleted:Integer =>=>=> RelationalSchema.Column>> companydto.deleted;
ClassDiagram.Attribut>> CompanyDTO.customerinformationdesign:String =>=>=> RelationalSchema.Column>> companydto.customerinformationdesign;
ClassDiagram.Attribut>> CompanyDTO.uicolor:Integer =>=>=> RelationalSchema.Column>> companydto.uicolor;
ClassDiagram.Attribut>> CompanyDTO.brokercatalogversion:String =>=>=> RelationalSchema.Column>> companydto.brokercatalogversion;
ClassDiagram.Attribut>> CompanyDTO.type:CompanyType =>=>=> RelationalSchema.Column>> companydto.type;
ClassDiagram.Attribut>> AccountInformationTypeDTO.name:String =>=>=> RelationalSchema.Column>> accountinformationtypedto.name;
ClassDiagram.Attribut>> AccountInformationTypeDTO.usefornotifications:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> UserCodeLinkDTO.id:int =>=>=> RelationalSchema.Column>> usercodelinkdto.id PRIMARY KEY;
ClassDiagram.Attribut>> UserCodeLinkDTO./***typeofobjectlinkedto*/objecttype:UserCodeObjectType =>=>=> RelationalSchema.Column>> usercodelinkdto./***typeofobjectlinkedto*/objecttype;
ClassDiagram.Attribut>> UserCodeLinkDTO.objectid:int =>=>=> RelationalSchema.Column>> usercodelinkdto.objectid;
ClassDiagram.Attribut>> MatchingFieldDTO.id:Integer =>=>=> RelationalSchema.Column>> matchingfielddto.id PRIMARY KEY;
ClassDiagram.Attribut>> MatchingFieldDTO.ordersequence:Integer =>=>=> RelationalSchema.Column>> matchingfielddto.ordersequence;
ClassDiagram.Attribut>> MatchingFieldDTO.required:Boolean =>=>=> RelationalSchema.Column>> matchingfielddto.required;
ClassDiagram.Attribut>> MatchingFieldDTO.description:String =>=>=> RelationalSchema.Column>> matchingfielddto.description;
ClassDiagram.Attribut>> MatchingFieldDTO.mediationfield:String =>=>=> RelationalSchema.Column>> matchingfielddto.mediationfield;
ClassDiagram.Attribut>> MatchingFieldDTO.matchingfield:String =>=>=> RelationalSchema.Column>> matchingfielddto.matchingfield;
ClassDiagram.Attribut>> MatchingFieldDTO.type:MatchingFieldType =>=>=> RelationalSchema.Column>> matchingfielddto.type;
ClassDiagram.Attribut>> MatchingFieldDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> matchingfielddto.versionnum;
ClassDiagram.Attribut>> MatchingFieldDTO.longestvalue:Integer =>=>=> RelationalSchema.Column>> matchingfielddto.longestvalue;
ClassDiagram.Attribut>> MatchingFieldDTO.smallestvalue:Integer =>=>=> RelationalSchema.Column>> matchingfielddto.smallestvalue;
ClassDiagram.Attribut>> MatchingFieldDTO.mandatoryfieldsquery:String =>=>=> RelationalSchema.Column>> matchingfielddto.mandatoryfieldsquery;
ClassDiagram.Attribut>> CustomerNoteDTO.noteid:int =>=>=> RelationalSchema.Column>> customernotedto.noteid PRIMARY KEY;
ClassDiagram.Attribut>> CustomerNoteDTO.notetitle:String =>=>=> RelationalSchema.Column>> customernotedto.notetitle;
ClassDiagram.Attribut>> CustomerNoteDTO.notecontent:String =>=>=> RelationalSchema.Column>> customernotedto.notecontent;
ClassDiagram.Attribut>> CustomerNoteDTO.creationtime:Date =>=>=> RelationalSchema.Column>> customernotedto.creationtime;
ClassDiagram.Attribut>> AccountTypeDTO.id:int =>=>=> RelationalSchema.Column>> accounttypedto.id PRIMARY KEY;
ClassDiagram.Attribut>> AccountTypeDTO.creditlimit:BigDecimal =>=>=> RelationalSchema.Column>> accounttypedto.creditlimit;
ClassDiagram.Attribut>> AccountTypeDTO.invoicedesign:String =>=>=> RelationalSchema.Column>> accounttypedto.invoicedesign;
ClassDiagram.Attribut>> AccountTypeDTO.billingcycle:MainSubscriptionDTO =>=>=> RelationalSchema.Column>> accounttypedto.billingcycle;
ClassDiagram.Attribut>> AccountTypeDTO.created:Date =>=>=> RelationalSchema.Column>> accounttypedto.created;
ClassDiagram.Attribut>> AccountTypeDTO.creditnotificationlimit1:BigDecimal =>=>=> RelationalSchema.Column>> accounttypedto.creditnotificationlimit1;
ClassDiagram.Attribut>> AccountTypeDTO.creditnotificationlimit2:BigDecimal =>=>=> RelationalSchema.Column>> accounttypedto.creditnotificationlimit2;
ClassDiagram.Attribut>> AccountTypeDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> accounttypedto.versionnum;
ClassDiagram.Attribut>> AccountTypeDTO.preferrednotificationaitid:Integer =>=>=> RelationalSchema.Column>> accounttypedto.preferrednotificationaitid;
ClassDiagram.Attribut>> RoleDTO.role_authority_prefix:String =>=>=> RelationalSchema.Column>> roledto.role_authority_prefix;
ClassDiagram.Attribut>> RoleDTO.//authorityvaluesinenglishauthority_language_id:Integer =>=>=> RelationalSchema.Column>> roledto.//authorityvaluesinenglishauthority_language_id;
ClassDiagram.Attribut>> RoleDTO.id:int =>=>=> RelationalSchema.Column>> roledto.id PRIMARY KEY;
ClassDiagram.Attribut>> RoleDTO.roletypeid:Integer =>=>=> RelationalSchema.Column>> roledto.roletypeid;
ClassDiagram.Attribut>> RoleDTO.authority:String =>=>=> RelationalSchema.Column>> roledto.authority;
ClassDiagram.Attribut>> PermissionTypeDTO.id:int =>=>=> RelationalSchema.Column>> permissiontypedto.id PRIMARY KEY;
ClassDiagram.Attribut>> PermissionTypeDTO.description:String =>=>=> RelationalSchema.Column>> permissiontypedto.description;
ClassDiagram.Attribut>> PermissionUserDTO.id:int =>=>=> RelationalSchema.Column>> permissionuserdto.id PRIMARY KEY;
ClassDiagram.Attribut>> PermissionUserDTO.isgrant:short =>=>=> RelationalSchema.Column>> permissionuserdto.isgrant;
ClassDiagram.Attribut>> PermissionUserDTO.authority:String =>=>=> RelationalSchema.Column>> permissionuserdto.authority;
ClassDiagram.Attribut>> PermissionDTO.id:int =>=>=> RelationalSchema.Column>> permissiondto.id PRIMARY KEY;
ClassDiagram.Attribut>> PermissionDTO.foreignid:Integer =>=>=> RelationalSchema.Column>> permissiondto.foreignid;
ClassDiagram.Attribut>> PermissionDTO.authority:String =>=>=> RelationalSchema.Column>> permissiondto.authority;
ClassDiagram.Attribut>> PaymentCommissionDTO.id:int =>=>=> RelationalSchema.Column>> paymentcommissiondto.id PRIMARY KEY;
ClassDiagram.Attribut>> PaymentCommissionDTO.paymentamount:BigDecimal =>=>=> RelationalSchema.Column>> paymentcommissiondto.paymentamount;
ClassDiagram.Attribut>> CommissionProcessConfigurationDTO.id:int =>=>=> RelationalSchema.Column>> commissionprocessconfigurationdto.id PRIMARY KEY;
ClassDiagram.Attribut>> CommissionProcessConfigurationDTO.nextrun:Date =>=>=> RelationalSchema.Column>> commissionprocessconfigurationdto.nextrun;
ClassDiagram.Attribut>> CommissionProcessConfigurationDTO.periodvalue:int =>=>=> RelationalSchema.Column>> commissionprocessconfigurationdto.periodvalue;
ClassDiagram.Attribut>> PartnerPayout.id:int =>=>=> RelationalSchema.Column>> partnerpayout.id PRIMARY KEY;
ClassDiagram.Attribut>> PartnerPayout.starting:Date =>=>=> RelationalSchema.Column>> partnerpayout.starting;
ClassDiagram.Attribut>> PartnerPayout.ending:Date =>=>=> RelationalSchema.Column>> partnerpayout.ending;
ClassDiagram.Attribut>> PartnerPayout.paymentsamount:BigDecimal =>=>=> RelationalSchema.Column>> partnerpayout.paymentsamount;
ClassDiagram.Attribut>> PartnerPayout.refundsamount:BigDecimal =>=>=> RelationalSchema.Column>> partnerpayout.refundsamount;
ClassDiagram.Attribut>> PartnerPayout.balanceleft:BigDecimal =>=>=> RelationalSchema.Column>> partnerpayout.balanceleft;
ClassDiagram.Attribut>> PartnerPayout.versionnum:int =>=>=> RelationalSchema.Column>> partnerpayout.versionnum;
ClassDiagram.Attribut>> PartnerPayout.paymentid:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> PartnerPayout.partnerid:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> PartnerCommissionExceptionDTO.id:int =>=>=> RelationalSchema.Column>> partnercommissionexceptiondto.id PRIMARY KEY;
ClassDiagram.Attribut>> PartnerCommissionExceptionDTO.start:Date =>=>=> RelationalSchema.Column>> partnercommissionexceptiondto.start;
ClassDiagram.Attribut>> PartnerCommissionExceptionDTO.end:Date =>=>=> RelationalSchema.Column>> partnercommissionexceptiondto.end;
ClassDiagram.Attribut>> PartnerCommissionExceptionDTO.percentage:BigDecimal =>=>=> RelationalSchema.Column>> partnercommissionexceptiondto.percentage;
ClassDiagram.Attribut>> PartnerDTO.id:int =>=>=> RelationalSchema.Column>> partnerdto.id PRIMARY KEY;
ClassDiagram.Attribut>> PartnerDTO.baseuserbyuserid:UserDTO =>=>=> RelationalSchema.Column>> partnerdto.baseuserbyuserid;
ClassDiagram.Attribut>> PartnerDTO.totalpayments:BigDecimal =>=>=> RelationalSchema.Column>> partnerdto.totalpayments;
ClassDiagram.Attribut>> PartnerDTO.totalrefunds:BigDecimal =>=>=> RelationalSchema.Column>> partnerdto.totalrefunds;
ClassDiagram.Attribut>> PartnerDTO.totalpayouts:BigDecimal =>=>=> RelationalSchema.Column>> partnerdto.totalpayouts;
ClassDiagram.Attribut>> PartnerDTO.duepayout:BigDecimal =>=>=> RelationalSchema.Column>> partnerdto.duepayout;
ClassDiagram.Attribut>> PartnerDTO.type:PartnerType =>=>=> RelationalSchema.Column>> partnerdto.type;
ClassDiagram.Attribut>> PartnerDTO.commissiontype:PartnerCommissionType =>=>=> RelationalSchema.Column>> partnerdto.commissiontype;
ClassDiagram.Attribut>> PartnerDTO.brokerid:String =>=>=> RelationalSchema.Column>> partnerdto.brokerid;
ClassDiagram.Attribut>> PartnerDTO.versionnum:int =>=>=> RelationalSchema.Column>> partnerdto.versionnum;
ClassDiagram.Attribut>> InvoiceCommissionDTO.standardamount:BigDecimal =>=>=> RelationalSchema.Column>> invoicecommissiondto.standardamount;
ClassDiagram.Attribut>> InvoiceCommissionDTO.masteramount:BigDecimal =>=>=> RelationalSchema.Column>> invoicecommissiondto.masteramount;
ClassDiagram.Attribut>> InvoiceCommissionDTO.exceptionamount:BigDecimal =>=>=> RelationalSchema.Column>> invoicecommissiondto.exceptionamount;
ClassDiagram.Attribut>> CustomerCommissionDTO.amount:BigDecimal =>=>=> RelationalSchema.Column>> customercommissiondto.amount;
ClassDiagram.Attribut>> PartnerReferralCommissionDTO.id:int =>=>=> RelationalSchema.Column>> partnerreferralcommissiondto.id PRIMARY KEY;
ClassDiagram.Attribut>> PartnerReferralCommissionDTO.start:Date =>=>=> RelationalSchema.Column>> partnerreferralcommissiondto.start;
ClassDiagram.Attribut>> PartnerReferralCommissionDTO.end:Date =>=>=> RelationalSchema.Column>> partnerreferralcommissiondto.end;
ClassDiagram.Attribut>> PartnerReferralCommissionDTO.percentage:BigDecimal =>=>=> RelationalSchema.Column>> partnerreferralcommissiondto.percentage;
ClassDiagram.Attribut>> ReferralCommissionDTO.referralamount:BigDecimal =>=>=> RelationalSchema.Column>> referralcommissiondto.referralamount;
ClassDiagram.Attribut>> CommissionProcessRunDTO.id:int =>=>=> RelationalSchema.Column>> commissionprocessrundto.id PRIMARY KEY;
ClassDiagram.Attribut>> CommissionProcessRunDTO.run:Date =>=>=> RelationalSchema.Column>> commissionprocessrundto.run;
ClassDiagram.Attribut>> CommissionProcessRunDTO.periodstart:Date =>=>=> RelationalSchema.Column>> commissionprocessrundto.periodstart;
ClassDiagram.Attribut>> CommissionProcessRunDTO.periodend:Date =>=>=> RelationalSchema.Column>> commissionprocessrundto.periodend;
ClassDiagram.Attribut>> CommissionProcessRunDTO.errorcount:int =>=>=> RelationalSchema.Column>> commissionprocessrundto.errorcount;
ClassDiagram.Attribut>> PartnerCommissionLineDTO.id:int =>=>=> RelationalSchema.Column>> partnercommissionlinedto.id PRIMARY KEY;
ClassDiagram.Attribut>> PartnerCommissionLineDTO.//oppositeofreversal.thisobjectmustthereversaloriginalcommissionline:PartnerCommissionLineDTO =>=>=> RelationalSchema.Column>> partnercommissionlinedto.//oppositeofreversal.thisobjectmustthereversaloriginalcommissionline;
ClassDiagram.Attribut>> PartnerCommissionValueDTO.id:int =>=>=> RelationalSchema.Column>> partnercommissionvaluedto.id PRIMARY KEY;
ClassDiagram.Attribut>> PartnerCommissionValueDTO.days:int =>=>=> RelationalSchema.Column>> partnercommissionvaluedto.days;
ClassDiagram.Attribut>> PartnerCommissionValueDTO.rate:BigDecimal =>=>=> RelationalSchema.Column>> partnercommissionvaluedto.rate;
ClassDiagram.Attribut>> PartnerCommissionValueDTO.versionnum:int =>=>=> RelationalSchema.Column>> partnercommissionvaluedto.versionnum;
ClassDiagram.Attribut>> CommissionDTO.id:int =>=>=> RelationalSchema.Column>> commissiondto.id PRIMARY KEY;
ClassDiagram.Attribut>> CommissionDTO.amount:BigDecimal =>=>=> RelationalSchema.Column>> commissiondto.amount;
ClassDiagram.Attribut>> CommissionDTO.type:CommissionType =>=>=> RelationalSchema.Column>> commissiondto.type;
ClassDiagram.Attribut>> CommissionDTO.GeneratedName:CurrencyDTO =>=>=> RelationalSchema.Column>> commissiondto.GeneratedName;
ClassDiagram.Attribut>> ContactDTO.id:Integer =>=>=> RelationalSchema.Column>> contactdto.id PRIMARY KEY;
ClassDiagram.Attribut>> ContactDTO.organizationname:String =>=>=> RelationalSchema.Column>> contactdto.organizationname;
ClassDiagram.Attribut>> ContactDTO.address1:String =>=>=> RelationalSchema.Column>> contactdto.address1;
ClassDiagram.Attribut>> ContactDTO.address2:String =>=>=> RelationalSchema.Column>> contactdto.address2;
ClassDiagram.Attribut>> ContactDTO.city:String =>=>=> RelationalSchema.Column>> contactdto.city;
ClassDiagram.Attribut>> ContactDTO.stateprovince:String =>=>=> RelationalSchema.Column>> contactdto.stateprovince;
ClassDiagram.Attribut>> ContactDTO.postalcode:String =>=>=> RelationalSchema.Column>> contactdto.postalcode;
ClassDiagram.Attribut>> ContactDTO.countrycode:String =>=>=> RelationalSchema.Column>> contactdto.countrycode;
ClassDiagram.Attribut>> ContactDTO.lastname:String =>=>=> RelationalSchema.Column>> contactdto.lastname;
ClassDiagram.Attribut>> ContactDTO.firstname:String =>=>=> RelationalSchema.Column>> contactdto.firstname;
ClassDiagram.Attribut>> ContactDTO.initial:String =>=>=> RelationalSchema.Column>> contactdto.initial;
ClassDiagram.Attribut>> ContactDTO.title:String =>=>=> RelationalSchema.Column>> contactdto.title;
ClassDiagram.Attribut>> ContactDTO.phonecountrycode:Integer =>=>=> RelationalSchema.Column>> contactdto.phonecountrycode;
ClassDiagram.Attribut>> ContactDTO.phoneareacode:Integer =>=>=> RelationalSchema.Column>> contactdto.phoneareacode;
ClassDiagram.Attribut>> ContactDTO.phonenumber:String =>=>=> RelationalSchema.Column>> contactdto.phonenumber;
ClassDiagram.Attribut>> ContactDTO.faxcountrycode:Integer =>=>=> RelationalSchema.Column>> contactdto.faxcountrycode;
ClassDiagram.Attribut>> ContactDTO.faxareacode:Integer =>=>=> RelationalSchema.Column>> contactdto.faxareacode;
ClassDiagram.Attribut>> ContactDTO.faxnumber:String =>=>=> RelationalSchema.Column>> contactdto.faxnumber;
ClassDiagram.Attribut>> ContactDTO.email:String =>=>=> RelationalSchema.Column>> contactdto.email;
ClassDiagram.Attribut>> ContactDTO.create:Date =>=>=> RelationalSchema.Column>> contactdto.create;
ClassDiagram.Attribut>> ContactDTO.deleted:int =>=>=> RelationalSchema.Column>> contactdto.deleted;
ClassDiagram.Attribut>> ContactDTO.include:Integer =>=>=> RelationalSchema.Column>> contactdto.include;
ClassDiagram.Attribut>> ContactDTO.userid:Integer =>=>=> RelationalSchema.Column>> contactdto.userid;
ClassDiagram.Attribut>> ContactDTO.baseuser:UserDTO =>=>=> RelationalSchema.Column>> contactdto.baseuser;
ClassDiagram.Attribut>> ContactDTO.versionnum:int =>=>=> RelationalSchema.Column>> contactdto.versionnum;
ClassDiagram.Attribut>> ContactMapDTO.id:int =>=>=> RelationalSchema.Column>> contactmapdto.id PRIMARY KEY;
ClassDiagram.Attribut>> ContactMapDTO.GeneratedName:JbillingTable =>=>=> RelationalSchema.Column>> contactmapdto.GeneratedName;
ClassDiagram.Attribut>> ContactMapDTO.foreignid:int =>=>=> RelationalSchema.Column>> contactmapdto.foreignid;
ClassDiagram.Attribut>> ContactMapDTO.versionnum:int =>=>=> RelationalSchema.Column>> contactmapdto.versionnum;
ClassDiagram.Attribut>> DataTableQueryEntryDTO.id:int =>=>=> RelationalSchema.Column>> datatablequeryentrydto.id PRIMARY KEY;
ClassDiagram.Attribut>> DataTableQueryEntryDTO./***route/tablethisqueryshouldbejoinedto*/route:RouteDTO =>=>=> RelationalSchema.Column>> datatablequeryentrydto./***route/tablethisqueryshouldbejoinedto*/route;
ClassDiagram.Attribut>> DataTableQueryEntryDTO./***columnstojoinon*/columns:StringList =>=>=> RelationalSchema.Column>> datatablequeryentrydto./***columnstojoinon*/columns;
ClassDiagram.Attribut>> DataTableQueryEntryDTO./***nextqueryinthelistofnestedqueries*/nextquery:DataTableQueryEntryDTO =>=>=> RelationalSchema.Column>> datatablequeryentrydto./***nextqueryinthelistofnestedqueries*/nextquery;
ClassDiagram.Attribut>> DataTableQueryEntryDTO./***previousqueryinthelistofnestedqueries*/prevquery:DataTableQueryEntryDTO =>=>=> RelationalSchema.Column>> datatablequeryentrydto./***previousqueryinthelistofnestedqueries*/prevquery;
ClassDiagram.Attribut>> DataTableQueryEntryDTO./***query-notnullonlyifthisistherootentry*/query:DataTableQueryDTO =>=>=> RelationalSchema.Column>> datatablequeryentrydto./***query-notnullonlyifthisistherootentry*/query;
ClassDiagram.Attribut>> DataTableQueryEntryDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> datatablequeryentrydto.versionnum;
ClassDiagram.Attribut>> PriceModelDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> pricemodeldto.log;
ClassDiagram.Attribut>> PriceModelDTO.attribute_wildcard:String =>=>=> RelationalSchema.Column>> pricemodeldto.attribute_wildcard;
ClassDiagram.Attribut>> PriceModelDTO.id:Integer =>=>=> RelationalSchema.Column>> pricemodeldto.id PRIMARY KEY;
ClassDiagram.Attribut>> PriceModelDTO.type:PriceModelStrategy =>=>=> RelationalSchema.Column>> pricemodeldto.type;
ClassDiagram.Attribut>> PriceModelDTO.attributes:SortedMap<String,String> =>=>=> RelationalSchema.Column>> pricemodeldto.attributes;
ClassDiagram.Attribut>> PriceModelDTO.rate:BigDecimal =>=>=> RelationalSchema.Column>> pricemodeldto.rate;
ClassDiagram.Attribut>> PriceModelDTO.//pricemodelchainingnext:PriceModelDTO =>=>=> RelationalSchema.Column>> pricemodeldto.//pricemodelchainingnext;
ClassDiagram.Attribut>> DataTableQueryDTO.id:int =>=>=> RelationalSchema.Column>> datatablequerydto.id PRIMARY KEY;
ClassDiagram.Attribut>> DataTableQueryDTO.name:String =>=>=> RelationalSchema.Column>> datatablequerydto.name;
ClassDiagram.Attribut>> DataTableQueryDTO./***routethisquerymaybeexecutedon*/route:RouteDTO =>=>=> RelationalSchema.Column>> datatablequerydto./***routethisquerymaybeexecutedon*/route;
ClassDiagram.Attribut>> DataTableQueryDTO.global:int =>=>=> RelationalSchema.Column>> datatablequerydto.global;
ClassDiagram.Attribut>> DataTableQueryDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> datatablequerydto.versionnum;
ClassDiagram.Attribut>> DataTableQueryDTO./***thefirstqueryinthelistofnestedqueries*/rootentry:DataTableQueryEntryDTO =>=>=> RelationalSchema.Column>> datatablequerydto./***thefirstqueryinthelistofnestedqueries*/rootentry;
ClassDiagram.Attribut>> DataTableQueryDTO./***userthatcreatedthequery*/user:UserDTO =>=>=> RelationalSchema.Column>> datatablequerydto./***userthatcreatedthequery*/user;
ClassDiagram.Attribut>> RouteRateCardDTO.table_prefix:String =>=>=> RelationalSchema.Column>> routeratecarddto.table_prefix;
ClassDiagram.Attribut>> RouteRateCardDTO.table_columns:List<com.sapienter.jbilling.server.util.sql.TableGenerator.Column> =>=>=> RelationalSchema.Column>> routeratecarddto.table_columns;
ClassDiagram.Attribut>> RouteRateCardDTO.table_columns_names:List<String> =>=>=> RelationalSchema.Column>> routeratecarddto.table_columns_names;
ClassDiagram.Attribut>> RouteRateCardDTO.id:Integer =>=>=> RelationalSchema.Column>> routeratecarddto.id PRIMARY KEY;
ClassDiagram.Attribut>> RouteRateCardDTO.name:String =>=>=> RelationalSchema.Column>> routeratecarddto.name;
ClassDiagram.Attribut>> RouteRateCardDTO.tablename:String =>=>=> RelationalSchema.Column>> routeratecarddto.tablename;
ClassDiagram.Attribut>> RouteRateCardDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> routeratecarddto.versionnum;
ClassDiagram.Attribut>> RouteRateCardDTO.//transientrouteratecardrecords:Set<RouteRateCardRecord> =>=>=> RelationalSchema.Column>> routeratecarddto.//transientrouteratecardrecords;
ClassDiagram.Attribut>> RouteDTO.table_prefix:String =>=>=> RelationalSchema.Column>> routedto.table_prefix;
ClassDiagram.Attribut>> RouteDTO.route_table_columns:List<com.sapienter.jbilling.server.util.sql.TableGenerator.Column> =>=>=> RelationalSchema.Column>> routedto.route_table_columns;
ClassDiagram.Attribut>> RouteDTO.non_route_table_columns:List<com.sapienter.jbilling.server.util.sql.TableGenerator.Column> =>=>=> RelationalSchema.Column>> routedto.non_route_table_columns;
ClassDiagram.Attribut>> RouteDTO.table_columns_names:List<String> =>=>=> RelationalSchema.Column>> routedto.table_columns_names;
ClassDiagram.Attribut>> RouteDTO.id:Integer =>=>=> RelationalSchema.Column>> routedto.id PRIMARY KEY;
ClassDiagram.Attribut>> RouteDTO.name:String =>=>=> RelationalSchema.Column>> routedto.name;
ClassDiagram.Attribut>> RouteDTO.tablename:String =>=>=> RelationalSchema.Column>> routedto.tablename;
ClassDiagram.Attribut>> RouteDTO.roottable:Boolean =>=>=> RelationalSchema.Column>> routedto.roottable;
ClassDiagram.Attribut>> RouteDTO.routetable:Boolean =>=>=> RelationalSchema.Column>> routedto.routetable;
ClassDiagram.Attribut>> RouteDTO.outputfieldname:String =>=>=> RelationalSchema.Column>> routedto.outputfieldname;
ClassDiagram.Attribut>> RouteDTO./***nextroutetouseincasenothingmatches*/defaultroute:String =>=>=> RelationalSchema.Column>> routedto./***nextroutetouseincasenothingmatches*/defaultroute;
ClassDiagram.Attribut>> RouteDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> routedto.versionnum;
ClassDiagram.Attribut>> RouteDTO.//transientrouterecords:Set<RouteRecord> =>=>=> RelationalSchema.Column>> routedto.//transientrouterecords;
ClassDiagram.Attribut>> RatingUnitDTO.id:int =>=>=> RelationalSchema.Column>> ratingunitdto.id PRIMARY KEY;
ClassDiagram.Attribut>> RatingUnitDTO.name:String =>=>=> RelationalSchema.Column>> ratingunitdto.name;
ClassDiagram.Attribut>> RatingUnitDTO.GeneratedName:IncrementUnit =>=>=> RelationalSchema.Column>> ratingunitdto.GeneratedName;
ClassDiagram.Attribut>> RatingUnitDTO.GeneratedName:PriceUnit =>=>=> RelationalSchema.Column>> ratingunitdto.GeneratedName;
ClassDiagram.Attribut>> RatingUnitDTO.canbedeleted:boolean =>=>=> RelationalSchema.Column>> ratingunitdto.canbedeleted;
ClassDiagram.Attribut>> RatingUnitDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> ratingunitdto.versionnum;
ClassDiagram.Attribut>> RateCardDTO.table_prefix:String =>=>=> RelationalSchema.Column>> ratecarddto.table_prefix;
ClassDiagram.Attribut>> RateCardDTO.table_columns:List<TableGenerator.Column> =>=>=> RelationalSchema.Column>> ratecarddto.table_columns;
ClassDiagram.Attribut>> RateCardDTO.id:Integer =>=>=> RelationalSchema.Column>> ratecarddto.id PRIMARY KEY;
ClassDiagram.Attribut>> RateCardDTO.name:String =>=>=> RelationalSchema.Column>> ratecarddto.name;
ClassDiagram.Attribut>> RateCardDTO.tablename:String =>=>=> RelationalSchema.Column>> ratecarddto.tablename;
ClassDiagram.Attribut>> RateCardDTO.global:boolean =>=>=> RelationalSchema.Column>> ratecarddto.global;
ClassDiagram.Attribut>> CustomerUsagePoolDTO.id:int =>=>=> RelationalSchema.Column>> customerusagepooldto.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerUsagePoolDTO.//thisistheplanthatcreatedthiscustomerusagepoolplan:PlanDTO =>=>=> RelationalSchema.Column>> customerusagepooldto.//thisistheplanthatcreatedthiscustomerusagepoolplan;
ClassDiagram.Attribut>> CustomerUsagePoolDTO.quantity:BigDecimal =>=>=> RelationalSchema.Column>> customerusagepooldto.quantity;
ClassDiagram.Attribut>> CustomerUsagePoolDTO.initialquantity:BigDecimal =>=>=> RelationalSchema.Column>> customerusagepooldto.initialquantity;
ClassDiagram.Attribut>> CustomerUsagePoolDTO.cycleend:Date =>=>=> RelationalSchema.Column>> customerusagepooldto.cycleend;
ClassDiagram.Attribut>> CustomerUsagePoolDTO.versionnum:int =>=>=> RelationalSchema.Column>> customerusagepooldto.versionnum;
ClassDiagram.Attribut>> CustomerUsagePoolDTO./***acomparatorthatisusedtosortcustomerusagepoolsbasedonprecedenceprovidedatsystemlevelusagepools.*ifprecedenceatusagepoollevelissame,thencreateddateforsystemlevelusagepoolsisconsidered.*/customerusagepoolsbyprecedenceorcreateddatecomparator:Comparator<CustomerUsagePoolDTO> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ComsumptionActionDTO.id:int =>=>=> RelationalSchema.Column>> comsumptionactiondto.id PRIMARY KEY;
ClassDiagram.Attribut>> ComsumptionActionDTO.actionname:String =>=>=> RelationalSchema.Column>> comsumptionactiondto.actionname;
ClassDiagram.Attribut>> ComsumptionActionDTO.actiondescription:String =>=>=> RelationalSchema.Column>> comsumptionactiondto.actiondescription;
ClassDiagram.Attribut>> UsagePoolDTO.default_precedence:Integer =>=>=> RelationalSchema.Column>> usagepooldto.default_precedence;
ClassDiagram.Attribut>> UsagePoolDTO.id:int =>=>=> RelationalSchema.Column>> usagepooldto.id PRIMARY KEY;
ClassDiagram.Attribut>> UsagePoolDTO.quantity:BigDecimal =>=>=> RelationalSchema.Column>> usagepooldto.quantity;
ClassDiagram.Attribut>> UsagePoolDTO.precedence:Integer =>=>=> RelationalSchema.Column>> usagepooldto.precedence;
ClassDiagram.Attribut>> UsagePoolDTO.cycleperiodunit:String =>=>=> RelationalSchema.Column>> usagepooldto.cycleperiodunit;
ClassDiagram.Attribut>> UsagePoolDTO.cycleperiodvalue:Integer =>=>=> RelationalSchema.Column>> usagepooldto.cycleperiodvalue;
ClassDiagram.Attribut>> UsagePoolDTO.usagepoolresetvalue:UsagePoolResetValueEnum =>=>=> RelationalSchema.Column>> usagepooldto.usagepoolresetvalue;
ClassDiagram.Attribut>> UsagePoolDTO.versionnum:int =>=>=> RelationalSchema.Column>> usagepooldto.versionnum;
ClassDiagram.Attribut>> UsagePoolDTO.created:Date =>=>=> RelationalSchema.Column>> usagepooldto.created;
ClassDiagram.Attribut>> UsagePoolDTO.attributes:SortedMap<String,String> =>=>=> RelationalSchema.Column>> usagepooldto.attributes;
ClassDiagram.Attribut>> UsagePoolConsumptionLogDTO.id:int =>=>=> RelationalSchema.Column>> usagepoolconsumptionlogdto.id PRIMARY KEY;
ClassDiagram.Attribut>> UsagePoolConsumptionLogDTO.oldquantity:BigDecimal =>=>=> RelationalSchema.Column>> usagepoolconsumptionlogdto.oldquantity;
ClassDiagram.Attribut>> UsagePoolConsumptionLogDTO.newquantity:BigDecimal =>=>=> RelationalSchema.Column>> usagepoolconsumptionlogdto.newquantity;
ClassDiagram.Attribut>> UsagePoolConsumptionLogDTO.percentageconsumption:BigDecimal =>=>=> RelationalSchema.Column>> usagepoolconsumptionlogdto.percentageconsumption;
ClassDiagram.Attribut>> UsagePoolConsumptionLogDTO.consumption:Date =>=>=> RelationalSchema.Column>> usagepoolconsumptionlogdto.consumption;
ClassDiagram.Attribut>> UsagePoolConsumptionLogDTO.actionexecuted:String =>=>=> RelationalSchema.Column>> usagepoolconsumptionlogdto.actionexecuted;
ClassDiagram.Attribut>> UsagePoolConsumptionLogDTO.versionnum:int =>=>=> RelationalSchema.Column>> usagepoolconsumptionlogdto.versionnum;
ClassDiagram.Attribut>> UsagePoolConsumptionActionDTO.id:Integer =>=>=> RelationalSchema.Column>> usagepoolconsumptionactiondto.id PRIMARY KEY;
ClassDiagram.Attribut>> UsagePoolConsumptionActionDTO.percentage:Integer =>=>=> RelationalSchema.Column>> usagepoolconsumptionactiondto.percentage;
ClassDiagram.Attribut>> UsagePoolConsumptionActionDTO.notificationid:Integer =>=>=> RelationalSchema.Column>> usagepoolconsumptionactiondto.notificationid;
ClassDiagram.Attribut>> UsagePoolConsumptionActionDTO.mediumtype:String =>=>=> RelationalSchema.Column>> usagepoolconsumptionactiondto.mediumtype;
ClassDiagram.Attribut>> UsagePoolConsumptionActionDTO.type:String =>=>=> RelationalSchema.Column>> usagepoolconsumptionactiondto.type;
ClassDiagram.Attribut>> UsagePoolConsumptionActionDTO.productid:Integer =>=>=> RelationalSchema.Column>> usagepoolconsumptionactiondto.productid;
ClassDiagram.Attribut>> OrderProcessDTO.id:int =>=>=> RelationalSchema.Column>> orderprocessdto.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderProcessDTO.GeneratedName:BillingProcessDTO =>=>=> RelationalSchema.Column>> orderprocessdto.GeneratedName;
ClassDiagram.Attribut>> OrderProcessDTO.GeneratedName:OrderDTO =>=>=> RelationalSchema.Column>> orderprocessdto.GeneratedName;
ClassDiagram.Attribut>> OrderProcessDTO.GeneratedName:InvoiceDTO =>=>=> RelationalSchema.Column>> orderprocessdto.GeneratedName;
ClassDiagram.Attribut>> OrderProcessDTO.periodsincluded:Integer =>=>=> RelationalSchema.Column>> orderprocessdto.periodsincluded;
ClassDiagram.Attribut>> OrderProcessDTO.periodstart:Date =>=>=> RelationalSchema.Column>> orderprocessdto.periodstart;
ClassDiagram.Attribut>> OrderProcessDTO.periodend:Date =>=>=> RelationalSchema.Column>> orderprocessdto.periodend;
ClassDiagram.Attribut>> OrderProcessDTO.isreview:int =>=>=> RelationalSchema.Column>> orderprocessdto.isreview;
ClassDiagram.Attribut>> OrderProcessDTO.origin:Integer =>=>=> RelationalSchema.Column>> orderprocessdto.origin;
ClassDiagram.Attribut>> OrderProcessDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> orderprocessdto.versionnum;
ClassDiagram.Attribut>> OrderChangeTypeDTO.id:Integer =>=>=> RelationalSchema.Column>> orderchangetypedto.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderChangeTypeDTO.name:String =>=>=> RelationalSchema.Column>> orderchangetypedto.name;
ClassDiagram.Attribut>> OrderChangeTypeDTO.defaulttype:boolean =>=>=> RelationalSchema.Column>> orderchangetypedto.defaulttype;
ClassDiagram.Attribut>> OrderChangeTypeDTO.alloworderstatuschange:boolean =>=>=> RelationalSchema.Column>> orderchangetypedto.alloworderstatuschange;
ClassDiagram.Attribut>> OrderChangeTypeDTO.optlock:int =>=>=> RelationalSchema.Column>> orderchangetypedto.optlock;
ClassDiagram.Attribut>> OrderLineUsagePoolDTO.id:int =>=>=> RelationalSchema.Column>> orderlineusagepooldto.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderLineUsagePoolDTO.quantity:BigDecimal =>=>=> RelationalSchema.Column>> orderlineusagepooldto.quantity;
ClassDiagram.Attribut>> OrderLineUsagePoolDTO.istouched:boolean =>=>=> RelationalSchema.Column>> orderlineusagepooldto.istouched;
ClassDiagram.Attribut>> OrderStatusDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> orderstatusdto.log;
ClassDiagram.Attribut>> OrderStatusDTO.id:int =>=>=> RelationalSchema.Column>> orderstatusdto.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderStatusDTO.GeneratedName:OrderStatusFlag =>=>=> RelationalSchema.Column>> orderstatusdto.GeneratedName;
ClassDiagram.Attribut>> OrderBillingTypeDTO.id:int =>=>=> RelationalSchema.Column>> orderbillingtypedto.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderBillingTypeDTO.orderdtos:Set<OrderDTO> =>=>=> RelationalSchema.Column>> orderbillingtypedto.orderdtos;
ClassDiagram.Attribut>> OrderChangeDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> orderchangedto.log;
ClassDiagram.Attribut>> OrderChangeDTO.id:Integer =>=>=> RelationalSchema.Column>> orderchangedto.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderChangeDTO.quantity:BigDecimal =>=>=> RelationalSchema.Column>> orderchangedto.quantity;
ClassDiagram.Attribut>> OrderChangeDTO.price:BigDecimal =>=>=> RelationalSchema.Column>> orderchangedto.price;
ClassDiagram.Attribut>> OrderChangeDTO.description:String =>=>=> RelationalSchema.Column>> orderchangedto.description;
ClassDiagram.Attribut>> OrderChangeDTO.useitem:Integer =>=>=> RelationalSchema.Column>> orderchangedto.useitem;
ClassDiagram.Attribut>> OrderChangeDTO.createtime:Date =>=>=> RelationalSchema.Column>> orderchangedto.createtime;
ClassDiagram.Attribut>> OrderChangeDTO.start:Date =>=>=> RelationalSchema.Column>> orderchangedto.start;
ClassDiagram.Attribut>> OrderChangeDTO.application:Date =>=>=> RelationalSchema.Column>> orderchangedto.application;
ClassDiagram.Attribut>> OrderChangeDTO.errormessage:String =>=>=> RelationalSchema.Column>> orderchangedto.errormessage;
ClassDiagram.Attribut>> OrderChangeDTO.errorcodes:String =>=>=> RelationalSchema.Column>> orderchangedto.errorcodes;
ClassDiagram.Attribut>> OrderChangeDTO.optlock:int =>=>=> RelationalSchema.Column>> orderchangedto.optlock;
ClassDiagram.Attribut>> OrderChangeDTO.appliedmanually:Integer =>=>=> RelationalSchema.Column>> orderchangedto.appliedmanually;
ClassDiagram.Attribut>> OrderChangeDTO.removal:Integer =>=>=> RelationalSchema.Column>> orderchangedto.removal;
ClassDiagram.Attribut>> OrderChangeDTO.nextbillable:Date =>=>=> RelationalSchema.Column>> orderchangedto.nextbillable;
ClassDiagram.Attribut>> OrderChangeDTO.end:Date =>=>=> RelationalSchema.Column>> orderchangedto.end;
ClassDiagram.Attribut>> OrderChangeDTO.//non-persistedfields//thisfieldfilledaftercreationoforderlineduringchangeapplylinecreated:OrderLineDTO =>=>=> RelationalSchema.Column>> orderchangedto.//non-persistedfields//thisfieldfilledaftercreationoforderlineduringchangeapplylinecreated;
ClassDiagram.Attribut>> OrderChangeDTO.istouched:boolean =>=>=> RelationalSchema.Column>> orderchangedto.istouched;
ClassDiagram.Attribut>> OrderChangeDTO.ispercentage:boolean =>=>=> RelationalSchema.Column>> orderchangedto.ispercentage;
ClassDiagram.Attribut>> OrderChangePlanItemDTO.id:Integer =>=>=> RelationalSchema.Column>> orderchangeplanitemdto.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderChangePlanItemDTO.optlock:int =>=>=> RelationalSchema.Column>> orderchangeplanitemdto.optlock;
ClassDiagram.Attribut>> OrderChangePlanItemDTO.description:String =>=>=> RelationalSchema.Column>> orderchangeplanitemdto.description;
ClassDiagram.Attribut>> OrderLineDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> orderlinedto.log;
ClassDiagram.Attribut>> OrderLineDTO.id:int =>=>=> RelationalSchema.Column>> orderlinedto.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderLineDTO.GeneratedName:OrderLineTypeDTO =>=>=> RelationalSchema.Column>> orderlinedto.GeneratedName;
ClassDiagram.Attribut>> OrderLineDTO.GeneratedName:OrderDTO =>=>=> RelationalSchema.Column>> orderlinedto.GeneratedName;
ClassDiagram.Attribut>> OrderLineDTO.amount:BigDecimal =>=>=> RelationalSchema.Column>> orderlinedto.amount;
ClassDiagram.Attribut>> OrderLineDTO.quantity:BigDecimal =>=>=> RelationalSchema.Column>> orderlinedto.quantity;
ClassDiagram.Attribut>> OrderLineDTO.price:BigDecimal =>=>=> RelationalSchema.Column>> orderlinedto.price;
ClassDiagram.Attribut>> OrderLineDTO.createtime:Date =>=>=> RelationalSchema.Column>> orderlinedto.createtime;
ClassDiagram.Attribut>> OrderLineDTO.deleted:int =>=>=> RelationalSchema.Column>> orderlinedto.deleted;
ClassDiagram.Attribut>> OrderLineDTO.useitem:Boolean =>=>=> RelationalSchema.Column>> orderlinedto.useitem;
ClassDiagram.Attribut>> OrderLineDTO.description:String =>=>=> RelationalSchema.Column>> orderlinedto.description;
ClassDiagram.Attribut>> OrderLineDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> orderlinedto.versionnum;
ClassDiagram.Attribut>> OrderLineDTO.editable:Boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrderLineDTO.//provisioningfieldsprovisioningstatus:ProvisioningStatusDTO =>=>=> RelationalSchema.Column>> orderlinedto.//provisioningfieldsprovisioningstatus;
ClassDiagram.Attribut>> OrderLineDTO.provisioningrequestid:String =>=>=> RelationalSchema.Column>> orderlinedto.provisioningrequestid;
ClassDiagram.Attribut>> OrderLineDTO.sipuri:String =>=>=> RelationalSchema.Column>> orderlinedto.sipuri;
ClassDiagram.Attribut>> OrderLineDTO.start:Date =>=>=> RelationalSchema.Column>> orderlinedto.start;
ClassDiagram.Attribut>> OrderLineDTO.end:Date =>=>=> RelationalSchema.Column>> orderlinedto.end;
ClassDiagram.Attribut>> OrderLineDTO.//otherfields,non-persistentpricestr:String =>=>=> RelationalSchema.Column>> orderlinedto.//otherfields,non-persistentpricestr;
ClassDiagram.Attribut>> OrderLineDTO.totalreadonly:Boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrderLineDTO.provisioningstatusstr:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrderLineDTO.orderlineplanitems:OrderLinePlanItemDTOEx =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrderLineDTO.istouched:boolean =>=>=> RelationalSchema.Column>> orderlinedto.istouched;
ClassDiagram.Attribut>> OrderLineDTO.mediated:boolean =>=>=> RelationalSchema.Column>> orderlinedto.mediated;
ClassDiagram.Attribut>> OrderLineDTO.mediatedquantity:BigDecimal =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrderLineDTO.ispercentage:boolean =>=>=> RelationalSchema.Column>> orderlinedto.ispercentage;
ClassDiagram.Attribut>> OrderLineDTO.orderlinechangedtostartdatecomparator:Comparator<OrderChangeDTO> =>=>=> RelationalSchema.Column>> orderlinedto.orderlinechangedtostartdatecomparator;
ClassDiagram.Attribut>> OrderLineDTO.orderlinechangedtocreatedatetimecomparator:Comparator<OrderChangeDTO> =>=>=> RelationalSchema.Column>> orderlinedto.orderlinechangedtocreatedatetimecomparator;
ClassDiagram.Attribut>> OrderPeriodDTO.id:int =>=>=> RelationalSchema.Column>> orderperioddto.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderPeriodDTO.GeneratedName:PeriodUnitDTO =>=>=> RelationalSchema.Column>> orderperioddto.GeneratedName;
ClassDiagram.Attribut>> OrderPeriodDTO.value:Integer =>=>=> RelationalSchema.Column>> orderperioddto.value;
ClassDiagram.Attribut>> OrderPeriodDTO.orderdtos:Set<OrderDTO> =>=>=> RelationalSchema.Column>> orderperioddto.orderdtos;
ClassDiagram.Attribut>> OrderPeriodDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> orderperioddto.versionnum;
ClassDiagram.Attribut>> OrderChangeStatusDTO.GeneratedName:ApplyToOrder =>=>=> RelationalSchema.Column>> orderchangestatusdto.GeneratedName;
ClassDiagram.Attribut>> OrderChangeStatusDTO.deleted:int =>=>=> RelationalSchema.Column>> orderchangestatusdto.deleted;
ClassDiagram.Attribut>> OrderDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> orderdto.log;
ClassDiagram.Attribut>> OrderDTO.id:Integer =>=>=> RelationalSchema.Column>> orderdto.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderDTO.GeneratedName:CurrencyDTO =>=>=> RelationalSchema.Column>> orderdto.GeneratedName;
ClassDiagram.Attribut>> OrderDTO.GeneratedName:OrderStatusDTO =>=>=> RelationalSchema.Column>> orderdto.GeneratedName;
ClassDiagram.Attribut>> OrderDTO.GeneratedName:OrderPeriodDTO =>=>=> RelationalSchema.Column>> orderdto.GeneratedName;
ClassDiagram.Attribut>> OrderDTO.GeneratedName:OrderBillingTypeDTO =>=>=> RelationalSchema.Column>> orderdto.GeneratedName;
ClassDiagram.Attribut>> OrderDTO.primary:OrderDTO =>=>=> RelationalSchema.Column>> orderdto.primary;
ClassDiagram.Attribut>> OrderDTO.activesince:Date =>=>=> RelationalSchema.Column>> orderdto.activesince;
ClassDiagram.Attribut>> OrderDTO.activeuntil:Date =>=>=> RelationalSchema.Column>> orderdto.activeuntil;
ClassDiagram.Attribut>> OrderDTO.deleted:Date =>=>=> RelationalSchema.Column>> orderdto.deleted;
ClassDiagram.Attribut>> OrderDTO.cyclestarts:Date =>=>=> RelationalSchema.Column>> orderdto.cyclestarts;
ClassDiagram.Attribut>> OrderDTO.create:Date =>=>=> RelationalSchema.Column>> orderdto.create;
ClassDiagram.Attribut>> OrderDTO.nextbillableday:Date =>=>=> RelationalSchema.Column>> orderdto.nextbillableday;
ClassDiagram.Attribut>> OrderDTO.deleted:int =>=>=> RelationalSchema.Column>> orderdto.deleted;
ClassDiagram.Attribut>> OrderDTO.notify:Integer =>=>=> RelationalSchema.Column>> orderdto.notify;
ClassDiagram.Attribut>> OrderDTO.lastnotified:Date =>=>=> RelationalSchema.Column>> orderdto.lastnotified;
ClassDiagram.Attribut>> OrderDTO.notificationstep:Integer =>=>=> RelationalSchema.Column>> orderdto.notificationstep;
ClassDiagram.Attribut>> OrderDTO.duedateunitid:Integer =>=>=> RelationalSchema.Column>> orderdto.duedateunitid;
ClassDiagram.Attribut>> OrderDTO.duedatevalue:Integer =>=>=> RelationalSchema.Column>> orderdto.duedatevalue;
ClassDiagram.Attribut>> OrderDTO.dffm:Integer =>=>=> RelationalSchema.Column>> orderdto.dffm;
ClassDiagram.Attribut>> OrderDTO.anticipateperiods:Integer =>=>=> RelationalSchema.Column>> orderdto.anticipateperiods;
ClassDiagram.Attribut>> OrderDTO.owninvoice:Integer =>=>=> RelationalSchema.Column>> orderdto.owninvoice;
ClassDiagram.Attribut>> OrderDTO.//resellerentityorderidresellerorder:Integer =>=>=> RelationalSchema.Column>> orderdto.//resellerentityorderidresellerorder;
ClassDiagram.Attribut>> OrderDTO.notes:String =>=>=> RelationalSchema.Column>> orderdto.notes;
ClassDiagram.Attribut>> OrderDTO.notesininvoice:Integer =>=>=> RelationalSchema.Column>> orderdto.notesininvoice;
ClassDiagram.Attribut>> OrderDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> orderdto.versionnum;
ClassDiagram.Attribut>> OrderDTO.//othernon-persitentfieldsnonreviewperiods:Collection<OrderProcessDTO> =>=>=> RelationalSchema.Column>> orderdto.//othernon-persitentfieldsnonreviewperiods;
ClassDiagram.Attribut>> OrderDTO.invoices:Collection<InvoiceDTO> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrderDTO.billingprocesses:Collection<BillingProcessDTO> =>=>=> RelationalSchema.Column>> orderdto.billingprocesses;
ClassDiagram.Attribut>> OrderDTO.periodstr:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrderDTO.billingtypestr:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrderDTO.statusstr:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrderDTO.timeunitstr:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrderDTO.currencysymbol:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrderDTO.currencyname:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrderDTO.total:BigDecimal =>=>=> RelationalSchema.Column>> orderdto.total;
ClassDiagram.Attribut>> OrderDTO.pricingfields:List<PricingField> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> OrderDTO.cancellationfeetype:String =>=>=> RelationalSchema.Column>> orderdto.cancellationfeetype;
ClassDiagram.Attribut>> OrderDTO.cancellationfee:Integer =>=>=> RelationalSchema.Column>> orderdto.cancellationfee;
ClassDiagram.Attribut>> OrderDTO.cancellationfeepercentage:Integer =>=>=> RelationalSchema.Column>> orderdto.cancellationfeepercentage;
ClassDiagram.Attribut>> OrderDTO.cancellationmaximumfee:Integer =>=>=> RelationalSchema.Column>> orderdto.cancellationmaximumfee;
ClassDiagram.Attribut>> OrderDTO.cancellationminimumperiod:Integer =>=>=> RelationalSchema.Column>> orderdto.cancellationminimumperiod;
ClassDiagram.Attribut>> OrderDTO.istouched:boolean =>=>=> RelationalSchema.Column>> orderdto.istouched;
ClassDiagram.Attribut>> OrderDTO.freeusagequantity:BigDecimal =>=>=> RelationalSchema.Column>> orderdto.freeusagequantity;
ClassDiagram.Attribut>> OrderDTO.prorateflag:Boolean =>=>=> RelationalSchema.Column>> orderdto.prorateflag;
ClassDiagram.Attribut>> OrderLineTypeDTO.id:int =>=>=> RelationalSchema.Column>> orderlinetypedto.id PRIMARY KEY;
ClassDiagram.Attribut>> OrderLineTypeDTO.editable:Integer =>=>=> RelationalSchema.Column>> orderlinetypedto.editable;
ClassDiagram.Attribut>> OrderLineTypeDTO.orderlinedtos:Set<OrderLineDTO> =>=>=> RelationalSchema.Column>> orderlinetypedto.orderlinedtos;
ClassDiagram.Attribut>> ItemDTO.id:int =>=>=> RelationalSchema.Column>> itemdto.id PRIMARY KEY;
ClassDiagram.Attribut>> ItemDTO.internalnumber:String =>=>=> RelationalSchema.Column>> itemdto.internalnumber;
ClassDiagram.Attribut>> ItemDTO.glcode:String =>=>=> RelationalSchema.Column>> itemdto.glcode;
ClassDiagram.Attribut>> ItemDTO.percentage:BigDecimal =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ItemDTO.deleted:Integer =>=>=> RelationalSchema.Column>> itemdto.deleted;
ClassDiagram.Attribut>> ItemDTO.hasdecimals:Integer =>=>=> RelationalSchema.Column>> itemdto.hasdecimals;
ClassDiagram.Attribut>> ItemDTO.plans:Set<PlanDTO> =>=>=> RelationalSchema.Column>> itemdto.plans;
ClassDiagram.Attribut>> ItemDTO.standardavailability:boolean =>=>=> RelationalSchema.Column>> itemdto.standardavailability;
ClassDiagram.Attribut>> ItemDTO.global:boolean =>=>=> RelationalSchema.Column>> itemdto.global;
ClassDiagram.Attribut>> ItemDTO./***iftheitemwilldoassetmanagement.onlypossibleifonelinkeditemtypedtoallowsassetmanagement*/assetmanagementenabled:Integer =>=>=> RelationalSchema.Column>> itemdto./***iftheitemwilldoassetmanagement.onlypossibleifonelinkeditemtypedtoallowsassetmanagement*/assetmanagementenabled;
ClassDiagram.Attribut>> ItemDTO.versionnum:int =>=>=> RelationalSchema.Column>> itemdto.versionnum;
ClassDiagram.Attribut>> ItemDTO.types:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ItemDTO.excludedtypeids:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ItemDTO.accounttypeids:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ItemDTO.dependencyids:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ItemDTO.childentityids:List<Integer> =>=>=> RelationalSchema.Column>> itemdto.childentityids;
ClassDiagram.Attribut>> ItemDTO.parentandchildids:List<Integer> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ItemDTO.//forrules'contains'operatorstrtypes:Collection<String> =>=>=> RelationalSchema.Column>> itemdto.//forrules'contains'operatorstrtypes;
ClassDiagram.Attribut>> ItemDTO.promocode:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ItemDTO.currencyid:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ItemDTO.price:BigDecimal =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ItemDTO.orderlinetypeid:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ItemDTO.pricemodelcompanyid:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ItemDTO.activesince:Date =>=>=> RelationalSchema.Column>> itemdto.activesince;
ClassDiagram.Attribut>> ItemDTO.activeuntil:Date =>=>=> RelationalSchema.Column>> itemdto.activeuntil;
ClassDiagram.Attribut>> ItemDTO.standardpartnerpercentage:BigDecimal =>=>=> RelationalSchema.Column>> itemdto.standardpartnerpercentage;
ClassDiagram.Attribut>> ItemDTO.masterpartnerpercentage:BigDecimal =>=>=> RelationalSchema.Column>> itemdto.masterpartnerpercentage;
ClassDiagram.Attribut>> ItemDTO.ispercentage:boolean =>=>=> RelationalSchema.Column>> itemdto.ispercentage;
ClassDiagram.Attribut>> ItemDTO.reservationduration:Integer =>=>=> RelationalSchema.Column>> itemdto.reservationduration;
ClassDiagram.Attribut>> ItemDTO.isplan:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> PlanDTO.id:Integer =>=>=> RelationalSchema.Column>> plandto.id PRIMARY KEY;
ClassDiagram.Attribut>> PlanDTO.//plansubscriptionitemitem:ItemDTO =>=>=> RelationalSchema.Column>> plandto.//plansubscriptionitemitem;
ClassDiagram.Attribut>> PlanDTO.description:String =>=>=> RelationalSchema.Column>> plandto.description;
ClassDiagram.Attribut>> PlanDTO.editable:int =>=>=> RelationalSchema.Column>> plandto.editable;
ClassDiagram.Attribut>> PlanDTO.parentplan:PlanDTO =>=>=> RelationalSchema.Column>> plandto.parentplan;
ClassDiagram.Attribut>> PlanDTO.childplans:Set<PlanDTO> =>=>=> RelationalSchema.Column>> plandto.childplans;
ClassDiagram.Attribut>> ItemTypeDTO.id:int =>=>=> RelationalSchema.Column>> itemtypedto.id PRIMARY KEY;
ClassDiagram.Attribut>> ItemTypeDTO.description:String =>=>=> RelationalSchema.Column>> itemtypedto.description;
ClassDiagram.Attribut>> ItemTypeDTO.orderlinetypeid:int =>=>=> RelationalSchema.Column>> itemtypedto.orderlinetypeid;
ClassDiagram.Attribut>> ItemTypeDTO.internal:boolean =>=>=> RelationalSchema.Column>> itemtypedto.internal;
ClassDiagram.Attribut>> ItemTypeDTO.global:boolean =>=>=> RelationalSchema.Column>> itemtypedto.global;
ClassDiagram.Attribut>> ItemTypeDTO.allowassetmanagement:Integer =>=>=> RelationalSchema.Column>> itemtypedto.allowassetmanagement;
ClassDiagram.Attribut>> ItemTypeDTO.assetidentifierlabel:String =>=>=> RelationalSchema.Column>> itemtypedto.assetidentifierlabel;
ClassDiagram.Attribut>> ItemTypeDTO.versionnum:int =>=>=> RelationalSchema.Column>> itemtypedto.versionnum;
ClassDiagram.Attribut>> ItemTypeDTO.oneperorder:boolean =>=>=> RelationalSchema.Column>> itemtypedto.oneperorder;
ClassDiagram.Attribut>> ItemTypeDTO.onepercustomer:boolean =>=>=> RelationalSchema.Column>> itemtypedto.onepercustomer;
ClassDiagram.Attribut>> AssetReservationDTO.id:int =>=>=> RelationalSchema.Column>> assetreservationdto.id PRIMARY KEY;
ClassDiagram.Attribut>> AssetReservationDTO.start:Date =>=>=> RelationalSchema.Column>> assetreservationdto.start;
ClassDiagram.Attribut>> AssetReservationDTO.end:Date =>=>=> RelationalSchema.Column>> assetreservationdto.end;
ClassDiagram.Attribut>> AssetReservationDTO.versionnum:int =>=>=> RelationalSchema.Column>> assetreservationdto.versionnum;
ClassDiagram.Attribut>> EntityItemPrice./***/serialversionuid:long =>=>=> RelationalSchema.Column>> entityitemprice./***/serialversionuid;
ClassDiagram.Attribut>> EntityItemPrice.id:int =>=>=> RelationalSchema.Column>> entityitemprice.id PRIMARY KEY;
ClassDiagram.Attribut>> AssetStatusDTO.id:int =>=>=> RelationalSchema.Column>> assetstatusdto.id PRIMARY KEY;
ClassDiagram.Attribut>> AssetStatusDTO.isdefault:int =>=>=> RelationalSchema.Column>> assetstatusdto.isdefault;
ClassDiagram.Attribut>> AssetStatusDTO.isordersaved:int =>=>=> RelationalSchema.Column>> assetstatusdto.isordersaved;
ClassDiagram.Attribut>> AssetStatusDTO.isavailable:int =>=>=> RelationalSchema.Column>> assetstatusdto.isavailable;
ClassDiagram.Attribut>> AssetStatusDTO.isernal:int =>=>=> RelationalSchema.Column>> assetstatusdto.isernal;
ClassDiagram.Attribut>> AssetStatusDTO.versionnum:int =>=>=> RelationalSchema.Column>> assetstatusdto.versionnum;
ClassDiagram.Attribut>> AssetStatusDTO.deleted:int =>=>=> RelationalSchema.Column>> assetstatusdto.deleted;
ClassDiagram.Attribut>> AssetAssignmentDTO.id:int =>=>=> RelationalSchema.Column>> assetassignmentdto.id PRIMARY KEY;
ClassDiagram.Attribut>> AssetAssignmentDTO.starttime:Date =>=>=> RelationalSchema.Column>> assetassignmentdto.starttime;
ClassDiagram.Attribut>> AssetAssignmentDTO.endtime:Date =>=>=> RelationalSchema.Column>> assetassignmentdto.endtime;
ClassDiagram.Attribut>> ItemDependencyDTO.id:int =>=>=> RelationalSchema.Column>> itemdependencydto.id PRIMARY KEY;
ClassDiagram.Attribut>> ItemDependencyDTO.minimum:Integer =>=>=> RelationalSchema.Column>> itemdependencydto.minimum;
ClassDiagram.Attribut>> ItemDependencyDTO.maximum:Integer =>=>=> RelationalSchema.Column>> itemdependencydto.maximum;
ClassDiagram.Attribut>> PlanItemDTO.default_precedence:Integer =>=>=> RelationalSchema.Column>> planitemdto.default_precedence;
ClassDiagram.Attribut>> PlanItemDTO.id:Integer =>=>=> RelationalSchema.Column>> planitemdto.id PRIMARY KEY;
ClassDiagram.Attribut>> PlanItemDTO.//affecteditemitem:ItemDTO =>=>=> RelationalSchema.Column>> planitemdto.//affecteditemitem;
ClassDiagram.Attribut>> PlanItemDTO.precedence:Integer =>=>=> RelationalSchema.Column>> planitemdto.precedence;
ClassDiagram.Attribut>> AssetDTO.id:int =>=>=> RelationalSchema.Column>> assetdto.id PRIMARY KEY;
ClassDiagram.Attribut>> AssetDTO.//uniqueperitemtypedtoidentifier:String =>=>=> RelationalSchema.Column>> assetdto.//uniqueperitemtypedtoidentifier;
ClassDiagram.Attribut>> AssetDTO.deleted:int =>=>=> RelationalSchema.Column>> assetdto.deleted;
ClassDiagram.Attribut>> AssetDTO.versionnum:int =>=>=> RelationalSchema.Column>> assetdto.versionnum;
ClassDiagram.Attribut>> AssetDTO.createtime:Date =>=>=> RelationalSchema.Column>> assetdto.createtime;
ClassDiagram.Attribut>> AssetDTO.notes:String =>=>=> RelationalSchema.Column>> assetdto.notes;
ClassDiagram.Attribut>> AssetDTO./***canonlycontainassetsisagroup*/containedassets:Set<AssetDTO> =>=>=> RelationalSchema.Column>> assetdto./***canonlycontainassetsisagroup*/containedassets;
ClassDiagram.Attribut>> AssetDTO./***parentgroup*/group:AssetDTO =>=>=> RelationalSchema.Column>> assetdto./***parentgroup*/group;
ClassDiagram.Attribut>> AssetDTO.//transientpropertiesprevorderline:OrderLineDTO =>=>=> RelationalSchema.Column>> assetdto.//transientpropertiesprevorderline;
ClassDiagram.Attribut>> AssetDTO.unlinkedfromline:boolean =>=>=> RelationalSchema.Column>> assetdto.unlinkedfromline;
ClassDiagram.Attribut>> AssetDTO.istouched:boolean =>=>=> RelationalSchema.Column>> assetdto.istouched;
ClassDiagram.Attribut>> AssetDTO.global:boolean =>=>=> RelationalSchema.Column>> assetdto.global;
ClassDiagram.Attribut>> AssetDTO.childentityids:List<Integer> =>=>=> RelationalSchema.Column>> assetdto.childentityids;
ClassDiagram.Attribut>> AssetDTO.isreserved:boolean =>=>=> RelationalSchema.Column>> assetdto.isreserved;
ClassDiagram.Attribut>> PlanItemBundleDTO.id:Integer =>=>=> RelationalSchema.Column>> planitembundledto.id PRIMARY KEY;
ClassDiagram.Attribut>> PlanItemBundleDTO.quantity:BigDecimal =>=>=> RelationalSchema.Column>> planitembundledto.quantity;
ClassDiagram.Attribut>> PlanItemBundleDTO.period:OrderPeriodDTO =>=>=> RelationalSchema.Column>> planitembundledto.period;
ClassDiagram.Attribut>> PlanItemBundleDTO.target:Customer =>=>=> RelationalSchema.Column>> planitembundledto.target;
ClassDiagram.Attribut>> PlanItemBundleDTO.addifexists:boolean =>=>=> RelationalSchema.Column>> planitembundledto.addifexists;
ClassDiagram.Attribut>> AssetTransitionDTO.id:int =>=>=> RelationalSchema.Column>> assettransitiondto.id PRIMARY KEY;
ClassDiagram.Attribut>> AssetTransitionDTO.createtime:Date =>=>=> RelationalSchema.Column>> assettransitiondto.createtime;
ClassDiagram.Attribut>> AssetTransitionDTO./***usertheassetisassignto(throughorderlinelinkedtotheasset)*/assignedto:UserDTO =>=>=> RelationalSchema.Column>> assettransitiondto./***usertheassetisassignto(throughorderlinelinkedtotheasset)*/assignedto;
ClassDiagram.Attribut>> AssetTransitionDTO./***userwhomadethechange*/user:UserDTO =>=>=> RelationalSchema.Column>> assettransitiondto./***userwhomadethechange*/user;
ClassDiagram.Attribut>> CustomerEnrollmentDTO.log:FormatLogger =>=>=> RelationalSchema.Column>> customerenrollmentdto.log;
ClassDiagram.Attribut>> CustomerEnrollmentDTO.id:int =>=>=> RelationalSchema.Column>> customerenrollmentdto.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerEnrollmentDTO.versionnum:int =>=>=> RelationalSchema.Column>> customerenrollmentdto.versionnum;
ClassDiagram.Attribut>> CustomerEnrollmentDTO.//useridofcustomercreatedbycustomerenrollmentuser:UserDTO =>=>=> RelationalSchema.Column>> customerenrollmentdto.//useridofcustomercreatedbycustomerenrollmentuser;
ClassDiagram.Attribut>> CustomerEnrollmentDTO.deleted:int =>=>=> RelationalSchema.Column>> customerenrollmentdto.deleted;
ClassDiagram.Attribut>> CustomerEnrollmentDTO.//thisisaenumclass.detailsarementionedinnextpoint.status:CustomerEnrollmentStatus =>=>=> RelationalSchema.Column>> customerenrollmentdto.//thisisaenumclass.detailsarementionedinnextpoint.status;
ClassDiagram.Attribut>> CustomerEnrollmentDTO.createtime:Date =>=>=> RelationalSchema.Column>> customerenrollmentdto.createtime;
ClassDiagram.Attribut>> CustomerEnrollmentDTO.message:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CustomerEnrollmentDTO.bulkenrollment:Boolean =>=>=> RelationalSchema.Column>> customerenrollmentdto.bulkenrollment;
ClassDiagram.Attribut>> CustomerEnrollmentDTO.brokerid:String =>=>=> RelationalSchema.Column>> customerenrollmentdto.brokerid;
ClassDiagram.Attribut>> CustomerEnrollmentCommentDTO.id:int =>=>=> RelationalSchema.Column>> customerenrollmentcommentdto.id PRIMARY KEY;
ClassDiagram.Attribut>> CustomerEnrollmentCommentDTO.comment:String =>=>=> RelationalSchema.Column>> customerenrollmentcommentdto.comment;
ClassDiagram.Attribut>> CustomerEnrollmentCommentDTO.creationtime:Date =>=>=> RelationalSchema.Column>> customerenrollmentcommentdto.creationtime;
ClassDiagram.Attribut>> MediationConfiguration.id:Integer =>=>=> RelationalSchema.Column>> mediationconfiguration.id PRIMARY KEY;
ClassDiagram.Attribut>> MediationConfiguration.entityid:Integer =>=>=> RelationalSchema.Column>> mediationconfiguration.entityid;
ClassDiagram.Attribut>> MediationConfiguration.localinputdirectory:String =>=>=> RelationalSchema.Column>> mediationconfiguration.localinputdirectory;
ClassDiagram.Attribut>> MediationConfiguration.name:String =>=>=> RelationalSchema.Column>> mediationconfiguration.name;
ClassDiagram.Attribut>> MediationConfiguration.mediationjoblauncher:String =>=>=> RelationalSchema.Column>> mediationconfiguration.mediationjoblauncher;
ClassDiagram.Attribut>> MediationConfiguration.ordervalue:Integer =>=>=> RelationalSchema.Column>> mediationconfiguration.ordervalue;
ClassDiagram.Attribut>> MediationConfiguration.createtime:Date =>=>=> RelationalSchema.Column>> mediationconfiguration.createtime;
ClassDiagram.Attribut>> MediationConfiguration.versionnum:Integer =>=>=> RelationalSchema.Column>> mediationconfiguration.versionnum;
ClassDiagram.Attribut>> MediationConfiguration.cdrsforrecycle:Integer =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> MediationConfiguration.global:Boolean =>=>=> RelationalSchema.Column>> mediationconfiguration.global;
ClassDiagram.Attribut>> ChargeSessionDTO.serialversionuid:long =>=>=> RelationalSchema.Column>> chargesessiondto.serialversionuid;
ClassDiagram.Attribut>> ChargeSessionDTO.id:int =>=>=> RelationalSchema.Column>> chargesessiondto.id PRIMARY KEY;
ClassDiagram.Attribut>> ChargeSessionDTO.sessionid:String =>=>=> RelationalSchema.Column>> chargesessiondto.sessionid;
ClassDiagram.Attribut>> ChargeSessionDTO.started:Date =>=>=> RelationalSchema.Column>> chargesessiondto.started;
ClassDiagram.Attribut>> ChargeSessionDTO.lastaccessed:Date =>=>=> RelationalSchema.Column>> chargesessiondto.lastaccessed;
ClassDiagram.Attribut>> ChargeSessionDTO.carriedunits:BigDecimal =>=>=> RelationalSchema.Column>> chargesessiondto.carriedunits;
ClassDiagram.Attribut>> ReservedAmountDTO.serialversionuid:long =>=>=> RelationalSchema.Column>> reservedamountdto.serialversionuid;
ClassDiagram.Attribut>> ReservedAmountDTO.id:int =>=>=> RelationalSchema.Column>> reservedamountdto.id PRIMARY KEY;
ClassDiagram.Attribut>> ReservedAmountDTO.created:Date =>=>=> RelationalSchema.Column>> reservedamountdto.created;
ClassDiagram.Attribut>> ReservedAmountDTO.amount:BigDecimal =>=>=> RelationalSchema.Column>> reservedamountdto.amount;
ClassDiagram.Attribut>> ReservedAmountDTO.quantity:BigDecimal =>=>=> RelationalSchema.Column>> reservedamountdto.quantity;
ClassDiagram.Attribut>> ReservedAmountDTO.data:String =>=>=> RelationalSchema.Column>> reservedamountdto.data;
ClassDiagram.Attribut>> DiscountLineDTO.id:Integer =>=>=> RelationalSchema.Column>> discountlinedto.id PRIMARY KEY;
ClassDiagram.Attribut>> DiscountLineDTO.order:OrderDTO =>=>=> RelationalSchema.Column>> discountlinedto.order;
ClassDiagram.Attribut>> DiscountLineDTO.//orderlinecreatedbythisdiscountline.discountorderline:OrderLineDTO =>=>=> RelationalSchema.Column>> discountlinedto.//orderlinecreatedbythisdiscountline.discountorderline;
ClassDiagram.Attribut>> DiscountLineDTO.//orderlineamountwhichwillbeusedinproductleveldiscounts.orderlineamount:BigDecimal =>=>=> RelationalSchema.Column>> discountlinedto.//orderlineamountwhichwillbeusedinproductleveldiscounts.orderlineamount;
ClassDiagram.Attribut>> DiscountLineDTO.//descriptionwhichwillbeusedininvoicefordiscountline.description:String =>=>=> RelationalSchema.Column>> discountlinedto.//descriptionwhichwillbeusedininvoicefordiscountline.description;
ClassDiagram.Attribut>> DiscountDTO.id:int =>=>=> RelationalSchema.Column>> discountdto.id PRIMARY KEY;
ClassDiagram.Attribut>> DiscountDTO.code:String =>=>=> RelationalSchema.Column>> discountdto.code;
ClassDiagram.Attribut>> DiscountDTO.type:DiscountStrategyType =>=>=> RelationalSchema.Column>> discountdto.type;
ClassDiagram.Attribut>> DiscountDTO.rate:BigDecimal =>=>=> RelationalSchema.Column>> discountdto.rate;
ClassDiagram.Attribut>> DiscountDTO.start:Date =>=>=> RelationalSchema.Column>> discountdto.start;
ClassDiagram.Attribut>> DiscountDTO.end:Date =>=>=> RelationalSchema.Column>> discountdto.end;
ClassDiagram.Attribut>> DiscountDTO.attributes:SortedMap<String,String> =>=>=> RelationalSchema.Column>> discountdto.attributes;
ClassDiagram.Attribut>> DiscountDTO.lastuptime:Date =>=>=> RelationalSchema.Column>> discountdto.lastuptime;
Many-To-One relationship from ClassDiagram.Class>>NotificationMessageLineDTO  to ClassDiagram.Class>>MessageSection represented by ClassDiagram.Atrribute>>notificationmessagesection;
Many-To-One relationship from ClassDiagram.Class>>NotificationMessageDTO  to ClassDiagram.Class>>NotificationMessageTypeDTO represented by ClassDiagram.Atrribute>>notificationmessagetype;
Many-To-One relationship from ClassDiagram.Class>>NotificationMessageDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
Many-To-One relationship from ClassDiagram.Class>>NotificationMessageDTO  to ClassDiagram.Class>>languagedto represented by ClassDiagram.Atrribute>>language;
One-To-Many relationship from ClassDiagram.Class>>NotificationMessageDTO  to ClassDiagram.Class>>Set<NotificationMessageSectionDTO>;
Many-To-One relationship from ClassDiagram.Class>>NotificationMessageArchLineDTO  to ClassDiagram.Class>>NotificationMessageArchDTO represented by ClassDiagram.Atrribute>>notificationmessagearch;
Many-To-One relationship from ClassDiagram.Class>>NotificationMessageArchDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>baseuser;
One-To-Many relationship from ClassDiagram.Class>>NotificationMessageArchDTO  to ClassDiagram.Class>>Set<NotificationMessageArchLineDTO>;
Many-To-One relationship from ClassDiagram.Class>>NotificationMessageTypeDTO  to ClassDiagram.Class>>notificationcategorydto represented by ClassDiagram.Atrribute>>category;
One-To-Many relationship from ClassDiagram.Class>>NotificationMessageTypeDTO  to ClassDiagram.Class>>Set<NotificationMessageDTO>;
Many-To-One relationship from ClassDiagram.Class>>NotificationMessageSectionDTO  to ClassDiagram.Class>>MessageDTO represented by ClassDiagram.Atrribute>>notificationmessage;
One-To-Many relationship from ClassDiagram.Class>>NotificationMessageSectionDTO  to ClassDiagram.Class>>Set<NotificationMessageLineDTO>;
Many-To-One relationship from ClassDiagram.Class>>EDITypeDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
Many-To-Many relationship between ClassDiagram.Class>>EDITypeDTO  and ClassDiagram.Class>>set<companydto>: edi_type_entity_map(edi_type_id:EDITypeDTO [PK] #FK to EDITypeDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);
One-To-Many relationship from ClassDiagram.Class>>EDITypeDTO  to ClassDiagram.Class>>Set<EDIFileStatusDTO>;
Many-To-One relationship from ClassDiagram.Class>>EDIFileFieldDTO  to ClassDiagram.Class>>EDIFileRecordDTO represented by ClassDiagram.Atrribute>>edifilerecord;
Many-To-One relationship from ClassDiagram.Class>>EDIFileDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
Many-To-One relationship from ClassDiagram.Class>>EDIFileDTO  to ClassDiagram.Class>>EDITypeDTO represented by ClassDiagram.Atrribute>>editype;
One-To-Many relationship from ClassDiagram.Class>>EDIFileDTO  to ClassDiagram.Class>>List<EDIFileRecordDTO>;
Many-To-One relationship from ClassDiagram.Class>>EDIFileDTO  to ClassDiagram.Class>>EDIFileStatusDTO represented by ClassDiagram.Atrribute>>filestatus;
Many-To-One relationship from ClassDiagram.Class>>EDIFileDTO  to ClassDiagram.Class>>EDIFileExceptionCodeDTO represented by ClassDiagram.Atrribute>>exceptioncode;
Many-To-One relationship from ClassDiagram.Class>>EDIFileExceptionCodeDTO  to ClassDiagram.Class>>EDIFileStatusDTO represented by ClassDiagram.Atrribute>>status;
One-To-Many relationship from ClassDiagram.Class>>EDIFileStatusDTO  to ClassDiagram.Class>>List<EDIFileExceptionCodeDTO>;
One-To-Many relationship from ClassDiagram.Class>>EDIFileStatusDTO  to ClassDiagram.Class>>List<EDIFileStatusDTO>;
Many-To-One relationship from ClassDiagram.Class>>EDIFileRecordDTO  to ClassDiagram.Class>>EDIFileDTO represented by ClassDiagram.Atrribute>>edifile;
One-To-Many relationship from ClassDiagram.Class>>EDIFileRecordDTO  to ClassDiagram.Class>>Set<EDIFileFieldDTO>;
One-To-Many relationship from ClassDiagram.Class>>ReportTypeDTO  to ClassDiagram.Class>>Set<ReportDTO>;
Many-To-One relationship from ClassDiagram.Class>>ReportParameterDTO  to ClassDiagram.Class>>ReportDTO represented by ClassDiagram.Atrribute>>report;
Many-To-Many relationship between ClassDiagram.Class>>ReportDTO  and ClassDiagram.Class>>set<companydto>: entity_report_map(report_id:ReportDTO [PK] #FK to ReportDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);
Many-To-One relationship from ClassDiagram.Class>>ReportDTO  to ClassDiagram.Class>>ReportTypeDTO represented by ClassDiagram.Atrribute>>type;
One-To-Many relationship from ClassDiagram.Class>>ReportDTO  to ClassDiagram.Class>>List<ReportParameterDTO<?>>;
Many-To-One relationship from ClassDiagram.Class>>AgeingEntityStepDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
Many-To-One relationship from ClassDiagram.Class>>AgeingEntityStepDTO  to ClassDiagram.Class>>userstatusdto represented by ClassDiagram.Atrribute>>userstatus;
Many-To-One relationship from ClassDiagram.Class>>ProcessRunUserDTO  to ClassDiagram.Class>>processrundto represented by ClassDiagram.Atrribute>>processrun;
Many-To-One relationship from ClassDiagram.Class>>ProcessRunUserDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>ProcessRunTotalPmDTO  to ClassDiagram.Class>>paymentmethoddto represented by ClassDiagram.Atrribute>>paymentmethod;
Many-To-One relationship from ClassDiagram.Class>>ProcessRunTotalPmDTO  to ClassDiagram.Class>>processruntotaldto represented by ClassDiagram.Atrribute>>processruntotal;
One-To-Many relationship from ClassDiagram.Class>>PaperInvoiceBatchDTO  to ClassDiagram.Class>>Set<InvoiceDTO>;
One-To-Many relationship from ClassDiagram.Class>>PeriodUnitDTO  to ClassDiagram.Class>>Set<BillingProcessDTO>;
One-To-Many relationship from ClassDiagram.Class>>PeriodUnitDTO  to ClassDiagram.Class>>Set<BillingProcessConfigurationDTO>;
Many-To-One relationship from ClassDiagram.Class>>BillingProcessConfigurationDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
One-To-One relationship between ClassDiagram.Class>>BillingProcessDTO  to ClassDiagram.Class>>paperinvoicebatchdto represented by ClassDiagram.Atrribute>>paperinvoicebatch;
Many-To-One relationship from ClassDiagram.Class>>BillingProcessDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
One-To-Many relationship from ClassDiagram.Class>>BillingProcessDTO  to ClassDiagram.Class>>Set<OrderProcessDTO>;
One-To-Many relationship from ClassDiagram.Class>>BillingProcessDTO  to ClassDiagram.Class>>Set<InvoiceDTO>;
One-To-Many relationship from ClassDiagram.Class>>BillingProcessDTO  to ClassDiagram.Class>>Set<ProcessRunDTO>;
One-To-Many relationship from ClassDiagram.Class>>BatchProcessInfoDTO  to ClassDiagram.Class>>Set<BillingProcessFailedUserDTO>;
One-To-Many relationship from ClassDiagram.Class>>ProcessRunDTO  to ClassDiagram.Class>>Set<ProcessRunTotalDTO>;
Many-To-One relationship from ClassDiagram.Class>>ProcessRunDTO  to ClassDiagram.Class>>processrunstatusdto represented by ClassDiagram.Atrribute>>status;
Many-To-One relationship from ClassDiagram.Class>>ProcessRunTotalDTO  to ClassDiagram.Class>>processrundto represented by ClassDiagram.Atrribute>>processrun;
One-To-Many relationship from ClassDiagram.Class>>ProcessRunTotalDTO  to ClassDiagram.Class>>Set<ProcessRunTotalPmDTO>;
Many-To-One relationship from ClassDiagram.Class>>PluggableTaskDTO  to ClassDiagram.Class>>pluggabletasktypedto represented by ClassDiagram.Atrribute>>type;
One-To-Many relationship from ClassDiagram.Class>>PluggableTaskDTO  to ClassDiagram.Class>>Collection<PluggableTaskParameterDTO>;
Many-To-One relationship from ClassDiagram.Class>>PluggableTaskParameterDTO  to ClassDiagram.Class>>pluggabletaskdto represented by ClassDiagram.Atrribute>>task;
Many-To-One relationship from ClassDiagram.Class>>PluggableTaskTypeDTO  to ClassDiagram.Class>>pluggabletasktypecategorydto represented by ClassDiagram.Atrribute>>category;
Many-To-One relationship from ClassDiagram.Class>>InvoiceLineDTO  to ClassDiagram.Class>>invoicelinetypedto represented by ClassDiagram.Atrribute>>invoicelinetype;
Many-To-One relationship from ClassDiagram.Class>>InvoiceLineDTO  to ClassDiagram.Class>>itemdto represented by ClassDiagram.Atrribute>>item;
Many-To-One relationship from ClassDiagram.Class>>InvoiceLineDTO  to ClassDiagram.Class>>invoicedto represented by ClassDiagram.Atrribute>>invoice;
Many-To-One relationship from ClassDiagram.Class>>InvoiceLineDTO  to ClassDiagram.Class>>orderdto represented by ClassDiagram.Atrribute>>order;
One-To-Many relationship from ClassDiagram.Class>>InvoiceLineTypeDTO  to ClassDiagram.Class>>Set<InvoiceLineDTO>;
Many-To-One relationship from ClassDiagram.Class>>InvoiceDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>baseuser;
Many-To-One relationship from ClassDiagram.Class>>InvoiceDTO  to ClassDiagram.Class>>invoicedto represented by ClassDiagram.Atrribute>>invoice;
Many-To-One relationship from ClassDiagram.Class>>InvoiceDTO  to ClassDiagram.Class>>paperinvoicebatchdto represented by ClassDiagram.Atrribute>>paperinvoicebatch;
Many-To-One relationship from ClassDiagram.Class>>InvoiceDTO  to ClassDiagram.Class>>invoicestatusdto represented by ClassDiagram.Atrribute>>invoicestatus;
One-To-Many relationship from ClassDiagram.Class>>InvoiceDTO  to ClassDiagram.Class>>Collection<InvoiceLineDTO>;
One-To-Many relationship from ClassDiagram.Class>>InvoiceDTO  to ClassDiagram.Class>>Set<InvoiceDTO>;
One-To-Many relationship from ClassDiagram.Class>>InvoiceDTO  to ClassDiagram.Class>>Set<OrderProcessDTO>;
One-To-Many relationship from ClassDiagram.Class>>InvoiceDTO  to ClassDiagram.Class>>Collection<PaymentInvoiceMapDTO>;
Many-To-Many relationship between ClassDiagram.Class>>InvoiceDeliveryMethodDTO  and ClassDiagram.Class>>set<companydto>: entity_delivery_method_map(method_id:InvoiceDeliveryMethodDTO [PK] #FK to InvoiceDeliveryMethodDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);
One-To-Many relationship from ClassDiagram.Class>>InvoiceDeliveryMethodDTO  to ClassDiagram.Class>>Set<CustomerDTO>;
Many-To-One relationship from ClassDiagram.Class>>InvoiceTemplateVersionDTO  to ClassDiagram.Class>>invoicetemplatedto represented by ClassDiagram.Atrribute>>invoicetemplate;
Many-To-One relationship from ClassDiagram.Class>>InvoiceTemplateFileDTO  to ClassDiagram.Class>>invoicetemplatedto represented by ClassDiagram.Atrribute>>template;
Many-To-One relationship from ClassDiagram.Class>>InvoiceTemplateDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
One-To-Many relationship from ClassDiagram.Class>>InvoiceTemplateDTO  to ClassDiagram.Class>>Set<CustomerDTO>;
One-To-Many relationship from ClassDiagram.Class>>InvoiceTemplateDTO  to ClassDiagram.Class>>Set<InvoiceTemplateVersionDTO>;
Many-To-One relationship from ClassDiagram.Class>>BlacklistDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
One-To-One relationship between ClassDiagram.Class>>BlacklistDTO  to ClassDiagram.Class>>paymentinformationdto represented by ClassDiagram.Atrribute>>creditcard;
One-To-One relationship between ClassDiagram.Class>>BlacklistDTO  to ClassDiagram.Class>>contactdto represented by ClassDiagram.Atrribute>>contact;
Many-To-One relationship from ClassDiagram.Class>>BlacklistDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>user;
One-To-One relationship between ClassDiagram.Class>>BlacklistDTO  to ClassDiagram.Class>>metafieldvalue represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>PaymentTransferDTO  to ClassDiagram.Class>>paymentdto represented by ClassDiagram.Atrribute>>payment;
Many-To-One relationship from ClassDiagram.Class>>PaymentInformationDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>PaymentInformationDTO  to ClassDiagram.Class>>paymentmethodtypedto represented by ClassDiagram.Atrribute>>paymentmethodtype;
One-To-Many relationship from ClassDiagram.Class>>PaymentResultDTO  to ClassDiagram.Class>>Set<PaymentDTO>;
Many-To-One relationship from ClassDiagram.Class>>PaymentAuthorizationDTO  to ClassDiagram.Class>>paymentdto represented by ClassDiagram.Atrribute>>payment;
Many-To-One relationship from ClassDiagram.Class>>PaymentInstrumentInfoDTO  to ClassDiagram.Class>>paymentdto represented by ClassDiagram.Atrribute>>payment;
Many-To-One relationship from ClassDiagram.Class>>PaymentInstrumentInfoDTO  to ClassDiagram.Class>>paymentresultdto represented by ClassDiagram.Atrribute>>result;
Many-To-One relationship from ClassDiagram.Class>>PaymentInstrumentInfoDTO  to ClassDiagram.Class>>paymentmethoddto represented by ClassDiagram.Atrribute>>paymentmethod;
Many-To-One relationship from ClassDiagram.Class>>PaymentInstrumentInfoDTO  to ClassDiagram.Class>>paymentinformationdto represented by ClassDiagram.Atrribute>>paymentinformation;
Many-To-One relationship from ClassDiagram.Class>>PaymentDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>baseuser;
Many-To-One relationship from ClassDiagram.Class>>PaymentDTO  to ClassDiagram.Class>>paymentmethoddto represented by ClassDiagram.Atrribute>>paymentmethod;
Many-To-One relationship from ClassDiagram.Class>>PaymentDTO  to ClassDiagram.Class>>paymentdto represented by ClassDiagram.Atrribute>>payment;
Many-To-One relationship from ClassDiagram.Class>>PaymentDTO  to ClassDiagram.Class>>paymentresultdto represented by ClassDiagram.Atrribute>>paymentresult;
Many-To-One relationship from ClassDiagram.Class>>PaymentDTO  to ClassDiagram.Class>>date represented by ClassDiagram.Atrribute>>payment;
One-To-Many relationship from ClassDiagram.Class>>PaymentDTO  to ClassDiagram.Class>>Set<PaymentInvoiceMapDTO>;
One-To-Many relationship from ClassDiagram.Class>>PaymentDTO  to ClassDiagram.Class>>Set<PaymentAuthorizationDTO>;
One-To-Many relationship from ClassDiagram.Class>>PaymentDTO  to ClassDiagram.Class>>Set<PaymentDTO>;
One-To-Many relationship from ClassDiagram.Class>>PaymentDTO  to ClassDiagram.Class>>Set<PartnerPayout>;
One-To-Many relationship from ClassDiagram.Class>>PaymentDTO  to ClassDiagram.Class>>List<PaymentInstrumentInfoDTO>;
One-To-Many relationship from ClassDiagram.Class>>PaymentDTO  to ClassDiagram.Class>>List<PaymentProvisioningCommandDTO>;
Many-To-One relationship from ClassDiagram.Class>>PaymentDTO  to ClassDiagram.Class>>provisioningstatusdto represented by ClassDiagram.Atrribute>>provisioningstatus;
Many-To-One relationship from ClassDiagram.Class>>PaymentInvoiceMapDTO  to ClassDiagram.Class>>paymentdto represented by ClassDiagram.Atrribute>>payment;
Many-To-One relationship from ClassDiagram.Class>>PaymentInvoiceMapDTO  to ClassDiagram.Class>>invoicedto represented by ClassDiagram.Atrribute>>invoiceentity;
One-To-Many relationship from ClassDiagram.Class>>PaymentMethodTemplateDTO  to ClassDiagram.Class>>Set<MetaField>;
One-To-Many relationship from ClassDiagram.Class>>PaymentMethodDTO  to ClassDiagram.Class>>Set<PaymentDTO>;
One-To-Many relationship from ClassDiagram.Class>>PaymentMethodDTO  to ClassDiagram.Class>>Set<ProcessRunTotalPmDTO>;
Many-To-One relationship from ClassDiagram.Class>>PaymentMethodTypeDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
Many-To-One relationship from ClassDiagram.Class>>PaymentMethodTypeDTO  to ClassDiagram.Class>>paymentmethodtemplatedto represented by ClassDiagram.Atrribute>>paymentmethodtemplate;
One-To-Many relationship from ClassDiagram.Class>>PaymentMethodTypeDTO  to ClassDiagram.Class>>Set<MetaField>;
Many-To-Many relationship between ClassDiagram.Class>>PaymentMethodTypeDTO  and ClassDiagram.Class>>set<accounttypedto>: payment_method_account_type_map(payment_method_id:PaymentMethodTypeDTO [PK] #FK to PaymentMethodTypeDTO,account_type_id:set<accounttypedto> [PK] #FK to set<accounttypedto>);
One-To-Many relationship from ClassDiagram.Class>>EventLogModuleDTO  to ClassDiagram.Class>>Set<EventLogDTO>;
Many-To-One relationship from ClassDiagram.Class>>EventLogDTO  to ClassDiagram.Class>>jbillingtable represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>EventLogDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>baseuser;
Many-To-One relationship from ClassDiagram.Class>>EventLogDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>affecteduser;
Many-To-One relationship from ClassDiagram.Class>>EventLogDTO  to ClassDiagram.Class>>MessageDTO represented by ClassDiagram.Atrribute>>eventlogmessage;
Many-To-One relationship from ClassDiagram.Class>>EventLogDTO  to ClassDiagram.Class>>eventlogmoduledto represented by ClassDiagram.Atrribute>>eventlogmodule;
Many-To-One relationship from ClassDiagram.Class>>EventLogDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
One-To-Many relationship from ClassDiagram.Class>>EventLogMessageDTO  to ClassDiagram.Class>>Set<EventLogDTO>;
One-To-Many relationship from ClassDiagram.Class>>PreferenceTypeDTO  to ClassDiagram.Class>>Set<PreferenceDTO>;
One-To-Many relationship from ClassDiagram.Class>>NotificationCategoryDTO  to ClassDiagram.Class>>Set<NotificationMessageTypeDTO>;
Many-To-One relationship from ClassDiagram.Class>>PreferenceDTO  to ClassDiagram.Class>>preferencetypedto represented by ClassDiagram.Atrribute>>preferencetype;
Many-To-One relationship from ClassDiagram.Class>>OrderProvisioningCommandDTO  to ClassDiagram.Class>>orderdto represented by ClassDiagram.Atrribute>>order;
Many-To-One relationship from ClassDiagram.Class>>ProvisioningCommandDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
One-To-Many relationship from ClassDiagram.Class>>ProvisioningCommandDTO  to ClassDiagram.Class>>List<ProvisioningRequestDTO>;
Many-To-One relationship from ClassDiagram.Class>>OrderLineProvisioningCommandDTO  to ClassDiagram.Class>>orderchangedto represented by ClassDiagram.Atrribute>>orderchange;
Many-To-One relationship from ClassDiagram.Class>>PaymentProvisioningCommandDTO  to ClassDiagram.Class>>paymentdto represented by ClassDiagram.Atrribute>>payment;
Many-To-One relationship from ClassDiagram.Class>>AssetProvisioningCommandDTO  to ClassDiagram.Class>>assetdto represented by ClassDiagram.Atrribute>>asset;
Many-To-One relationship from ClassDiagram.Class>>UserPasswordDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>user;
One-To-One relationship between ClassDiagram.Class>>CustomerDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>baseuser;
Many-To-One relationship from ClassDiagram.Class>>CustomerDTO  to ClassDiagram.Class>>invoicedeliverymethoddto represented by ClassDiagram.Atrribute>>invoicedeliverymethod;
Many-To-Many relationship between ClassDiagram.Class>>CustomerDTO  and ClassDiagram.Class>>set<partnerdto>: customer_partner_map(customer_id:CustomerDTO [PK] #FK to CustomerDTO,partner_id:set<partnerdto> [PK] #FK to set<partnerdto>);
Many-To-One relationship from ClassDiagram.Class>>CustomerDTO  to ClassDiagram.Class>>customerdto represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>CustomerDTO  to ClassDiagram.Class>>Set<CustomerDTO>;
One-To-Many relationship from ClassDiagram.Class>>CustomerDTO  to ClassDiagram.Class>>Set<CustomerNoteDTO>;
One-To-Many relationship from ClassDiagram.Class>>CustomerDTO  to ClassDiagram.Class>>Set<UserCodeCustomerLinkDTO>;
One-To-Many relationship from ClassDiagram.Class>>CustomerDTO  to ClassDiagram.Class>>List<CustomerUsagePoolDTO>;
Many-To-One relationship from ClassDiagram.Class>>CustomerDTO  to ClassDiagram.Class>>accounttypedto represented by ClassDiagram.Atrribute>>accounttype;
Many-To-One relationship from ClassDiagram.Class>>CustomerDTO  to ClassDiagram.Class>>invoicetemplatedto represented by ClassDiagram.Atrribute>>invoicetemplate;
One-To-Many relationship from ClassDiagram.Class>>CustomerDTO  to ClassDiagram.Class>>Set<CustomerAccountInfoTypeMetaField>;
One-To-One relationship between ClassDiagram.Class>>UserStatusDTO  to ClassDiagram.Class>>ageingentitystepdto represented by ClassDiagram.Atrribute>>ageingentitystep;
One-To-Many relationship from ClassDiagram.Class>>UserStatusDTO  to ClassDiagram.Class>>Set<UserDTO>;
Many-To-One relationship from ClassDiagram.Class>>UserCodeDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>user;
One-To-Many relationship from ClassDiagram.Class>>UserCodeDTO  to ClassDiagram.Class>>Set<UserCodeLinkDTO>;
Many-To-One relationship from ClassDiagram.Class>>ResetPasswordCodeDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>CustomerAccountInfoTypeMetaField  to ClassDiagram.Class>>customerdto represented by ClassDiagram.Atrribute>>customer;
Many-To-One relationship from ClassDiagram.Class>>CustomerAccountInfoTypeMetaField  to ClassDiagram.Class>>accountinformationtypedto represented by ClassDiagram.Atrribute>>accountinfotype;
Many-To-One relationship from ClassDiagram.Class>>CustomerAccountInfoTypeMetaField  to ClassDiagram.Class>>metafieldvalue represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>UserDTO  and ClassDiagram.Class>>set<roledto>: user_role_map(user_id:UserDTO [PK] #FK to UserDTO,role_id:set<roledto> [PK] #FK to set<roledto>);
One-To-Many relationship from ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>Set<PermissionUserDTO>;
Many-To-One relationship from ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
Many-To-One relationship from ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>subscriberstatusdto represented by ClassDiagram.Atrribute>>subscriberstatus;
Many-To-One relationship from ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>userstatusdto represented by ClassDiagram.Atrribute>>userstatus;
Many-To-One relationship from ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>languagedto represented by ClassDiagram.Atrribute>>language;
One-To-One relationship between ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>customerdto represented by ClassDiagram.Atrribute>>customer;
One-To-Many relationship from ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>Set<PaymentDTO>;
One-To-Many relationship from ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>Set<OrderDTO>;
One-To-Many relationship from ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>Set<OrderDTO>;
One-To-Many relationship from ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>Set<NotificationMessageArchDTO>;
One-To-Many relationship from ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>Set<EventLogDTO>;
One-To-Many relationship from ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>Set<InvoiceDTO>;
One-To-Many relationship from ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>Set<CustomerPriceDTO>;
One-To-Many relationship from ClassDiagram.Class>>UserDTO  to ClassDiagram.Class>>Set<BillingProcessFailedUserDTO>;
Many-To-One relationship from ClassDiagram.Class>>CompanyDTO  to ClassDiagram.Class>>languagedto represented by ClassDiagram.Atrribute>>language;
Many-To-One relationship from ClassDiagram.Class>>CompanyDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>parent;
One-To-One relationship between ClassDiagram.Class>>CompanyDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>reseller;
One-To-Many relationship from ClassDiagram.Class>>CompanyDTO  to ClassDiagram.Class>>Set<AgeingEntityStepDTO>;
One-To-Many relationship from ClassDiagram.Class>>CompanyDTO  to ClassDiagram.Class>>Set<BillingProcessDTO>;
One-To-Many relationship from ClassDiagram.Class>>CompanyDTO  to ClassDiagram.Class>>Set<UserDTO>;
Many-To-Many relationship between ClassDiagram.Class>>CompanyDTO  and ClassDiagram.Class>>set<itemdto>: item_entity_map(entity_id:CompanyDTO [PK] #FK to CompanyDTO,item_id:set<itemdto> [PK] #FK to set<itemdto>);
One-To-Many relationship from ClassDiagram.Class>>CompanyDTO  to ClassDiagram.Class>>Set<EventLogDTO>;
One-To-Many relationship from ClassDiagram.Class>>CompanyDTO  to ClassDiagram.Class>>Set<NotificationMessageDTO>;
Many-To-Many relationship between ClassDiagram.Class>>CompanyDTO  and ClassDiagram.Class>>set<itemtypedto>: item_entity_map(entity_id:CompanyDTO [PK] #FK to CompanyDTO,item_id:set<itemdto> [PK] #FK to set<itemdto>);item_type_entity_map(entity_id:CompanyDTO [PK] #FK to CompanyDTO,item_type_id:set<itemtypedto> [PK] #FK to set<itemtypedto>);
One-To-Many relationship from ClassDiagram.Class>>CompanyDTO  to ClassDiagram.Class>>Set<BillingProcessConfigurationDTO>;
Many-To-Many relationship between ClassDiagram.Class>>CompanyDTO  and ClassDiagram.Class>>set<invoicedeliverymethoddto>: item_entity_map(entity_id:CompanyDTO [PK] #FK to CompanyDTO,item_id:set<itemdto> [PK] #FK to set<itemdto>);item_type_entity_map(entity_id:CompanyDTO [PK] #FK to CompanyDTO,item_type_id:set<itemtypedto> [PK] #FK to set<itemtypedto>);entity_delivery_method_map(entity_id:CompanyDTO [PK] #FK to CompanyDTO,method_id:set<invoicedeliverymethoddto> [PK] #FK to set<invoicedeliverymethoddto>);
Many-To-Many relationship between ClassDiagram.Class>>CompanyDTO  and ClassDiagram.Class>>ReportDTO: item_entity_map(entity_id:CompanyDTO [PK] #FK to CompanyDTO,item_id:set<itemdto> [PK] #FK to set<itemdto>);item_type_entity_map(entity_id:CompanyDTO [PK] #FK to CompanyDTO,item_type_id:set<itemtypedto> [PK] #FK to set<itemtypedto>);entity_delivery_method_map(entity_id:CompanyDTO [PK] #FK to CompanyDTO,method_id:set<invoicedeliverymethoddto> [PK] #FK to set<invoicedeliverymethoddto>);entity_report_map(entity_id:CompanyDTO [PK] #FK to CompanyDTO,report_id:ReportDTO [PK] #FK to ReportDTO);
One-To-Many relationship from ClassDiagram.Class>>CompanyDTO  to ClassDiagram.Class>>List<MetaFieldValue>;
Many-To-One relationship from ClassDiagram.Class>>AccountInformationTypeDTO  to ClassDiagram.Class>>accounttypedto represented by ClassDiagram.Atrribute>>accounttype;
One-To-Many relationship from ClassDiagram.Class>>AccountInformationTypeDTO  to ClassDiagram.Class>>Set<CustomerAccountInfoTypeMetaField>;
Many-To-One relationship from ClassDiagram.Class>>UserCodeLinkDTO  to ClassDiagram.Class>>usercodedto represented by ClassDiagram.Atrribute>>usercode;
Many-To-One relationship from ClassDiagram.Class>>UserCodeOrderLinkDTO  to ClassDiagram.Class>>orderdto represented by ClassDiagram.Atrribute>>order;
Many-To-One relationship from ClassDiagram.Class>>UserCodeCustomerLinkDTO  to ClassDiagram.Class>>customerdto represented by ClassDiagram.Atrribute>>customer;
One-To-Many relationship from ClassDiagram.Class>>SubscriberStatusDTO  to ClassDiagram.Class>>Set<UserDTO>;
Many-To-One relationship from ClassDiagram.Class>>MatchingFieldDTO  to ClassDiagram.Class>>routedto represented by ClassDiagram.Atrribute>>route;
Many-To-One relationship from ClassDiagram.Class>>MatchingFieldDTO  to ClassDiagram.Class>>routeratecarddto represented by ClassDiagram.Atrribute>>routeratecard;
Many-To-One relationship from ClassDiagram.Class>>CustomerNoteDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
Many-To-One relationship from ClassDiagram.Class>>CustomerNoteDTO  to ClassDiagram.Class>>customerdto represented by ClassDiagram.Atrribute>>customer;
Many-To-One relationship from ClassDiagram.Class>>CustomerNoteDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>AccountTypeDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
Many-To-One relationship from ClassDiagram.Class>>AccountTypeDTO  to ClassDiagram.Class>>invoicetemplatedto represented by ClassDiagram.Atrribute>>invoicetemplate;
Many-To-One relationship from ClassDiagram.Class>>AccountTypeDTO  to ClassDiagram.Class>>invoicedeliverymethoddto represented by ClassDiagram.Atrribute>>invoicedeliverymethod;
Many-To-One relationship from ClassDiagram.Class>>AccountTypeDTO  to ClassDiagram.Class>>languagedto represented by ClassDiagram.Atrribute>>language;
Many-To-One relationship from ClassDiagram.Class>>AccountTypeDTO  to ClassDiagram.Class>>currencydto represented by ClassDiagram.Atrribute>>currency;
One-To-Many relationship from ClassDiagram.Class>>AccountTypeDTO  to ClassDiagram.Class>>Set<AccountInformationTypeDTO>;
One-To-Many relationship from ClassDiagram.Class>>AccountTypeDTO  to ClassDiagram.Class>>Set<CustomerDTO>;
Many-To-Many relationship between ClassDiagram.Class>>AccountTypeDTO  and ClassDiagram.Class>>set<paymentmethodtypedto>: payment_method_account_type_map(account_type_id:AccountTypeDTO [PK] #FK to AccountTypeDTO,payment_method_id:set<paymentmethodtypedto> [PK] #FK to set<paymentmethodtypedto>);
Many-To-One relationship from ClassDiagram.Class>>RoleDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
Many-To-Many relationship between ClassDiagram.Class>>RoleDTO  and ClassDiagram.Class>>set<userdto>: user_role_map(role_id:RoleDTO [PK] #FK to RoleDTO,user_id:set<userdto> [PK] #FK to set<userdto>);
Many-To-Many relationship between ClassDiagram.Class>>RoleDTO  and ClassDiagram.Class>>set<permissiondto>: user_role_map(role_id:RoleDTO [PK] #FK to RoleDTO,user_id:set<userdto> [PK] #FK to set<userdto>);permission_role_map(role_id:RoleDTO [PK] #FK to RoleDTO,permission_id:set<permissiondto> [PK] #FK to set<permissiondto>);
One-To-Many relationship from ClassDiagram.Class>>PermissionTypeDTO  to ClassDiagram.Class>>Set<PermissionDTO>;
Many-To-One relationship from ClassDiagram.Class>>PermissionUserDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>baseuser;
Many-To-One relationship from ClassDiagram.Class>>PermissionUserDTO  to ClassDiagram.Class>>permissiondto represented by ClassDiagram.Atrribute>>permission;
Many-To-One relationship from ClassDiagram.Class>>PermissionDTO  to ClassDiagram.Class>>permissiontypedto represented by ClassDiagram.Atrribute>>permissiontype;
One-To-Many relationship from ClassDiagram.Class>>PermissionDTO  to ClassDiagram.Class>>Set<PermissionUserDTO>;
Many-To-Many relationship between ClassDiagram.Class>>PermissionDTO  and ClassDiagram.Class>>set<roledto>: permission_role_map(permission_id:PermissionDTO [PK] #FK to PermissionDTO,role_id:set<roledto> [PK] #FK to set<roledto>);
Many-To-One relationship from ClassDiagram.Class>>PaymentCommissionDTO  to ClassDiagram.Class>>invoicedto represented by ClassDiagram.Atrribute>>invoice;
Many-To-One relationship from ClassDiagram.Class>>CommissionProcessConfigurationDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
Many-To-One relationship from ClassDiagram.Class>>CommissionProcessConfigurationDTO  to ClassDiagram.Class>>periodunitdto represented by ClassDiagram.Atrribute>>periodunit;
Many-To-One relationship from ClassDiagram.Class>>PartnerPayout  to ClassDiagram.Class>>paymentdto represented by ClassDiagram.Atrribute>>payment;
Many-To-One relationship from ClassDiagram.Class>>PartnerPayout  to ClassDiagram.Class>>partnerdto represented by ClassDiagram.Atrribute>>partner;
Many-To-One relationship from ClassDiagram.Class>>PartnerCommissionExceptionDTO  to ClassDiagram.Class>>partnerdto represented by ClassDiagram.Atrribute>>partner;
Many-To-One relationship from ClassDiagram.Class>>PartnerCommissionExceptionDTO  to ClassDiagram.Class>>itemdto represented by ClassDiagram.Atrribute>>item;
Many-To-One relationship from ClassDiagram.Class>>PartnerDTO  to ClassDiagram.Class>>partnerdto represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>PartnerDTO  to ClassDiagram.Class>>Set<PartnerDTO>;
One-To-Many relationship from ClassDiagram.Class>>PartnerDTO  to ClassDiagram.Class>>List<CommissionDTO>;
One-To-Many relationship from ClassDiagram.Class>>PartnerDTO  to ClassDiagram.Class>>List<PartnerCommissionExceptionDTO>;
One-To-Many relationship from ClassDiagram.Class>>PartnerDTO  to ClassDiagram.Class>>List<PartnerReferralCommissionDTO>;
One-To-Many relationship from ClassDiagram.Class>>PartnerDTO  to ClassDiagram.Class>>List<PartnerReferralCommissionDTO>;
One-To-Many relationship from ClassDiagram.Class>>PartnerDTO  to ClassDiagram.Class>>List<PartnerCommissionValueDTO>;
One-To-Many relationship from ClassDiagram.Class>>PartnerDTO  to ClassDiagram.Class>>Set<PartnerPayout>;
Many-To-Many relationship between ClassDiagram.Class>>PartnerDTO  and ClassDiagram.Class>>set<customerdto>: customer_partner_map(partner_id:PartnerDTO [PK] #FK to PartnerDTO,customer_id:set<customerdto> [PK] #FK to set<customerdto>);
Many-To-One relationship from ClassDiagram.Class>>InvoiceCommissionDTO  to ClassDiagram.Class>>invoicedto represented by ClassDiagram.Atrribute>>invoice;
Many-To-One relationship from ClassDiagram.Class>>CustomerCommissionDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>PartnerReferralCommissionDTO  to ClassDiagram.Class>>partnerdto represented by ClassDiagram.Atrribute>>referral;
Many-To-One relationship from ClassDiagram.Class>>PartnerReferralCommissionDTO  to ClassDiagram.Class>>partnerdto represented by ClassDiagram.Atrribute>>referrer;
Many-To-One relationship from ClassDiagram.Class>>ReferralCommissionDTO  to ClassDiagram.Class>>partnerdto represented by ClassDiagram.Atrribute>>referralpartner;
One-To-Many relationship from ClassDiagram.Class>>CommissionProcessRunDTO  to ClassDiagram.Class>>List<CommissionDTO>;
Many-To-One relationship from ClassDiagram.Class>>CommissionProcessRunDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
Many-To-One relationship from ClassDiagram.Class>>PartnerCommissionLineDTO  to ClassDiagram.Class>>commissionprocessrundto represented by ClassDiagram.Atrribute>>commissionprocessrun;
Many-To-One relationship from ClassDiagram.Class>>PartnerCommissionLineDTO  to ClassDiagram.Class>>partnerdto represented by ClassDiagram.Atrribute>>partner;
Many-To-One relationship from ClassDiagram.Class>>PartnerCommissionLineDTO  to ClassDiagram.Class>>commissiondto represented by ClassDiagram.Atrribute>>commission;
One-To-One relationship between ClassDiagram.Class>>PartnerCommissionLineDTO  to ClassDiagram.Class>>partnercommissionlinedto represented by ClassDiagram.Atrribute>>reversal;
Many-To-One relationship from ClassDiagram.Class>>PartnerCommissionValueDTO  to ClassDiagram.Class>>partnerdto represented by ClassDiagram.Atrribute>>partner;
Many-To-One relationship from ClassDiagram.Class>>CommissionDTO  to ClassDiagram.Class>>partnerdto represented by ClassDiagram.Atrribute>>partner;
Many-To-One relationship from ClassDiagram.Class>>CommissionDTO  to ClassDiagram.Class>>commissionprocessrundto represented by ClassDiagram.Atrribute>>commissionprocessrun;
One-To-Many relationship from ClassDiagram.Class>>CommissionDTO  to ClassDiagram.Class>>List<PartnerCommissionLineDTO>;
One-To-One relationship between ClassDiagram.Class>>ContactDTO  to ClassDiagram.Class>>contactmapdto represented by ClassDiagram.Atrribute>>contactmap;
Many-To-One relationship from ClassDiagram.Class>>ContactMapDTO  to ClassDiagram.Class>>contactdto represented by ClassDiagram.Atrribute>>contact;
Many-To-One relationship from ClassDiagram.Class>>PriceModelDTO  to ClassDiagram.Class>>currencydto represented by ClassDiagram.Atrribute>>currency;
Many-To-One relationship from ClassDiagram.Class>>RouteRateCardDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
Many-To-One relationship from ClassDiagram.Class>>RouteRateCardDTO  to ClassDiagram.Class>>ratingunitdto represented by ClassDiagram.Atrribute>>ratingunit;
One-To-Many relationship from ClassDiagram.Class>>RouteRateCardDTO  to ClassDiagram.Class>>Set<MatchingFieldDTO>;
Many-To-One relationship from ClassDiagram.Class>>RouteDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
One-To-Many relationship from ClassDiagram.Class>>RouteDTO  to ClassDiagram.Class>>Set<MatchingFieldDTO>;
Many-To-One relationship from ClassDiagram.Class>>RatingUnitDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
Many-To-One relationship from ClassDiagram.Class>>RateCardDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
Many-To-Many relationship between ClassDiagram.Class>>RateCardDTO  and ClassDiagram.Class>>set<companydto>: rate_card_child_entity_map(rate_card_id:RateCardDTO [PK] #FK to RateCardDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);
Many-To-One relationship from ClassDiagram.Class>>CustomerUsagePoolDTO  to ClassDiagram.Class>>customerdto represented by ClassDiagram.Atrribute>>customer;
Many-To-One relationship from ClassDiagram.Class>>CustomerUsagePoolDTO  to ClassDiagram.Class>>usagepooldto represented by ClassDiagram.Atrribute>>usagepool;
Many-To-Many relationship between ClassDiagram.Class>>UsagePoolDTO  and ClassDiagram.Class>>set<itemtypedto>: usage_pool_item_type_map(usage_pool_id:UsagePoolDTO [PK] #FK to UsagePoolDTO,item_type_id:set<itemtypedto> [PK] #FK to set<itemtypedto>);
Many-To-Many relationship between ClassDiagram.Class>>UsagePoolDTO  and ClassDiagram.Class>>set<itemdto>: usage_pool_item_type_map(usage_pool_id:UsagePoolDTO [PK] #FK to UsagePoolDTO,item_type_id:set<itemtypedto> [PK] #FK to set<itemtypedto>);usage_pool_item_map(usage_pool_id:UsagePoolDTO [PK] #FK to UsagePoolDTO,item_id:set<itemdto> [PK] #FK to set<itemdto>);
Many-To-One relationship from ClassDiagram.Class>>UsagePoolDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
One-To-Many relationship from ClassDiagram.Class>>UsagePoolDTO  to ClassDiagram.Class>>Set<UsagePoolConsumptionActionDTO>;
Many-To-One relationship from ClassDiagram.Class>>UsagePoolConsumptionLogDTO  to ClassDiagram.Class>>customerusagepooldto represented by ClassDiagram.Atrribute>>customerusagepool;
Many-To-One relationship from ClassDiagram.Class>>OrderChangeTypeDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
Many-To-Many relationship between ClassDiagram.Class>>OrderChangeTypeDTO  and ClassDiagram.Class>>set<itemtypedto>: order_change_type_item_type_map(order_change_type_id:OrderChangeTypeDTO [PK] #FK to OrderChangeTypeDTO,item_type_id:set<itemtypedto> [PK] #FK to set<itemtypedto>);
One-To-Many relationship from ClassDiagram.Class>>OrderChangeTypeDTO  to ClassDiagram.Class>>Set<MetaField>;
Many-To-One relationship from ClassDiagram.Class>>OrderLineUsagePoolDTO  to ClassDiagram.Class>>orderlinedto represented by ClassDiagram.Atrribute>>orderline;
Many-To-One relationship from ClassDiagram.Class>>OrderLineUsagePoolDTO  to ClassDiagram.Class>>customerusagepooldto represented by ClassDiagram.Atrribute>>customerusagepool;
Many-To-One relationship from ClassDiagram.Class>>OrderStatusDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
Many-To-One relationship from ClassDiagram.Class>>OrderChangeDTO  to ClassDiagram.Class>>orderchangedto represented by ClassDiagram.Atrribute>>parentorderchange;
Many-To-One relationship from ClassDiagram.Class>>OrderChangeDTO  to ClassDiagram.Class>>orderlinedto represented by ClassDiagram.Atrribute>>parentorderline;
Many-To-One relationship from ClassDiagram.Class>>OrderChangeDTO  to ClassDiagram.Class>>orderlinedto represented by ClassDiagram.Atrribute>>orderline;
Many-To-One relationship from ClassDiagram.Class>>OrderChangeDTO  to ClassDiagram.Class>>orderdto represented by ClassDiagram.Atrribute>>order;
Many-To-One relationship from ClassDiagram.Class>>OrderChangeDTO  to ClassDiagram.Class>>itemdto represented by ClassDiagram.Atrribute>>item;
Many-To-One relationship from ClassDiagram.Class>>OrderChangeDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>user;
Many-To-One relationship from ClassDiagram.Class>>OrderChangeDTO  to ClassDiagram.Class>>orderchangestatusdto represented by ClassDiagram.Atrribute>>userassignedstatus;
Many-To-One relationship from ClassDiagram.Class>>OrderChangeDTO  to ClassDiagram.Class>>orderchangestatusdto represented by ClassDiagram.Atrribute>>status;
Many-To-Many relationship between ClassDiagram.Class>>OrderChangeDTO  and ClassDiagram.Class>>set<assetdto>: order_change_asset_map(order_change_id:OrderChangeDTO [PK] #FK to OrderChangeDTO,asset_id:set<assetdto> [PK] #FK to set<assetdto>);
Many-To-One relationship from ClassDiagram.Class>>OrderChangeDTO  to ClassDiagram.Class>>orderchangetypedto represented by ClassDiagram.Atrribute>>orderchangetype;
Many-To-One relationship from ClassDiagram.Class>>OrderChangeDTO  to ClassDiagram.Class>>orderstatusdto represented by ClassDiagram.Atrribute>>orderstatustoapply;
One-To-Many relationship from ClassDiagram.Class>>OrderChangeDTO  to ClassDiagram.Class>>Set<OrderChangePlanItemDTO>;
One-To-Many relationship from ClassDiagram.Class>>OrderChangeDTO  to ClassDiagram.Class>>List<OrderLineProvisioningCommandDTO>;
Many-To-One relationship from ClassDiagram.Class>>OrderChangePlanItemDTO  to ClassDiagram.Class>>orderchangedto represented by ClassDiagram.Atrribute>>orderchange;
Many-To-One relationship from ClassDiagram.Class>>OrderChangePlanItemDTO  to ClassDiagram.Class>>itemdto represented by ClassDiagram.Atrribute>>item;
Many-To-Many relationship between ClassDiagram.Class>>OrderChangePlanItemDTO  and ClassDiagram.Class>>set<assetdto>: order_change_plan_item_asset_map(order_change_plan_item_id:OrderChangePlanItemDTO [PK] #FK to OrderChangePlanItemDTO,asset_id:set<assetdto> [PK] #FK to set<assetdto>);
Many-To-One relationship from ClassDiagram.Class>>OrderLineDTO  to ClassDiagram.Class>>itemdto represented by ClassDiagram.Atrribute>>item;
One-To-Many relationship from ClassDiagram.Class>>OrderLineDTO  to ClassDiagram.Class>>Set<AssetDTO>;
One-To-Many relationship from ClassDiagram.Class>>OrderLineDTO  to ClassDiagram.Class>>Set<AssetAssignmentDTO>;
Many-To-One relationship from ClassDiagram.Class>>OrderLineDTO  to ClassDiagram.Class>>orderlinedto represented by ClassDiagram.Atrribute>>parentline;
One-To-Many relationship from ClassDiagram.Class>>OrderLineDTO  to ClassDiagram.Class>>Set<OrderLineDTO>;
One-To-Many relationship from ClassDiagram.Class>>OrderLineDTO  to ClassDiagram.Class>>Set<OrderChangeDTO>;
One-To-Many relationship from ClassDiagram.Class>>OrderLineDTO  to ClassDiagram.Class>>Set<OrderLineUsagePoolDTO>;
Many-To-One relationship from ClassDiagram.Class>>OrderPeriodDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
Many-To-One relationship from ClassDiagram.Class>>OrderChangeStatusDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
Many-To-One relationship from ClassDiagram.Class>>OrderDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>baseuserbyuserid;
Many-To-One relationship from ClassDiagram.Class>>OrderDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>baseuserbycreatedby;
One-To-Many relationship from ClassDiagram.Class>>OrderDTO  to ClassDiagram.Class>>Set<OrderProcessDTO>;
One-To-Many relationship from ClassDiagram.Class>>OrderDTO  to ClassDiagram.Class>>List<OrderLineDTO>;
One-To-Many relationship from ClassDiagram.Class>>OrderDTO  to ClassDiagram.Class>>List<DiscountLineDTO>;
One-To-Many relationship from ClassDiagram.Class>>OrderDTO  to ClassDiagram.Class>>Set<UserCodeOrderLinkDTO>;
Many-To-One relationship from ClassDiagram.Class>>OrderDTO  to ClassDiagram.Class>>orderdto represented by ClassDiagram.Atrribute>>parentorder;
One-To-Many relationship from ClassDiagram.Class>>OrderDTO  to ClassDiagram.Class>>Set<OrderDTO>;
One-To-Many relationship from ClassDiagram.Class>>OrderDTO  to ClassDiagram.Class>>List<OrderProvisioningCommandDTO>;
Many-To-One relationship from ClassDiagram.Class>>OrderDTO  to ClassDiagram.Class>>provisioningstatusdto represented by ClassDiagram.Atrribute>>provisioningstatus;
Many-To-One relationship from ClassDiagram.Class>>ItemDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
Many-To-Many relationship between ClassDiagram.Class>>ItemDTO  and ClassDiagram.Class>>set<companydto>: item_entity_map(item_id:ItemDTO [PK] #FK to ItemDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);
One-To-Many relationship from ClassDiagram.Class>>ItemDTO  to ClassDiagram.Class>>Set<EntityItemPrice>;
Many-To-Many relationship between ClassDiagram.Class>>ItemDTO  and ClassDiagram.Class>>set<itemtypedto>: item_entity_map(item_id:ItemDTO [PK] #FK to ItemDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);item_type_exclude_map(item_id:ItemDTO [PK] #FK to ItemDTO,type_id:set<itemtypedto> [PK] #FK to set<itemtypedto>);
Many-To-Many relationship between ClassDiagram.Class>>ItemDTO  and ClassDiagram.Class>>set<itemtypedto>: item_entity_map(item_id:ItemDTO [PK] #FK to ItemDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);item_type_exclude_map(item_id:ItemDTO [PK] #FK to ItemDTO,type_id:set<itemtypedto> [PK] #FK to set<itemtypedto>);item_type_map(item_id:ItemDTO [PK] #FK to ItemDTO,type_id:set<itemtypedto> [PK] #FK to set<itemtypedto>);
One-To-Many relationship from ClassDiagram.Class>>ItemDTO  to ClassDiagram.Class>>List<MetaFieldValue>;
One-To-Many relationship from ClassDiagram.Class>>ItemDTO  to ClassDiagram.Class>>Set<MetaField>;
Many-To-Many relationship between ClassDiagram.Class>>ItemDTO  and ClassDiagram.Class>>list<accounttypedto>: item_entity_map(item_id:ItemDTO [PK] #FK to ItemDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);item_type_exclude_map(item_id:ItemDTO [PK] #FK to ItemDTO,type_id:set<itemtypedto> [PK] #FK to set<itemtypedto>);item_type_map(item_id:ItemDTO [PK] #FK to ItemDTO,type_id:set<itemtypedto> [PK] #FK to set<itemtypedto>);item_account_type_availability(item_id:ItemDTO [PK] #FK to ItemDTO,account_type_id:list<accounttypedto> [PK] #FK to list<accounttypedto>);
One-To-Many relationship from ClassDiagram.Class>>ItemDTO  to ClassDiagram.Class>>Set<ItemDependencyDTO>;
Many-To-Many relationship between ClassDiagram.Class>>ItemDTO  and ClassDiagram.Class>>set<usagepooldto>: item_entity_map(item_id:ItemDTO [PK] #FK to ItemDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);item_type_exclude_map(item_id:ItemDTO [PK] #FK to ItemDTO,type_id:set<itemtypedto> [PK] #FK to set<itemtypedto>);item_type_map(item_id:ItemDTO [PK] #FK to ItemDTO,type_id:set<itemtypedto> [PK] #FK to set<itemtypedto>);item_account_type_availability(item_id:ItemDTO [PK] #FK to ItemDTO,account_type_id:list<accounttypedto> [PK] #FK to list<accounttypedto>);usage_pool_item_map(item_id:ItemDTO [PK] #FK to ItemDTO,usage_pool_id:set<usagepooldto> [PK] #FK to set<usagepooldto>);
Many-To-One relationship from ClassDiagram.Class>>PlanDTO  to ClassDiagram.Class>>orderperioddto represented by ClassDiagram.Atrribute>>period;
One-To-Many relationship from ClassDiagram.Class>>PlanDTO  to ClassDiagram.Class>>List<PlanItemDTO>;
One-To-Many relationship from ClassDiagram.Class>>PlanDTO  to ClassDiagram.Class>>List<MetaFieldValue>;
Many-To-Many relationship between ClassDiagram.Class>>PlanDTO  and ClassDiagram.Class>>set<usagepooldto>: plan_usage_pool_map(plan_id:PlanDTO [PK] #FK to PlanDTO,usage_pool_id:set<usagepooldto> [PK] #FK to set<usagepooldto>);
Many-To-One relationship from ClassDiagram.Class>>ItemTypeDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
Many-To-Many relationship between ClassDiagram.Class>>ItemTypeDTO  and ClassDiagram.Class>>set<companydto>: item_type_entity_map(item_type_id:ItemTypeDTO [PK] #FK to ItemTypeDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);
Many-To-Many relationship between ClassDiagram.Class>>ItemTypeDTO  and ClassDiagram.Class>>set<itemdto>: item_type_entity_map(item_type_id:ItemTypeDTO [PK] #FK to ItemTypeDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);item_type_map(type_id:ItemTypeDTO [PK] #FK to ItemTypeDTO,item_id:set<itemdto> [PK] #FK to set<itemdto>);
Many-To-Many relationship between ClassDiagram.Class>>ItemTypeDTO  and ClassDiagram.Class>>set<itemdto>: item_type_entity_map(item_type_id:ItemTypeDTO [PK] #FK to ItemTypeDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);item_type_map(type_id:ItemTypeDTO [PK] #FK to ItemTypeDTO,item_id:set<itemdto> [PK] #FK to set<itemdto>);item_type_exclude_map(type_id:ItemTypeDTO [PK] #FK to ItemTypeDTO,item_id:set<itemdto> [PK] #FK to set<itemdto>);
One-To-Many relationship from ClassDiagram.Class>>ItemTypeDTO  to ClassDiagram.Class>>Set<AssetStatusDTO>;
One-To-Many relationship from ClassDiagram.Class>>ItemTypeDTO  to ClassDiagram.Class>>Set<MetaField>;
One-To-Many relationship from ClassDiagram.Class>>ItemTypeDTO  to ClassDiagram.Class>>List<MetaFieldValue>;
Many-To-One relationship from ClassDiagram.Class>>ItemTypeDTO  to ClassDiagram.Class>>itemtypedto represented by ClassDiagram.Atrribute>>parent;
Many-To-Many relationship between ClassDiagram.Class>>ItemTypeDTO  and ClassDiagram.Class>>set<usagepooldto>: item_type_entity_map(item_type_id:ItemTypeDTO [PK] #FK to ItemTypeDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);item_type_map(type_id:ItemTypeDTO [PK] #FK to ItemTypeDTO,item_id:set<itemdto> [PK] #FK to set<itemdto>);item_type_exclude_map(type_id:ItemTypeDTO [PK] #FK to ItemTypeDTO,item_id:set<itemdto> [PK] #FK to set<itemdto>);usage_pool_item_type_map(item_type_id:ItemTypeDTO [PK] #FK to ItemTypeDTO,usage_pool_id:set<usagepooldto> [PK] #FK to set<usagepooldto>);
One-To-One relationship between ClassDiagram.Class>>AssetReservationDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>user;
One-To-One relationship between ClassDiagram.Class>>AssetReservationDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>creator;
One-To-One relationship between ClassDiagram.Class>>AssetReservationDTO  to ClassDiagram.Class>>assetdto represented by ClassDiagram.Atrribute>>asset;
Many-To-One relationship from ClassDiagram.Class>>ItemDependencyOnItemDTO  to ClassDiagram.Class>>itemdto represented by ClassDiagram.Atrribute>>dependent;
Many-To-One relationship from ClassDiagram.Class>>EntityItemPrice  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
Many-To-One relationship from ClassDiagram.Class>>EntityItemPrice  to ClassDiagram.Class>>itemdto represented by ClassDiagram.Atrribute>>item;
One-To-Many relationship from ClassDiagram.Class>>EntityItemPrice  to ClassDiagram.Class>>SortedMap<Date,PriceModelDTO>;
Many-To-One relationship from ClassDiagram.Class>>AssetStatusDTO  to ClassDiagram.Class>>itemtypedto represented by ClassDiagram.Atrribute>>itemtype;
Many-To-One relationship from ClassDiagram.Class>>AssetAssignmentDTO  to ClassDiagram.Class>>assetdto represented by ClassDiagram.Atrribute>>asset;
Many-To-One relationship from ClassDiagram.Class>>AssetAssignmentDTO  to ClassDiagram.Class>>orderlinedto represented by ClassDiagram.Atrribute>>orderline;
Many-To-One relationship from ClassDiagram.Class>>ItemDependencyDTO  to ClassDiagram.Class>>itemdto represented by ClassDiagram.Atrribute>>item;
Many-To-One relationship from ClassDiagram.Class>>PlanItemDTO  to ClassDiagram.Class>>plandto represented by ClassDiagram.Atrribute>>plan;
One-To-Many relationship from ClassDiagram.Class>>PlanItemDTO  to ClassDiagram.Class>>SortedMap<Date,PriceModelDTO>;
One-To-One relationship between ClassDiagram.Class>>PlanItemDTO  to ClassDiagram.Class>>planitembundledto represented by ClassDiagram.Atrribute>>bundle;
Many-To-One relationship from ClassDiagram.Class>>AssetDTO  to ClassDiagram.Class>>assetstatusdto represented by ClassDiagram.Atrribute>>assetstatus;
Many-To-One relationship from ClassDiagram.Class>>AssetDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
Many-To-One relationship from ClassDiagram.Class>>AssetDTO  to ClassDiagram.Class>>itemdto represented by ClassDiagram.Atrribute>>item;
One-To-Many relationship from ClassDiagram.Class>>AssetDTO  to ClassDiagram.Class>>Set<AssetTransitionDTO>;
One-To-Many relationship from ClassDiagram.Class>>AssetDTO  to ClassDiagram.Class>>Set<AssetAssignmentDTO>;
Many-To-One relationship from ClassDiagram.Class>>AssetDTO  to ClassDiagram.Class>>orderlinedto represented by ClassDiagram.Atrribute>>orderline;
One-To-Many relationship from ClassDiagram.Class>>AssetDTO  to ClassDiagram.Class>>List<AssetProvisioningCommandDTO>;
Many-To-One relationship from ClassDiagram.Class>>AssetDTO  to ClassDiagram.Class>>provisioningstatusdto represented by ClassDiagram.Atrribute>>provisioningstatus;
Many-To-Many relationship between ClassDiagram.Class>>AssetDTO  and ClassDiagram.Class>>set<companydto>: asset_entity_map(asset_id:AssetDTO [PK] #FK to AssetDTO,entity_id:set<companydto> [PK] #FK to set<companydto>);
Many-To-One relationship from ClassDiagram.Class>>AssetTransitionDTO  to ClassDiagram.Class>>assetstatusdto represented by ClassDiagram.Atrribute>>previousstatus;
Many-To-One relationship from ClassDiagram.Class>>AssetTransitionDTO  to ClassDiagram.Class>>assetstatusdto represented by ClassDiagram.Atrribute>>newstatus;
Many-To-One relationship from ClassDiagram.Class>>AssetTransitionDTO  to ClassDiagram.Class>>assetdto represented by ClassDiagram.Atrribute>>asset;
Many-To-One relationship from ClassDiagram.Class>>ItemDependencyOnItemTypeDTO  to ClassDiagram.Class>>itemtypedto represented by ClassDiagram.Atrribute>>dependent;
Many-To-One relationship from ClassDiagram.Class>>CustomerEnrollmentDTO  to ClassDiagram.Class>>accounttypedto represented by ClassDiagram.Atrribute>>accounttype;
Many-To-One relationship from ClassDiagram.Class>>CustomerEnrollmentDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>company;
Many-To-One relationship from ClassDiagram.Class>>CustomerEnrollmentDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>parentcustomer;
Many-To-One relationship from ClassDiagram.Class>>CustomerEnrollmentDTO  to ClassDiagram.Class>>customerenrollmentdto represented by ClassDiagram.Atrribute>>parentenrollment;
One-To-Many relationship from ClassDiagram.Class>>CustomerEnrollmentDTO  to ClassDiagram.Class>>Set<CustomerEnrollmentCommentDTO>;
Many-To-One relationship from ClassDiagram.Class>>CustomerEnrollmentCommentDTO  to ClassDiagram.Class>>customerenrollmentdto represented by ClassDiagram.Atrribute>>customerenrollment;
Many-To-One relationship from ClassDiagram.Class>>CustomerEnrollmentCommentDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>user;
One-To-One relationship between ClassDiagram.Class>>MediationConfiguration  to ClassDiagram.Class>>pluggabletaskdto represented by ClassDiagram.Atrribute>>pluggabletask;
One-To-One relationship between ClassDiagram.Class>>MediationConfiguration  to ClassDiagram.Class>>pluggabletaskdto represented by ClassDiagram.Atrribute>>processor;
Many-To-One relationship from ClassDiagram.Class>>MediationConfiguration  to ClassDiagram.Class>>routedto represented by ClassDiagram.Atrribute>>rootroute;
One-To-One relationship between ClassDiagram.Class>>ChargeSessionDTO  to ClassDiagram.Class>>userdto represented by ClassDiagram.Atrribute>>baseuser;
One-To-Many relationship from ClassDiagram.Class>>ChargeSessionDTO  to ClassDiagram.Class>>Set<ReservedAmountDTO>;
Many-To-One relationship from ClassDiagram.Class>>ReservedAmountDTO  to ClassDiagram.Class>>chargesessiondto represented by ClassDiagram.Atrribute>>session;
Many-To-One relationship from ClassDiagram.Class>>ReservedAmountDTO  to ClassDiagram.Class>>currencydto represented by ClassDiagram.Atrribute>>currency;
Many-To-One relationship from ClassDiagram.Class>>ReservedAmountDTO  to ClassDiagram.Class>>itemdto represented by ClassDiagram.Atrribute>>item;
Many-To-One relationship from ClassDiagram.Class>>DiscountLineDTO  to ClassDiagram.Class>>discountdto represented by ClassDiagram.Atrribute>>discount;
Many-To-One relationship from ClassDiagram.Class>>DiscountLineDTO  to ClassDiagram.Class>>planitemdto represented by ClassDiagram.Atrribute>>planitem;
Many-To-One relationship from ClassDiagram.Class>>DiscountLineDTO  to ClassDiagram.Class>>itemdto represented by ClassDiagram.Atrribute>>item;
Many-To-One relationship from ClassDiagram.Class>>DiscountDTO  to ClassDiagram.Class>>companydto represented by ClassDiagram.Atrribute>>entity;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>ProvisioningCommandDTO   Descriminator>>dtype: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>UserCodeLinkDTO   Descriminator>>object_type: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>PartnerCommissionLineDTO   Descriminator>>dtype: String ;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>ItemDependencyDTO   Descriminator>>dtype: String ;
