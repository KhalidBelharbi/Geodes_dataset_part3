ClassDiagram.Class>> Material =>=>=> RelationalSchema.Table>> material;
ClassDiagram.Class>> Pedido =>=>=> RelationalSchema.Table>> pedido;
ClassDiagram.Class>> DetallePedido =>=>=> RelationalSchema.Table>> detallepedido;
ClassDiagram.Class>> Pago =>=>=> RelationalSchema.Table>> pago;
ClassDiagram.Class>> Usuario =>=>=> RelationalSchema.Table>> usuario;
ClassDiagram.Class>> Obra =>=>=> RelationalSchema.Table>> obra;
ClassDiagram.Class>> Cliente =>=>=> RelationalSchema.Table>> cliente;
ClassDiagram.Attribut>> Material.id:Integer =>=>=> RelationalSchema.Column>> material.id PRIMARY KEY;
ClassDiagram.Attribut>> Material.descripcion:String =>=>=> RelationalSchema.Column>> material.descripcion;
ClassDiagram.Attribut>> Material.precio:Float =>=>=> RelationalSchema.Column>> material.precio;
ClassDiagram.Attribut>> Material.nombre:String =>=>=> RelationalSchema.Column>> material.nombre;
ClassDiagram.Attribut>> Material.stockactual:Integer =>=>=> RelationalSchema.Column>> material.stockactual;
ClassDiagram.Attribut>> Material.stockminimo:Integer =>=>=> RelationalSchema.Column>> material.stockminimo;
ClassDiagram.Attribut>> Material.unidad:String =>=>=> RelationalSchema.Column>> material.unidad;
ClassDiagram.Attribut>> Pedido.id:Integer =>=>=> RelationalSchema.Column>> pedido.id PRIMARY KEY;
ClassDiagram.Attribut>> Pedido.fechapedido:Instant =>=>=> RelationalSchema.Column>> pedido.fechapedido;
ClassDiagram.Attribut>> Pedido.estado:EstadoPedido =>=>=> RelationalSchema.Column>> pedido.estado;
ClassDiagram.Attribut>> DetallePedido.id:Integer =>=>=> RelationalSchema.Column>> detallepedido.id PRIMARY KEY;
ClassDiagram.Attribut>> DetallePedido.cantidad:Integer =>=>=> RelationalSchema.Column>> detallepedido.cantidad;
ClassDiagram.Attribut>> Pago.id:Integer =>=>=> RelationalSchema.Column>> pago.id PRIMARY KEY;
ClassDiagram.Attribut>> Pago.monto:Float =>=>=> RelationalSchema.Column>> pago.monto;
ClassDiagram.Attribut>> Usuario.id:Integer =>=>=> RelationalSchema.Column>> usuario.id PRIMARY KEY;
ClassDiagram.Attribut>> Usuario.username:String =>=>=> RelationalSchema.Column>> usuario.username;
ClassDiagram.Attribut>> Usuario.password:String =>=>=> RelationalSchema.Column>> usuario.password;
ClassDiagram.Attribut>> Usuario.GeneratedName:TipoUsuario =>=>=> RelationalSchema.Column>> usuario.GeneratedName;
ClassDiagram.Attribut>> Obra.id:Integer =>=>=> RelationalSchema.Column>> obra.id PRIMARY KEY;
ClassDiagram.Attribut>> Obra.descripcion:String =>=>=> RelationalSchema.Column>> obra.descripcion;
ClassDiagram.Attribut>> Obra.latitud:Float =>=>=> RelationalSchema.Column>> obra.latitud;
ClassDiagram.Attribut>> Obra.longitud:Float =>=>=> RelationalSchema.Column>> obra.longitud;
ClassDiagram.Attribut>> Obra.direccion:String =>=>=> RelationalSchema.Column>> obra.direccion;
ClassDiagram.Attribut>> Obra.superficie:Integer =>=>=> RelationalSchema.Column>> obra.superficie;
ClassDiagram.Attribut>> Obra.tipo:TipoObra =>=>=> RelationalSchema.Column>> obra.tipo;
ClassDiagram.Attribut>> Cliente.id:Integer =>=>=> RelationalSchema.Column>> cliente.id PRIMARY KEY;
ClassDiagram.Attribut>> Cliente.razonsocial:String =>=>=> RelationalSchema.Column>> cliente.razonsocial;
ClassDiagram.Attribut>> Cliente.cuit:String =>=>=> RelationalSchema.Column>> cliente.cuit;
ClassDiagram.Attribut>> Cliente.mail:String =>=>=> RelationalSchema.Column>> cliente.mail;
ClassDiagram.Attribut>> Cliente.maxcuentacorriente:Float =>=>=> RelationalSchema.Column>> cliente.maxcuentacorriente;
ClassDiagram.Attribut>> Cliente.habilitadoonline:Boolean =>=>=> RelationalSchema.Column>> cliente.habilitadoonline;
One-To-Many relationship from ClassDiagram.Class>>Pedido  to ClassDiagram.Class>>List<DetallePedido>;
One-To-One relationship between ClassDiagram.Class>>Pedido  to ClassDiagram.Class>>obra represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>DetallePedido  to ClassDiagram.Class>>material represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Cliente  to ClassDiagram.Class>>List<Obra>;
One-To-Many relationship from ClassDiagram.Class>>Cliente  to ClassDiagram.Class>>List<Pago>;
One-To-One relationship between ClassDiagram.Class>>Cliente  to ClassDiagram.Class>>usuario represented by ClassDiagram.Atrribute>>GeneratedName;
