ClassDiagram.Class>> CheckoutItemEntity =>=>=> RelationalSchema.Table>> checkoutitementity;
ClassDiagram.Class>> CheckoutEntity =>=>=> RelationalSchema.Table>> checkoutentity;
ClassDiagram.Class>> ShippingEntity =>=>=> RelationalSchema.Table>> shippingentity;
ClassDiagram.Attribut>> CheckoutItemEntity.id:Long =>=>=> RelationalSchema.Column>> checkoutitementity.id PRIMARY KEY;
ClassDiagram.Attribut>> CheckoutItemEntity.product:String =>=>=> RelationalSchema.Column>> checkoutitementity.product;
ClassDiagram.Attribut>> CheckoutEntity.id:Long =>=>=> RelationalSchema.Column>> checkoutentity.id PRIMARY KEY;
ClassDiagram.Attribut>> CheckoutEntity.code:String =>=>=> RelationalSchema.Column>> checkoutentity.code;
ClassDiagram.Attribut>> CheckoutEntity.GeneratedName:Status =>=>=> RelationalSchema.Column>> checkoutentity.GeneratedName;
ClassDiagram.Attribut>> CheckoutEntity.saveaddress:Boolean =>=>=> RelationalSchema.Column>> checkoutentity.saveaddress;
ClassDiagram.Attribut>> CheckoutEntity.saveinformation:Boolean =>=>=> RelationalSchema.Column>> checkoutentity.saveinformation;
ClassDiagram.Attribut>> CheckoutEntity.createdat:LocalDateTime =>=>=> RelationalSchema.Column>> checkoutentity.createdat;
ClassDiagram.Attribut>> CheckoutEntity.updatedat:LocalDateTime =>=>=> RelationalSchema.Column>> checkoutentity.updatedat;
ClassDiagram.Attribut>> ShippingEntity.id:Long =>=>=> RelationalSchema.Column>> shippingentity.id PRIMARY KEY;
ClassDiagram.Attribut>> ShippingEntity.address:String =>=>=> RelationalSchema.Column>> shippingentity.address;
ClassDiagram.Attribut>> ShippingEntity.complement:String =>=>=> RelationalSchema.Column>> shippingentity.complement;
ClassDiagram.Attribut>> ShippingEntity.country:String =>=>=> RelationalSchema.Column>> shippingentity.country;
ClassDiagram.Attribut>> ShippingEntity.state:String =>=>=> RelationalSchema.Column>> shippingentity.state;
ClassDiagram.Attribut>> ShippingEntity.cep:String =>=>=> RelationalSchema.Column>> shippingentity.cep;
Many-To-One relationship from ClassDiagram.Class>>CheckoutItemEntity  to ClassDiagram.Class>>checkoutentity represented by ClassDiagram.Atrribute>>checkout;
One-To-One relationship between ClassDiagram.Class>>CheckoutEntity  to ClassDiagram.Class>>shippingentity represented by ClassDiagram.Atrribute>>shipping;
One-To-Many relationship from ClassDiagram.Class>>CheckoutEntity  to ClassDiagram.Class>>List<CheckoutItemEntity>;
One-To-One relationship between ClassDiagram.Class>>ShippingEntity  to ClassDiagram.Class>>checkoutentity represented by ClassDiagram.Atrribute>>checkout;
