<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="astquerytranslatortest" >
      <xs:complexContent>
       <xs:extension base="querytranslatortestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="team.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="team" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testschematools" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resulttransformertest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contract" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="a" type="partnera" nillable="true" minOccurs="0" />
        <xs:element name="b" type="partnerb" nillable="true" minOccurs="0" />
        <xs:element name="custom1" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partnerb" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contract.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partnera" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="recursivebidirectionalonetomanycachetest" >
      <xs:complexContent>
       <xs:extension base="abstractrecursivebidirectionalonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractversionedrecursivebidirectionalonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractrecursivebidirectionalonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="parent" type="node" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="subnodes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractrecursivebidirectionalonetomanytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="recursivebidirectionalonetomanynocachetest" >
      <xs:complexContent>
       <xs:extension base="abstractrecursivebidirectionalonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="recursiveversionedbidirectionalonetomanynocachetest" >
      <xs:complexContent>
       <xs:extension base="abstractversionedrecursivebidirectionalonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="recursiveversionedbidirectionalonetomanycachetest" >
      <xs:complexContent>
       <xs:extension base="abstractversionedrecursivebidirectionalonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionednode.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchfetchtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="productline" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="models" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="model" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="productline" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="productline.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pooled.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hilotabletest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basic.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pooledtabletest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hilo.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basictabletest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basic.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pooled.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicsequencetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pooledsequencetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hilosequencetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hilo.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basic.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hilo.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pooled.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hiloforcedtablesequencetest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pooledforcedtablesequencetest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicforcedtablesequencetest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigintegersequencegeneratortest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bigintegerincrementgeneratortest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ternarytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ternary.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="hire" type="xs:dateTime" />
        <xs:element name="managerbysite" type="xs:anyType" />
        <xs:element name="underlings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="site" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="employees" type="xs:anyType" />
        <xs:element name="managers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="job.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childforparentwithassignedid.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobbatch.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipathcascadetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteorphanchild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="job" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="batch" type="jobbatch" nillable="true" minOccurs="0" />
        <xs:element name="processinginstructions" type="xs:string" />
        <xs:element name="status" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="g" >
      <xs:sequence>
        <xs:element name="//constants-----------------------------------------------------------------------------------//--------------------------------------------------------------------------------------//attributes----------------------------------------------------------------------------------id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="1g" type="a" nillable="true" minOccurs="0" />
        <xs:element name="*hhs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentwithassignedid.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteorphanchild.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobbatch" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="batch" type="xs:dateTime" />
        <xs:element name="jobs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="refreshtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="//constants-----------------------------------------------------------------------------------//--------------------------------------------------------------------------------------//attributes----------------------------------------------------------------------------------id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="//a1-*hhs" type="xs:anyType" />
        <xs:element name="//a1-1" type="g" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetestwithassignedparentidtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascadechecknullibilitytruetest" >
      <xs:complexContent>
       <xs:extension base="multipathcirclecascadetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascadechecknullfalsedelayedinserttest" >
      <xs:complexContent>
       <xs:extension base="multipathcirclecascadedelayedinserttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascadetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascademergetochildbeforeparenttest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascadechecknullibilityfalsetest" >
      <xs:complexContent>
       <xs:extension base="multipathcirclecascadetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tour" >
      <xs:sequence>
        <xs:element name="//@id//@sequencegenerator(name" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="/***alistofnodescontainedinthistour.*///@onetomany(targetentity" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascade.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="route" >
      <xs:sequence>
        <xs:element name="//@id//@sequencegenerator(name" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="/***alistofnodescontainedinthisroute.*///@onetomany(targetentity" type="xs:anyType" />
        <xs:element name="vehicles" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="//@transienttransientfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascadechecknulltruedelayedinserttest" >
      <xs:complexContent>
       <xs:extension base="multipathcirclecascadedelayedinserttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascadedelayedinsert.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicle" >
      <xs:sequence>
        <xs:element name="//@id//@sequencegenerator(name" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="transports" type="xs:anyType" />
        <xs:element name="GeneratedName" type="route" nillable="true" minOccurs="0" />
        <xs:element name="transientfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transport" >
      <xs:sequence>
        <xs:element name="//@id//@sequencegenerator(name" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="/***valueobjectatwhichtheorderispickedup*///@manytoone(optional" type="node" nillable="true" minOccurs="0" />
        <xs:element name="/***valueobjectatwhichtheorderisdelivered*///@manytoone(optional" type="node" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="vehicle" nillable="true" minOccurs="0" />
        <xs:element name="//@transienttransientfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascademergetochildbeforeparent.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipathcirclecascadedelayedinserttest" >
      <xs:complexContent>
       <xs:extension base="multipathcirclecascadetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="//@id//@sequencegenerator(name" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="/***thelistofordersthataredeliveredatthisnode*///@onetomany(fetch" type="xs:anyType" />
        <xs:element name="/***thelistofordersthatarepickedupatthisnode*///@onetomany(fetch" type="xs:anyType" />
        <xs:element name="/***thetowhichthisnodebelongs*///@manytoone(targetentity" type="route" nillable="true" minOccurs="0" />
        <xs:element name="/***thethisnodebelongsto,nullifthisnodedoesnotbelongtoa(e.gfirstnodeofaroute)*///@manytoone(targetentity" type="tour" nillable="true" minOccurs="0" />
        <xs:element name="//@transienttransientfield" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="deleteorphanchildren" type="xs:anyType" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="h" >
      <xs:sequence>
        <xs:element name="//constants-----------------------------------------------------------------------------------//--------------------------------------------------------------------------------------//attributes----------------------------------------------------------------------------------id" type="xs:long" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="GeneratedName" type="a" nillable="true" minOccurs="0" />
        <xs:element name="*hgs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetomanycascadetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multipathcascade.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thing" >
      <xs:sequence>
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="longdescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personthing.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="things" type="xs:anyType" />
        <xs:element name="tasks" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="groups" type="xs:anyType" />
        <xs:element name="permissions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permission" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="context" type="xs:string" />
        <xs:element name="access" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sybasetimestampversioningtest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permission" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="timestamp" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="context" type="xs:string" />
        <xs:element name="access" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dbversiontest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="groups" type="xs:anyType" />
        <xs:element name="permissions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versiontest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="task" >
      <xs:sequence>
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertieshelpertest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
          <xs:element name="props" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringhelpertest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="schemautil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityresolvertest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="migrationtest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="2_version.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="1_version.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionreattachmenttest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyreattachmenttest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longbytearraytest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
          <xs:element name="array_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longstringholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="long" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longstringtest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
          <xs:element name="long_string_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializabledata" >
      <xs:sequence>
        <xs:element name="payload" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bloblocatortest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
          <xs:element name="blob_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="imagetest" >
      <xs:complexContent>
       <xs:extension base="longbytearraytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="materializedclobmappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="materializedblobtest" >
      <xs:complexContent>
       <xs:extension base="longbytearraytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="texttest" >
      <xs:complexContent>
       <xs:extension base="longstringtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longbytearrayholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="longarray" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="imagemappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="textmappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="materializedclobtest" >
      <xs:complexContent>
       <xs:extension base="longstringtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializabletypetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="locator" type="xs:anyType" />
        <xs:element name="locator" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializablemappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="materializedblobmappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serializableholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="serialdata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cloblocatortest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
          <xs:element name="clob_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobmappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="backreftest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentchild.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="employeeid" type="xs:string" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unconstrainedtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="userid" type="xs:string" />
        <xs:element name="deleted" type="xs:anyType" />
        <xs:element name="accounts" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositepropertyreftest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="accountid" type="xs:string" />
        <xs:element name="user" type="person" nillable="true" minOccurs="0" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlocktest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="author" type="xs:string" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="summary" type="xs:string" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="pubdate" type="publicationdate" nillable="true" minOccurs="0" />
        <xs:element name="totalsales" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="publicationdate" >
      <xs:sequence>
        <xs:element name="year" type="xs:long" />
        <xs:element name="month" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filter-defs.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="user">
         <xs:sequence>
          <xs:element name="company" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="username" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="user">
         <xs:sequence>
          <xs:element name="hire" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joined.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryreturnequalsandhashcodetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gethqlqueryplantest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativesqlqueryplanequalstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="orderdate" type="xs:anyType" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="lineitems" type="xs:anyType" />
        <xs:element name="total" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="purchaserecord" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="timestamp" type="xs:dateTime" />
        <xs:element name="details" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="purchasedetail" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="purchaserecord" nillable="true" minOccurs="0" />
        <xs:element name="productid" type="xs:string" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidwithgeneratortest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="df" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="purchaserecordidgenerator" >
      <xs:complexContent>
       <xs:extension base="identitygenerator">
         <xs:sequence>
          <xs:element name="nextpurchasenumber" type="xs:long" />
          <xs:element name="nextpurchasesequence" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="productid" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="price" type="xs:anyType" />
        <xs:element name="numberavailable" type="xs:long" />
        <xs:element name="numberordered" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="customerid" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="orders" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitem.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="purchaserecord.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="comments" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclasstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="heightinches" type="xs:double" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="passwordexpirydays" type="xs:double" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="studentdto" >
      <xs:sequence>
        <xs:element name="studentname" type="personname" nillable="true" minOccurs="0" />
        <xs:element name="coursedescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="coursemeetings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractquerycacheresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="yogiexpected" type="student" nillable="true" minOccurs="0" />
          <xs:element name="shermanexpected" type="student" nillable="true" minOccurs="0" />
          <xs:element name="expected1" type="coursemeeting" nillable="true" minOccurs="0" />
          <xs:element name="expected2" type="coursemeeting" nillable="true" minOccurs="0" />
          <xs:element name="expected" type="course" nillable="true" minOccurs="0" />
          <xs:element name="yogiexpected" type="enrolment" nillable="true" minOccurs="0" />
          <xs:element name="shermanexpected" type="enrolment" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personname" >
      <xs:sequence>
        <xs:element name="first" type="xs:string" />
        <xs:element name="middle" type="xs:string" />
        <xs:element name="last" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="coursemeetingid" >
      <xs:sequence>
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="day" type="xs:string" />
        <xs:element name="period" type="xs:long" />
        <xs:element name="location" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaquerycacheputresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="criteriaquerycacheignoreresulttransformertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="coursemeeting" >
      <xs:sequence>
        <xs:element name="id" type="coursemeetingid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querycachetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="studentnumber" type="xs:long" />
        <xs:element name="name" type="personname" nillable="true" minOccurs="0" />
        <xs:element name="preferred" type="course" nillable="true" minOccurs="0" />
        <xs:element name="enrolments" type="xs:anyType" />
        <xs:element name="addresses" type="xs:anyType" />
        <xs:element name="secretcodes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="addresstype" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="stateprovince" type="xs:string" />
        <xs:element name="postalcode" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="GeneratedName" type="student" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hqlquerycacheputresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="hqlquerycacheignoreresulttransformertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriaquerycacheignoreresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="abstractquerycacheresulttransformertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqlquerycacheignoreresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="abstractquerycacheresulttransformertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enrolment.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enrolment" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="student" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
        <xs:element name="studentnumber" type="xs:long" />
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="year" type="xs:long" />
        <xs:element name="semester" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hqlquerycachenormalresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="hqlquerycacheputresulttransformertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriaquerycachenormalresulttransformertest" >
      <xs:complexContent>
       <xs:extension base="criteriaquerycacheputresulttransformertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integerpropertyvalue" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lines" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyset" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="somespecificproperty" type="propertyvalue" nillable="true" minOccurs="0" />
        <xs:element name="generalproperties" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="data" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="properties.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anytypetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="complexpropertyvalue" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="subproperties" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringpropertyvalue" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyvalue" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="heightinches" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselecttest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alien" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="identity" type="xs:string" />
        <xs:element name="planet" type="xs:string" />
        <xs:element name="species" type="xs:string" />
        <xs:element name="heightinches" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="being" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="identity" type="xs:string" />
        <xs:element name="location" type="xs:string" />
        <xs:element name="species" type="xs:string" />
        <xs:element name="heightinches" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressid" >
      <xs:sequence>
        <xs:element name="type" type="xs:string" />
        <xs:element name="customerid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typedonetoonetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="addressid" nillable="true" minOccurs="0" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="customerid" type="xs:string" />
        <xs:element name="billing" type="address" nillable="true" minOccurs="0" />
        <xs:element name="shipping" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="callbacktest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="observer" type="xs:anyType" />
          <xs:element name="listener" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcollectioneventtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childentity" >
      <xs:complexContent>
       <xs:extension base="childvalue">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentwithcollection" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuesbagcollectioneventtest" >
      <xs:complexContent>
       <xs:extension base="abstractcollectioneventtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentwithcollectionofvalues" >
      <xs:complexContent>
       <xs:extension base="abstractparentwithcollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuesbagmapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionlisteners" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="enerscalled" type="xs:anyType" />
          <xs:element name="events" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractparentwithcollection" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentwithbidirectionalonetomany" >
      <xs:complexContent>
       <xs:extension base="abstractparentwithcollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetomanybagmapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentwithbidirectionalonetomanysubclass" >
      <xs:complexContent>
       <xs:extension base="parentwithbidirectionalonetomany">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetomanysetmapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childwithmanytoone" >
      <xs:complexContent>
       <xs:extension base="childentity">
         <xs:sequence>
          <xs:element name="parent" type="parentwithcollection" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmanytomanybagtosetmapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentwithbidirectionalmanytomany" >
      <xs:complexContent>
       <xs:extension base="abstractparentwithcollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childwithbidirectionalmanytomany" >
      <xs:complexContent>
       <xs:extension base="childentity">
         <xs:sequence>
          <xs:element name="parents" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmanytomanysettosetmapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractassociationcollectioneventtest" >
      <xs:complexContent>
       <xs:extension base="abstractcollectioneventtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalmanytomanybagmapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentwithcollectionofentities" >
      <xs:complexContent>
       <xs:extension base="abstractparentwithcollection">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetomanysetmapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetomanybagmapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childvalue" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="brokencollectioneventtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="accountid" type="xs:string" />
        <xs:element name="user" type="person" nillable="true" minOccurs="0" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyreftest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="userid" type="xs:string" />
        <xs:element name="accounts" type="xs:anyType" />
        <xs:element name="systems" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="managedobject" >
      <xs:sequence>
        <xs:element name="moid" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="displayname" type="xs:string" />
        <xs:element name="members" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachedpropertyrefcollectiontest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="personid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unionsubclasspropertyreftest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="accountid" type="xs:string" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="customerid" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="accountid" type="xs:string" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="personid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclasspropertyreftest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="customerid" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="accountid" type="xs:string" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="bankaccount" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedsubclasspropertyreftest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bankaccount" >
      <xs:complexContent>
       <xs:extension base="account">
         <xs:sequence>
          <xs:element name="accountnumber" type="xs:string" />
          <xs:element name="bsb" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="identity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="owner" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="completecomponentpropertyreftest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="owner" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partialcomponentpropertyreftest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="identity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="info" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="details" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="container" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="info" nillable="true" minOccurs="0" />
        <xs:element name="datapoints" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testfetchallexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testispropertyinitializedexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlazymanytooneexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testmanytooneproxyexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testdirtycheckexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractexecutable" >
      <xs:sequence>
        <xs:element name="factory" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testlazypropertycustomtypeexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="executable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcustomcolumnreadandwrite" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testinjectfieldinterceptorexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testsharedpkonetooneexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testlazyexecutable" >
      <xs:complexContent>
       <xs:extension base="abstractexecutable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttransformingclassloaderinstrumenttestcase" >
      <xs:complexContent>
       <xs:extension base="abstractclassloaderisolatedtestcase">
         <xs:sequence>
          <xs:element name="sig" type="xs:anyType" />
          <xs:element name="args" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="javassistinstrumentationtest" >
      <xs:complexContent>
       <xs:extension base="abstracttransformingclassloaderinstrumenttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cglibinstrumentationtest" >
      <xs:complexContent>
       <xs:extension base="abstracttransformingclassloaderinstrumenttestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetooneproxy" >
      <xs:sequence>
        <xs:element name="entityid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entity" type="entitywithonetoones" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="child" type="entity" nillable="true" minOccurs="0" />
        <xs:element name="sibling" type="entity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithonetoones" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="onetoonenoproxy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="onetooneproxy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="uppercasename" type="xs:string" />
        <xs:element name="summary" type="xs:string" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="GeneratedName" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="folder" nillable="true" minOccurs="0" />
        <xs:element name="sizekb" type="xs:double" />
        <xs:element name="lasttextmodification" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
        <xs:element name="subfolders" type="xs:anyType" />
        <xs:element name="documents" type="xs:anyType" />
        <xs:element name="namewasread" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonenoproxy" >
      <xs:sequence>
        <xs:element name="entityid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entity" type="entitywithonetoones" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="problematic.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="problematic" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="s" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customblobtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instrumenttest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="failureexpectedcollector" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employment" >
      <xs:sequence>
        <xs:element name="employmentid" type="xs:long" />
        <xs:element name="employee" type="person" nillable="true" minOccurs="0" />
        <xs:element name="employer" type="organization" nillable="true" minOccurs="0" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="regioncode" type="xs:string" />
        <xs:element name="salary" type="monetaryamount" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlqueriestest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativesqlqueries.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="imageholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="photo" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="orders" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="speech" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="length" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetaryamount" >
      <xs:sequence>
        <xs:element name="value" type="xs:anyType" />
        <xs:element name="GeneratedName" type="currency" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customstoredproctestsupport" >
      <xs:complexContent>
       <xs:extension base="customsqltestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclecustomsqltest" >
      <xs:complexContent>
       <xs:extension base="customstoredproctestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="storedprocedures.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="db2customsqltest" >
      <xs:complexContent>
       <xs:extension base="customstoredproctestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datadirectoraclecustomsqltest" >
      <xs:complexContent>
       <xs:extension base="customstoredproctestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="storedprocedures.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlservercustomsqltest" >
      <xs:complexContent>
       <xs:extension base="customstoredproctestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customsqltestsupport" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlcustomsqltest" >
      <xs:complexContent>
       <xs:extension base="customstoredproctestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sybasecustomsqltest" >
      <xs:complexContent>
       <xs:extension base="customstoredproctestsupport">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dimension" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="width" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spaceship" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="speed" type="xs:double" />
        <xs:element name="s" type="dimension" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativesqlandquotedidentifierstest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="orderid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custominsertsqlwithidentitycolumntest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="persons" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetaryamountusertype" >
      <xs:sequence>
        <xs:element name="sql_types" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="organization" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="employments" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="textholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paramcheckingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="oraclecheckstyletest" >
      <xs:complexContent>
       <xs:extension base="resultcheckstyletest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultcheckstyletest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="exceptioncheckingentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="memberships" type="membership" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="memberships" type="membership" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="membership" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="member" type="user" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="group" nillable="true" minOccurs="0" />
        <xs:element name="join" type="xs:dateTime" />
        <xs:element name="dues" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autodiscoverytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="query_" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parts" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapcompositeelementtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="part" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="code" type="xs:string" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="productpart.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="details" type="personaldetails" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competitor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoone.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employees" type="xs:anyType" />
        <xs:element name="vers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergetest" >
      <xs:complexContent>
       <xs:extension base="abstractoperationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="numberednode" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="numberednode" nillable="true" minOccurs="0" />
        <xs:element name="children" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personaldetails" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="somepersonaldetail" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getloadtest" >
      <xs:complexContent>
       <xs:extension base="abstractoperationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestampedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="timestamp" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competition" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="competitors" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="parent" type="versionedentity" nillable="true" minOccurs="0" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competition.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletetest" >
      <xs:complexContent>
       <xs:extension base="abstractoperationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optlockentity.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="saveorupdatetest" >
      <xs:complexContent>
       <xs:extension base="abstractoperationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="streetaddress" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="resident" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractoperationtestcase" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="oldtonewentityrefs" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
        <xs:element name="parent" type="node" nillable="true" minOccurs="0" />
        <xs:element name="children" type="xs:anyType" />
        <xs:element name="cascadingchildren" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="createtest" >
      <xs:complexContent>
       <xs:extension base="abstractoperationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="other" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aggressivereleasetest" >
      <xs:complexContent>
       <xs:extension base="connectionmanagementtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="silly.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="threadlocalcurrentsessiontest" >
      <xs:complexContent>
       <xs:extension base="connectionmanagementtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="currentsessionconnectiontest" >
      <xs:complexContent>
       <xs:extension base="aggressivereleasetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicconnectionprovidertest" >
      <xs:complexContent>
       <xs:extension base="connectionmanagementtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="silly" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="other" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="suppliedconnectiontest" >
      <xs:complexContent>
       <xs:extension base="connectionmanagementtestcase">
         <xs:sequence>
          <xs:element name="cp" type="xs:anyType" />
          <xs:element name="undertest" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatecreateblobfailedcase" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="connectionmanagementtestcase" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alien" >
      <xs:complexContent>
       <xs:extension base="being">
         <xs:sequence>
          <xs:element name="species" type="xs:string" />
          <xs:element name="" type="hive" nillable="true" minOccurs="0" />
          <xs:element name="hivemates" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hive" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="location" nillable="true" minOccurs="0" />
        <xs:element name="members" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="being" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="identity" type="xs:string" />
        <xs:element name="GeneratedName" type="location" nillable="true" minOccurs="0" />
        <xs:element name="things" type="xs:anyType" />
        <xs:element name="info" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="carbuyer" >
      <xs:complexContent>
       <xs:extension base="customer">
         <xs:sequence>
          <xs:element name="sellername" type="xs:string" />
          <xs:element name="pid" type="xs:string" />
          <xs:element name="" type="seller" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sellcartest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="num" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="seller" >
      <xs:sequence>
        <xs:element name="id" type="personid" nillable="true" minOccurs="0" />
        <xs:element name="buyers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="personid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thing" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="owner" type="being" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unionsubclasstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="human">
         <xs:sequence>
          <xs:element name="salary" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="beings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:complexContent>
       <xs:extension base="being">
         <xs:sequence>
          <xs:element name="sex" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="extendstest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="sex" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="comments" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="packageentitynames.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="allseparateinone.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitynames.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="allinone.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unionsubclass.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auction.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auctiontest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="auctiontest2" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="item" type="auction" nillable="true" minOccurs="0" />
        <xs:element name="amount" type="xs:anyType" />
        <xs:element name="successful" type="xs:anyType" />
        <xs:element name="time" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auction" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="bids" type="xs:anyType" />
        <xs:element name="successful" type="bid" nillable="true" minOccurs="0" />
        <xs:element name="end" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="auction2.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statelesssessiontest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contact.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="org" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="org" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paper" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="color" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="task" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="user" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="resource" nillable="true" minOccurs="0" />
        <xs:element name="due" type="xs:dateTime" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="completion" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resource" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="owner" type="user" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statelesssessionfetchingtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="text" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lastmodified" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statelesssessionquerytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerid" >
      <xs:sequence>
        <xs:element name="orgname" type="xs:string" />
        <xs:element name="customername" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="orgname" type="xs:string" />
        <xs:element name="customername" type="xs:string" />
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclasstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="favoritecustomer" >
      <xs:complexContent>
       <xs:extension base="customer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typeparametertest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typedef.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="widget" >
      <xs:sequence>
        <xs:element name="valueone" type="xs:long" />
        <xs:element name="valuetwo" type="xs:long" />
        <xs:element name="valuethree" type="xs:long" />
        <xs:element name="valuefour" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultvalueintegertype" >
      <xs:sequence>
        <xs:element name="defaultvalue" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="widget.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idbagtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="groups" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usergroup.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheableitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inserteddatatest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="cars" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicle" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="vin" type="xs:string" />
        <xs:element name="owner" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitynamefromsubclasstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:complexContent>
       <xs:extension base="vehicle">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vehicle.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm-serializable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cacheablefiletest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
          <xs:element name="mapping" type="xs:string" />
          <xs:element name="mapping" type="file" nillable="true" minOccurs="0" />
          <xs:element name="mappingbin" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listenertest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cacheable.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationserializationtest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
          <xs:element name="files" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="portal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="windows" type="window" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persisterclassprovidertest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="goofyexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="value" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="goofypersisterclassprovider" >
      <xs:complexContent>
       <xs:extension base="entitypersister>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gate" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="window" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="party" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="contract" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="infos" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithinverseonetomanyjointest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractvariationonetomanyjoin.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedentitywithinverseonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractvariationversionedonetomanyjoin.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithinverseonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractvariationversioned.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contractvariation.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedentitywithinversemanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithmanytomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithinversemanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithmanytomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionedentitywithinverseonetomanyjointest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractvariation.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithnoninverseonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithnoninverseonetomanyunidirtest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractvariationversioned.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedentitywithnoninversemanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithmanytomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionedentitywithnoninverseonetomanyjointest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractvariationunidir.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithnoninverseonetomanyjointest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractvariationversionedonetomanyjoin.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithnoninversemanytomanyunidirtest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithmanytomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractvariationonetomanyjoin.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedentitywithnoninverseonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithonetomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithnoninversemanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractentitywithmanytomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="plan" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="contracts" type="xs:anyType" />
        <xs:element name="infos" type="xs:anyType" />
        <xs:element name="GeneratedName" type="owner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contract" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="customername" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="variations" type="xs:anyType" />
        <xs:element name="parent" type="contract" nillable="true" minOccurs="0" />
        <xs:element name="subcontracts" type="xs:anyType" />
        <xs:element name="plans" type="xs:anyType" />
        <xs:element name="parties" type="xs:anyType" />
        <xs:element name="infos" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contractvariation" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="contract" nillable="true" minOccurs="0" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="infos" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="info" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractentitywithonetomanytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="iscontractpartiesinverse" type="xs:anyType" />
          <xs:element name="iscontractpartiesbidirectional" type="xs:anyType" />
          <xs:element name="iscontractvariationsbidirectional" type="xs:anyType" />
          <xs:element name="iscontractversioned" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="plan" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractentitywithmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="isplancontractsinverse" type="xs:anyType" />
          <xs:element name="isplancontractsbidirectional" type="xs:anyType" />
          <xs:element name="isplanversioned" type="xs:anyType" />
          <xs:element name="iscontractversioned" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="plan" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="contracts" type="xs:anyType" />
        <xs:element name="infos" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="party" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="contract" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="infos" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutabletest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contractvariation.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contractvariation" >
      <xs:sequence>
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="contract" nillable="true" minOccurs="0" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="infos" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="info" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contract" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="customername" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="variations" type="xs:anyType" />
        <xs:element name="parent" type="contract" nillable="true" minOccurs="0" />
        <xs:element name="subcontracts" type="xs:anyType" />
        <xs:element name="plans" type="xs:anyType" />
        <xs:element name="parties" type="xs:anyType" />
        <xs:element name="infos" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentidbagtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idbagowner" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parts" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="part" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkey" >
      <xs:sequence>
        <xs:element name="role" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="backrefcompositemapkeytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentmaptest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentlisttest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="listowner" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="listowner" nillable="true" minOccurs="0" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentsettest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="container" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="contents" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingsnonlazy.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentsetnonlazytest" >
      <xs:complexContent>
       <xs:extension base="persistentsettest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentbagtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bagowner" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="bagowner" nillable="true" minOccurs="0" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userpermissions.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="boolvar" type="xs:anyType" />
        <xs:element name="GeneratedName" type="zoo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="email" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zoo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="animals" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mammal" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="mammalname" type="xs:string" />
          <xs:element name="mammalname2" type="xs:string" />
          <xs:element name="mammalname3" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectiontest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="zoo.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="permissions" type="xs:anyType" />
        <xs:element name="emailaddresses" type="xs:anyType" />
        <xs:element name="sessiondata" type="xs:anyType" />
        <xs:element name="sessionattributenames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="permission" >
      <xs:sequence>
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customers" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="specified_column" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customers.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testnamingstrategy" >
      <xs:complexContent>
       <xs:extension base="defaultnamingstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namingstrategytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="citystate" >
      <xs:sequence>
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="coursemeeting" >
      <xs:sequence>
        <xs:element name="id" type="coursemeetingid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractfoo" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testobject.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringexpression" >
      <xs:complexContent>
       <xs:extension base="likeexpression">
         <xs:sequence>
          <xs:element name="escape_code" type="character" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="liketest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="animal.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="studentdto" >
      <xs:sequence>
        <xs:element name="studentname" type="xs:string" />
        <xs:element name="coursedescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enrolment" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="student" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
        <xs:element name="studentnumber" type="xs:long" />
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="year" type="xs:long" />
        <xs:element name="semester" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="coursemeetings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="greatfoo" >
      <xs:complexContent>
       <xs:extension base="abstractfoo">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="testobject" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="myfoo" type="abstractfoo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaquerytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="coursemeetingid" >
      <xs:sequence>
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="day" type="xs:string" />
        <xs:element name="period" type="xs:long" />
        <xs:element name="location" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enrolment.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outerjoincriteriatest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="1" type="order" nillable="true" minOccurs="0" />
          <xs:element name="2" type="order" nillable="true" minOccurs="0" />
          <xs:element name="3" type="order" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="orderid" type="xs:long" />
        <xs:element name="orderlines" type="orderline" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="studentnumber" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="citystate" nillable="true" minOccurs="0" />
        <xs:element name="preferred" type="course" nillable="true" minOccurs="0" />
        <xs:element name="enrolments" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longinelementstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="elements_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orderline" >
      <xs:sequence>
        <xs:element name="lineid" type="xs:long" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="articleid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:complexContent>
       <xs:extension base="item">
         <xs:sequence>
          <xs:element name="content" type="xs:anyType" />
          <xs:element name="modified" type="xs:anyType" />
          <xs:element name="created" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securedocument" >
      <xs:complexContent>
       <xs:extension base="document">
         <xs:sequence>
          <xs:element name="permissionbits" type="xs:anyType" />
          <xs:element name="owner" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:complexContent>
       <xs:extension base="item">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mixedtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="documentinterceptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="search" >
      <xs:sequence>
        <xs:element name="search" type="xs:string" />
        <xs:element name="searchresults" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="search.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentity.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="selectgeneratortest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequenceidentitytest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentity.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mychild" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="inverseparent" type="myentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mysibling" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="entity" type="myentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sibling" type="mysibling" nillable="true" minOccurs="0" />
        <xs:element name="noninversechildren" type="xs:anyType" />
        <xs:element name="inversechildren" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentity.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identitygeneratedkeystest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="iteratetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testintersystemsfunctionsclass" >
      <xs:sequence>
        <xs:element name="date3" type="xs:anyType" />
        <xs:element name="date1" type="xs:anyType" />
        <xs:element name="date" type="xs:anyType" />
        <xs:element name="datetext" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testintersystemsfunctionsclass.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfunctionsintersystemstest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlockhinttest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverlockhintstest" >
      <xs:complexContent>
       <xs:extension base="abstractlockhinttest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sybaselockhintstest" >
      <xs:complexContent>
       <xs:extension base="abstractlockhinttest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sybasease15lockhintstest" >
      <xs:complexContent>
       <xs:extension base="abstractlockhinttest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ansitrimemulationfunctiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="trimsource" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlroundfunctiontest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="weight" type="xs:long" />
        <xs:element name="price" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dialectdetectwithoutmetadatatest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bean" >
      <xs:sequence>
        <xs:element name="some" type="xs:string" />
        <xs:element name="some" type="xs:long" />
        <xs:element name="some" type="xs:anyType" />
        <xs:element name="some" type="xs:dateTime" />
        <xs:element name="some" type="xs:long" />
        <xs:element name="some" type="xs:long" />
        <xs:element name="some" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflectionoptimizertest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="invocationtargetexceptiontest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanreflectionhelper" >
      <xs:sequence>
        <xs:element name="test_values" type="xs:anyType" />
        <xs:element name="getternames" type="xs:string" />
        <xs:element name="setternames" type="xs:string" />
        <xs:element name="types" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bean.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxybean" >
      <xs:sequence>
        <xs:element name="some" type="xs:string" />
        <xs:element name="some" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflectionoptimizertest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cglibthreadlocaltest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="invocationtargetexceptiontest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readonlyversionednodestest" >
      <xs:complexContent>
       <xs:extension base="abstractreadonlytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readonlycriteriaquerytest" >
      <xs:complexContent>
       <xs:extension base="abstractreadonlytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="studentdto" >
      <xs:sequence>
        <xs:element name="studentname" type="xs:string" />
        <xs:element name="coursedescription" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readonlyproxytest" >
      <xs:complexContent>
       <xs:extension base="abstractreadonlytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="textholder.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="studentnumber" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="preferred" type="course" nillable="true" minOccurs="0" />
        <xs:element name="enrolments" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readonlysessionlazynonlazytest" >
      <xs:complexContent>
       <xs:extension base="abstractreadonlytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="container" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="noproxy" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="proxy" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="nonlazy" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="noproxy" type="info" nillable="true" minOccurs="0" />
        <xs:element name="proxy" type="info" nillable="true" minOccurs="0" />
        <xs:element name="nonlazy" type="info" nillable="true" minOccurs="0" />
        <xs:element name="lazydatapoints" type="xs:anyType" />
        <xs:element name="nonlazyjoindatapoints" type="xs:anyType" />
        <xs:element name="nonlazyselectdatapoints" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enrolment" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="student" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
        <xs:element name="studentnumber" type="xs:long" />
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="year" type="xs:long" />
        <xs:element name="semester" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="info" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="details" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionednode" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="parent" type="versionednode" nillable="true" minOccurs="0" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readonlysessiontest" >
      <xs:complexContent>
       <xs:extension base="abstractreadonlytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionednode.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="textholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="thetext" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractreadonlytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="readonlytest" >
      <xs:complexContent>
       <xs:extension base="abstractreadonlytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enrolment.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="union-subclass.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="contactowner" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="department" type="xs:string" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="minions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joined-subclass.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="company" type="xs:string" />
        <xs:element name="region" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discrim-subclass.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedsubclassfiltertest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unionsubclassfiltertest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discrimsubclassfiltertest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mail" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="alias" type="xs:string" />
        <xs:element name="GeneratedName" type="user" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="userid" type="xs:string" />
        <xs:element name="mail" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orphantest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="part" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyreftest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="employeeinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteonetooneorphanstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeeinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteonetooneorphanstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="employeeinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeinfo" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="employeeinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteonetooneorphanstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deleteonetooneorphanstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeeinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="employeeinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteonetooneorphanstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="employeeinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deleteonetooneorphanstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="employeeinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parts" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cmttest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="importfiletest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="human.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="master" type="human" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidmapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="invalidmapping" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="username" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappingexceptiontest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lineitem.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="effectivestart" type="xs:dateTime" />
        <xs:element name="effectiveend" type="xs:dateTime" />
        <xs:element name="products" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="//foreaseofhashcode()implstocknumber" type="xs:long" />
        <xs:element name="effectivestart" type="xs:dateTime" />
        <xs:element name="effectiveend" type="xs:dateTime" />
        <xs:element name="weightpounds" type="xs:double" />
        <xs:element name="orderlineitems" type="xs:anyType" />
        <xs:element name="categories" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="salesperson" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="region" type="xs:string" />
        <xs:element name="hire" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="department" nillable="true" minOccurs="0" />
        <xs:element name="orders" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="salespersons" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="sequence" type="xs:long" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicfiltertest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defs.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="region" type="xs:string" />
        <xs:element name="placement" type="xs:dateTime" />
        <xs:element name="fulfillment" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="salesperson" nillable="true" minOccurs="0" />
        <xs:element name="buyer" type="xs:string" />
        <xs:element name="lineitems" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="user">
         <xs:sequence>
          <xs:element name="hire" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="user">
         <xs:sequence>
          <xs:element name="company" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="filter-defs.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicfilteredbulkmanipulationtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedfilteredbulkmanipulationtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basic.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joined.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="username" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentchild.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselectfetchtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="xs:anyType" />
        <xs:element name="morechildren" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="friends" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="comments" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discriminatortest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractoperationtestcase" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="competitor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="parent" type="versionedentity" nillable="true" minOccurs="0" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="details" type="personaldetails" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employees" type="xs:anyType" />
        <xs:element name="vers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="streetaddress" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="resident" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personaldetails" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="somepersonaldetail" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="saveorupdatetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
        <xs:element name="parent" type="node" nillable="true" minOccurs="0" />
        <xs:element name="children" type="xs:anyType" />
        <xs:element name="cascadingchildren" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoone.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletetest" >
      <xs:complexContent>
       <xs:extension base="abstractoperationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestampedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="timestamp" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employers" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mergetest" >
      <xs:complexContent>
       <xs:extension base="abstractoperationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="getloadtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="competition.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="numberednode" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="numberednode" nillable="true" minOccurs="0" />
        <xs:element name="children" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="created" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optlockentity.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="createtest" >
      <xs:complexContent>
       <xs:extension base="abstractoperationtestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="competition" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="competitors" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="title" type="xs:string" />
        <xs:element name="content" type="xs:string" />
        <xs:element name="owner" type="user" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usergroup.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionattribute" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="objectdata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="extralazytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="session" type="xs:anyType" />
        <xs:element name="documents" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutablenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="org" type="xs:string" />
        <xs:element name="password" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutableentitynaturalidtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentchildwithmanytoone.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutablenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="myuserid" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="email" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usergroup.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="org" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="users" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="org" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="groups" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderedmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usergroup.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="org" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="groups" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="org" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="users" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchedmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="user" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usergroupbatchload.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="groups" type="group" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plane.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customstrategytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="node" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uuidbinarytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="node.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uuidchartest" >
      <xs:complexContent>
       <xs:extension base="uuidbinarytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="radio.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="color" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plane" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="nbrofseats" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplehilopertablegeneratortest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="radio" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="frequency" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="useidentifierrollbacktest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="password" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapelementformulatest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usergroup.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="memberships" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractmanytomanyassociationclasstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="" type="user" nillable="true" minOccurs="0" />
          <xs:element name="" type="group" nillable="true" minOccurs="0" />
          <xs:element name="" type="membership" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="membershipwithcompositeid" >
      <xs:complexContent>
       <xs:extension base="membership">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanyassociationclasscompositeidtest" >
      <xs:complexContent>
       <xs:extension base="abstractmanytomanyassociationclasstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="memberships" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanyassociationclassassignedidtest" >
      <xs:complexContent>
       <xs:extension base="abstractmanytomanyassociationclasstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytomanyassociationclassgeneratedidtest" >
      <xs:complexContent>
       <xs:extension base="abstractmanytomanyassociationclasstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="membership" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="user" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="group" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazykeymanytoonetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagermapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazymapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eagerkeymanytoonetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="items" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="orders" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keymanytoonetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="items" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="orders" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="hire" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="optionalcomponent" nillable="true" minOccurs="0" />
        <xs:element name="directreports" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optionalcomponent" >
      <xs:sequence>
        <xs:element name="value1" type="xs:string" />
        <xs:element name="value2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="dob" type="xs:dateTime" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="currentaddress" type="xs:string" />
        <xs:element name="previousaddress" type="xs:string" />
        <xs:element name="yob" type="xs:long" />
        <xs:element name="heightinches" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lastmodified" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componenttest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetocomponentcollectiontest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="value" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="definition" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="localizedstrings" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="definition" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="values" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="localizedstrings" >
      <xs:sequence>
        <xs:element name="strings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetocomponentassociationtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="personalinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personalinfo" >
      <xs:sequence>
        <xs:element name="home" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="street1" type="xs:string" />
        <xs:element name="street2" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zipcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="location" type="xs:string" />
        <xs:element name="owner" type="user" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeusertypetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="types.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transaction.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetoryamountusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetoryamount" >
      <xs:sequence>
        <xs:element name="amount" type="xs:anyType" />
        <xs:element name="GeneratedName" type="currency" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transaction" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="value" type="monetoryamount" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mutualfund" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="holdings" type="monetoryamount" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detail" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="master" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="details" type="xs:string" />
        <xs:element name="currentversion" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formulajointest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="master.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="master" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="detail" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datapoint.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="batchtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addressimpl" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="addresstype" type="xs:string" />
        <xs:element name="GeneratedName" type="server" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serverimpl" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="servertype" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcomponentpropertyreftest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="server" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myinterface" >
      <xs:complexContent>
       <xs:extension base="serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcompositeidtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myinterfaceimpl" >
      <xs:sequence>
        <xs:element name="key1" type="xs:string" />
        <xs:element name="key2" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="courseoffering" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="course" nillable="true" minOccurs="0" />
        <xs:element name="semester" type="xs:long" />
        <xs:element name="year" type="xs:long" />
        <xs:element name="enrollments" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinfetchprofiletest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="sections" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enrollment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="offering" type="courseoffering" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="student" nillable="true" minOccurs="0" />
        <xs:element name="grade" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="comment" >
      <xs:sequence>
        <xs:element name="text" type="xs:string" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="timestamp" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinfetchtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="amount" type="xs:double" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="timestamp" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="groups" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="description" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="category" nillable="true" minOccurs="0" />
        <xs:element name="bids" type="xs:anyType" />
        <xs:element name="comments" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="itembid.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usergroup.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="log" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="entityid" type="xs:string" />
        <xs:element name="action" type="xs:string" />
        <xs:element name="time" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectioninterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statefulinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="image.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instantiateinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
          <xs:element name="injected" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="image" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="actions" type="xs:anyType" />
        <xs:element name="lastupdated" type="xs:anyType" />
        <xs:element name="created" type="xs:anyType" />
        <xs:element name="injected" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptortest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="addresses" type="xs:anyType" />
        <xs:element name="friends" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="suite" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="location" type="xs:string" />
        <xs:element name="notes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="info" type="xs:string" />
        <xs:element name="suites" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="note" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deletetransiententitytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="astutiltest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
          <xs:element name="factory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="astiteratortest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
          <xs:element name="factory" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="dob" type="xs:dateTime" />
        <xs:element name="currentaddress" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="timestamptest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lastmodified" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="locality" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="continent" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="countries" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="continent.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="province" >
      <xs:complexContent>
       <xs:extension base="locality">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="continent2.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionstatstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:complexContent>
       <xs:extension base="locality">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ab.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dom4jtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dom4jaccessortest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="dom" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
        <xs:element name="reference" type="componentreference" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentreference" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dom4jcomponenttest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="component" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="carpart" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="partname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cartype" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="typename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="GeneratedName" type="cartype" nillable="true" minOccurs="0" />
        <xs:element name="carparts" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dom4jmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuation" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="stock" nillable="true" minOccurs="0" />
        <xs:element name="valuation" type="xs:dateTime" />
        <xs:element name="value" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stock" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="tradesymbol" type="xs:string" />
        <xs:element name="current" type="valuation" nillable="true" minOccurs="0" />
        <xs:element name="valuations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multirepresentationtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuation.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stock.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subclassdynamicmaptest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicclasstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tuplizerdynamicentitytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitynameinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentityinstantiator" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentitytuplizer" >
      <xs:complexContent>
       <xs:extension base="pojoentitytuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="improvedtuplizerdynamicentitytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentitytuplizer" >
      <xs:complexContent>
       <xs:extension base="pojoentitytuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentityinstantiator" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dataproxyhandler" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="data" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interceptordynamicentitytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxyinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course" >
      <xs:sequence>
        <xs:element name="coursecode" type="xs:string" />
        <xs:element name="org" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="universitycourse" >
      <xs:complexContent>
       <xs:extension base="course">
         <xs:sequence>
          <xs:element name="semester" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedcompositeidtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="distinctselecttest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="num_of_users" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datapoint" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="sequence" type="xs:long" />
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paginationtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="rows" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datapoint.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entry" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="tags" type="tag" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tag" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="surrogate" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entrytag.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="s" type="b" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arraytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeelementtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="bio" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="biolength" type="xs:long" />
        <xs:element name="position" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="image.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stateprovince" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="isocode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pettingzoo" >
      <xs:complexContent>
       <xs:extension base="zoo">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classification" >
      <xs:sequence>
        <xs:element name="cool" type="classification" nillable="true" minOccurs="0" />
        <xs:element name="lame" type="classification" nillable="true" minOccurs="0" />
        <xs:element name="instances" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="ordinal" type="xs:long" />
        <xs:element name="hashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bulkmanipulationtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classictranslatortest" >
      <xs:complexContent>
       <xs:extension base="querytranslatortestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="zoo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="classification" nillable="true" minOccurs="0" />
        <xs:element name="directors" type="xs:anyType" />
        <xs:element name="animals" type="xs:anyType" />
        <xs:element name="mammals" type="xs:anyType" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="querytranslatortestcase" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="suv" >
      <xs:complexContent>
       <xs:extension base="truck">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="booleanliteralentity.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keymanytoonekeyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="criteriaclassicaggregationreturntest" >
      <xs:complexContent>
       <xs:extension base="querytranslatortestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriahqlalignmenttest" >
      <xs:complexContent>
       <xs:extension base="querytranslatortestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestampversioned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:dateTime" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keymanytooneentity.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:complexContent>
       <xs:extension base="domesticanimal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentcontainer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="variouskeywordpropertyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="key" type="xs:string" />
        <xs:element name="entry" type="xs:string" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="booleanliteralentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="yesno" type="xs:anyType" />
        <xs:element name="truefalse" type="xs:anyType" />
        <xs:element name="zeroone" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joiner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="joinedname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:complexContent>
       <xs:extension base="domesticanimal">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejbqltest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="functionnamesascolumns.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lizard" >
      <xs:complexContent>
       <xs:extension base="reptile">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="integerversioned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vehicle.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithfunctionascolumnholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="nextholder" type="entitywithfunctionascolumnholder" nillable="true" minOccurs="0" />
        <xs:element name="entitywithargfunctionascolumns" type="xs:anyType" />
        <xs:element name="entitywithnoargfunctionascolumns" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="image" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sizekb" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithcrazycompositekey" >
      <xs:sequence>
        <xs:element name="id" type="crazycompositekey" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="postalcode" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="GeneratedName" type="stateprovince" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentcontainer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="bodyweight" type="xs:double" />
        <xs:element name="offspring" type="xs:anyType" />
        <xs:element name="mother" type="animal" nillable="true" minOccurs="0" />
        <xs:element name="father" type="animal" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="zoo" nillable="true" minOccurs="0" />
        <xs:element name="serialnumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="GeneratedName" type="human" nillable="true" minOccurs="0" />
        <xs:element name="permissions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithnoargfunctionascolumn" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="user" type="xs:string" />
        <xs:element name="currentdate" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:complexContent>
       <xs:extension base="vehicle">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="heresanothercrazyidfieldname" >
      <xs:sequence>
        <xs:element name="heresanothercrazyidfieldname" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleentitywithassociation.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="keymanytooneentity" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simpleassociatedentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="owner" type="simpleentitywithassociation" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foobarcopy.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="crazyidfieldnames.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hqlparsertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="domesticanimal" >
      <xs:complexContent>
       <xs:extension base="mammal">
         <xs:sequence>
          <xs:element name="owner" type="human" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classificationtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="human" >
      <xs:complexContent>
       <xs:extension base="mammal">
         <xs:sequence>
          <xs:element name="" type="name" nillable="true" minOccurs="0" />
          <xs:element name="nickname" type="xs:string" />
          <xs:element name="friends" type="xs:anyType" />
          <xs:element name="pets" type="xs:anyType" />
          <xs:element name="family" type="xs:anyType" />
          <xs:element name="heightinches" type="xs:double" />
          <xs:element name="value" type="xs:anyType" />
          <xs:element name="value" type="xs:anyType" />
          <xs:element name="value" type="xs:long" />
          <xs:element name="value" type="xs:double" />
          <xs:element name="nicknames" type="xs:anyType" />
          <xs:element name="addresses" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="variouskeywordpropertyentity.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="truck" >
      <xs:complexContent>
       <xs:extension base="vehicle">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpleentitywithassociation" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="negatednumber" type="xs:anyType" />
        <xs:element name="associatedentities" type="xs:anyType" />
        <xs:element name="manytomanyassociatedentities" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astparserloadingtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="createdanimalids" type="xs:anyType" />
          <xs:element name="default_preparer" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="name" >
      <xs:sequence>
        <xs:element name="first" type="xs:string" />
        <xs:element name="initial" type="character" nillable="true" minOccurs="0" />
        <xs:element name="last" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="animal.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="functionnameascolumntest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reptile" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="bodytemperature" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hqltest" >
      <xs:complexContent>
       <xs:extension base="querytranslatortestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="withclausetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="crazycompositekey" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="otherid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versions.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitywithcrazycompositekey.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pickup" >
      <xs:complexContent>
       <xs:extension base="truck">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vehicle" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="vin" type="xs:string" />
        <xs:element name="owner" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="scrollablecollectionfetchingtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mammal" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="pregnant" type="xs:anyType" />
          <xs:element name="birth" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitywithargfunctionascolumn" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lower" type="xs:long" />
        <xs:element name="upper" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="morecrazyidfieldnamestuffentity" >
      <xs:sequence>
        <xs:element name="morecrazyidfieldnamestuffentity" type="xs:long" />
        <xs:element name="//sillyain'tit)" type="heresanothercrazyidfieldname" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="astparserloadingorderbytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="" type="stateprovince" nillable="true" minOccurs="0" />
          <xs:element name="1" type="zoo" nillable="true" minOccurs="0" />
          <xs:element name="2" type="zoo" nillable="true" minOccurs="0" />
          <xs:element name="3" type="zoo" nillable="true" minOccurs="0" />
          <xs:element name="4" type="zoo" nillable="true" minOccurs="0" />
          <xs:element name="zooswithsamename" type="zoo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="zooswithsameaddress" type="zoo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="zoo11" type="mammal" nillable="true" minOccurs="0" />
          <xs:element name="zoo12" type="mammal" nillable="true" minOccurs="0" />
          <xs:element name="zoo2director1" type="human" nillable="true" minOccurs="0" />
          <xs:element name="zoo2director2" type="human" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="members" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="memberships" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlexceptionconversiontest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="passwordexpirydays" type="xs:double" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="comments" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unionsubclasstest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
        <xs:element name="heightinches" type="xs:double" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="sex" type="xs:anyType" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="salesperson" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="salesperson" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="customers" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ondeletetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="partiallygeneratedcomponenttest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestampgeneratedvalueswithcachingtest" >
      <xs:complexContent>
       <xs:extension base="abstractgeneratedpropertytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractgeneratedpropertytest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentowner.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="triggergeneratedvalueswithcachingtest" >
      <xs:complexContent>
       <xs:extension base="abstractgeneratedpropertytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generatedpropertyentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lastmodified" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generatedpropertyentity.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="triggergeneratedvalueswithoutcachingtest" >
      <xs:complexContent>
       <xs:extension base="abstractgeneratedpropertytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mssqlgeneratedpropertyentity.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="component" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lazyonetoonetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="personname" type="xs:string" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="employments" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employment" >
      <xs:sequence>
        <xs:element name="personname" type="xs:string" />
        <xs:element name="organizationname" type="xs:string" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="point" >
      <xs:sequence>
        <xs:element name="x" type="xs:anyType" />
        <xs:element name="y" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="row" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="point.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rowidtype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rowidtest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="typedmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="addressid" >
      <xs:sequence>
        <xs:element name="type" type="xs:string" />
        <xs:element name="addressid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="customerid" type="xs:string" />
        <xs:element name="billing" type="address" nillable="true" minOccurs="0" />
        <xs:element name="shipping" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="addressid" nillable="true" minOccurs="0" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fumcompositeid" >
      <xs:sequence>
        <xs:element name="_" type="xs:string" />
        <xs:element name="date_" type="xs:anyType" />
        <xs:element name="_" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ijtest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="glarch.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="glarchproxy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sortable" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medication" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.test.legacy.intervention">
         <xs:sequence>
          <xs:element name="prescribeddrug" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fooproxy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ij2test" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="reversecomparator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="several" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="prop" type="xs:string" />
        <xs:element name="GeneratedName" type="single" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlloadertest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
          <xs:element name="next" type="xs:long" />
          <xs:element name="next" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contained" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="container" nillable="true" minOccurs="0" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="bag" type="xs:anyType" />
        <xs:element name="lazybag" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xy.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeelement" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="intervention" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="circular.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abc.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutable.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="k" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="is" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="marelo.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="count" type="xs:long" />
        <xs:element name="date" type="xs:anyType" />
        <xs:element name="number" type="xs:double" />
        <xs:element name="other" type="simple" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basicnameable" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="master" >
      <xs:sequence>
        <xs:element name="other" type="master" nillable="true" minOccurs="0" />
        <xs:element name="details" type="xs:anyType" />
        <xs:element name="moredetails" type="xs:anyType" />
        <xs:element name="incoming" type="xs:anyType" />
        <xs:element name="outgoing" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stamp" type="xs:dateTime" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="x" type="xs:long" />
        <xs:element name="alldetails" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="maptest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="many" >
      <xs:sequence>
        <xs:element name="key" type="xs:long" />
        <xs:element name="GeneratedName" type="one" nillable="true" minOccurs="0" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fum.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nonreflectivebindertest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
          <xs:element name="cfg" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeidid.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="z" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="w" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baz.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blobber.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subdetail" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cachetest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c1" >
      <xs:complexContent>
       <xs:extension base="b{">
         <xs:sequence>
          <xs:element name="address" type="xs:string" />
          <xs:element name="c1name" type="xs:string" />
          <xs:element name="" type="c2" nillable="true" minOccurs="0" />
          <xs:element name="" type="d" nillable="true" minOccurs="0" />
          <xs:element name="c2s" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="broken" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="otherid" type="xs:string" />
        <xs:element name="timestamp" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="singleseveral.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stuff.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstract" >
      <xs:complexContent>
       <xs:extension base="foo">
         <xs:sequence>
          <xs:element name="time" type="xs:anyType" />
          <xs:element name="abstracts" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statisticstest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ij2.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplicitytype" >
      <xs:sequence>
        <xs:element name="prop_names" type="xs:string" />
        <xs:element name="sql_types" type="xs:long" />
        <xs:element name="s" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutable" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
        <xs:element name="bar" type="xs:string" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abcproxy.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="container.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="broken.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nameable.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="glarch" >
      <xs:complexContent>
       <xs:extension base="super">
         <xs:sequence>
          <xs:element name="version" type="xs:long" />
          <xs:element name="next" type="glarchproxy" nillable="true" minOccurs="0" />
          <xs:element name="order" type="xs:long" />
          <xs:element name="strings" type="xs:anyType" />
          <xs:element name="stringsets" type="xs:anyType" />
          <xs:element name="foocomponents" type="xs:anyType" />
          <xs:element name="proxyarray" type="glarchproxy" nillable="true" minOccurs="0" />
          <xs:element name="proxy" type="xs:anyType" />
          <xs:element name="//currencycurrency" type="xs:anyType" />
          <xs:element name="immutable" type="xs:string" />
          <xs:element name="derivedversion" type="xs:long" />
          <xs:element name="any" type="xs:anyType" />
          <xs:element name="x" type="xs:long" />
          <xs:element name="multiple" type="multiplicity" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="circular" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="clazz" type="xs:anyType" />
        <xs:element name="other" type="circular" nillable="true" minOccurs="0" />
        <xs:element name="anyentity" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="morestuff" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="stuffs" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="altsimple.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.test.legacy.party">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="givenname" type="xs:anyType" />
          <xs:element name="lastname" type="xs:anyType" />
          <xs:element name="nationalid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentnotnullmaster" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="test" type="xs:string" />
        <xs:element name="nullable" type="componentnotnull" nillable="true" minOccurs="0" />
        <xs:element name="supercomp" type="componentnotnull" nillable="true" minOccurs="0" />
        <xs:element name="components" type="xs:anyType" />
        <xs:element name="componentsimplicit" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.test.legacy.party">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="president" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="blobber" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fumtest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
          <xs:element name="fumkey" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="middle.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="qux" >
      <xs:sequence>
        <xs:element name="created" type="xs:anyType" />
        <xs:element name="deleted" type="xs:anyType" />
        <xs:element name="loaded" type="xs:anyType" />
        <xs:element name="stored" type="xs:anyType" />
        <xs:element name="key" type="xs:long" />
        <xs:element name="stuff" type="xs:string" />
        <xs:element name="fums" type="xs:anyType" />
        <xs:element name="morefums" type="xs:anyType" />
        <xs:element name="child" type="qux" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="childkey" type="xs:long" />
        <xs:element name="GeneratedName" type="holder" nillable="true" minOccurs="0" />
        <xs:element name="foo" type="fooproxy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="count" type="xs:long" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="down" >
      <xs:complexContent>
       <xs:extension base="up">
         <xs:sequence>
          <xs:element name="value" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="outer" >
      <xs:sequence>
        <xs:element name="id" type="outerkey" nillable="true" minOccurs="0" />
        <xs:element name="bubu" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="party" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="address" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mainobject.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
          <xs:element name="count" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="bname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multi.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="named" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one" >
      <xs:sequence>
        <xs:element name="key" type="xs:long" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="manies" type="xs:anyType" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiextends.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="masterdetail.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trivialclass" >
      <xs:complexContent>
       <xs:extension base="top">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="role" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="interventions" type="xs:anyType" />
        <xs:element name="bunchofstrings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="holder" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="ones" type="xs:anyType" />
        <xs:element name="array" type="foo" nillable="true" minOccurs="0" />
        <xs:element name="foos" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="other" type="holder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stuff" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="foo" type="fooproxy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="morestuff" nillable="true" minOccurs="0" />
        <xs:element name="property" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="holder.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractproxy" >
      <xs:complexContent>
       <xs:extension base="fooproxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resource" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="usercode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="s" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
        <xs:element name="count" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mono" >
      <xs:complexContent>
       <xs:extension base="top">
         <xs:sequence>
          <xs:element name="strings" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vetoer" >
      <xs:sequence>
        <xs:element name="onsavecalled" type="xs:anyType" />
        <xs:element name="onupdatecalled" type="xs:anyType" />
        <xs:element name="ondeletecalled" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="s" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="object2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="dummy" type="xs:string" />
        <xs:element name="belongstomainobj" type="mainobject" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nameable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fixed" >
      <xs:complexContent>
       <xs:extension base="broken">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fumm" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="fum" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fee.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fum" >
      <xs:sequence>
        <xs:element name="fum" type="xs:string" />
        <xs:element name="id" type="fumcompositeid" nillable="true" minOccurs="0" />
        <xs:element name="fo" type="fum" nillable="true" minOccurs="0" />
        <xs:element name="array" type="qux" nillable="true" minOccurs="0" />
        <xs:element name="friends" type="xs:anyType" />
        <xs:element name="lastupdated" type="xs:anyType" />
        <xs:element name="t" type="xs:string" />
        <xs:element name="vid" type="xs:long" />
        <xs:element name="dupe" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vetoer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="j" >
      <xs:complexContent>
       <xs:extension base="i">
         <xs:sequence>
          <xs:element name="amount" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="w" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="zeds" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middle" >
      <xs:sequence>
        <xs:element name="id" type="middlekey" nillable="true" minOccurs="0" />
        <xs:element name="bla" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updown.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="streetnumber" type="xs:long" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="streetname" type="xs:string" />
        <xs:element name="countrycode" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customsql.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentchild.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="result" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="amount" type="xs:long" />
        <xs:element name="count" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="y" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="x" type="xs:string" />
        <xs:element name="the" type="x" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="amount" type="xs:double" />
        <xs:element name="reverse" type="a" nillable="true" minOccurs="0" />
        <xs:element name="inverse" type="a" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abctest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commento.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="container" >
      <xs:sequence>
        <xs:element name="onetomany" type="xs:anyType" />
        <xs:element name="manytomany" type="xs:anyType" />
        <xs:element name="components" type="xs:anyType" />
        <xs:element name="composites" type="xs:anyType" />
        <xs:element name="cascades" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="bag" type="xs:anyType" />
        <xs:element name="lazybag" type="xs:anyType" />
        <xs:element name="ternary" type="xs:anyType" />
        <xs:element name="ternary" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringcomparator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custompersister" >
      <xs:sequence>
        <xs:element name="instances" type="xs:anyType" />
        <xs:element name="generator" type="xs:anyType" />
        <xs:element name="factory" type="xs:anyType" />
        <xs:element name="s" type="xs:anyType" />
        <xs:element name="names" type="xs:string" />
        <xs:element name="mutability" type="xs:anyType" />
        <xs:element name="generation" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c2" >
      <xs:complexContent>
       <xs:extension base="b">
         <xs:sequence>
          <xs:element name="address" type="xs:string" />
          <xs:element name="" type="c1" nillable="true" minOccurs="0" />
          <xs:element name="c2name" type="xs:string" />
          <xs:element name="c1s" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="componentcollection" >
      <xs:sequence>
        <xs:element name="str" type="xs:string" />
        <xs:element name="foos" type="xs:anyType" />
        <xs:element name="floats" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentnotnullmaster.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="doublestringtype" >
      <xs:sequence>
        <xs:element name="types" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multitabletest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="map.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lower" >
      <xs:complexContent>
       <xs:extension base="top">
         <xs:sequence>
          <xs:element name="prop" type="xs:long" />
          <xs:element name="foo" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="bag" type="xs:anyType" />
          <xs:element name="another" type="top" nillable="true" minOccurs="0" />
          <xs:element name="yetanother" type="lower" nillable="true" minOccurs="0" />
          <xs:element name="my" type="po" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inner" >
      <xs:sequence>
        <xs:element name="id" type="innerkey" nillable="true" minOccurs="0" />
        <xs:element name="dudu" type="xs:string" />
        <xs:element name="middles" type="xs:anyType" />
        <xs:element name="backout" type="outer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="custom.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentizable.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentnotnull" >
      <xs:sequence>
        <xs:element name="/*	*i'veflattenseveralcomponentsinoneclass,thisiskindofuglybut	*idon'thavetowritetonsofclasses	*/prop1nullable" type="xs:string" />
        <xs:element name="prop2nullable" type="xs:string" />
        <xs:element name="supercomp" type="componentnotnull" nillable="true" minOccurs="0" />
        <xs:element name="subcomp" type="componentnotnull" nillable="true" minOccurs="0" />
        <xs:element name="prop1subcomp" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
        <xs:element name="_name" type="xs:string" />
        <xs:element name="_" type="subcomponent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="category.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlfunctionstest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="po" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="top" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="lower" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="object2.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trivial" >
      <xs:complexContent>
       <xs:extension base="foo">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="innerkey" >
      <xs:sequence>
        <xs:element name="akey" type="xs:string" />
        <xs:element name="bkey" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multi" >
      <xs:complexContent>
       <xs:extension base="top">
         <xs:sequence>
          <xs:element name="extraprop" type="xs:string" />
          <xs:element name="derived" type="xs:string" />
          <xs:element name="comp" type="component" nillable="true" minOccurs="0" />
          <xs:element name="" type="po" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="single" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="prop" type="xs:string" />
        <xs:element name="GeneratedName" type="xs:string" />
        <xs:element name="several" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="top" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="count" type="xs:long" />
        <xs:element name="date" type="xs:anyType" />
        <xs:element name="other" type="top" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="top" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="middlekey" >
      <xs:sequence>
        <xs:element name="sup" type="inner" nillable="true" minOccurs="0" />
        <xs:element name="one" type="xs:string" />
        <xs:element name="two" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentizable" >
      <xs:sequence>
        <xs:element name="/***surrogateid*/_id" type="xs:anyType" />
        <xs:element name="_nickname" type="xs:string" />
        <xs:element name="/****/_" type="component" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eye" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="jay" nillable="true" minOccurs="0" />
        <xs:element name="jays" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="detail" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="master" nillable="true" minOccurs="0" />
        <xs:element name="i" type="xs:long" />
        <xs:element name="details" type="xs:anyType" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ij.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="masterdetailtest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="many.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mainobject" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="obj2" type="object2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="super" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="part" >
      <xs:complexContent>
       <xs:extension base="part">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="description" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentchildtest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonecachetest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
          <xs:element name="generatedid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wz.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wicked.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="foocomponent" >
      <xs:sequence>
        <xs:element name="count" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="importants" type="xs:dateTime" />
        <xs:element name="subcomponent" type="foocomponent" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="fee" nillable="true" minOccurs="0" />
        <xs:element name="glarch" type="glarchproxy" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="fooproxy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="baz" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foobar.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="count" type="xs:long" />
        <xs:element name="GeneratedName" type="child" nillable="true" minOccurs="0" />
        <xs:element name="any" type="xs:anyType" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="up" >
      <xs:sequence>
        <xs:element name="id1" type="xs:string" />
        <xs:element name="id2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fee" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="fee" nillable="true" minOccurs="0" />
        <xs:element name="another" type="fee" nillable="true" minOccurs="0" />
        <xs:element name="fi" type="xs:string" />
        <xs:element name="key" type="xs:string" />
        <xs:element name="fees" type="xs:anyType" />
        <xs:element name="GeneratedName" type="qux" nillable="true" minOccurs="0" />
        <xs:element name="compon" type="foocomponent" nillable="true" minOccurs="0" />
        <xs:element name="count" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="barproxy" >
      <xs:complexContent>
       <xs:extension base="abstractproxy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eye.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abcextends.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fo.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baz" >
      <xs:sequence>
        <xs:element name="stringset" type="xs:anyType" />
        <xs:element name="stringdate" type="xs:anyType" />
        <xs:element name="string" type="xs:anyType" />
        <xs:element name="array" type="xs:long" />
        <xs:element name="fooarray" type="fooproxy" nillable="true" minOccurs="0" />
        <xs:element name="array" type="xs:string" />
        <xs:element name="code" type="xs:string" />
        <xs:element name="customs" type="xs:anyType" />
        <xs:element name="topcomponents" type="xs:anyType" />
        <xs:element name="foo" type="xs:anyType" />
        <xs:element name="components" type="foocomponent" nillable="true" minOccurs="0" />
        <xs:element name="timearray" type="xs:dateTime" />
        <xs:element name="count" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bag" type="xs:anyType" />
        <xs:element name="topfoos" type="xs:anyType" />
        <xs:element name="topglarchez" type="xs:anyType" />
        <xs:element name="cascadingbars" type="xs:anyType" />
        <xs:element name="footoglarch" type="xs:anyType" />
        <xs:element name="foocomponenttofoo" type="xs:anyType" />
        <xs:element name="glarchtofoo" type="xs:anyType" />
        <xs:element name="fees" type="xs:anyType" />
        <xs:element name="foobag" type="xs:anyType" />
        <xs:element name="cached" type="xs:anyType" />
        <xs:element name="cached" type="xs:anyType" />
        <xs:element name="stringglarch" type="xs:anyType" />
        <xs:element name="anytoany" type="xs:anyType" />
        <xs:element name="manytoany" type="xs:anyType" />
        <xs:element name="idfoobag" type="xs:anyType" />
        <xs:element name="bytebag" type="xs:anyType" />
        <xs:element name="foo" type="fooproxy" nillable="true" minOccurs="0" />
        <xs:element name="bazez" type="xs:anyType" />
        <xs:element name="sortablez" type="xs:anyType" />
        <xs:element name="collectioncomponent" type="nestingcomponent" nillable="true" minOccurs="0" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="parts" type="xs:anyType" />
        <xs:element name="moreparts" type="xs:anyType" />
        <xs:element name="subs" type="xs:anyType" />
        <xs:element name="super" type="baz" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="submulti" >
      <xs:complexContent>
       <xs:extension base="multi">
         <xs:sequence>
          <xs:element name="amount" type="xs:double" />
          <xs:element name="parent" type="submulti" nillable="true" minOccurs="0" />
          <xs:element name="children" type="xs:anyType" />
          <xs:element name="morechildren" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subcomponent" >
      <xs:sequence>
        <xs:element name="_subname" type="xs:string" />
        <xs:element name="_subname1" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="i" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="type" type="xs:anyType" />
        <xs:element name="parent" type="k" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="legacytestcase" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
          <xs:element name="use_antlr_parser_prop" type="xs:string" />
          <xs:element name="useantlrparser" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querybyexampletest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="multiplicity" >
      <xs:sequence>
        <xs:element name="count" type="xs:long" />
        <xs:element name="glarch" type="glarchproxy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customsqltest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nestingcomponent" >
      <xs:sequence>
        <xs:element name="nested" type="componentcollection" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="outerkey" >
      <xs:sequence>
        <xs:element name="master" type="middle" nillable="true" minOccurs="0" />
        <xs:element name="detailid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:complexContent>
       <xs:extension base="abstract">
         <xs:sequence>
          <xs:element name="bar" type="xs:string" />
          <xs:element name="barcomponent" type="foocomponent" nillable="true" minOccurs="0" />
          <xs:element name="" type="baz" nillable="true" minOccurs="0" />
          <xs:element name="x" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="custom" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="x" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="y" nillable="true" minOccurs="0" />
        <xs:element name="xxs" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="e" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="amount" type="xs:double" />
        <xs:element name="reverse" type="a" nillable="true" minOccurs="0" />
        <xs:element name="as" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="qux.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
        <xs:element name="count" type="xs:long" />
        <xs:element name="/*publicbooleanequals(objectother){		fooproxyotherfoo" type="xs:string" />
        <xs:element name="_foo" type="fooproxy" nillable="true" minOccurs="0" />
        <xs:element name="_" type="xs:string" />
        <xs:element name="_" type="xs:dateTime" />
        <xs:element name="_timestamp" type="xs:dateTime" />
        <xs:element name="_" type="xs:anyType" />
        <xs:element name="_" type="xs:long" />
        <xs:element name="_" type="xs:long" />
        <xs:element name="_" type="xs:double" />
        <xs:element name="_" type="xs:double" />
        <xs:element name="_" type="xs:anyType" />
        <xs:element name="_" type="xs:anyType" />
        <xs:element name="_null" type="xs:anyType" />
        <xs:element name="_" type="xs:long" />
        <xs:element name="_bool" type="xs:anyType" />
        <xs:element name="_zero" type="xs:double" />
        <xs:element name="_s" type="xs:anyType" />
        <xs:element name="yesno" type="xs:anyType" />
        <xs:element name="blob" type="xs:anyType" />
        <xs:element name="nullblob" type="xs:anyType" />
        <xs:element name="binary" type="xs:anyType" />
        <xs:element name="custom" type="xs:string" />
        <xs:element name="component" type="foocomponent" nillable="true" minOccurs="0" />
        <xs:element name="_" type="xs:anyType" />
        <xs:element name="dependent" type="fee" nillable="true" minOccurs="0" />
        <xs:element name="the" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="formula" type="xs:double" />
        <xs:element name="joinedprop" type="xs:string" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abcproxytest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="one.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foobartest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fumm.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidid" >
      <xs:sequence>
        <xs:element name="system" type="xs:string" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="composite" type="compositeelement" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jay" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="eye" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fo" >
      <xs:sequence>
        <xs:element name="buf" type="xs:anyType" />
        <xs:element name="serial" type="xs:anyType" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="x" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="componentnotnulltest" >
      <xs:complexContent>
       <xs:extension base="legacytestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="drug" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.test.legacy.resource">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="root_category" type="xs:string" />
        <xs:element name="root_id" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="subcategories" type="xs:anyType" />
        <xs:element name="GeneratedName" type="assignable" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="forward" type="e" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="assignable" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="categories" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractbook" >
      <xs:sequence>
        <xs:element name="shortdescription" type="xs:string" />
        <xs:element name="fulltext" type="xs:string" />
        <xs:element name="code" type="character" nillable="true" minOccurs="0" />
        <xs:element name="code2" type="xs:anyType" />
        <xs:element name="GeneratedName" type="editor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="editor" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="materializedblobentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="thes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedbook" >
      <xs:complexContent>
       <xs:extension base="abstractbook{">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="version" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="texttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="long_string_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="serializabletoimagetype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<serializable>">
         <xs:sequence>
          <xs:element name="instance" type="primitivecharacterarraytexttype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="imageholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="longarray" type="xs:anyType" />
        <xs:element name="GeneratedName" type="dog" nillable="true" minOccurs="0" />
        <xs:element name="picarray" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primitivecharacterarraytexttype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<char[]>">
         <xs:sequence>
          <xs:element name="instance" type="primitivecharacterarraytexttype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="materializedblobtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionedcompiledcode" >
      <xs:complexContent>
       <xs:extension base="abstractcompiledcode{">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="version" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:complexContent>
       <xs:extension base="abstractbook">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlobtest" >
      <xs:complexContent>
       <xs:extension base="abstractbook,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wrappedimagetype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<byte[]>">
         <xs:sequence>
          <xs:element name="instance" type="wrappedimagetype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="longstringholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:anyType" />
        <xs:element name="whatever" type="character" nillable="true" minOccurs="0" />
        <xs:element name="long" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="versionedlobtest" >
      <xs:complexContent>
       <xs:extension base="abstractlobtest<versionedbook,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lobtest" >
      <xs:complexContent>
       <xs:extension base="abstractlobtest<book,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="imagetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="array_size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compiledcode" >
      <xs:complexContent>
       <xs:extension base="abstractcompiledcode">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="characterarraytexttype" >
      <xs:complexContent>
       <xs:extension base="abstractsinglecolumnstandardbasictype<character[]>">
         <xs:sequence>
          <xs:element name="instance" type="characterarraytexttype" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractcompiledcode" >
      <xs:sequence>
        <xs:element name="header" type="xs:anyType" />
        <xs:element name="fullcode" type="xs:anyType" />
        <xs:element name="metadata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basketitemspk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="GeneratedName" type="shoppingbaskets" nillable="true" minOccurs="0" />
        <xs:element name="cost" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shoppingbaskets" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="owner" type="customers" nillable="true" minOccurs="0" />
        <xs:element name="basketdatetime" type="xs:anyType" />
        <xs:element name="items" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storecustomer" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="store" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="card" >
      <xs:sequence>
        <xs:element name="primarykey" type="xs:anyType" />
        <xs:element name="fields" type="cardfield" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="main" type="cardfield" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="stores" type="storecustomer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="acces" >
      <xs:sequence>
        <xs:element name="idpk" type="xs:anyType" />
        <xs:element name="idpkdracc" type="droitacces" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="children" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cid" >
      <xs:sequence>
        <xs:element name="prent" type="a" nillable="true" minOccurs="0" />
        <xs:element name="sequencenumber" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="droitacces" >
      <xs:sequence>
        <xs:element name="idpk" type="xs:anyType" />
        <xs:element name="idpkbenef" type="benefserv" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="benefserv" >
      <xs:sequence>
        <xs:element name="idpk" type="xs:anyType" />
        <xs:element name="idpkser" type="service" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="parent" type="c" nillable="true" minOccurs="0" />
        <xs:element name="sequencenumber" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="prent" type="a" nillable="true" minOccurs="0" />
        <xs:element name="sequencenumber" type="xs:long" />
        <xs:element name="children" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alphabeticalidmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alphabeticalmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="parent" type="c" nillable="true" minOccurs="0" />
        <xs:element name="sequencenumber" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="idpk" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cardkey" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storecustomerpk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="store" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="customers" type="storecustomer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="serialversionuid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basketitems" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="GeneratedName" type="shoppingbaskets" nillable="true" minOccurs="0" />
        <xs:element name="cost" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="project" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customers" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="customerid" type="xs:long" />
        <xs:element name="shoppingbasketses" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shoppingbasketspk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="owner" type="customers" nillable="true" minOccurs="0" />
        <xs:element name="basketdatetime" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cardfield" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="primarykey" nillable="true" minOccurs="0" />
        <xs:element name="tmp" type="card" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cupholder" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="radius" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="color" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="display" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brand" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tv" >
      <xs:sequence>
        <xs:element name="serial" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="exp" type="xs:dateTime" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="lifetime" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strict" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="button" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="size" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ddlwithoutcallbacktest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="powersupply" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="power" type="xs:anyType" />
        <xs:element name="position" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanvalidationautotest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="range" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="screen" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="stop" type="button" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="powersupply" nillable="true" minOccurs="0" />
        <xs:element name="connectors" type="displayconnector" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="displaycolors" type="color" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tvowner" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="tv" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatetraversableresolvertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="displayconnector" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="GeneratedName" type="display" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanvalidationprovidedfactorytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="beanvalidationdisabledtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="minmax" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="beanvalidationgroupstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="blacklistedzipcode" type="xs:string" />
        <xs:element name="line1" type="xs:string" />
        <xs:element name="line2" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="internalvalid" type="xs:anyType" />
        <xs:element name="floor" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="music" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rock" >
      <xs:complexContent>
       <xs:extension base="music">
         <xs:sequence>
          <xs:element name="bit" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ddltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idclasscompositepktest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="domainadmin" >
      <xs:sequence>
        <xs:element name="domainname" type="xs:string" />
        <xs:element name="adminuser" type="xs:string" />
        <xs:element name="nickname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="domainadminid" >
      <xs:sequence>
        <xs:element name="domainname" type="xs:string" />
        <xs:element name="adminuser" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="habitatspecieslink" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="habitatid" type="xs:long" />
        <xs:element name="speciesid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclassxmltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="port" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="boats" type="boat" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a320" >
      <xs:complexContent>
       <xs:extension base="plane">
         <xs:sequence>
          <xs:element name="javaembeddedversion" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cuisine" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="proxyhelper" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamiccomponenttuplizer" >
      <xs:complexContent>
       <xs:extension base="pojocomponenttuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dataproxyhandler" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="data" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitynameinterceptor" >
      <xs:complexContent>
       <xs:extension base="emptyinterceptor">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicentitytuplizer" >
      <xs:complexContent>
       <xs:extension base="pojoentitytuplizer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicinstantiator" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tuplizertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="proxybreakingtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tool" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hammer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a320b" >
      <xs:complexContent>
       <xs:extension base="a320">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configurationtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quoteglobaltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="role" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brandname" type="xs:string" />
        <xs:element name="price" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="explicitsqlresultsetmappingtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="query" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="quotetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="roles" type="role" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boy" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="nicknames" type="xs:anyType" />
        <xs:element name="hatednames" type="xs:anyType" />
        <xs:element name="preferrednames" type="xs:anyType" />
        <xs:element name="scorepernickname" type="xs:anyType" />
        <xs:element name="scoreperpreferredname" type="xs:anyType" />
        <xs:element name="favoritenumbers" type="xs:long" />
        <xs:element name="favoritetoys" type="toy" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="characters" type="character" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="foods" type="xs:anyType" />
        <xs:element name="countryattitudes" type="countryattitude" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localizedstring" >
      <xs:sequence>
        <xs:element name="default_" type="xs:anyType" />
        <xs:element name="variations" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="brand" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="surname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="countryattitude" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="boy" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="likes" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="firstname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="products" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="widgets" type="widgets" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcourse" >
      <xs:sequence>
        <xs:element name="testcourseid" type="xs:long" />
        <xs:element name="title" type="localizedstring" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="toy" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="brand" nillable="true" minOccurs="0" />
        <xs:element name="serial" type="xs:string" />
        <xs:element name="owner" type="boy" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bug" >
      <xs:sequence>
        <xs:element name="description" type="xs:string" />
        <xs:element name="reportedby" type="person" nillable="true" minOccurs="0" />
        <xs:element name="summary" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sale" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="contacts" type="contact" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexedcollectionofelementstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionelementtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bugsystem" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="bugs" type="bug" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="deepcollectionelementtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="listofb" type="b" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//@collectionofelementslistofc" type="c" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="comment" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="character" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="favoritefood" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="widgets" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="matrix" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="mvalues" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="americacupclass" >
      <xs:complexContent>
       <xs:extension base="boat">
         <xs:sequence>
          <xs:element name="" type="country" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchingtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stay" >
      <xs:sequence>
        <xs:element name="//memberdeclarationid" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="old" type="person" nillable="true" minOccurs="0" />
        <xs:element name="veryold" type="person" nillable="true" minOccurs="0" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="vessel" type="xs:string" />
        <xs:element name="authoriser" type="xs:string" />
        <xs:element name="comments" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="leaf" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="branch" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="branch" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="leaves" type="leaf" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="//memberdeclarationid" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="companyname" type="xs:string" />
        <xs:element name="stays" type="stay" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="oldstays" type="stay" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="veryoldstays" type="stay" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="orderedstay" type="stay" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple2" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclassgeneratedvaluetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simple" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiplepk" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="id3" type="xs:long" />
        <xs:element name="//annotationbinder(incorrectly)requiresthistobetransientseehhh-4819andhhh-4820transientcachedhashcode" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multiple" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
        <xs:element name="id3" type="xs:long" />
        <xs:element name="quantity" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simplepk" >
      <xs:sequence>
        <xs:element name="id1" type="xs:long" />
        <xs:element name="id2" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flyingobject" >
      <xs:complexContent>
       <xs:extension base="thing">
         <xs:sequence>
          <xs:element name="serial" type="xs:string" />
          <xs:element name="altitude" type="xs:long" />
          <xs:element name="metricaltitude" type="xs:long" />
          <xs:element name="color" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="coin" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="currency" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="currency" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notfoundtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalidonmanytoone" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="citizen" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalidonsinglemanytoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="citizen" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="GeneratedName" type="state" nillable="true" minOccurs="0" />
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="associationoverridetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyrecord" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parcels" type="xs:anyType" />
        <xs:element name="legacyparcels" type="xs:anyType" />
        <xs:element name="unsortedparcels" type="propertyinfo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="legacyunsortedparcels" type="propertyinfo" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addr" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="zipcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyinfo" >
      <xs:sequence>
        <xs:element name="parcelnumber" type="xs:anyType" />
        <xs:element name="size" type="xs:anyType" />
        <xs:element name="tax" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attributeoverridetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="socialtouchpoints" >
      <xs:sequence>
        <xs:element name="//owningsideofmanytomanywebsite" type="socialsite" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="move" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="from" type="location" nillable="true" minOccurs="0" />
        <xs:element name="to" type="location" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trip" >
      <xs:complexContent>
       <xs:extension base="move">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="contactinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contactinfo" >
      <xs:sequence>
        <xs:element name="ess" type="addr" nillable="true" minOccurs="0" />
        <xs:element name="phonenumbers" type="phonenumber" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="social" type="socialtouchpoints" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="socialsite" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="website" type="xs:string" />
        <xs:element name="employee" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tennismatch" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="socialsecurityphysicalaccount" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="countrycode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bustrip" >
      <xs:sequence>
        <xs:element name="id" type="bustrippk" nillable="true" minOccurs="0" />
        <xs:element name="status" type="availability" nillable="true" minOccurs="0" />
        <xs:element name="serial" type="xs:anyType" />
        <xs:element name="terminustime" type="xs:dateTime" />
        <xs:element name="players" type="xs:anyType" />
        <xs:element name="roads" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loglistener" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaoverridenannotationreadertest" >
      <xs:complexContent>
       <xs:extension base="hibernatetestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="availability" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bustrippk" >
      <xs:sequence>
        <xs:element name="busnumber" type="xs:string" />
        <xs:element name="busdriver" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="otherloglistener" >
      <xs:sequence>
        <xs:element name="log" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="competition" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="administration" >
      <xs:complexContent>
       <xs:extension base="organization">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="firstname" type="xs:string" />
          <xs:element name="lastname" type="xs:string" />
          <xs:element name="address" type="xs:string" />
          <xs:element name="version" type="xs:anyType" />
          <xs:element name="transientfield" type="xs:string" />
          <xs:element name="default" type="bustrip" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="socialsecuritymoralaccount" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="countrycode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlcontexttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="socialsecuritynumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
        <xs:element name="countrycode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="organization" >
      <xs:sequence>
        <xs:element name="organizationid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="match" >
      <xs:complexContent>
       <xs:extension base="competition">
         <xs:sequence>
          <xs:element name="competitor1point" type="xs:string" />
          <xs:element name="version" type="xs:anyType" />
          <xs:element name="playerassn" type="socialsecuritynumber" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="property" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="anytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertylist" >
      <xs:complexContent>
       <xs:extension base="property>">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="somepropery" type="xs:anyType" />
          <xs:element name="generalproperties" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertymap" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="properties" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integerproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertyset" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="some" type="property" nillable="true" minOccurs="0" />
        <xs:element name="generalproperties" type="property" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="charproperty" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="character" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tvprogramidclass" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="channel" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="presenter" nillable="true" minOccurs="0" />
        <xs:element name="time" type="xs:dateTime" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tvprogram" >
      <xs:sequence>
        <xs:element name="id" type="tvmagazinpk" nillable="true" minOccurs="0" />
        <xs:element name="time" type="xs:dateTime" />
        <xs:element name="text" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="channel" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primarykey" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="card" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="key" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cardfield" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="primarykey" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="card" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="fields" type="cardfield" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="key" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eagerkeymanytoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="card_id" type="xs:string" />
          <xs:element name="key_id" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderlinepk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aid" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="b" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="c" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositeidtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childpk" >
      <xs:sequence>
        <xs:element name="nthchild" type="xs:long" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="presenter" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="littlegenius" >
      <xs:complexContent>
       <xs:extension base="child">
         <xs:sequence>
          <xs:element name="particularskill" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="childpk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderline" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tvmagazinpk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="channel" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="presenter" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="someentityid" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="parent" type="someentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="someentity" >
      <xs:sequence>
        <xs:element name="id" type="someentityid" nillable="true" minOccurs="0" />
        <xs:element name="prop" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tvmagazin" >
      <xs:sequence>
        <xs:element name="id" type="tvmagazinpk" nillable="true" minOccurs="0" />
        <xs:element name="time" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="parentpk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="aid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boat" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="weight" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tooth" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="leftneighbour" type="tooth" nillable="true" minOccurs="0" />
        <xs:element name="rightneighbour" type="tooth" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mouth" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mouth" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="teeth" type="tooth" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entitytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="df" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitypersister" >
      <xs:complexContent>
       <xs:extension base="singletableentitypersister">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="card" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="deck" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="collectionpersister" >
      <xs:complexContent>
       <xs:extension base="onetomanypersister">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deck" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="cards" type="card" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:complexContent>
       <xs:extension base="accountbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="savingsaccount" >
      <xs:complexContent>
       <xs:extension base="savingsaccountbase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accountbase" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="accountnumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="savingsaccountbase" >
      <xs:complexContent>
       <xs:extension base="account">
         <xs:sequence>
          <xs:element name="withdrawallimit" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="intermediatemappedsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="basicoperationstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="someentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="timedata" type="xs:anyType" />
        <xs:element name="tsdata" type="xs:anyType" />
        <xs:element name="data" type="xs:anyType" />
        <xs:element name="chardata" type="character" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="someotherentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="data" type="xs:anyType" />
        <xs:element name="data" type="xs:anyType" />
        <xs:element name="acterdata" type="xs:anyType" />
        <xs:element name="data" type="xs:long" />
        <xs:element name="egerdata" type="xs:long" />
        <xs:element name="data" type="xs:long" />
        <xs:element name="data" type="xs:double" />
        <xs:element name="data" type="xs:double" />
        <xs:element name="GeneratedName" type="grade" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="grade" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="testcase" >
      <xs:complexContent>
       <xs:extension base="hibernatetestcase">
         <xs:sequence>
          <xs:element name="sessions" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="incorrectentity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="plane" >
      <xs:complexContent>
       <xs:extension base="flyingobject">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="nbrofseats" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idmapmanytoonespecjtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="query_all" type="xs:string" />
        <xs:element name="query_count" type="xs:string" />
        <xs:element name="query_by_credit" type="xs:string" />
        <xs:element name="bad_credit" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="contact" type="xs:string" />
        <xs:element name="credit" type="xs:string" />
        <xs:element name="creditlimit" type="xs:anyType" />
        <xs:element name="since" type="xs:anyType" />
        <xs:element name="balance" type="xs:anyType" />
        <xs:element name="ytdpayment" type="xs:anyType" />
        <xs:element name="customerinventories" type="customerinventory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="query_by_category" type="xs:string" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="discount" type="xs:anyType" />
        <xs:element name="category" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerinventorypk" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="custid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerinventory" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="custid" type="xs:long" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="vehicle" type="item" nillable="true" minOccurs="0" />
        <xs:element name="totalcost" type="xs:anyType" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentembeddediddeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="exclusivedependent" >
      <xs:sequence>
        <xs:element name="id" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//correspondstopktypeofemployeeemppk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="id" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="//@joincolumn(name" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//correspondstopktypeofemployeeemp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
        <xs:element name="nickname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//idattributemappedbyjoincolumndefaultemp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentidclassdeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentembeddeddeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customerinventorypk" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="query_all" type="xs:string" />
        <xs:element name="query_count" type="xs:string" />
        <xs:element name="query_by_credit" type="xs:string" />
        <xs:element name="bad_credit" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="contact" type="xs:string" />
        <xs:element name="credit" type="xs:string" />
        <xs:element name="creditlimit" type="xs:anyType" />
        <xs:element name="since" type="xs:anyType" />
        <xs:element name="balance" type="xs:anyType" />
        <xs:element name="ytdpayment" type="xs:anyType" />
        <xs:element name="customerinventories" type="customerinventory" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="query_by_category" type="xs:string" />
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="price" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="discount" type="xs:anyType" />
        <xs:element name="category" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclassgeneratedvaluemanytoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customerinventory" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="vehicle" type="item" nillable="true" minOccurs="0" />
        <xs:element name="totalcost" type="xs:anyType" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employerid" >
      <xs:sequence>
        <xs:element name="//matchesnameof@idattributename" type="xs:string" />
        <xs:element name="//matchesnameof@idattributeandtypeofemployeepkemployee" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="personid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="//allattributesmaptorelationship:attributeoverridenotallowedid" type="personid" nillable="true" minOccurs="0" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityembeddedidparentsameidtypeembeddediddeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityembeddedidparentsameidtypeidclassdeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="personid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="//matchesnameof@idattributename" type="xs:string" />
        <xs:element name="//matchesnameofattributeandtypeofemployeepkemp" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityidclassparentidclassdeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="id" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emppk" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityidclassparentembeddediddeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employer" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="//idattributemappedbyjoincolumndefaultid" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foreigngeneratorviamapsidtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="derivedidentityidclassparentsameidtypeidclassdeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="first_name" type="xs:string" />
          <xs:element name="last_name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="//allattributesmaptorelationship:attributeoverridenotallowedid" type="personid" nillable="true" minOccurs="0" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityidclassparentsameidtypeembeddediddeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
        <xs:element name="xraydata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentsimpledepmapsidtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="//overridingnotallowed...//defaultjoincolumnnameisoverridden@mapsidid" type="xs:string" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lastup" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="financialhistory" >
      <xs:sequence>
        <xs:element name="//overridingnotallowed...//defaultjoincolumnnameisoverridden@mapsidid" type="xs:string" />
        <xs:element name="lastup" type="xs:dateTime" />
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitysimpleparentsimpledeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="medicalhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lastup" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="financialhistory" >
      <xs:sequence>
        <xs:element name="patient" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lastup" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="simple" >
      <xs:sequence>
        <xs:element name="ssn" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="//correspondstopktypeofemployeeemppk" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bar" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="foo" nillable="true" minOccurs="0" />
        <xs:element name="details" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="bar" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="//matchesnameof@idattributeandtypeofemployeepkemp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="xs:long" />
        <xs:element name="empname" type="xs:string" />
        <xs:element name="dependents" type="dependent" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="compositederivedidentitytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderlinepk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonewithderivedidentitytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderline" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="product" nillable="true" minOccurs="0" />
        <xs:element name="amount" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lineitems" type="orderline" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentitywithbidirectionalassociationtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="emppk" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="//defaultcolumnnamefor"name"attributeisoverriddenid" type="dependentid" nillable="true" minOccurs="0" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityembeddedidparentembeddediddeptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependentid" >
      <xs:sequence>
        <xs:element name="//matchesnameof@idattributename" type="xs:string" />
        <xs:element name="//matchesnameof@idattributeandtypeofembeddedidofemployeeemp" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dependent" >
      <xs:sequence>
        <xs:element name="//defaultcolumnnameisoverriddenname" type="xs:string" />
        <xs:element name="emp" type="employee" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="derivedidentityembeddedidparentidclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employeeid" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="empid" type="employeeid" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="storm" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="start" type="location" nillable="true" minOccurs="0" />
        <xs:element name="end" type="location" nillable="true" minOccurs="0" />
        <xs:element name="stormname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="city" type="xs:string" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="strategytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:complexContent>
       <xs:extension base="parent>">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="arent" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childhierarchy22" >
      <xs:complexContent>
       <xs:extension base="childhierarchy2<parenthierarchy22>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericsinheritancetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childhierarchy1" >
      <xs:complexContent>
       <xs:extension base="child<parenthierarchy1>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parenthierarchy1" >
      <xs:complexContent>
       <xs:extension base="parent<childhierarchy1>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="childhierarchy2" >
      <xs:complexContent>
       <xs:extension base="parenthierarchy2>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parenthierarchy22" >
      <xs:complexContent>
       <xs:extension base="parenthierarchy2<childhierarchy22>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:complexContent>
       <xs:extension base="child>">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="children" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parenthierarchy2" >
      <xs:complexContent>
       <xs:extension base="childhierarchy2>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="carrot" >
      <xs:complexContent>
       <xs:extension base="vegetable">
         <xs:sequence>
          <xs:element name="length" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="file" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="symboliclink" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="target" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="children" type="file" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fruit" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vegetable" >
      <xs:sequence>
        <xs:element name="id" type="vegetablepk" nillable="true" minOccurs="0" />
        <xs:element name="priceincent" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vegetablepk" >
      <xs:sequence>
        <xs:element name="farmer" type="xs:string" />
        <xs:element name="harvestdate" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="house" >
      <xs:complexContent>
       <xs:extension base="building">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="noise" >
      <xs:complexContent>
       <xs:extension base="music">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="trash" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="building" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="street" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="papertrash" >
      <xs:complexContent>
       <xs:extension base="trash">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="music" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="avgbeat" type="xs:long" />
        <xs:element name="type" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="funk" >
      <xs:complexContent>
       <xs:extension base="music">
         <xs:sequence>
          <xs:element name="starred" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rock" >
      <xs:complexContent>
       <xs:extension base="music">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tomato" >
      <xs:complexContent>
       <xs:extension base="vegetable">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="apple" >
      <xs:complexContent>
       <xs:extension base="fruit">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="file" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="symboliclink" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="target" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="children" type="file" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="discriminatoroptionstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="subclass" >
      <xs:complexContent>
       <xs:extension base="baseclass">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseclass" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="symboliclink" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="target" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="firtsname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="client" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="street" type="xs:string" />
          <xs:element name="code" type="xs:string" />
          <xs:element name="city" type="xs:string" />
          <xs:element name="" type="account" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclassandsecondarytable" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legalentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="programexecution" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="action" type="xs:string" />
        <xs:element name="applieson" type="file" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="children" type="file" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pool" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="financialasset" >
      <xs:complexContent>
       <xs:extension base="asset">
         <xs:sequence>
          <xs:element name="price" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyasset" >
      <xs:complexContent>
       <xs:extension base="asset">
         <xs:sequence>
          <xs:element name="price" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="asset" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="eventinformation" >
      <xs:sequence>
        <xs:element name="notificationid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="account" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="clients" type="client" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="balance" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="propertyass" type="xs:anyType" />
        <xs:element name="financialass" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clothing" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="color" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alarm" >
      <xs:complexContent>
       <xs:extension base="eventinformation">
         <xs:sequence>
          <xs:element name="eventinfo" type="eventinformation" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:complexContent>
       <xs:extension base="file">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="legalentity">
         <xs:sequence>
          <xs:element name="customername" type="xs:string" />
          <xs:element name="customercode" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="swimmingpool" >
      <xs:complexContent>
       <xs:extension base="pool">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sweater" >
      <xs:complexContent>
       <xs:extension base="clothing">
         <xs:sequence>
          <xs:element name="issweat" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="file" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:complexContent>
       <xs:extension base="customer">
         <xs:sequence>
          <xs:element name="companyname" type="xs:string" />
          <xs:element name="companyaddress" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sky" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="color" type="xs:string" />
        <xs:element name="day" type="xs:string" />
        <xs:element name="month" type="xs:string" />
        <xs:element name="area" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="subselecttest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="highestbid" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="amount" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="itemid" type="xs:long" />
        <xs:element name="amount" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer5" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="supporttickets" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="resolution" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchprofiletest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="morefetchprofiletest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="last" type="order" nillable="true" minOccurs="0" />
        <xs:element name="tickets" type="supporttickets" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="ordernumber" type="xs:long" />
        <xs:element name="delivery" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customernumber" type="xs:long" />
        <xs:element name="orders" type="order" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="party" >
      <xs:sequence>
        <xs:element name="partyid" type="xs:string" />
        <xs:element name="GeneratedName" type="partyaffiliate" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="son" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="father" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="expectednumberofjoins" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="show" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="description" type="showdescription" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computerpk" >
      <xs:sequence>
        <xs:element name="brand" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="partyaffiliate" >
      <xs:sequence>
        <xs:element name="partyid" type="xs:string" />
        <xs:element name="GeneratedName" type="party" nillable="true" minOccurs="0" />
        <xs:element name="affiliatename" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computer" >
      <xs:sequence>
        <xs:element name="id" type="computerpk" nillable="true" minOccurs="0" />
        <xs:element name="cpu" type="xs:string" />
        <xs:element name="serial" type="serialnumber" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trousers" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="zip" type="trouserszip" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="client" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="secondary" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trouserszip" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="trousers" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="showdescription" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="show" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serialnumber" >
      <xs:sequence>
        <xs:element name="id" type="serialnumberpk" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="father" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="serialnumberpk" >
      <xs:sequence>
        <xs:element name="brand" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="heart" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nullableprimarykeytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="device" >
      <xs:complexContent>
       <xs:extension base="hardware">
         <xs:sequence>
          <xs:element name="" type="manageddevice" nillable="true" minOccurs="0" />
          <xs:element name="tag" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hardware" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="parent" type="hardware" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="baseentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="owner" nillable="true" minOccurs="0" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hhh4851test" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="devicegroupconfig" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="deleted" type="xs:anyType" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manageddevice" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="" type="device" nillable="true" minOccurs="0" />
          <xs:element name="" type="devicegroupconfig" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="owner" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="address" type="owneraddress" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetooneerrortest" >
      <xs:complexContent>
       <xs:extension base="junit.framework.testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="city" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="body" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="heart" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="owneraddress" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="owner" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ferry" >
      <xs:complexContent>
       <xs:extension base="boat">
         <xs:sequence>
          <xs:element name="sea" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flight" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="transientduration" type="xs:long" />
        <xs:element name="durationinsec" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="GeneratedName" type="company" nillable="true" minOccurs="0" />
        <xs:element name="triggereddata" type="xs:string" />
        <xs:element name="factor" type="xs:long" />
        <xs:element name="departure" type="xs:dateTime" />
        <xs:element name="buydate" type="xs:anyType" />
        <xs:element name="alternativedeparturedate" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="buildingcompany" >
      <xs:complexContent>
       <xs:extension base="company">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
          <xs:element name="foundedin" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="zone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="supplier" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="suppstores" type="store" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="permissions" type="permission" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inspector" >
      <xs:sequence>
        <xs:element name="_id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="friend" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="friends" type="friend" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="iselder" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="programmanager" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="manages" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytomanymaxfetchdepth0test" >
      <xs:complexContent>
       <xs:extension base="manytomanytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employees" type="xs:anyType" />
        <xs:element name="contractors" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="groupwithset" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="permissions" type="permission" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="womanpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="catpk" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="thoroughbred" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="knownclient" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stores" type="store" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inspectorprefixes" >
      <xs:complexContent>
       <xs:extension base="inspector">
         <xs:sequence>
          <xs:element name="prefixes" type="xs:string" />
          <xs:element name="desertedareas" type="zone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="areas" type="zone" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="permission" >
      <xs:sequence>
        <xs:element name="permission" type="xs:string" />
        <xs:element name="expiration" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="customers" type="knownclient" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="suppliers" type="supplier" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="implantedin" type="city" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="man" >
      <xs:sequence>
        <xs:element name="id" type="manpk" nillable="true" minOccurs="0" />
        <xs:element name="carname" type="xs:string" />
        <xs:element name="womens" type="woman" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jobinfo" >
      <xs:sequence>
        <xs:element name="jobdescription" type="xs:string" />
        <xs:element name="//bidirectionalpm" type="programmanager" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="employers" type="employer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="contactinfo" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="jobinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contractor" >
      <xs:complexContent>
       <xs:extension base="employee">
         <xs:sequence>
          <xs:element name="hourlyrate" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="building" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="company" type="buildingcompany" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="woman" >
      <xs:sequence>
        <xs:element name="id" type="womanpk" nillable="true" minOccurs="0" />
        <xs:element name="carname" type="xs:string" />
        <xs:element name="mens" type="man" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="cats" type="cat" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contactinfo" >
      <xs:sequence>
        <xs:element name="//@manytoone//addressaddress//unidirectional//bidirectionalphonenumbers" type="phonenumber" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="phnumber" type="xs:long" />
        <xs:element name="employees" type="employee" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:sequence>
        <xs:element name="id" type="catpk" nillable="true" minOccurs="0" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="humancontacts" type="woman" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="training" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="trainees" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="news" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="detail" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paintingpk" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="painter" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wardrobe" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="drawers" type="drawer" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alphabeticaldirectory" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressentrypk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationgroup" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="generation" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generationuser" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="ref" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pressreleaseagency" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="providednews" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapkeytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generation" >
      <xs:sequence>
        <xs:element name="age" type="xs:string" />
        <xs:element name="culture" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newspaper" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="news" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="painter" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="paintings" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gaskey" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dress" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="version" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="codename" type="xs:string" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="GeneratedName" type="software" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="painting" >
      <xs:sequence>
        <xs:element name="sizex" type="xs:long" />
        <xs:element name="sizey" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="painter" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indexedcollectiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="drawer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="dresses" type="dress" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gas" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="atmosphere" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="gases" type="xs:anyType" />
        <xs:element name="colorperdate" type="xs:anyType" />
        <xs:element name="colorperlevel" type="xs:anyType" />
        <xs:element name="gasesperkey" type="xs:anyType" />
        <xs:element name="composition" type="xs:anyType" />
        <xs:element name="gasesdef" type="xs:anyType" />
        <xs:element name="gasesdefleg" type="xs:anyType" />
        <xs:element name="gasesperkeydef" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trainee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="software" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="versions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressentry" >
      <xs:sequence>
        <xs:element name="person" type="addressentrypk" nillable="true" minOccurs="0" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="book" type="addressbook" nillable="true" minOccurs="0" />
        <xs:element name="directory" type="alphabeticaldirectory" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressbook" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="owner" type="xs:string" />
        <xs:element name="entries" type="xs:anyType" />
        <xs:element name="lastnameentries" type="xs:anyType" />
        <xs:element name="directoryentries" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="joinedsubclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lastname" >
      <xs:sequence>
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="propertydefaultmappingstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="washingmachine" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="transientisactive" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="peugot" >
      <xs:complexContent>
       <xs:extension base="car">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="race" >
      <xs:sequence>
        <xs:element name="length" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="player" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="team" type="soccerteam" nillable="true" minOccurs="0" />
        <xs:element name="//fortheworldcupofoneversusonematches,wehave//teamswithoneplayer(1v1team).onevoneteam" type="soccerteam" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="forest" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="length" type="xs:long" />
        <xs:element name="longdescription" type="xs:string" />
        <xs:element name="smalltext" type="xs:string" />
        <xs:element name="bigtext" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="near" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="casterstringtype" >
      <xs:sequence>
        <xs:element name="cast" type="xs:string" />
        <xs:element name="parameters" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flight" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="maxaltitudeinmilimeter" type="xs:long" />
        <xs:element name="maxaltitude" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="overseasphonenumber" >
      <xs:complexContent>
       <xs:extension base="phonenumber">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="drill" >
      <xs:complexContent>
       <xs:extension base="tool">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tree" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soccerteam" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="players" type="player" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="onevone" type="player" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetaryamountusertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zipcode" >
      <xs:sequence>
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="formallastname" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="lastname" nillable="true" minOccurs="0" />
        <xs:element name="designation" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="length" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="name" >
      <xs:complexContent>
       <xs:extension base="firstname">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="" type="lastname" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tool" >
      <xs:complexContent>
       <xs:extension base="widget">
         <xs:sequence>
          <xs:element name="category" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="starred" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="widget" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contactdetails" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="local" type="phonenumber" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="overseasphonenumber" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ransom" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="kidnappername" type="xs:string" />
        <xs:element name="amount" type="monetaryamount" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumbertype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phonenumber" >
      <xs:sequence>
        <xs:element name="number" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="firstname" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bid" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="note" type="starred" nillable="true" minOccurs="0" />
        <xs:element name="editorsnote" type="starred" nillable="true" minOccurs="0" />
        <xs:element name="approved" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="topic" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="narratives" type="narrative" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="java5featurestest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="narrative" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="GeneratedName" type="topic" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="communitybid" >
      <xs:complexContent>
       <xs:extension base="bid">
         <xs:sequence>
          <xs:element name="communitynote" type="starred" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localcontactdetails" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="local" type="phonenumber" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="overseasphonenumber" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monetaryamount" >
      <xs:sequence>
        <xs:element name="amount" type="xs:anyType" />
        <xs:element name="GeneratedName" type="currency" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="basichibernateannotationstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="powerdrill" >
      <xs:complexContent>
       <xs:extension base="drill">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="son" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="father" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="mother" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="father" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="orderedsons" type="son" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mother" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="sons" type="son" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unidircollectionwithmultipleownertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chaos" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="size" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="nickname" type="xs:string" />
        <xs:element name="particles" type="casimirparticle" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="casimirparticle" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alltables" >
      <xs:sequence>
        <xs:element name="tablename" type="xs:string" />
        <xs:element name="daysold" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spaceship" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="speed" type="xs:double" />
        <xs:element name="GeneratedName" type="captain" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="dimensions" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="area" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="queryandsqltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="twilight" >
      <xs:complexContent>
       <xs:extension base="darkness">
         <xs:sequence>
          <xs:element name="id" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mark" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="value" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="synonymousdictionary" >
      <xs:complexContent>
       <xs:extension base="dictionary">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dictionary" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="editor" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identity" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="darkness" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dimensions" >
      <xs:sequence>
        <xs:element name="length" type="xs:long" />
        <xs:element name="width" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="night" >
      <xs:complexContent>
       <xs:extension base="darkness">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="duration" type="xs:long" />
          <xs:element name="" type="xs:dateTime" />
          <xs:element name="" type="area" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="captain" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="professionalagreement" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="expiration" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="indextest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="antenna" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="longitude" type="xs:string" />
        <xs:element name="latitude" type="xs:string" />
        <xs:element name="power" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="conductor" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dbtimestamped" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lastup" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="columntransformertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="staff" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="sizeininches" type="xs:double" />
        <xs:element name="radiuss" type="xs:double" />
        <xs:element name="diameter" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generatedtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="timestamptest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vmtimestamped" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lastup" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optimisticlockannotationtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vehicule" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="registrationnumber" type="xs:string" />
        <xs:element name="current" type="conductor" nillable="true" minOccurs="0" />
        <xs:element name="year" type="xs:anyType" />
        <xs:element name="previous" type="conductor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="truck" >
      <xs:complexContent>
       <xs:extension base="vehicule">
         <xs:sequence>
          <xs:element name="weight" type="xs:long" />
          <xs:element name="agreement" type="professionalagreement" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="movingthing" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:complexContent>
       <xs:extension base="movingthing">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="model" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="polymorphismtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sportcar" >
      <xs:complexContent>
       <xs:extension base="car">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legalstructure" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="corporationtype" type="corptype" nillable="true" minOccurs="0" />
        <xs:element name="origin" type="nationality" nillable="true" minOccurs="0" />
        <xs:element name="topmanagement" type="manager" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personname" >
      <xs:complexContent>
       <xs:extension base="name">
         <xs:sequence>
          <xs:element name="aliases" type="alias" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alias" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="name" nillable="true" minOccurs="0" />
        <xs:element name="source" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablewithone2manytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="personname" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="name" >
      <xs:sequence>
        <xs:element name="first" type="xs:string" />
        <xs:element name="last" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="iso2" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddablewithmany2onetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="line1" type="xs:string" />
        <xs:element name="line2" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="postalcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vanillaswap" >
      <xs:sequence>
        <xs:element name="/***identifieroftheinterestrateswap*/instrumentid" type="xs:string" />
        <xs:element name="/***oftheswap(andofbothlegs).*/" type="currency" nillable="true" minOccurs="0" />
        <xs:element name="/***fixedleg(cashflowswiththefixedrate).*/" type="fixedleg" nillable="true" minOccurs="0" />
        <xs:element name="/***floatingleg(cashflowsboundtoafinancialindex).*/" type="floatleg" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="embeddedtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="urlfavorite" >
      <xs:sequence>
        <xs:element name="url" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="favoritethings" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="web" type="internetfavorites" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="iso2" type="xs:string" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="internetprovider" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="brandname" type="xs:string" />
        <xs:element name="owner" type="legalstructure" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="swap" >
      <xs:sequence>
        <xs:element name="/***tenor(duration)oftheswap(inyears).*/tenor" type="xs:long" />
        <xs:element name="/***fixedleg(cashflowswiththefixedrate).*/" type="fixedleg" nillable="true" minOccurs="0" />
        <xs:element name="/***floatingleg(cashflowsboundtoafinancialindex).*/" type="floatleg" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notonialdeal" >
      <xs:complexContent>
       <xs:extension base="deal">
         <xs:sequence>
          <xs:element name="/***notionalamountofbothirss.*/notional" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nationality" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="bornin" type="country" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addresstype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fixedleg" >
      <xs:complexContent>
       <xs:extension base="leg">
         <xs:sequence>
          <xs:element name="/***fixedrate.*/rate" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="regionalarticle" >
      <xs:sequence>
        <xs:element name="pk" type="regionalarticlepk" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="spreaddeal" >
      <xs:complexContent>
       <xs:extension base="notonialdeal">
         <xs:sequence>
          <xs:element name="/***withthetenor.*/long" type="swap" nillable="true" minOccurs="0" />
          <xs:element name="/***withthelongertenor.*/short" type="swap" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deal" >
      <xs:sequence>
        <xs:element name="/***dealid.*/id" type="xs:string" />
        <xs:element name="/***withthetenor.*/" type="swap" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="floatleg" >
      <xs:complexContent>
       <xs:extension base="leg">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="/***spreadovertheselectedrateindex(inbasispoints).*/ratespread" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="regionalarticlepk" >
      <xs:sequence>
        <xs:element name="/***countryiso2code*/iso2" type="xs:string" />
        <xs:element name="localuniquekey" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="address1" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="GeneratedName" type="country" nillable="true" minOccurs="0" />
        <xs:element name="type" type="addresstype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manager" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="employer" type="internetprovider" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="corptype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wealthyperson" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="//})vacationhomes" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="legacyvacationhomes" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="explicitvacationhomes" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="internetfavorites" >
      <xs:sequence>
        <xs:element name="links" type="urlfavorite" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="ideas" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="isbn" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="summary" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="summary" >
      <xs:sequence>
        <xs:element name="size" type="xs:long" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="summarized" type="book" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="leg" >
      <xs:sequence>
        <xs:element name="/***showshowfrequentpaymentsaccordingtothislegshouldbemade.*/payment" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myoidtype" >
      <xs:sequence>
        <xs:element name="property_names" type="xs:string" />
        <xs:element name="s" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dvd" >
      <xs:sequence>
        <xs:element name="id" type="myoid" nillable="true" minOccurs="0" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myoidgenerator" >
      <xs:sequence>
        <xs:element name="counter" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myoid" >
      <xs:sequence>
        <xs:element name="high" type="xs:long" />
        <xs:element name="middle" type="xs:long" />
        <xs:element name="low" type="xs:long" />
        <xs:element name="other" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="typetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="robot" >
      <xs:complexContent>
       <xs:extension base="machine">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:complexContent>
       <xs:extension base="component">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="t800" >
      <xs:complexContent>
       <xs:extension base="robot">
         <xs:sequence>
          <xs:element name="targetname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="machine" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="weight" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tableperclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
        <xs:element name="manufacturerpartnumber" type="xs:string" />
        <xs:element name="manufacturerid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stamp" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="passport" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stamps" type="stamp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="//todotestidentitygeneratorvisastamp" type="stamp" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifiercollectiontest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="politicalparty" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="politicians" type="politician" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monkey" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="trainer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="trainedtigers" type="tiger" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="trainedmonkeys" type="monkey" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetomanytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="troop" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="soldiers" type="soldier" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="organisationuser" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="sometext" type="xs:string" />
          <xs:element name="" type="organisation" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="idperson" type="xs:long" />
        <xs:element name="firstname,lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="city" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="streets" type="street" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="mainstreets" type="street" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="politician" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="party" type="politicalparty" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderitem" >
      <xs:sequence>
        <xs:element name="schoolid" type="xs:string" />
        <xs:element name="academicyear" type="xs:anyType" />
        <xs:element name="dayno" type="xs:anyType" />
        <xs:element name="dayname" type="xs:string" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tiger" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manufacturer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="models" type="model" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="/***isamaleorafemale*///showhetereogenouspktypesismale" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderitemid" >
      <xs:sequence>
        <xs:element name="schoolid" type="xs:string" />
        <xs:element name="academicyear" type="xs:anyType" />
        <xs:element name="dayno" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderbytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="soldier" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="troop" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="schoolid" type="xs:string" />
        <xs:element name="schoolidsort" type="xs:anyType" />
        <xs:element name="academicyear" type="xs:anyType" />
        <xs:element name="itemlist" type="orderitem" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="organisation" >
      <xs:sequence>
        <xs:element name="idorganisation" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="organisationusers" type="organisationuser" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderid" >
      <xs:sequence>
        <xs:element name="schoolid" type="xs:string" />
        <xs:element name="academicyear" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="favoritesuperhero" type="xs:string" />
        <xs:element name="favoritesinger" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="model" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="manufacturer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="street" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="streetname" type="xs:string" />
        <xs:element name="streetnamecopy" type="xs:string" />
        <xs:element name="GeneratedName" type="city" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="parentpk" nillable="true" minOccurs="0" />
        <xs:element name="age" type="xs:long" />
        <xs:element name="children" type="child" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discount" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="discount" type="xs:double" />
        <xs:element name="owner" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contact" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contactimpl" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userimpl" >
      <xs:sequence>
        <xs:element name="contacts" type="contact" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interfacestest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bug" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="categories" type="category" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="backquotetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="printercable" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="printer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="printer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="category" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ticket" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="tickets" type="ticket" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="discounttickets" type="xs:anyType" />
        <xs:element name="GeneratedName" type="passport" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="unresolvedtypetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classes" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gene" >
      <xs:complexContent>
       <xs:extension base="enum>">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="state" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statetype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="wildentity" >
      <xs:complexContent>
       <xs:extension base="object>">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="property" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pricedstuff" >
      <xs:complexContent>
       <xs:extension base="stuff<price>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:complexContent>
       <xs:extension base="pricedstuff">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="owner" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddedgenericstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="edition" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="someguy" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="price" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="amount" type="xs:double" />
        <xs:element name="currency" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="papertype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="paper" >
      <xs:complexContent>
       <xs:extension base="item<papertype,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dna" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummy" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="transientdummyfield" type="k" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stuff" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="value" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="alternativenamingstrategy" >
      <xs:complexContent>
       <xs:extension base="ejb3namingstrategy">
         <xs:sequence>
          <xs:element name="instance" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="duplicatetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flight" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="securedbindingtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deal" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="from" type="customer" nillable="true" minOccurs="0" />
        <xs:element name="to" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lotz" >
      <xs:sequence>
        <xs:element name="lotpk" type="lotzpk" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="location" type="xs:string" />
        <xs:element name="cars" type="carz" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="userpk" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="userkey" type="xs:long" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="treetype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="foresttype" nillable="true" minOccurs="0" />
        <xs:element name="alternative" type="foresttype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="car" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="body" type="color" nillable="true" minOccurs="0" />
        <xs:element name="owner" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="/***isamaleorafemale*///showhetereogenouspktypesismale" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foresttype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="trees" type="treetype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="biggestrepresentative" type="biggestforest" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonejointest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="biggestforest" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="foresttype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="ordernbr" type="xs:string" />
        <xs:element name="orderlines" type="orderline" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="parentpk" nillable="true" minOccurs="0" />
        <xs:element name="age" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="zitemcost" >
      <xs:complexContent>
       <xs:extension base="genericobject">
         <xs:sequence>
          <xs:element name="" type="item" nillable="true" minOccurs="0" />
          <xs:element name="" type="vendor" nillable="true" minOccurs="0" />
          <xs:element name="cost" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:complexContent>
       <xs:extension base="genericobject">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="vendor" >
      <xs:complexContent>
       <xs:extension base="genericobject">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="warehouseitem" >
      <xs:complexContent>
       <xs:extension base="genericobject">
         <xs:sequence>
          <xs:element name="" type="item" nillable="true" minOccurs="0" />
          <xs:element name="" type="vendor" nillable="true" minOccurs="0" />
          <xs:element name="defaultcost" type="zitemcost" nillable="true" minOccurs="0" />
          <xs:element name="qtyinstock" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonereferencedcolumnnametest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericobject" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="districtuser" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="createdby" type="xs:long" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="////@joincolumn(name" type="user" nillable="true" minOccurs="0" />
        <xs:element name="ldtmd" type="xs:long" />
        <xs:element name="pmtmp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="userid" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="userkey" type="xs:long" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="createdby" type="xs:long" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="userid" type="xs:string" />
        <xs:element name="prefix" type="xs:anyType" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname1" type="xs:string" />
        <xs:element name="lastname2" type="xs:string" />
        <xs:element name="middlename1" type="xs:string" />
        <xs:element name="middlename2" type="xs:string" />
        <xs:element name="suffix" type="xs:anyType" />
        <xs:element name="birth" type="xs:dateTime" />
        <xs:element name="birthstate" type="xs:anyType" />
        <xs:element name="birthcountry" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="usertype" type="xs:anyType" />
        <xs:element name="privilege" type="xs:anyType" />
        <xs:element name="state" type="xs:anyType" />
        <xs:element name="country" type="xs:anyType" />
        <xs:element name="preferredname" type="xs:string" />
        <xs:element name="birthplace" type="xs:string" />
        <xs:element name="districtusers" type="districtuser" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="school" type="xs:long" />
        <xs:element name="cluster" type="xs:long" />
        <xs:element name="ldtmm" type="xs:long" />
        <xs:element name="ldtmd" type="xs:long" />
        <xs:element name="pmtmp" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="node" >
      <xs:sequence>
        <xs:element name="id" type="nodepk" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="parent" type="node" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lotzpk" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="loccode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="carz" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="make" type="xs:string" />
        <xs:element name="model" type="xs:string" />
        <xs:element name="manufactured" type="xs:dateTime" />
        <xs:element name="lot" type="lotz" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nodepk" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="level" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="color" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lens" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="focal" type="xs:double" />
        <xs:element name="length" type="xs:double" />
        <xs:element name="GeneratedName" type="frame" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orderline" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="item" type="xs:string" />
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="replacement" type="order" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manytoonetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytooneonnonpktest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="frame" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="lenses" type="lens" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="lowername" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sysuserorm" >
      <xs:sequence>
        <xs:element name="userid" type="xs:long" />
        <xs:element name="groups" type="sysgroupsorm" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="b">
         <xs:sequence>
          <xs:element name="age" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jointest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sysgroupsorm" >
      <xs:sequence>
        <xs:element name="groupid" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="create" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dogpk" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="ownername" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="life" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="duration" type="xs:long" />
        <xs:element name="fulldescription" type="xs:string" />
        <xs:element name="owner" type="cat" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="death" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:dateTime" />
        <xs:element name="howdoesithappen" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cat" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="secondname" type="xs:string" />
        <xs:element name="storypart1" type="xs:string" />
        <xs:element name="storypart2" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="id" type="dogpk" nillable="true" minOccurs="0" />
        <xs:element name="weight" type="xs:long" />
        <xs:element name="thoroughbredname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loadertest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="player" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="team" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="team" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="players" type="player" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="warehouseitem" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="vendor" nillable="true" minOccurs="0" />
        <xs:element name="defaultcost" type="itemcost" nillable="true" minOccurs="0" />
        <xs:element name="qtyinstock" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postman" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="referencedcolumnnametest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="itemcost" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="vendor" nillable="true" minOccurs="0" />
        <xs:element name="cost" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rambler" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="bags" type="bag" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="house" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="GeneratedName" type="postman" nillable="true" minOccurs="0" />
        <xs:element name="hasinhabitants" type="inhabitant" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="clothes" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="flavor" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bag" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="serial" type="xs:string" />
        <xs:element name="owner" type="rambler" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inhabitant" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="livesin" type="house" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vendor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="luggage" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="owner" type="xs:string" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="hasinside" type="clothes" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foobar" >
      <xs:sequence>
        <xs:element name="foo" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bed" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="quality" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="furniture" >
      <xs:complexContent>
       <xs:extension base="woody">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="brand" type="xs:string" />
          <xs:element name="weight" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accesstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="chair" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="pillow" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bigbed" >
      <xs:complexContent>
       <xs:extension base="bed">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="woody" >
      <xs:complexContent>
       <xs:extension base="thingy">
         <xs:sequence>
          <xs:element name="color" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="//shouldn'tbepersistentisalive" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="closet" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="numberofdoors" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="square" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="position" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bigbed" >
      <xs:complexContent>
       <xs:extension base="bed">
         <xs:sequence>
          <xs:element name="size" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bed" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="quality" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="woody" >
      <xs:complexContent>
       <xs:extension base="thingy">
         <xs:sequence>
          <xs:element name="color" type="xs:string" />
          <xs:element name="name" type="xs:string" />
          <xs:element name="//shouldn'tbepersistentisalive" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course7" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gardenshed" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="brand" type="xs:string" />
          <xs:element name="floors" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="being" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course3" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="friends" type="user" nillable="true" minOccurs="0" maxOccurs="unbounded" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="color" >
      <xs:sequence>
        <xs:element name="r" type="xs:long" />
        <xs:element name="g" type="xs:long" />
        <xs:element name="b" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course6" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="furniture" >
      <xs:complexContent>
       <xs:extension base="woody">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="brand" type="xs:string" />
          <xs:element name="weight" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course2" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="chair" >
      <xs:complexContent>
       <xs:extension base="furniture">
         <xs:sequence>
          <xs:element name="pillow" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="thingy" >
      <xs:sequence>
        <xs:element name="god" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course4" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="being">
         <xs:sequence>
          <xs:element name="firstname" type="xs:string" />
          <xs:element name="lastname" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="student" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="accesstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="animal" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="circle" >
      <xs:complexContent>
       <xs:extension base="shape">
         <xs:sequence>
          <xs:element name="" type="color" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="course8" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="horse" >
      <xs:complexContent>
       <xs:extension base="animal">
         <xs:sequence>
          <xs:element name="name" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="accessmappingtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="shape" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course5" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="course1" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="students" type="student" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="position" >
      <xs:sequence>
        <xs:element name="x" type="xs:long" />
        <xs:element name="y" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thingy" >
      <xs:sequence>
        <xs:element name="god" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="gardenshed" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
          <xs:element name="brand" type="xs:string" />
          <xs:element name="floors" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tourist" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="destination" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rentalcar" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="driver" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="waiter" >
      <xs:complexContent>
       <xs:extension base="crew">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="driver" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cook" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="favouriteknife" type="knive" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="crew" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boy" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="nicknames" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="xmlaccesstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="knive" >
      <xs:sequence>
        <xs:element name="brand" type="xs:string" />
        <xs:element name="bladelength" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="addressentry" >
      <xs:sequence>
        <xs:element name="street" type="xs:string" />
        <xs:element name="city" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="namingstrategytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="value" type="xs:long" />
        <xs:element name="address" type="addressentry" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="addresses" type="address" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dummynamingstrategy" >
      <xs:complexContent>
       <xs:extension base="ejb3namingstrategy">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ticketcomparator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="arraytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="competitor" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contest" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="results" type="competitor" nillable="true" minOccurs="0" />
        <xs:element name="heldin" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="foobar" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="states" type="state" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="state" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutabletest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classc" >
      <xs:complexContent>
       <xs:extension base="classb">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c" >
      <xs:complexContent>
       <xs:extension base="b">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fkcircularitytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classb" >
      <xs:complexContent>
       <xs:extension base="classa">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="d" >
      <xs:sequence>
        <xs:element name="id" type="d_pk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a_pk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="d" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="classd" >
      <xs:complexContent>
       <xs:extension base="classc">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="classa" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="d_pk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="c" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:sequence>
        <xs:element name="id" type="a_pk" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="thing" >
      <xs:sequence>
        <xs:element name="isalive" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="safemappingtest" >
      <xs:complexContent>
       <xs:extension base="junit.framework.testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="passport" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="number" type="xs:string" />
        <xs:element name="owner" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:complexContent>
       <xs:extension base="voice">
         <xs:sequence>
          <xs:element name="isnumeric" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="gsm" >
      <xs:complexContent>
       <xs:extension base="cellular">
         <xs:sequence>
          <xs:element name="frequency" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="interaction" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="communication" >
      <xs:complexContent>
       <xs:extension base="interaction">
         <xs:sequence>
          <xs:element name="species" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cellular" >
      <xs:complexContent>
       <xs:extension base="phone">
         <xs:sequence>
          <xs:element name="brand" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitynonentitytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="voice" >
      <xs:complexContent>
       <xs:extension base="communication">
         <xs:sequence>
          <xs:element name="id" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="newschemeidtest" >
      <xs:complexContent>
       <xs:extension base="idtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumidtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnoverridetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newgeneratormappingstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="minimalsequenceentity" >
      <xs:sequence>
        <xs:element name="seq_name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="minimaltableentity" >
      <xs:sequence>
        <xs:element name="tbl_name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="completesequenceentity" >
      <xs:sequence>
        <xs:element name="seq_name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tower" >
      <xs:complexContent>
       <xs:extension base="militarybuilding">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="latitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monkey" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="serialnumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="furniture" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planetcheatsheet" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="planet" nillable="true" minOccurs="0" />
        <xs:element name="mass" type="xs:double" />
        <xs:element name="radius" type="xs:double" />
        <xs:element name="numberofinhabitants" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="firtree" >
      <xs:complexContent>
       <xs:extension base="tree">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pointytooth" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="bunny" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planet" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soundsystem" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="brand" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bunny" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="teeth" type="pointytooth" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="toes" type="twinkletoes" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ball" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shoe" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="twinkletoes" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="bunny" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="footballer" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="club" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="breakdance" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tree" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="footballerpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="militarybuilding" >
      <xs:sequence>
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="latitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="goalkeeper" >
      <xs:complexContent>
       <xs:extension base="footballer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="home" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newschemeidtest" >
      <xs:complexContent>
       <xs:extension base="idtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joincolumnoverridetest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="idclasstest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuidgenerator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bunny" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="teeth" type="pointytooth" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="toes" type="twinkletoes" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ball" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="shoe" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="goalkeeper" >
      <xs:complexContent>
       <xs:extension base="footballer">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dog" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="footballerpk" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="phone" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="breakdance" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="firtree" >
      <xs:complexContent>
       <xs:extension base="tree">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="store" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="home" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="footballer" >
      <xs:sequence>
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="club" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="latitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="twinkletoes" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="bunny" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="computer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="serialnumber" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="department" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tower" >
      <xs:complexContent>
       <xs:extension base="militarybuilding">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tree" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="militarybuilding" >
      <xs:sequence>
        <xs:element name="longitude" type="xs:double" />
        <xs:element name="latitude" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="soundsystem" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
        <xs:element name="brand" type="xs:string" />
        <xs:element name="model" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="furniture" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planetcheatsheet" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="planet" nillable="true" minOccurs="0" />
        <xs:element name="mass" type="xs:double" />
        <xs:element name="radius" type="xs:double" />
        <xs:element name="numberofinhabitants" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="monkey" >
      <xs:sequence>
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pointytooth" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="bunny" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="planet" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumidtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="idtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="configurationtest" >
      <xs:complexContent>
       <xs:extension base="junit.framework.testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonewithformulatest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="message" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="languagecode" type="xs:string" />
        <xs:element name="languagename" type="xs:string" />
        <xs:element name="GeneratedName" type="language" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manufacturer" >
      <xs:sequence>
        <xs:element name="id" type="manufacturerid" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="modelid" >
      <xs:sequence>
        <xs:element name="/***/serialversionuid" type="xs:long" />
        <xs:element name="companycode" type="xs:anyType" />
        <xs:element name="manufacturercode" type="xs:anyType" />
        <xs:element name="modelcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contract" >
      <xs:sequence>
        <xs:element name="contractnumber" type="xs:string" />
        <xs:element name="//integercompanycodeid" type="contractid" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="manufacturer" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="model" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="language" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="code" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="menu" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="ordernbr" type="xs:string" />
        <xs:element name="isdefault" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="model" >
      <xs:sequence>
        <xs:element name="id" type="modelid" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="product" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="productidnf" type="xs:string" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="family" type="product" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="companyid" type="xs:long" />
        <xs:element name="defaultflag" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="contractid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="companycode" type="xs:anyType" />
        <xs:element name="contractnumber" type="xs:long" />
        <xs:element name="contractsequencenumber" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manufacturerid" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="companycode" type="xs:anyType" />
        <xs:element name="manufacturercode" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fooditem" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="item" type="xs:string" />
        <xs:element name="order" type="menu" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b" >
      <xs:complexContent>
       <xs:extension base="a">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hbmtest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sky" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="cloudtypes" type="cloudtype" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="maincloud" type="cloudtype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cloudtype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="primeminister" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="current" type="government" nillable="true" minOccurs="0" />
        <xs:element name="governments" type="government" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="aimpl" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="aid" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="government" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="primeminister" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="z" >
      <xs:complexContent>
       <xs:extension base="java.io.serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bimpl" >
      <xs:complexContent>
       <xs:extension base="aimpl">
         <xs:sequence>
          <xs:element name="serialversionuid" type="xs:long" />
          <xs:element name="bid" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="a" >
      <xs:complexContent>
       <xs:extension base="java.io.serializable">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hbmwithidentitytest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="zimpl" >
      <xs:sequence>
        <xs:element name="serialversionuid" type="xs:long" />
        <xs:element name="zid" type="xs:anyType" />
        <xs:element name="GeneratedName" type="b" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="vicepresident" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3xmlonetoonetest" >
      <xs:complexContent>
       <xs:extension base="ejb3xmltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3xmltestcase" >
      <xs:complexContent>
       <xs:extension base="hibernatetestcase">
         <xs:sequence>
          <xs:element name="reader" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lighter" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3xmlmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="ejb3xmltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ejb3xmlmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="ejb3xmltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="company" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="organization" type="xs:anyType" />
        <xs:element name="conferenceroomextensions" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="manufacturer" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="models" type="model" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3xmlelementcollectiontest" >
      <xs:complexContent>
       <xs:extension base="ejb3xmltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity1" >
      <xs:sequence>
        <xs:element name="field1" type="entity2" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3xmltest" >
      <xs:complexContent>
       <xs:extension base="testcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="model" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="GeneratedName" type="manufacturer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="light" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="power" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity3" >
      <xs:sequence>
        <xs:element name="field1" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="carmodel" >
      <xs:complexContent>
       <xs:extension base="model">
         <xs:sequence>
          <xs:element name="year" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity2" >
      <xs:sequence>
        <xs:element name="field1" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ejb3xmlonetomanytest" >
      <xs:complexContent>
       <xs:extension base="ejb3xmltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapindexformulatest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="usergroup.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sessionattribute" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="data" type="xs:string" />
        <xs:element name="objectdata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="session" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="users" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentity.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaqlcompliancetest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativequerytest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stay" >
      <xs:sequence>
        <xs:element name="//memberdeclarationid" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="old" type="person" nillable="true" minOccurs="0" />
        <xs:element name="veryold" type="person" nillable="true" minOccurs="0" />
        <xs:element name="start" type="xs:dateTime" />
        <xs:element name="end" type="xs:dateTime" />
        <xs:element name="vessel" type="xs:string" />
        <xs:element name="authoriser" type="xs:string" />
        <xs:element name="comments" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="fetchingtest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="//memberdeclarationid" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="companyname" type="xs:string" />
        <xs:element name="stays" type="xs:anyType" />
        <xs:element name="oldstays" type="xs:anyType" />
        <xs:element name="veryoldstays" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="package" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpaproxytest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="myuserid" type="xs:anyType" />
        <xs:element name="version" type="xs:anyType" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
        <xs:element name="email" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="immutablenaturalidtest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="repeatablereadtest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpalocktest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysubclassentity" >
      <xs:complexContent>
       <xs:extension base="myentity">
         <xs:sequence>
          <xs:element name="somesubproperty" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractjpatest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="part" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="item" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="stocknumber" type="xs:string" />
        <xs:element name="unitprice" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="otherassigned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="parentassigned" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parent" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="info" type="parentinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="info" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentinfoassigned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="parentassigned" nillable="true" minOccurs="0" />
        <xs:element name="info" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childinfo" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="child" nillable="true" minOccurs="0" />
        <xs:element name="info" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parentassigned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="info" type="parentinfoassigned" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childinfoassigned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="childassigned" nillable="true" minOccurs="0" />
        <xs:element name="info" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="childassigned" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="parentassigned" nillable="true" minOccurs="0" />
        <xs:element name="info" type="childinfoassigned" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cascadetest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parentchild.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="child" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="parent" nillable="true" minOccurs="0" />
        <xs:element name="info" type="childinfo" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="other" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="owner" type="parent" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="version" type="xs:long" />
        <xs:element name="parts" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="removedentitytest" >
      <xs:complexContent>
       <xs:extension base="abstractjpatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="part.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="myentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="other" type="myentity" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="item.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="documentimpl" >
      <xs:complexContent>
       <xs:extension base="itemimpl">
         <xs:sequence>
          <xs:element name="content" type="xs:anyType" />
          <xs:element name="modified" type="xs:anyType" />
          <xs:element name="created" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="itemimpl" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="folderimpl" >
      <xs:complexContent>
       <xs:extension base="itemimpl">
         <xs:sequence>
          <xs:element name="parent" type="folder" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="securedocumentimpl" >
      <xs:complexContent>
       <xs:extension base="documentimpl">
         <xs:sequence>
          <xs:element name="permissionbits" type="xs:anyType" />
          <xs:element name="owner" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="documentinterceptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="folder" >
      <xs:complexContent>
       <xs:extension base="item">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:complexContent>
       <xs:extension base="item">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="item" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="interfaceproxytest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="securedocument" >
      <xs:complexContent>
       <xs:extension base="document">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="search" >
      <xs:sequence>
        <xs:element name="search" type="xs:string" />
        <xs:element name="searchresults" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sorttest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="search.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultablelistimpl" >
      <xs:complexContent>
       <xs:extension base="arraylist">
         <xs:sequence>
          <xs:element name="defaultvalue" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="values" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="persistentdefaultablelist" >
      <xs:complexContent>
       <xs:extension base="persistentlist">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultablelist" >
      <xs:complexContent>
       <xs:extension base="list">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultablelisttype" >
      <xs:sequence>
        <xs:element name="defaultvalue" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="parameterizedusercollectiontypetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mylisttype" >
      <xs:sequence>
        <xs:element name="lastinstantiationrequest" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="email" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mylist" >
      <xs:complexContent>
       <xs:extension base="arraylist">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="userpermissions.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="imylist" >
      <xs:complexContent>
       <xs:extension base="list">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="username" type="xs:string" />
        <xs:element name="emailaddresses" type="imylist" nillable="true" minOccurs="0" />
        <xs:element name="sessiondata" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="usercollectiontypetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentmylist" >
      <xs:complexContent>
       <xs:extension base="persistentlist">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="document" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="uppercasename" type="xs:string" />
        <xs:element name="summary" type="xs:string" />
        <xs:element name="text" type="xs:string" />
        <xs:element name="lasttextmodification" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="instrumentcachetest" >
      <xs:complexContent>
       <xs:extension base="databasespecificfunctionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="membership" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="user" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="group" nillable="true" minOccurs="0" />
        <xs:element name="activation" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="group" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mapping.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="insertorderingtest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="memberships" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jointest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="user" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="login" type="xs:string" />
          <xs:element name="silly" type="xs:string" />
          <xs:element name="passwordexpirydays" type="xs:double" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="thing" >
      <xs:sequence>
        <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
        <xs:element name="comments" type="xs:string" />
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="address" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
        <xs:element name="country" type="xs:string" />
        <xs:element name="heightinches" type="xs:double" />
        <xs:element name="sex" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optionaljointest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="thing.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="title" type="xs:string" />
          <xs:element name="salary" type="xs:anyType" />
          <xs:element name="manager" type="employee" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:complexContent>
       <xs:extension base="person">
         <xs:sequence>
          <xs:element name="salesperson" type="employee" nillable="true" minOccurs="0" />
          <xs:element name="comments" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistentclassvisitortest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="valuevisitortest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="wheretest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="file" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="parent" type="file" nillable="true" minOccurs="0" />
        <xs:element name="deleted" type="xs:anyType" />
        <xs:element name="children" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="file.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitempk" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="order" nillable="true" minOccurs="0" />
        <xs:element name="productcode" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="identifierpropertyreferencestest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="pk" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lineitem" >
      <xs:sequence>
        <xs:element name="pk" type="lineitempk" nillable="true" minOccurs="0" />
        <xs:element name="quantity" type="xs:long" />
        <xs:element name="id" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="order" >
      <xs:sequence>
        <xs:element name="number" type="xs:long" />
        <xs:element name="placed" type="xs:dateTime" />
        <xs:element name="orderee" type="person" nillable="true" minOccurs="0" />
        <xs:element name="lineitems" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="address" nillable="true" minOccurs="0" />
        <xs:element name="mailing" type="address" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetooneformulatest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="type" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
          <xs:element name="" type="address" nillable="true" minOccurs="0" />
          <xs:element name="mailing" type="address" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="org" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
          <xs:element name="addresses" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="discrimsubclassonetoonetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
        <xs:element name="dob" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="employee" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="customer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="customer" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="onetoonelinktest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="employee" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dynamicmaponetoonetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="org" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinedsubclassonetoonetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
          <xs:element name="" type="address" nillable="true" minOccurs="0" />
          <xs:element name="mailing" type="address" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="org" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entity" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="optionalonetoonetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="address" >
      <xs:sequence>
        <xs:element name="entityname" type="xs:string" />
        <xs:element name="street" type="xs:string" />
        <xs:element name="state" type="xs:string" />
        <xs:element name="zip" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:complexContent>
       <xs:extension base="entity">
         <xs:sequence>
          <xs:element name="" type="address" nillable="true" minOccurs="0" />
          <xs:element name="mailing" type="address" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="boat" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="tag" type="xs:string" />
        <xs:element name="driver" type="person" nillable="true" minOccurs="0" />
        <xs:element name="boarder" type="person" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="generalworktest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="newerperformancetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="configurationperformancetest" >
      <xs:complexContent>
       <xs:extension base="unittestcase">
         <xs:sequence>
          <xs:element name="workpackagename" type="xs:string" />
          <xs:element name="compilationbasedir" type="file" nillable="true" minOccurs="0" />
          <xs:element name="workpackagedir" type="file" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="newperformancetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="performancetest" >
      <xs:complexContent>
       <xs:extension base="functionaltestcase">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="log4j" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate.cfg" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="loader.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="metadata-complete" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tourist" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boy" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="crew" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tourist2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="rentalcar" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="cook" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tourist3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tourist4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hammer.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="b.hbm" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cloudtype.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="government.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="a.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm28" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm5" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm21" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm26" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-one.orm11" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm10" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm13" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-one.orm2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-one.orm7" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm17" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm14" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-one.orm5" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm8" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm19" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm6" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-one.orm9" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm14" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm5" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm13" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm21" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-one.orm8" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm18" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm7" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-one.orm1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm16" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm15" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-one.orm4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm9" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm11" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm12" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-one.orm3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-one.orm6" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm27" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-one.orm10" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm20" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm20" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm12" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm15" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm23" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm18" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm9" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm16" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm7" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm11" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm18" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-one.orm9" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm12" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm11" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-one.orm5" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-one.orm2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm15" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm16" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-one.orm7" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm9" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm23" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm20" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm24" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm7" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm10" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm17" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm6" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm19" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm8" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm22" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm6" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm25" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-many.orm8" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm22" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm21" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-one.orm3" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm14" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm17" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-one.orm6" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm13" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm10" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-one.orm1" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-one.orm4" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm2" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="element-collection.orm19" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="one-to-one.orm8" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="many-to-many.orm5" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="boat.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ferry.hbm" >
      <xs:complexContent>
       <xs:extension base="attribute">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernate.cfg" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="habitatspecieslink" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mappings.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="asset.hbm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dogs" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
</xs:schema> 