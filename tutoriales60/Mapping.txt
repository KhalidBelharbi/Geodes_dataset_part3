ClassDiagram.Class>> PossessionMultipleDB =>=>=> RelationalSchema.Table>> possessionmultipledb;
ClassDiagram.Class>> UserMultipleDB =>=>=> RelationalSchema.Table>> usermultipledb;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Aggregate =>=>=> RelationalSchema.Table>> aggregate;
ClassDiagram.Class>> Aggregate2 =>=>=> RelationalSchema.Table>> aggregate2;
ClassDiagram.Class>> Aggregate3 =>=>=> RelationalSchema.Table>> aggregate3;
ClassDiagram.Class>> Article =>=>=> RelationalSchema.Table>> article;
ClassDiagram.Class>> Possession =>=>=> RelationalSchema.Table>> possession;
ClassDiagram.Class>> Item =>=>=> RelationalSchema.Table>> item;
ClassDiagram.Class>> Foo =>=>=> RelationalSchema.Table>> foo;
ClassDiagram.Class>> Bar =>=>=> RelationalSchema.Table>> bar;
ClassDiagram.Class>> ItemType =>=>=> RelationalSchema.Table>> itemtype;
ClassDiagram.Class>> Location =>=>=> RelationalSchema.Table>> location;
ClassDiagram.Class>> Store =>=>=> RelationalSchema.Table>> store;
ClassDiagram.Class>> MerchandiseEntity =>=>=> RelationalSchema.Table>> merchandiseentity;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Attribut>> PossessionMultipleDB.id:long =>=>=> RelationalSchema.Column>> possessionmultipledb.id PRIMARY KEY;
ClassDiagram.Attribut>> PossessionMultipleDB.name:String =>=>=> RelationalSchema.Column>> possessionmultipledb.name;
ClassDiagram.Attribut>> UserMultipleDB.id:int =>=>=> RelationalSchema.Column>> usermultipledb.id PRIMARY KEY;
ClassDiagram.Attribut>> UserMultipleDB.name:String =>=>=> RelationalSchema.Column>> usermultipledb.name;
ClassDiagram.Attribut>> UserMultipleDB.age:int =>=>=> RelationalSchema.Column>> usermultipledb.age;
ClassDiagram.Attribut>> UserMultipleDB.email:String =>=>=> RelationalSchema.Column>> usermultipledb.email;
ClassDiagram.Attribut>> UserMultipleDB.status:Integer =>=>=> RelationalSchema.Column>> usermultipledb.status;
ClassDiagram.Attribut>> Product.id:int =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.price:double =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> Aggregate.eventpublisher:ApplicationEventPublisher =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Aggregate.id:long =>=>=> RelationalSchema.Column>> aggregate.id PRIMARY KEY;
ClassDiagram.Attribut>> Aggregate2.domainevents:Collection<DomainEvent> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Aggregate2.id:long =>=>=> RelationalSchema.Column>> aggregate2.id PRIMARY KEY;
ClassDiagram.Attribut>> Aggregate3.id:long =>=>=> RelationalSchema.Column>> aggregate3.id PRIMARY KEY;
ClassDiagram.Attribut>> Article.id:Integer =>=>=> RelationalSchema.Column>> article.id PRIMARY KEY;
ClassDiagram.Attribut>> Article.publication:Date =>=>=> RelationalSchema.Column>> article.publication;
ClassDiagram.Attribut>> Article.publicationtime:Date =>=>=> RelationalSchema.Column>> article.publicationtime;
ClassDiagram.Attribut>> Article.creationtime:Date =>=>=> RelationalSchema.Column>> article.creationtime;
ClassDiagram.Attribut>> Possession.id:long =>=>=> RelationalSchema.Column>> possession.id PRIMARY KEY;
ClassDiagram.Attribut>> Possession.name:String =>=>=> RelationalSchema.Column>> possession.name;
ClassDiagram.Attribut>> Item.color:String =>=>=> RelationalSchema.Column>> item.color;
ClassDiagram.Attribut>> Item.grade:String =>=>=> RelationalSchema.Column>> item.grade;
ClassDiagram.Attribut>> Item.id:Long =>=>=> RelationalSchema.Column>> item.id PRIMARY KEY;
ClassDiagram.Attribut>> Item.name:String =>=>=> RelationalSchema.Column>> item.name;
ClassDiagram.Attribut>> Item.price:BigDecimal =>=>=> RelationalSchema.Column>> item.price;
ClassDiagram.Attribut>> Foo.id:long =>=>=> RelationalSchema.Column>> foo.id PRIMARY KEY;
ClassDiagram.Attribut>> Foo.name:String =>=>=> RelationalSchema.Column>> foo.name;
ClassDiagram.Attribut>> Bar.GeneratedName:Logger =>=>=> RelationalSchema.Column>> bar.GeneratedName;
ClassDiagram.Attribut>> Bar.id:int =>=>=> RelationalSchema.Column>> bar.id PRIMARY KEY;
ClassDiagram.Attribut>> Bar.name:String =>=>=> RelationalSchema.Column>> bar.name;
ClassDiagram.Attribut>> Bar.operation:String =>=>=> RelationalSchema.Column>> bar.operation;
ClassDiagram.Attribut>> Bar.timestamp:long =>=>=> RelationalSchema.Column>> bar.timestamp;
ClassDiagram.Attribut>> Bar.createddate:long =>=>=> RelationalSchema.Column>> bar.createddate;
ClassDiagram.Attribut>> Bar.modifieddate:long =>=>=> RelationalSchema.Column>> bar.modifieddate;
ClassDiagram.Attribut>> Bar.createdby:String =>=>=> RelationalSchema.Column>> bar.createdby;
ClassDiagram.Attribut>> Bar.modifiedby:String =>=>=> RelationalSchema.Column>> bar.modifiedby;
ClassDiagram.Attribut>> ItemType.id:Long =>=>=> RelationalSchema.Column>> itemtype.id PRIMARY KEY;
ClassDiagram.Attribut>> ItemType.name:String =>=>=> RelationalSchema.Column>> itemtype.name;
ClassDiagram.Attribut>> Location.city:String =>=>=> RelationalSchema.Column>> location.city;
ClassDiagram.Attribut>> Location.country:String =>=>=> RelationalSchema.Column>> location.country;
ClassDiagram.Attribut>> Location.id:Long =>=>=> RelationalSchema.Column>> location.id PRIMARY KEY;
ClassDiagram.Attribut>> Store.active:Boolean =>=>=> RelationalSchema.Column>> store.active;
ClassDiagram.Attribut>> Store.id:Long =>=>=> RelationalSchema.Column>> store.id PRIMARY KEY;
ClassDiagram.Attribut>> Store.itemssold:Long =>=>=> RelationalSchema.Column>> store.itemssold;
ClassDiagram.Attribut>> Store.name:String =>=>=> RelationalSchema.Column>> store.name;
ClassDiagram.Attribut>> MerchandiseEntity.id:Long =>=>=> RelationalSchema.Column>> merchandiseentity.id PRIMARY KEY;
ClassDiagram.Attribut>> MerchandiseEntity.title:String =>=>=> RelationalSchema.Column>> merchandiseentity.title;
ClassDiagram.Attribut>> MerchandiseEntity.price:BigDecimal =>=>=> RelationalSchema.Column>> merchandiseentity.price;
ClassDiagram.Attribut>> MerchandiseEntity.brand:String =>=>=> RelationalSchema.Column>> merchandiseentity.brand;
ClassDiagram.Attribut>> Student.id:long =>=>=> RelationalSchema.Column>> student.id PRIMARY KEY;
ClassDiagram.Attribut>> Student.name:String =>=>=> RelationalSchema.Column>> student.name;
ClassDiagram.Attribut>> Student.tags:List<String> =>=>=> RelationalSchema.Column>> student.tags;
ClassDiagram.Attribut>> Student.skilltags:List<SkillTag> =>=>=> RelationalSchema.Column>> student.skilltags;
ClassDiagram.Attribut>> Student.kvtags:List<KVTag> =>=>=> RelationalSchema.Column>> student.kvtags;
ClassDiagram.Attribut>> User.id:int =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.creationdate:LocalDate =>=>=> RelationalSchema.Column>> user.creationdate;
ClassDiagram.Attribut>> User.lastlogindate:LocalDate =>=>=> RelationalSchema.Column>> user.lastlogindate;
ClassDiagram.Attribut>> User.active:boolean =>=>=> RelationalSchema.Column>> user.active;
ClassDiagram.Attribut>> User.age:int =>=>=> RelationalSchema.Column>> user.age;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.status:Integer =>=>=> RelationalSchema.Column>> user.status;
One-To-Many relationship from ClassDiagram.Class>>UserMultipleDB  to ClassDiagram.Class>>List<PossessionMultipleDB>;
Many-To-One relationship from ClassDiagram.Class>>Item  to ClassDiagram.Class>>itemtype represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Item  to ClassDiagram.Class>>store represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Foo  to ClassDiagram.Class>>bar represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Bar  to ClassDiagram.Class>>Set<Foo>;
One-To-Many relationship from ClassDiagram.Class>>ItemType  to ClassDiagram.Class>>List<Item>;
One-To-Many relationship from ClassDiagram.Class>>Location  to ClassDiagram.Class>>List<Store>;
One-To-Many relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>List<Item>;
Many-To-One relationship from ClassDiagram.Class>>Store  to ClassDiagram.Class>>location represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<Possession>;
