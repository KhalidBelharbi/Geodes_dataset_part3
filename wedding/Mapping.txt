ClassDiagram.Class>> MultiCodeValue =>=>=> RelationalSchema.Table>> multicodevalue;
ClassDiagram.Class>> UdpPointPermission =>=>=> RelationalSchema.Table>> udppointpermission;
ClassDiagram.Class>> WeddingPhoto =>=>=> RelationalSchema.Table>> weddingphoto;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Code =>=>=> RelationalSchema.Table>> code;
ClassDiagram.Class>> InformationContent =>=>=> RelationalSchema.Table>> informationcontent;
ClassDiagram.Class>> SensitiveWords =>=>=> RelationalSchema.Table>> sensitivewords;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Module =>=>=> RelationalSchema.Table>> module;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> MultiCode =>=>=> RelationalSchema.Table>> multicode;
ClassDiagram.Class>> DataDictionary =>=>=> RelationalSchema.Table>> datadictionary;
ClassDiagram.Attribut>> MultiCodeValue./***child_num*/childnum:Integer =>=>=> RelationalSchema.Column>> multicodevalue./***child_num*/childnum;
ClassDiagram.Attribut>> MultiCodeValue./***代码id*/codeid:String =>=>=> RelationalSchema.Column>> multicodevalue./***代码id*/codeid;
ClassDiagram.Attribut>> MultiCodeValue./***代码项值*/itemvalue:String =>=>=> RelationalSchema.Column>> multicodevalue./***代码项值*/itemvalue;
ClassDiagram.Attribut>> MultiCodeValue./***代码项显示值*/codename:String =>=>=> RelationalSchema.Column>> multicodevalue./***代码项显示值*/codename;
ClassDiagram.Attribut>> MultiCodeValue./***上层代码id*/parentitemid:String =>=>=> RelationalSchema.Column>> multicodevalue./***上层代码id*/parentitemid;
ClassDiagram.Attribut>> MultiCodeValue./***代码编号*/itemcode:String =>=>=> RelationalSchema.Column>> multicodevalue./***代码编号*/itemcode;
ClassDiagram.Attribut>> MultiCodeValue./***排序*/sortsq:Integer =>=>=> RelationalSchema.Column>> multicodevalue./***排序*/sortsq;
ClassDiagram.Attribut>> MultiCodeValue./***评论*/comments:String =>=>=> RelationalSchema.Column>> multicodevalue./***评论*/comments;
ClassDiagram.Attribut>> UdpPointPermission./***功能点名称*/pointname:String =>=>=> RelationalSchema.Column>> udppointpermission./***功能点名称*/pointname;
ClassDiagram.Attribut>> UdpPointPermission./***功能点表达式*/pointexpression:String =>=>=> RelationalSchema.Column>> udppointpermission./***功能点表达式*/pointexpression;
ClassDiagram.Attribut>> WeddingPhoto./***照片分类*/photosort:String =>=>=> RelationalSchema.Column>> weddingphoto./***照片分类*/photosort;
ClassDiagram.Attribut>> WeddingPhoto./***相册分类*/albumsort:String =>=>=> RelationalSchema.Column>> weddingphoto./***相册分类*/albumsort;
ClassDiagram.Attribut>> WeddingPhoto./***照片*/photo:String =>=>=> RelationalSchema.Column>> weddingphoto./***照片*/photo;
ClassDiagram.Attribut>> User./***密码*/password:String =>=>=> RelationalSchema.Column>> user./***密码*/password;
ClassDiagram.Attribut>> User./***出生日期*/birthday:Date =>=>=> RelationalSchema.Column>> user./***出生日期*/birthday;
ClassDiagram.Attribut>> User./***电子邮箱*/email:String =>=>=> RelationalSchema.Column>> user./***电子邮箱*/email;
ClassDiagram.Attribut>> User./***部门*/deptid:String =>=>=> RelationalSchema.Column>> user./***部门*/deptid;
ClassDiagram.Attribut>> User./***姓名*/name:String =>=>=> RelationalSchema.Column>> user./***姓名*/name;
ClassDiagram.Attribut>> User./***性别*/gender:String =>=>=> RelationalSchema.Column>> user./***性别*/gender;
ClassDiagram.Attribut>> User./***用户名*/userid:String =>=>=> RelationalSchema.Column>> user./***用户名*/userid;
ClassDiagram.Attribut>> User./***手机*/mobile:String =>=>=> RelationalSchema.Column>> user./***手机*/mobile;
ClassDiagram.Attribut>> User.sort:Integer =>=>=> RelationalSchema.Column>> user.sort;
ClassDiagram.Attribut>> User.enable:Integer =>=>=> RelationalSchema.Column>> user.enable;
ClassDiagram.Attribut>> User.GeneratedName:Role =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.admin:Boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.GeneratedName:AuthorizationInfo =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.passworderrortimes:Integer =>=>=> RelationalSchema.Column>> user.passworderrortimes;
ClassDiagram.Attribut>> User.lastpassworderrortime:Date =>=>=> RelationalSchema.Column>> user.lastpassworderrortime;
ClassDiagram.Attribut>> User.lastchangepwdtime:Date =>=>=> RelationalSchema.Column>> user.lastchangepwdtime;
ClassDiagram.Attribut>> Code./***上层编码*/parentcode:String =>=>=> RelationalSchema.Column>> code./***上层编码*/parentcode;
ClassDiagram.Attribut>> Code./***下层最大编码*/maxchildcode:String =>=>=> RelationalSchema.Column>> code./***下层最大编码*/maxchildcode;
ClassDiagram.Attribut>> InformationContent./***作者*/author:String =>=>=> RelationalSchema.Column>> informationcontent./***作者*/author;
ClassDiagram.Attribut>> InformationContent./***发布日期*/released:Date =>=>=> RelationalSchema.Column>> informationcontent./***发布日期*/released;
ClassDiagram.Attribut>> InformationContent./***标题*/title:String =>=>=> RelationalSchema.Column>> informationcontent./***标题*/title;
ClassDiagram.Attribut>> InformationContent./***内容*/content:String =>=>=> RelationalSchema.Column>> informationcontent./***内容*/content;
ClassDiagram.Attribut>> InformationContent./***信息类别*/infotype:String =>=>=> RelationalSchema.Column>> informationcontent./***信息类别*/infotype;
ClassDiagram.Attribut>> InformationContent./***附件*/attachment:String =>=>=> RelationalSchema.Column>> informationcontent./***附件*/attachment;
ClassDiagram.Attribut>> InformationContent.name:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> SensitiveWords./***敏感词*/words:String =>=>=> RelationalSchema.Column>> sensitivewords./***敏感词*/words;
ClassDiagram.Attribut>> Role./***排序*/sort:Integer =>=>=> RelationalSchema.Column>> role./***排序*/sort;
ClassDiagram.Attribut>> Role./***上层角色*/parentroleid:String =>=>=> RelationalSchema.Column>> role./***上层角色*/parentroleid;
ClassDiagram.Attribut>> Role./***备注*/backup:String =>=>=> RelationalSchema.Column>> role./***备注*/backup;
ClassDiagram.Attribut>> Role./***角色名称*/rolename:String =>=>=> RelationalSchema.Column>> role./***角色名称*/rolename;
ClassDiagram.Attribut>> Role./***是否管理员角色*/admin:Boolean =>=>=> RelationalSchema.Column>> role./***是否管理员角色*/admin;
ClassDiagram.Attribut>> Module./***模块地址*/moduleaddr:String =>=>=> RelationalSchema.Column>> module./***模块地址*/moduleaddr;
ClassDiagram.Attribut>> Module./***模块序号*/sortsq:Integer =>=>=> RelationalSchema.Column>> module./***模块序号*/sortsq;
ClassDiagram.Attribut>> Module./***是否可见*/isvisible:Integer =>=>=> RelationalSchema.Column>> module./***是否可见*/isvisible;
ClassDiagram.Attribut>> Module./***父模块id*/parentmoduleid:String =>=>=> RelationalSchema.Column>> module./***父模块id*/parentmoduleid;
ClassDiagram.Attribut>> Module./***是否公开*/ispublic:Integer =>=>=> RelationalSchema.Column>> module./***是否公开*/ispublic;
ClassDiagram.Attribut>> Module./***目标*/target:String =>=>=> RelationalSchema.Column>> module./***目标*/target;
ClassDiagram.Attribut>> Module./***模块code*/modulecode:String =>=>=> RelationalSchema.Column>> module./***模块code*/modulecode;
ClassDiagram.Attribut>> Module./***模块名称*/modulename:String =>=>=> RelationalSchema.Column>> module./***模块名称*/modulename;
ClassDiagram.Attribut>> Module./***小图标地址*/iconaddr:String =>=>=> RelationalSchema.Column>> module./***小图标地址*/iconaddr;
ClassDiagram.Attribut>> Module./***权限判断是否严格过滤url*/stick:Integer =>=>=> RelationalSchema.Column>> module./***权限判断是否严格过滤url*/stick;
ClassDiagram.Attribut>> Module./***是否含有子模块*/haschild:Integer =>=>=> RelationalSchema.Column>> module./***是否含有子模块*/haschild;
ClassDiagram.Attribut>> Department./***部门编码*/deptcode:String =>=>=> RelationalSchema.Column>> department./***部门编码*/deptcode;
ClassDiagram.Attribut>> Department./***部门名称*/deptname:String =>=>=> RelationalSchema.Column>> department./***部门名称*/deptname;
ClassDiagram.Attribut>> Department./***排序*/sort:Integer =>=>=> RelationalSchema.Column>> department./***排序*/sort;
ClassDiagram.Attribut>> Department./***上层部门*/parentdeptid:String =>=>=> RelationalSchema.Column>> department./***上层部门*/parentdeptid;
ClassDiagram.Attribut>> Department.enable:Integer =>=>=> RelationalSchema.Column>> department.enable;
ClassDiagram.Attribut>> MultiCode./***code名*/codename:String =>=>=> RelationalSchema.Column>> multicode./***code名*/codename;
ClassDiagram.Attribut>> MultiCode./***排序*/sortsq:Integer =>=>=> RelationalSchema.Column>> multicode./***排序*/sortsq;
ClassDiagram.Attribut>> MultiCode./***评论*/comments:String =>=>=> RelationalSchema.Column>> multicode./***评论*/comments;
ClassDiagram.Attribut>> DataDictionary./***dictionary_code*/dictionarycode:String =>=>=> RelationalSchema.Column>> datadictionary./***dictionary_code*/dictionarycode;
ClassDiagram.Attribut>> DataDictionary./***content*/content:String =>=>=> RelationalSchema.Column>> datadictionary./***content*/content;
Many-To-One relationship from ClassDiagram.Class>>MultiCodeValue  to ClassDiagram.Class>>multicodevalue represented by ClassDiagram.Atrribute>>parentdict;
One-To-Many relationship from ClassDiagram.Class>>MultiCodeValue  to ClassDiagram.Class>>List<MultiCodeValue>;
Many-To-Many relationship between ClassDiagram.Class>>UdpPointPermission  and ClassDiagram.Class>>list<role>: point_in_role(point_id:UdpPointPermission [PK] #FK to UdpPointPermission,role_id:list<role> [PK] #FK to list<role>);
Many-To-One relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>department represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>list<role>: user_in_role(user_id:User [PK] #FK to User,role_id:list<role> [PK] #FK to list<role>);
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>list<department>: user_in_role(user_id:User [PK] #FK to User,role_id:list<role> [PK] #FK to list<role>);user_in_dept(user_id:User [PK] #FK to User,dept_id:list<department> [PK] #FK to list<department>);
Many-To-One relationship from ClassDiagram.Class>>InformationContent  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Role  to ClassDiagram.Class>>role represented by ClassDiagram.Atrribute>>parent;
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>list<module>: module_in_role(role_id:Role [PK] #FK to Role,module_id:list<module> [PK] #FK to list<module>);
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>list<user>: module_in_role(role_id:Role [PK] #FK to Role,module_id:list<module> [PK] #FK to list<module>);user_in_role(role_id:Role [PK] #FK to Role,user_id:list<user> [PK] #FK to list<user>);
Many-To-One relationship from ClassDiagram.Class>>Module  to ClassDiagram.Class>>module represented by ClassDiagram.Atrribute>>parent;
Many-To-Many relationship between ClassDiagram.Class>>Module  and ClassDiagram.Class>>list<role>: module_in_role(module_id:Module [PK] #FK to Module,role_id:list<role> [PK] #FK to list<role>);
One-To-Many relationship from ClassDiagram.Class>>Module  to ClassDiagram.Class>>List<Module>;
Many-To-Many relationship between ClassDiagram.Class>>Department  and ClassDiagram.Class>>list<role>: department_in_role(dept_id:Department [PK] #FK to Department,role_id:list<role> [PK] #FK to list<role>);
Many-To-One relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>department represented by ClassDiagram.Atrribute>>parentdept;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>List<Department>;
