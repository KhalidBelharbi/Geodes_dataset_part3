ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Subject =>=>=> RelationalSchema.Table>> subject;
ClassDiagram.Class>> Preference =>=>=> RelationalSchema.Table>> preference;
ClassDiagram.Class>> Post =>=>=> RelationalSchema.Table>> post;
ClassDiagram.Class>> Foo =>=>=> RelationalSchema.Table>> foo;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> Subject.id:long =>=>=> RelationalSchema.Column>> subject.id PRIMARY KEY;
ClassDiagram.Attribut>> Subject.name:String =>=>=> RelationalSchema.Column>> subject.name;
ClassDiagram.Attribut>> Preference.id:Long =>=>=> RelationalSchema.Column>> preference.id PRIMARY KEY;
ClassDiagram.Attribut>> Preference.timezone:String =>=>=> RelationalSchema.Column>> preference.timezone;
ClassDiagram.Attribut>> Post.id:Long =>=>=> RelationalSchema.Column>> post.id PRIMARY KEY;
ClassDiagram.Attribut>> Post.title:String =>=>=> RelationalSchema.Column>> post.title;
ClassDiagram.Attribut>> Post.url:String =>=>=> RelationalSchema.Column>> post.url;
ClassDiagram.Attribut>> Post.date:String =>=>=> RelationalSchema.Column>> post.date;
ClassDiagram.Attribut>> Post.redditid:String =>=>=> RelationalSchema.Column>> post.redditid;
ClassDiagram.Attribut>> Post.submission:Date =>=>=> RelationalSchema.Column>> post.submission;
ClassDiagram.Attribut>> Post.sent:boolean =>=>=> RelationalSchema.Column>> post.sent;
ClassDiagram.Attribut>> Post.username:String =>=>=> RelationalSchema.Column>> post.username;
ClassDiagram.Attribut>> Foo.id:long =>=>=> RelationalSchema.Column>> foo.id PRIMARY KEY;
ClassDiagram.Attribut>> Foo.name:String =>=>=> RelationalSchema.Column>> foo.name;
ClassDiagram.Attribut>> Foo.version:long =>=>=> RelationalSchema.Column>> foo.version;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>preference represented by ClassDiagram.Atrribute>>GeneratedName;
