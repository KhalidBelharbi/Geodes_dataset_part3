ClassDiagram.Class>> DateTimeWrapper =>=>=> RelationalSchema.Table>> datetimewrapper;
ClassDiagram.Class>> Book =>=>=> RelationalSchema.Table>> book;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Authority =>=>=> RelationalSchema.Table>> authority;
ClassDiagram.Class>> PersistentAuditEvent =>=>=> RelationalSchema.Table>> persistentauditevent;
ClassDiagram.Class>> AbstractAuditingEntity =>=>=> RelationalSchema.Table>> abstractauditingentity;
ClassDiagram.Attribut>> DateTimeWrapper.serialversionuid:long =>=>=> RelationalSchema.Column>> datetimewrapper.serialversionuid;
ClassDiagram.Attribut>> DateTimeWrapper.id:Long =>=>=> RelationalSchema.Column>> datetimewrapper.id PRIMARY KEY;
ClassDiagram.Attribut>> DateTimeWrapper.GeneratedName:Instant =>=>=> RelationalSchema.Column>> datetimewrapper.GeneratedName;
ClassDiagram.Attribut>> DateTimeWrapper.GeneratedName:LocalDateTime =>=>=> RelationalSchema.Column>> datetimewrapper.GeneratedName;
ClassDiagram.Attribut>> DateTimeWrapper.GeneratedName:OffsetDateTime =>=>=> RelationalSchema.Column>> datetimewrapper.GeneratedName;
ClassDiagram.Attribut>> DateTimeWrapper.GeneratedName:ZonedDateTime =>=>=> RelationalSchema.Column>> datetimewrapper.GeneratedName;
ClassDiagram.Attribut>> DateTimeWrapper.GeneratedName:LocalTime =>=>=> RelationalSchema.Column>> datetimewrapper.GeneratedName;
ClassDiagram.Attribut>> DateTimeWrapper.GeneratedName:OffsetTime =>=>=> RelationalSchema.Column>> datetimewrapper.GeneratedName;
ClassDiagram.Attribut>> DateTimeWrapper.GeneratedName:LocalDate =>=>=> RelationalSchema.Column>> datetimewrapper.GeneratedName;
ClassDiagram.Attribut>> Book.serialversionuid:long =>=>=> RelationalSchema.Column>> book.serialversionuid;
ClassDiagram.Attribut>> Book.id:Long =>=>=> RelationalSchema.Column>> book.id PRIMARY KEY;
ClassDiagram.Attribut>> Book.title:String =>=>=> RelationalSchema.Column>> book.title;
ClassDiagram.Attribut>> Book.author:String =>=>=> RelationalSchema.Column>> book.author;
ClassDiagram.Attribut>> Book.published:LocalDate =>=>=> RelationalSchema.Column>> book.published;
ClassDiagram.Attribut>> Book.quantity:Integer =>=>=> RelationalSchema.Column>> book.quantity;
ClassDiagram.Attribut>> Book.price:Double =>=>=> RelationalSchema.Column>> book.price;
ClassDiagram.Attribut>> User.serialversionuid:long =>=>=> RelationalSchema.Column>> user.serialversionuid;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.login:String =>=>=> RelationalSchema.Column>> user.login;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.firstname:String =>=>=> RelationalSchema.Column>> user.firstname;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.activated:boolean =>=>=> RelationalSchema.Column>> user.activated;
ClassDiagram.Attribut>> User.langkey:String =>=>=> RelationalSchema.Column>> user.langkey;
ClassDiagram.Attribut>> User.imageurl:String =>=>=> RelationalSchema.Column>> user.imageurl;
ClassDiagram.Attribut>> User.activationkey:String =>=>=> RelationalSchema.Column>> user.activationkey;
ClassDiagram.Attribut>> User.resetkey:String =>=>=> RelationalSchema.Column>> user.resetkey;
ClassDiagram.Attribut>> User.resetdate:Instant =>=>=> RelationalSchema.Column>> user.resetdate;
ClassDiagram.Attribut>> Authority.serialversionuid:long =>=>=> RelationalSchema.Column>> authority.serialversionuid;
ClassDiagram.Attribut>> Authority.name:String =>=>=> RelationalSchema.Column>> authority.name PRIMARY KEY;
ClassDiagram.Attribut>> PersistentAuditEvent.serialversionuid:long =>=>=> RelationalSchema.Column>> persistentauditevent.serialversionuid;
ClassDiagram.Attribut>> PersistentAuditEvent.id:Long =>=>=> RelationalSchema.Column>> persistentauditevent.id PRIMARY KEY;
ClassDiagram.Attribut>> PersistentAuditEvent.principal:String =>=>=> RelationalSchema.Column>> persistentauditevent.principal;
ClassDiagram.Attribut>> PersistentAuditEvent.auditeventdate:Instant =>=>=> RelationalSchema.Column>> persistentauditevent.auditeventdate;
ClassDiagram.Attribut>> PersistentAuditEvent.auditeventtype:String =>=>=> RelationalSchema.Column>> persistentauditevent.auditeventtype;
ClassDiagram.Attribut>> PersistentAuditEvent.data:Map<String,String> =>=>=> RelationalSchema.Column>> persistentauditevent.data;
ClassDiagram.Attribut>> AbstractAuditingEntity.serialversionuid:long =>=>=> RelationalSchema.Column>> abstractauditingentity.serialversionuid;
ClassDiagram.Attribut>> AbstractAuditingEntity.createdby:String =>=>=> RelationalSchema.Column>> abstractauditingentity.createdby;
ClassDiagram.Attribut>> AbstractAuditingEntity.createddate:Instant =>=>=> RelationalSchema.Column>> abstractauditingentity.createddate;
ClassDiagram.Attribut>> AbstractAuditingEntity.lastmodifiedby:String =>=>=> RelationalSchema.Column>> abstractauditingentity.lastmodifiedby;
ClassDiagram.Attribut>> AbstractAuditingEntity.lastmodifieddate:Instant =>=>=> RelationalSchema.Column>> abstractauditingentity.lastmodifieddate;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>set<authority>: jhi_user_authority(user_id:User [PK] #FK to User,authority_name:set<authority> [PK] #FK to set<authority>);
