ClassDiagram.Class>> PasswordResetToken =>=>=> RelationalSchema.Table>> passwordresettoken;
ClassDiagram.Class>> ArticuloPedido =>=>=> RelationalSchema.Table>> articulopedido;
ClassDiagram.Class>> UserRole =>=>=> RelationalSchema.Table>> userrole;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Categoria =>=>=> RelationalSchema.Table>> categoria;
ClassDiagram.Class>> Departamento =>=>=> RelationalSchema.Table>> departamento;
ClassDiagram.Class>> Subcategoria =>=>=> RelationalSchema.Table>> subcategoria;
ClassDiagram.Class>> Cargo =>=>=> RelationalSchema.Table>> cargo;
ClassDiagram.Class>> Estado =>=>=> RelationalSchema.Table>> estado;
ClassDiagram.Class>> Pedido =>=>=> RelationalSchema.Table>> pedido;
ClassDiagram.Class>> EntradaSalida =>=>=> RelationalSchema.Table>> entradasalida;
ClassDiagram.Class>> Kardex =>=>=> RelationalSchema.Table>> kardex;
ClassDiagram.Class>> Producto =>=>=> RelationalSchema.Table>> producto;
ClassDiagram.Class>> Pais =>=>=> RelationalSchema.Table>> pais;
ClassDiagram.Class>> Cliente =>=>=> RelationalSchema.Table>> cliente;
ClassDiagram.Class>> Empleado =>=>=> RelationalSchema.Table>> empleado;
ClassDiagram.Class>> Cuenta =>=>=> RelationalSchema.Table>> cuenta;
ClassDiagram.Attribut>> PasswordResetToken.id:Long =>=>=> RelationalSchema.Column>> passwordresettoken.id PRIMARY KEY;
ClassDiagram.Attribut>> PasswordResetToken.token:String =>=>=> RelationalSchema.Column>> passwordresettoken.token;
ClassDiagram.Attribut>> PasswordResetToken.expiry:Date =>=>=> RelationalSchema.Column>> passwordresettoken.expiry;
ClassDiagram.Attribut>> ArticuloPedido.idarticulopedido:int =>=>=> RelationalSchema.Column>> articulopedido.idarticulopedido PRIMARY KEY;
ClassDiagram.Attribut>> ArticuloPedido.cantidad:int =>=>=> RelationalSchema.Column>> articulopedido.cantidad;
ClassDiagram.Attribut>> ArticuloPedido.preciounitario:float =>=>=> RelationalSchema.Column>> articulopedido.preciounitario;
ClassDiagram.Attribut>> UserRole.userroleid:int =>=>=> RelationalSchema.Column>> userrole.userroleid PRIMARY KEY;
ClassDiagram.Attribut>> UserRole.role:String =>=>=> RelationalSchema.Column>> userrole.role;
ClassDiagram.Attribut>> User.iduser:int =>=>=> RelationalSchema.Column>> user.iduser PRIMARY KEY;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.//@notempty(message:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> User.codigoverificacion:String =>=>=> RelationalSchema.Column>> user.codigoverificacion;
ClassDiagram.Attribut>> User.//indicasielusuarioestÃ¡disponibleverifyed:int =>=>=> RelationalSchema.Column>> user.//indicasielusuarioestÃ¡disponibleverifyed;
ClassDiagram.Attribut>> Categoria.id:int =>=>=> RelationalSchema.Column>> categoria.id PRIMARY KEY;
ClassDiagram.Attribut>> Categoria.nombre:String =>=>=> RelationalSchema.Column>> categoria.nombre;
ClassDiagram.Attribut>> Categoria.descripcion:String =>=>=> RelationalSchema.Column>> categoria.descripcion;
ClassDiagram.Attribut>> Categoria.habilitado:boolean =>=>=> RelationalSchema.Column>> categoria.habilitado;
ClassDiagram.Attribut>> Departamento.id:int =>=>=> RelationalSchema.Column>> departamento.id PRIMARY KEY;
ClassDiagram.Attribut>> Departamento.nombre:String =>=>=> RelationalSchema.Column>> departamento.nombre;
ClassDiagram.Attribut>> Departamento.descripcion:String =>=>=> RelationalSchema.Column>> departamento.descripcion;
ClassDiagram.Attribut>> Departamento.habilitado:boolean =>=>=> RelationalSchema.Column>> departamento.habilitado;
ClassDiagram.Attribut>> Subcategoria.idsubcategoria:int =>=>=> RelationalSchema.Column>> subcategoria.idsubcategoria PRIMARY KEY;
ClassDiagram.Attribut>> Subcategoria.nombresubcategoria:String =>=>=> RelationalSchema.Column>> subcategoria.nombresubcategoria;
ClassDiagram.Attribut>> Subcategoria.descripcionsubcategoria:String =>=>=> RelationalSchema.Column>> subcategoria.descripcionsubcategoria;
ClassDiagram.Attribut>> Subcategoria.habilitado:boolean =>=>=> RelationalSchema.Column>> subcategoria.habilitado;
ClassDiagram.Attribut>> Cargo.id:int =>=>=> RelationalSchema.Column>> cargo.id PRIMARY KEY;
ClassDiagram.Attribut>> Cargo.titulocargo:String =>=>=> RelationalSchema.Column>> cargo.titulocargo;
ClassDiagram.Attribut>> Estado.idestado:int =>=>=> RelationalSchema.Column>> estado.idestado PRIMARY KEY;
ClassDiagram.Attribut>> Estado.tituloestado:String =>=>=> RelationalSchema.Column>> estado.tituloestado;
ClassDiagram.Attribut>> Pedido.idpedido:int =>=>=> RelationalSchema.Column>> pedido.idpedido PRIMARY KEY;
ClassDiagram.Attribut>> Pedido.direcciondestino:String =>=>=> RelationalSchema.Column>> pedido.direcciondestino;
ClassDiagram.Attribut>> Pedido.fechapedido:Date =>=>=> RelationalSchema.Column>> pedido.fechapedido;
ClassDiagram.Attribut>> EntradaSalida.identradasalida:int =>=>=> RelationalSchema.Column>> entradasalida.identradasalida PRIMARY KEY;
ClassDiagram.Attribut>> EntradaSalida.fecha:Date =>=>=> RelationalSchema.Column>> entradasalida.fecha;
ClassDiagram.Attribut>> EntradaSalida.isentradasalida:boolean =>=>=> RelationalSchema.Column>> entradasalida.isentradasalida;
ClassDiagram.Attribut>> EntradaSalida.cantidad:int =>=>=> RelationalSchema.Column>> entradasalida.cantidad;
ClassDiagram.Attribut>> EntradaSalida.precio:double =>=>=> RelationalSchema.Column>> entradasalida.precio;
ClassDiagram.Attribut>> Kardex.idkardex:int =>=>=> RelationalSchema.Column>> kardex.idkardex PRIMARY KEY;
ClassDiagram.Attribut>> Kardex.stockminimo:int =>=>=> RelationalSchema.Column>> kardex.stockminimo;
ClassDiagram.Attribut>> Kardex.stockmaximo:int =>=>=> RelationalSchema.Column>> kardex.stockmaximo;
ClassDiagram.Attribut>> Kardex.costounitario:double =>=>=> RelationalSchema.Column>> kardex.costounitario;
ClassDiagram.Attribut>> Kardex.unidadesdisponibles:int =>=>=> RelationalSchema.Column>> kardex.unidadesdisponibles;
ClassDiagram.Attribut>> Producto.//faltaelcampoparalallaveforaneadesubgategoriaidarticulo:int =>=>=> RelationalSchema.Column>> producto.//faltaelcampoparalallaveforaneadesubgategoriaidarticulo PRIMARY KEY;
ClassDiagram.Attribut>> Producto.imagen:String =>=>=> RelationalSchema.Column>> producto.imagen;
ClassDiagram.Attribut>> Producto.marca:String =>=>=> RelationalSchema.Column>> producto.marca;
ClassDiagram.Attribut>> Producto.titulo:String =>=>=> RelationalSchema.Column>> producto.titulo;
ClassDiagram.Attribut>> Producto.margenganancia:double =>=>=> RelationalSchema.Column>> producto.margenganancia;
ClassDiagram.Attribut>> Producto.porcentajedescuento:double =>=>=> RelationalSchema.Column>> producto.porcentajedescuento;
ClassDiagram.Attribut>> Producto.descripcionarticulo:String =>=>=> RelationalSchema.Column>> producto.descripcionarticulo;
ClassDiagram.Attribut>> Producto.habilitado:int =>=>=> RelationalSchema.Column>> producto.habilitado;
ClassDiagram.Attribut>> Pais.idpais:int =>=>=> RelationalSchema.Column>> pais.idpais PRIMARY KEY;
ClassDiagram.Attribut>> Pais.nombrepais:String =>=>=> RelationalSchema.Column>> pais.nombrepais;
ClassDiagram.Attribut>> Pais.costoenvio:float =>=>=> RelationalSchema.Column>> pais.costoenvio;
ClassDiagram.Attribut>> Pais.impuesto:float =>=>=> RelationalSchema.Column>> pais.impuesto;
ClassDiagram.Attribut>> Cliente.idcliente:int =>=>=> RelationalSchema.Column>> cliente.idcliente PRIMARY KEY;
ClassDiagram.Attribut>> Cliente.nombrecliente:String =>=>=> RelationalSchema.Column>> cliente.nombrecliente;
ClassDiagram.Attribut>> Cliente.apellidocliente:String =>=>=> RelationalSchema.Column>> cliente.apellidocliente;
ClassDiagram.Attribut>> Cliente.direccion:String =>=>=> RelationalSchema.Column>> cliente.direccion;
ClassDiagram.Attribut>> Empleado.idempleado:int =>=>=> RelationalSchema.Column>> empleado.idempleado PRIMARY KEY;
ClassDiagram.Attribut>> Empleado.nombreempleado:String =>=>=> RelationalSchema.Column>> empleado.nombreempleado;
ClassDiagram.Attribut>> Empleado.apellidoempleado:String =>=>=> RelationalSchema.Column>> empleado.apellidoempleado;
ClassDiagram.Attribut>> Empleado.direccion:String =>=>=> RelationalSchema.Column>> empleado.direccion;
ClassDiagram.Attribut>> Cuenta.id:int =>=>=> RelationalSchema.Column>> cuenta.id PRIMARY KEY;
ClassDiagram.Attribut>> Cuenta.numerotarjeta:String =>=>=> RelationalSchema.Column>> cuenta.numerotarjeta;
ClassDiagram.Attribut>> Cuenta.codigo:int =>=>=> RelationalSchema.Column>> cuenta.codigo;
ClassDiagram.Attribut>> Cuenta.saldo:double =>=>=> RelationalSchema.Column>> cuenta.saldo;
ClassDiagram.Attribut>> Cuenta.fechadevencimiento:Date =>=>=> RelationalSchema.Column>> cuenta.fechadevencimiento;
One-To-One relationship between ClassDiagram.Class>>PasswordResetToken  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ArticuloPedido  to ClassDiagram.Class>>pedido represented by ClassDiagram.Atrribute>>//foraneas;
Many-To-One relationship from ClassDiagram.Class>>ArticuloPedido  to ClassDiagram.Class>>producto represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>UserRole  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Set<UserRole>;
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>List<UserRole>;
Many-To-One relationship from ClassDiagram.Class>>Categoria  to ClassDiagram.Class>>departamento represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Categoria  to ClassDiagram.Class>>List<Subcategoria>;
One-To-Many relationship from ClassDiagram.Class>>Departamento  to ClassDiagram.Class>>List<Categoria>;
Many-To-One relationship from ClassDiagram.Class>>Subcategoria  to ClassDiagram.Class>>categoria represented by ClassDiagram.Atrribute>>//foranea;
One-To-Many relationship from ClassDiagram.Class>>Subcategoria  to ClassDiagram.Class>>List<Producto>;
Many-To-One relationship from ClassDiagram.Class>>Pedido  to ClassDiagram.Class>>pais represented by ClassDiagram.Atrribute>>//llavesforaneas;
Many-To-One relationship from ClassDiagram.Class>>Pedido  to ClassDiagram.Class>>estado represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Pedido  to ClassDiagram.Class>>cliente represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Pedido  to ClassDiagram.Class>>List<ArticuloPedido>;
Many-To-One relationship from ClassDiagram.Class>>EntradaSalida  to ClassDiagram.Class>>kardex represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Kardex  to ClassDiagram.Class>>producto represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Producto  to ClassDiagram.Class>>subcategoria represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Producto  to ClassDiagram.Class>>kardex represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Cliente  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Empleado  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Empleado  to ClassDiagram.Class>>cargo represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Cuenta  to ClassDiagram.Class>>cliente represented by ClassDiagram.Atrribute>>GeneratedName;
