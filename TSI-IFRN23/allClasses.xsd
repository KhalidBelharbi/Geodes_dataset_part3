<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:complexType name="markus" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="drop" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v1_1__post_details" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v1_3__post_tag" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v1_2__post_comment" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v1_0__initial_script" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v1_4__users" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v1_4__users" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v1_2__post_comment" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v1_1__post_details" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v1_3__post_tag" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="v1_0__initial_script" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flexy-pool" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbc-hsqldb" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jta-postgresql" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jta-hsqldb" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbc-mysql" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jdbc-postgresql" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="logback-test" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="weather" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mysql-orm" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ehcache" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hydratedstatereferenceentitiestest" >
      <xs:complexContent>
       <xs:extension base="hydratedstatebenchmarktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionalcacheconcurrencystrategytestconfiguration" >
      <xs:complexContent>
       <xs:extension base="hsqldbjtatransactionmanagerconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionalcacheconcurrencystrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identitytransactionalcacheconcurrencystrategytestconfiguration" >
      <xs:complexContent>
       <xs:extension base="		hsqldbjtatransactionmanagerconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identitytransactionalcacheconcurrencystrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identitytransactionalentities" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionalentities" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="inheritancecachetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="querycachetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonstrictreadwritecacheconcurrencystrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nonstrictreadwritecacheconcurrencystrategywithconcurrentupdatetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="applyinterceptor" type="xs:anyType" />
          <xs:element name="endlatch" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readonlycacheconcurrencystrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencereadonlycacheconcurrencystrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identityreadonlycacheconcurrencystrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readonlycacheconcurrencystrategyimmutabletest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectioncachetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hydratedstatebenchmarktest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
          <xs:element name="insertcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readwritecacheconcurrencystrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identityreadwritecacheconcurrencystrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencereadwritecacheconcurrencystrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="repositoryreadwritecacheconcurrencystrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="reference" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readwritecacheconcurrencystrategywithlocktimeouttest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="applyinterceptor" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="queryhydratedstatetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="collectionhydratedstatetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityhydratedstatetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyinitializationexceptionfixwithdtotest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriaapimemberoftest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativequerytest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlscrollableresultsnostreamingtest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
          <xs:element name="resultsetsize" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchallassociationstest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nplusonelazyfetchingwithsubselectmanytoonefindentitytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlquerytofiletest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlscrollableresultsstreamingtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyinitializationoutsidetransactiontest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommentsummary" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="review" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="naturalidtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagerfetchingonetomanybagsfindentitytest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyinitializationexceptionfixtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagerfetchingmanytoonefindentitytest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namedqueryperformancetest" >
      <xs:complexContent>
       <xs:extension base="plancachesizeperformancetest">
         <xs:sequence>
          <xs:element name="query_name_1" type="xs:string" />
          <xs:element name="query_name_2" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyattributewithmultipleentitiestest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fetchentitieswithpaginationtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="projectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="distincttest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="plancachesizeperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
          <xs:element name="plancachemaxsize" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriaapitest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nplusonelazyfetchingmanytoonefindentitytest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommentdto" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="review" type="xs:string" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mysqlscrollableresultsstreamingtest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
          <xs:element name="resultsetsize" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyattributetest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateproxytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="eagerfetchingonetomanyfindentitytest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyfetchingmanytoonefindentitytest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lazyinitializationexceptiontest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="findentitytest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="namednativequeryparametertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metadatatest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="metadataextractorintegrator" >
      <xs:sequence>
        <xs:element name="instance" type="metadataextractorintegrator" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="database" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="lockmodeoptimisticraceconditiontest" >
      <xs:complexContent>
       <xs:extension base="abstractlockmodeoptimistictest">
         <xs:sequence>
          <xs:element name="ready" type="xs:anyType" />
          <xs:element name="endlatch" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultoptimisticlockingtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlockingonerootdirtyversioningtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="loadpostlatch" type="xs:anyType" />
          <xs:element name="alicelatch" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadelocktest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="allpropertiesoptimisticlockingtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityoptimisticlockingonunidirectionalcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractentityoptimisticlockingcollectiontest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadelockelementcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockmodeoptimisticforceincrementtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityoptimisticlockingonbidirectionalparentowningcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractentityoptimisticlockingcollectiontest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="skiplockjobqueuetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="followonlockingtest" >
      <xs:complexContent>
       <xs:extension base="abstractoraclexeintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlockingonerootoneversiontest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="loadpostlatch" type="xs:anyType" />
          <xs:element name="alicelatch" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlockingchildupdatesrootversiontest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlockingbidirectionalchildupdatesrootversiontest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockmodeoptimistictest" >
      <xs:complexContent>
       <xs:extension base="abstractlockmodeoptimistictest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityoptimisticlockingoverruleonbidirectionalparentowningcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractentityoptimisticlockingcollectiontest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockmodepessimisticreadwriteintegrationtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="wait_millis" type="xs:long" />
          <xs:element name="endlatch" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadelockmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockmodepessimisticforceincrementtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="startlatch" type="xs:anyType" />
          <xs:element name="endlatch" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlockingrepeatablereadtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="loadpostlatch" type="xs:anyType" />
          <xs:element name="alicelatch" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlockingonerootdirtyversioningselectbeforeupdatetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityoptimisticlockingoncomponentcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractentityoptimisticlockingcollectiontest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlockmodeoptimistictest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractentityoptimisticlockingcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractentityoptimisticlockingcollectiontest.ipost<c>,">
         <xs:sequence>
          <xs:element name="postclass" type="xs:anyType" />
          <xs:element name="commentclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cascadelockunidirectionalonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="lockmodeoptimisticwithpessimisticlockupgradetest" >
      <xs:complexContent>
       <xs:extension base="lockmodeoptimisticraceconditiontest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityoptimisticlockingonbidirectionalchildowningcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractentityoptimisticlockingcollectiontest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityfirstlevelcachereusetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optimisticlockingonerootentitymultipleversionstest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="original" type="post" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracledeleteglobaltablestoredproceduretest" >
      <xs:complexContent>
       <xs:extension base="abstractoraclexeintegrationtest">
         <xs:sequence>
          <xs:element name="infoentrycount" type="xs:long" />
          <xs:element name="errorentrycount" type="xs:long" />
          <xs:element name="warnentrycount" type="xs:long" />
          <xs:element name="totalentrycount" type="xs:long" />
          <xs:element name="timestamp" type="xs:dateTime" />
          <xs:element name="millisstep" type="xs:long" />
          <xs:element name="batchsize" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlstoredproceduretest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlstoredproceduretest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverstoredproceduretest" >
      <xs:complexContent>
       <xs:extension base="abstractsqlserverintegrationtest">
         <xs:sequence>
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclestoredproceduretest" >
      <xs:complexContent>
       <xs:extension base="abstractoraclexeintegrationtest">
         <xs:sequence>
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclecustomsqlwithstoredproceduretest" >
      <xs:complexContent>
       <xs:extension base="abstractoraclexeintegrationtest">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracledeletestoredproceduretest" >
      <xs:complexContent>
       <xs:extension base="abstractoraclexeintegrationtest">
         <xs:sequence>
          <xs:element name="infoentrycount" type="xs:long" />
          <xs:element name="errorentrycount" type="xs:long" />
          <xs:element name="warnentrycount" type="xs:long" />
          <xs:element name="totalentrycount" type="xs:long" />
          <xs:element name="timestamp" type="xs:dateTime" />
          <xs:element name="millisstep" type="xs:long" />
          <xs:element name="batchsize" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flexypooltest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="threadcount" type="xs:long" />
        <xs:element name="seconds" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpadriverconnectionprovidertest" >
      <xs:complexContent>
       <xs:extension base="driverconnectionprovidertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c3p0jpaconnectionprovidertest" >
      <xs:complexContent>
       <xs:extension base="driverconnectionprovidertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datasourceproxyconnectionprovider" >
      <xs:complexContent>
       <xs:extension base="datasourceconnectionproviderimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c3p0connectionprovidertest" >
      <xs:complexContent>
       <xs:extension base="jpadriverconnectionprovidertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtaconnectionreleasetest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="batches" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtaflexypooltest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="threadcount" type="xs:long" />
        <xs:element name="seconds" type="xs:long" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flexypoolentities" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtaconnectionreleaseconfiguration" >
      <xs:complexContent>
       <xs:extension base="postgresqljtatransactionmanagerconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtaflexypooltestconfiguration" >
      <xs:complexContent>
       <xs:extension base="postgresqljtatransactionmanagerconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="handlingmodejtaconnectionreleaseconfiguration" >
      <xs:complexContent>
       <xs:extension base="postgresqljtatransactionmanagerconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="handlingmodejtaconnectionreleasetest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="batches" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="driverconnectionprovidertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="c3p0cockroachdbconnectionprovidertest" >
      <xs:complexContent>
       <xs:extension base="jpadriverconnectionprovidertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resourcelocaldelayconnectionacquisitiontest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="data_file_path" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="warmupduration" type="xs:long" />
          <xs:element name="measurementsduration" type="xs:long" />
          <xs:element name="parsecount" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpadatasourceproxyconnectionprovidertest" >
      <xs:complexContent>
       <xs:extension base="jpadatasourceconnectionprovidertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flexypooltestconfiguration" >
      <xs:complexContent>
       <xs:extension base="hikaricppostgresqljpaconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="externaldatasourceconnectionprovidertest" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hikaricpcockroachdbconnectionprovidertest" >
      <xs:complexContent>
       <xs:extension base="driverconnectionprovidertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hikaricpconnectionprovidertest" >
      <xs:complexContent>
       <xs:extension base="driverconnectionprovidertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpadatasourceconnectionprovidertest" >
      <xs:complexContent>
       <xs:extension base="driverconnectionprovidertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flexypoolhibernateconnectionprovider" >
      <xs:complexContent>
       <xs:extension base="datasourceconnectionproviderimpl">
         <xs:sequence>
          <xs:element name="transientflexypooldatasource" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entitygraphmappertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="insert_post_details" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
          <xs:element name="id" type="xs:long" />
          <xs:element name="expectedcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="parameterbindingtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="insert_post_details" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
          <xs:element name="version" type="xs:long" />
          <xs:element name="expectedcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaulttimestamptest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tableperclasstest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sortindexcollectioninheritance" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="singletabletest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jointablebulkdeletetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mappedsuperclasstest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlsingletabletest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="topic" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="owner" type="xs:string" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="GeneratedName" type="board" nillable="true" minOccurs="0" />
        <xs:element name="type" type="topictype" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="topictype" >
      <xs:sequence>
        <xs:element name="id" type="xs:anyType" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="description" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integerdiscriminatorwithdescriptiontest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="topicstatistics" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="topic" nillable="true" minOccurs="0" />
        <xs:element name="views" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="post" >
      <xs:complexContent>
       <xs:extension base="topic">
         <xs:sequence>
          <xs:element name="content" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="board" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="//onlyusefulforthesakeofseeingthequeriesbeinggenerated.topics" type="topic" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="integerdiscriminatordefaulttest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="announcement" >
      <xs:complexContent>
       <xs:extension base="topic">
         <xs:sequence>
          <xs:element name="validuntil" type="xs:dateTime" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jointablediscriminatortest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jointabletest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="smsnotification" >
      <xs:complexContent>
       <xs:extension base="notification">
         <xs:sequence>
          <xs:element name="phonenumber" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notification" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="firstname" type="xs:string" />
        <xs:element name="lastname" type="xs:string" />
        <xs:element name="createdon" type="xs:dateTime" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emailnotification" >
      <xs:complexContent>
       <xs:extension base="notification">
         <xs:sequence>
          <xs:element name="emailaddress" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="behaviordriveninheritanceconfiguration" >
      <xs:sequence>
        <xs:element name="data_source_proxy_name" type="xs:string" />
        <xs:element name="datasourceclassname" type="xs:string" />
        <xs:element name="jdbcurl" type="xs:string" />
        <xs:element name="jdbcuser" type="xs:string" />
        <xs:element name="jdbcpassword" type="xs:string" />
        <xs:element name="hibernatedialect" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="emailnotificationsender" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notificationsender" >
      <xs:complexContent>
       <xs:extension base="notification>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="smsnotificationsender" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="notificationserviceimpl" >
      <xs:complexContent>
       <xs:extension base="notification>,">
         <xs:sequence>
          <xs:element name="" type="notificationdao" nillable="true" minOccurs="0" />
          <xs:element name="notificationsenders" type="notificationsender" nillable="true" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="notificationsendermap" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notificationservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="genericdaoimpl" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="entityclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notificationdaoimpl" >
      <xs:complexContent>
       <xs:extension base="genericdaoimpl<notification,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="notificationdao" >
      <xs:complexContent>
       <xs:extension base="genericdao<notification,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericdao" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="behaviordriveninheritancetest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="notificationservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="consistencytest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tagdaoimpl" >
      <xs:complexContent>
       <xs:extension base="genericdaoimpl<tag,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postdaoimpl" >
      <xs:complexContent>
       <xs:extension base="genericdaoimpl<post,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericdaoimpl" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="entityclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tagdao" >
      <xs:complexContent>
       <xs:extension base="genericdao<tag,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericdao" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postbatchdao" >
      <xs:complexContent>
       <xs:extension base="genericdao<post,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postbatchdaoimpl" >
      <xs:complexContent>
       <xs:extension base="genericdaoimpl<post,">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="entitycount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postdao" >
      <xs:complexContent>
       <xs:extension base="genericdao<post,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="forumservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="forumserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="postdao" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="tagdao" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpatransactionmanagertest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="forumservice" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="postbatchdao" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpatransactionmanagerconfiguration" >
      <xs:sequence>
        <xs:element name="data_source_proxy_name" type="xs:string" />
        <xs:element name="datasourceclassname" type="xs:string" />
        <xs:element name="jdbcurl" type="xs:string" />
        <xs:element name="jdbcuser" type="xs:string" />
        <xs:element name="jdbcpassword" type="xs:string" />
        <xs:element name="hibernatedialect" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="forumserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="postdao" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="tagdao" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="forumservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tagdao" >
      <xs:complexContent>
       <xs:extension base="genericdao<tag,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postdao" >
      <xs:complexContent>
       <xs:extension base="genericdao<post,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericdaoimpl" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="entityclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericdao" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postdaoimpl" >
      <xs:complexContent>
       <xs:extension base="genericdaoimpl<post,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tagdaoimpl" >
      <xs:complexContent>
       <xs:extension base="genericdaoimpl<tag,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatetransactionmanagertest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="forumservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatetransactionmanagerconfiguration" >
      <xs:sequence>
        <xs:element name="data_source_proxy_name" type="xs:string" />
        <xs:element name="datasourceclassname" type="xs:string" />
        <xs:element name="jdbcurl" type="xs:string" />
        <xs:element name="jdbcuser" type="xs:string" />
        <xs:element name="jdbcpassword" type="xs:string" />
        <xs:element name="hibernatedialect" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtatransactionmanagertest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="forumservice" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtatransactionmanagerconfiguration" >
      <xs:sequence>
        <xs:element name="data_source_proxy_name" type="xs:string" />
        <xs:element name="datasourceclassname" type="xs:string" />
        <xs:element name="jdbcuser" type="xs:string" />
        <xs:element name="jdbcpassword" type="xs:string" />
        <xs:element name="jdbcurl" type="xs:string" />
        <xs:element name="btmjournal" type="xs:string" />
        <xs:element name="hibernatedialect" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postdao" >
      <xs:complexContent>
       <xs:extension base="genericdao<post,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postdaoimpl" >
      <xs:complexContent>
       <xs:extension base="genericdaoimpl<post,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tagdao" >
      <xs:complexContent>
       <xs:extension base="genericdao<tag,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericdao" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="genericdaoimpl" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="entityclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tagdaoimpl" >
      <xs:complexContent>
       <xs:extension base="genericdaoimpl<tag,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="forumserviceimpl" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="postdao" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="tagdao" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="forumservice" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="post" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="comments" type="postcomment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="details" type="postdetails" nillable="true" minOccurs="0" />
        <xs:element name="tags" type="tag" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tag" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postdetails" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="createdby" type="xs:string" />
        <xs:element name="GeneratedName" type="post" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postcomment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="post" nillable="true" minOccurs="0" />
        <xs:element name="review" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="multipletransactionsperentitymanagertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="refreshtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistidentitytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ordertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="postid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identityordertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="postid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpaautoflushtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchprocessingtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytecodeenhancementdirtycheckingperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
          <xs:element name="entitycount" type="xs:long" />
          <xs:element name="iterationcount" type="xs:long" />
          <xs:element name="postids" type="xs:anyType" />
          <xs:element name="enablemetrics" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="commitflushtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manualflushtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateautoflushtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="alwaysflushtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="readonlyquerytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatesavesequencetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sessionalwaysflushtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultdirtycheckingperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
          <xs:element name="entitycount" type="xs:long" />
          <xs:element name="iterationcount" type="xs:long" />
          <xs:element name="postids" type="xs:anyType" />
          <xs:element name="enablemetrics" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistsequencetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclenamingstrategy" >
      <xs:complexContent>
       <xs:extension base="physicalnamingstrategystandardimpl">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultnamingtest" >
      <xs:complexContent>
       <xs:extension base="abstractoraclexeintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="extendednamingtest" >
      <xs:complexContent>
       <xs:extension base="defaultnamingtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpacalculatedtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpacalculatedpostloadtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="formulatest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapsidwithonetoonetest" >
      <xs:complexContent>
       <xs:extension base="		abstractsqlserverintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="generatedtest" >
      <xs:complexContent>
       <xs:extension base="abstractsqlserverintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="fluentsetterstest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="optionalattributetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumpostgresqltest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumstringtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumordinaltest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlenumtype" >
      <xs:complexContent>
       <xs:extension base="org.hibernate.type.enumtype">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinformulatest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="latestchildjoinformulatest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hydratedstatelistenertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpafluentinterfacetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultupdatetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="softdeletetest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="softdeleteversiontest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dynamicupdatetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mapsidwithmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="joinformulacollationtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="encrypttest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jmxtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriafetchaliastest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criterianestedquerytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="criteriacountgroupbytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tupletest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetomanyuniquenesstest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetoonelazynoproxytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetomanyjoincolumntest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetoonemapsidtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="twomapsidstest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetomanyjoincolumnnotnulltest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalonetoonetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetoonetest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetomanysetidequalstest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmanyasonetomanyextracolumnstestv2" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetomanyjoincolumnsettest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elementcollectionnestedtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonejoincolumnnonpktest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elementcollectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmanytomanylisttest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmanyasonetomanywithoutembeddedidtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmanyasonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalmanyasonetomanyextracolumnstest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalorderedonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetomanysettest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="manytoonetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="onetoonemapsidtest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="elementcollectionwithcollectiontabletest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetomanytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="introassociationtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmanyasonetomanyextracolumnstestv1" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="allassociationtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmanytomanyordercolumntest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetomanyjoincolumntest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalonetomanyjoincolumnandordercolumntest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmanyasonetomanyextracolumnstest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="unidirectionalmanytomanytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmanytomanysettest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bidirectionalmanyasonetomanyordercolumntest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytecodeenhancedonetoonetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="bytecodeenhancedtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="flywayentities" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postgresqlflywayconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlflywayconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="droppostgresqlpublicschematest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="databasetype" type="xs:string" />
        <xs:element name="drop" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="flywaytest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hsqldbflywayconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstracthsqldbflywayconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="immutabletype" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="charactertypetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqljsontypetest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqljsonbinarytypelazygrouptest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqljsonnodebinarytypetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqljsonstringtypetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqljsonbinarytypetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tasktypingtest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
          <xs:element name="entityprovider" type="taskentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ipv4" >
      <xs:sequence>
        <xs:element name="address" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="longtonumerictypetest" >
      <xs:complexContent>
       <xs:extension base="abstractsqlserverintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="localdatetimetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumarraytypetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraytypetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresql95arraydialect" >
      <xs:complexContent>
       <xs:extension base="postgresql95dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresuuidtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="charactertype" >
      <xs:complexContent>
       <xs:extension base="immutabletype<character>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datetimetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ipv4typetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ipv4type" >
      <xs:complexContent>
       <xs:extension base="immutabletype<ipv4>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqltextstringtest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enversauditedvaliditystrategytest" >
      <xs:complexContent>
       <xs:extension base="enversauditeddefaultstrategytest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enversauditeddefaultstrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlcasttest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updatesubquerytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="spatialtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="runningtotaltest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="escapekeywordtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="windowfunctiongroupingtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlinjectiontest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="windowfunctionupdatebygroupingtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="treectetest" >
      <xs:complexContent>
       <xs:extension base="abstracttreetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="status" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="treeconnectbytest" >
      <xs:complexContent>
       <xs:extension base="abstracttreetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommenttreetransformer" >
      <xs:sequence>
        <xs:element name="instance" type="postcommenttreetransformer" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postcomment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parent" type="postcomment" nillable="true" minOccurs="0" />
        <xs:element name="description" type="xs:string" />
        <xs:element name="GeneratedName" type="status" nillable="true" minOccurs="0" />
        <xs:element name="children" type="postcomment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="treetest" >
      <xs:complexContent>
       <xs:extension base="abstracttreetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttreetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommentscore" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="parentid" type="xs:long" />
        <xs:element name="review" type="xs:string" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="score" type="xs:long" />
        <xs:element name="children" type="postcommentscore" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postcommentscorefetchprojectionperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostcommentscoreperformancetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommentscorefetchallperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostcommentscoreperformancetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommentscoretest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpostcommentscoreperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="timer" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
          <xs:element name="1" type="xs:anyType" />
          <xs:element name="2" type="xs:anyType" />
          <xs:element name="postcount" type="xs:long" />
          <xs:element name="commentcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommentscorerecursivecteperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostcommentscoreperformancetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommentscorerecursivecteselectperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostcommentscoreperformancetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommentscoreresulttransformer" >
      <xs:sequence>
        <xs:element name="postcommentscoremap" type="xs:anyType" />
        <xs:element name="roots" type="postcommentscore" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="post" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postcommentscorefetchprojectionorderbyperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostcommentscoreperformancetest">
         <xs:sequence>
          <xs:element name="inmemoryprocessingtimer" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpostcommentscoreperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="timer" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
          <xs:element name="postcount" type="xs:long" />
          <xs:element name="commentcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommentscorerecursivecteperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostcommentscoreperformancetest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommentscorefetchprojectionperformancetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostcommentscoreperformancetest">
         <xs:sequence>
          <xs:element name="inmemoryprocessingtimer" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcommentscoretest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postcomment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="post" nillable="true" minOccurs="0" />
        <xs:element name="parent" type="postcomment" nillable="true" minOccurs="0" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="review" type="xs:string" />
        <xs:element name="score" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativequerywithcustomschematest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="propertyid" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="service" nillable="true" minOccurs="0" />
        <xs:element name="GeneratedName" type="component" nillable="true" minOccurs="0" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="property" >
      <xs:sequence>
        <xs:element name="id" type="propertyid" nillable="true" minOccurs="0" />
        <xs:element name="value" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="datasourceconfiguration" >
      <xs:sequence>
        <xs:element name="servicename" type="xs:string" />
        <xs:element name="componentname" type="xs:string" />
        <xs:element name="databasename" type="xs:string" />
        <xs:element name="url" type="xs:string" />
        <xs:element name="servername" type="xs:string" />
        <xs:element name="username" type="xs:string" />
        <xs:element name="password" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="component" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="service" >
      <xs:sequence>
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="pivottest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="rowvalueexpressiontest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="escapeliketest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="country" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="locale" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="dtowithentitytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="person" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="locale" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="personandcountrydto" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="person" nillable="true" minOccurs="0" />
        <xs:element name="country" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="post" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="createdon" type="xs:anyType" />
        <xs:element name="createdby" type="xs:string" />
        <xs:element name="updatedon" type="xs:anyType" />
        <xs:element name="updatedby" type="xs:string" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postdto" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpadtoprojectiontest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatedtoprojectiontest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postdto" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="nativequeryentitymappingtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="naturalidequalitytest" >
      <xs:complexContent>
       <xs:extension base="abstractequalitychecktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultequalitytest" >
      <xs:complexContent>
       <xs:extension base="abstractequalitychecktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="properidequalitytest" >
      <xs:complexContent>
       <xs:extension base="abstractequalitychecktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractequalitychecktest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultidequalitytest" >
      <xs:complexContent>
       <xs:extension base="abstractequalitychecktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="utctimezonemysqltimestamptest" >
      <xs:complexContent>
       <xs:extension base="defaultmysqltimestamptest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="utctimezonepostgresqltimestamptest" >
      <xs:complexContent>
       <xs:extension base="defaultpostgresqltimestamptest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="defaultmysqltimestamptest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="book" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="createdby" type="xs:string" />
        <xs:element name="createdon" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="defaultpostgresqltimestamptest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="transactionstatisticsfactory" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statisticsreport" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="connectioncount" type="xs:anyType" />
        <xs:element name="transaction" type="xs:anyType" />
        <xs:element name="logreporter" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="transactionstatistics" >
      <xs:complexContent>
       <xs:extension base="concurrentstatisticsimpl">
         <xs:sequence>
          <xs:element name="startnanos" type="xs:anyType" />
          <xs:element name="connectioncounter" type="xs:anyType" />
          <xs:element name="report" type="statisticsreport" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="connectionstatisticstest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="autocommit" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="updatable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatablelistener" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="updatabletest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchexceptiontest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identitybatchingtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchmergevsupdatetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deletingwithsqlcascadebatchingtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="deletingwithoutcascadebatchingtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistencecontextextendedbatchtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchingtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="log" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="versionedbatchingtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlstatementcountvalidatorjoinfetchtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlstatementcountvalidator" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sqlstatementcountmismatchexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
          <xs:element name="expected" type="xs:long" />
          <xs:element name="recorded" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlstatementcountvalidatortest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernateloggingtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datasourceproxytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="p6spytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpooledsequenceidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignedsequencestylegeneratortest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pooledsequenceidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstractpooledsequenceidentifiertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identifiable" >
      <xs:complexContent>
       <xs:extension base="serializable>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityidentifiercockroachdbtest" >
      <xs:complexContent>
       <xs:extension base="abstractcockroachdbintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverscopeidentity" >
      <xs:complexContent>
       <xs:extension base="abstractsqlserverintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="globalidentifiergeneratorscopetest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="package-info" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="uuid2identifiertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assigneduuididentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="uuididentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pooledlosequenceidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstractpooledsequenceidentifiertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeidmanytoonewithcompanyinidtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeidonetoonetest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeidmanytoonetest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeidgeneratedidclasstest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="compositeididentitygeneratedtest" >
      <xs:complexContent>
       <xs:extension base="abstractsqlserverintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringsequenceidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enhancedsequencevstablegeneratortest" >
      <xs:complexContent>
       <xs:extension base="sequencevstablegeneratortest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddablecollectionaccessstrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="overrideaccessstrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="embeddableaccessstrategytest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequenceoptimizeridentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="" type="datasourceprovider" nillable="true" minOccurs="0" />
          <xs:element name="entityprovider" type="postentityprovider" nillable="true" minOccurs="0" />
          <xs:element name="insertcount" type="xs:long" />
          <xs:element name="executioncount" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="table5postentityprovider" >
      <xs:complexContent>
       <xs:extension base="postentityprovider<table5postentityprovider.post>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequence1postentityprovider" >
      <xs:complexContent>
       <xs:extension base="postentityprovider<sequence1postentityprovider.post>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequence10postentityprovider" >
      <xs:complexContent>
       <xs:extension base="postentityprovider<sequence10postentityprovider.post>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="table50postentityprovider" >
      <xs:complexContent>
       <xs:extension base="postentityprovider<table50postentityprovider.post>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="table10postentityprovider" >
      <xs:complexContent>
       <xs:extension base="postentityprovider<table10postentityprovider.post>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequence50postentityprovider" >
      <xs:complexContent>
       <xs:extension base="postentityprovider<sequence50postentityprovider.post>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequence5postentityprovider" >
      <xs:complexContent>
       <xs:extension base="postentityprovider<sequence5postentityprovider.post>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postentityprovider" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="table1postentityprovider" >
      <xs:complexContent>
       <xs:extension base="postentityprovider<table1postentityprovider.post>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclerowidtest" >
      <xs:complexContent>
       <xs:extension base="abstractoraclexeintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignedidentitygeneratortest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoidentifiermysqltest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nativeidentifiermysqltest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tableallocationsizeidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstractbatchidentifiertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="post" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtatableidentifiertest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jtatableidentifiertestconfiguration" >
      <xs:complexContent>
       <xs:extension base="postgresqljtatransactionmanagerconfiguration">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identitypostentityprovider" >
      <xs:complexContent>
       <xs:extension base="postentityprovider<identitypostentityprovider.post>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tablepostentityprovider" >
      <xs:complexContent>
       <xs:extension base="postentityprovider<tablepostentityprovider.post>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencepostentityprovider" >
      <xs:complexContent>
       <xs:extension base="postentityprovider<sequencepostentityprovider.post>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postentityprovider" >
      <xs:sequence>
        <xs:element name="clazz" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="concurrentbatchidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="" type="datasourceprovider" nillable="true" minOccurs="0" />
          <xs:element name="entityprovider" type="postentityprovider" nillable="true" minOccurs="0" />
          <xs:element name="threadcount" type="xs:long" />
          <xs:element name="insertcount" type="xs:long" />
          <xs:element name="executioncount" type="xs:long" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="tableidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstractbatchidentifiertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autoidentifierwithsequencegeneratortest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgrestablegeneratortest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequenceallocationsizeidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstractbatchidentifiertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbatchidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignedtablegenerator" >
      <xs:complexContent>
       <xs:extension base="tablegenerator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignedtablebatchidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstractbatchidentifiertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="identityidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstractbatchidentifiertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequenceidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstractbatchidentifiertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplesequenceidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringsequenceidentifier" >
      <xs:sequence>
        <xs:element name="sequence_prefix" type="xs:string" />
        <xs:element name="sequenceprefix" type="xs:string" />
        <xs:element name="sequencecallsyntax" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mysqlidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="post" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postgresqlidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="legacysequencevstablegeneratortest" >
      <xs:complexContent>
       <xs:extension base="sequencevstablegeneratortest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hiloidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="pooleddefaultsequenceidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstractpooledsequenceidentifiertest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignedsequencestylegenerator" >
      <xs:complexContent>
       <xs:extension base="sequencestylegenerator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sequencevstablegeneratortest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="entityidentifiertimestampcockroachdbtest" >
      <xs:complexContent>
       <xs:extension base="abstractcockroachdbintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignedidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="assignedidentitygenerator" >
      <xs:complexContent>
       <xs:extension base="identitygenerator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simpletableidentifiertest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpostgresqlintegrationtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttest" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="emf" type="xs:anyType" />
        <xs:element name="sf" type="xs:anyType" />
        <xs:element name="closeables" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="reflectionutils" >
      <xs:sequence>
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="getter_prefix" type="xs:string" />
        <xs:element name="setter_prefix" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractcockroachdbintegrationtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractoraclexeintegrationtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="exceptionutil" >
      <xs:complexContent>
       <xs:extension base="exception>>">
         <xs:sequence>
          <xs:element name="lock_timeout_exceptions" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="dataaccessexception" >
      <xs:complexContent>
       <xs:extension base="runtimeexception">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cockroachdbdialect" >
      <xs:complexContent>
       <xs:extension base="postgresql82dialect">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsqlserverintegrationtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="inlinequerylogentrycreator" >
      <xs:complexContent>
       <xs:extension base="defaultquerylogentrycreator">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jpatransactionfunction" >
      <xs:complexContent>
       <xs:extension base="function<entitymanager,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hibernatetransactionconsumer" >
      <xs:complexContent>
       <xs:extension base="consumer<session>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="connectionvoidcallable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hibernatetransactionfunction" >
      <xs:complexContent>
       <xs:extension base="function<session,">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="voidcallable" >
      <xs:complexContent>
       <xs:extension base="callable<void>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="connectioncallable" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jpatransactionvoidfunction" >
      <xs:complexContent>
       <xs:extension base="consumer<entitymanager>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datasourceproviderintegrationtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="" type="datasourceprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractmysqlintegrationtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hikaricppostgresqljpaconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstractjpaconfiguration">
         <xs:sequence>
          <xs:element name="datasourceclassname" type="xs:string" />
          <xs:element name="jdbcuser" type="xs:string" />
          <xs:element name="jdbcpassword" type="xs:string" />
          <xs:element name="jdbcdatabase" type="xs:string" />
          <xs:element name="jdbchost" type="xs:string" />
          <xs:element name="jdbcport" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqljpaconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstractjpaconfiguration">
         <xs:sequence>
          <xs:element name="datasourceclassname" type="xs:string" />
          <xs:element name="jdbcuser" type="xs:string" />
          <xs:element name="jdbcpassword" type="xs:string" />
          <xs:element name="jdbcdatabase" type="xs:string" />
          <xs:element name="jdbchost" type="xs:string" />
          <xs:element name="jdbcport" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracthsqldbjpaconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstractjpaconfiguration">
         <xs:sequence>
          <xs:element name="datasourceclassname" type="xs:string" />
          <xs:element name="jdbcurl" type="xs:string" />
          <xs:element name="jdbcuser" type="xs:string" />
          <xs:element name="jdbcpassword" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractjpaconfiguration" >
      <xs:sequence>
        <xs:element name="data_source_proxy_name" type="xs:string" />
        <xs:element name="hibernatedialect" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstractpostgresqlflywayconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstractflywayconfiguration">
         <xs:sequence>
          <xs:element name="datasourceclassname" type="xs:string" />
          <xs:element name="jdbcuser" type="xs:string" />
          <xs:element name="jdbcpassword" type="xs:string" />
          <xs:element name="jdbcdatabase" type="xs:string" />
          <xs:element name="jdbchost" type="xs:string" />
          <xs:element name="jdbcport" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractflywayconfiguration" >
      <xs:sequence>
        <xs:element name="hibernatedialect" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="abstracthsqldbflywayconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstractflywayconfiguration">
         <xs:sequence>
          <xs:element name="datasourceclassname" type="xs:string" />
          <xs:element name="jdbcurl" type="xs:string" />
          <xs:element name="jdbcuser" type="xs:string" />
          <xs:element name="jdbcpassword" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractjtatransactionmanagerconfiguration" >
      <xs:sequence>
        <xs:element name="data_source_proxy_name" type="xs:string" />
        <xs:element name="btmjournal" type="xs:string" />
        <xs:element name="hibernatedialect" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postgresqljtatransactionmanagerconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstractjtatransactionmanagerconfiguration">
         <xs:sequence>
          <xs:element name="datasourceclassname" type="xs:string" />
          <xs:element name="btmjournal" type="xs:string" />
          <xs:element name="jdbcuser" type="xs:string" />
          <xs:element name="jdbcpassword" type="xs:string" />
          <xs:element name="jdbcdatabase" type="xs:string" />
          <xs:element name="jdbchost" type="xs:string" />
          <xs:element name="jdbcport" type="xs:string" />
          <xs:element name="hibernatedialect" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="hsqldbjtatransactionmanagerconfiguration" >
      <xs:complexContent>
       <xs:extension base="abstractjtatransactionmanagerconfiguration">
         <xs:sequence>
          <xs:element name="datasourceclassname" type="xs:string" />
          <xs:element name="jdbcuser" type="xs:string" />
          <xs:element name="jdbcpassword" type="xs:string" />
          <xs:element name="jdbcurl" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datasourceproxytype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="autoincrementbatchentityprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="blogentityprovider" >
      <xs:sequence>
        <xs:element name="instance" type="entityprovider" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postdetailscommentsentityprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sequencebatchentityprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="taskentityprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="bankentityprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mysqldatasourceprovider" >
      <xs:complexContent>
       <xs:extension base="datasource>">
         <xs:sequence>
          <xs:element name="rewritebatchedstatements" type="xs:anyType" />
          <xs:element name="cacheprepstmts" type="xs:anyType" />
          <xs:element name="useserverprepstmts" type="xs:anyType" />
          <xs:element name="usetimezone" type="xs:anyType" />
          <xs:element name="usejdbccomplianttimezoneshift" type="xs:anyType" />
          <xs:element name="uselegacydatetimecode" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverdatasourceprovider" >
      <xs:complexContent>
       <xs:extension base="datasource>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracledatasourceprovider" >
      <xs:complexContent>
       <xs:extension base="datasource>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cockroachdbdatasourceprovider" >
      <xs:complexContent>
       <xs:extension base="datasource>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jtdsdatasourceprovider" >
      <xs:complexContent>
       <xs:extension base="datasource>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="datasourceprovider" >
      <xs:complexContent>
       <xs:extension base="datasource>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="database" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="hsqldbdatasourceprovider" >
      <xs:complexContent>
       <xs:extension base="datasource>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="locktype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postgresqldatasourceprovider" >
      <xs:complexContent>
       <xs:extension base="datasource>">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="persistenceunitinfoimpl" >
      <xs:sequence>
        <xs:element name="persistenceunitname" type="xs:string" />
        <xs:element name="transactiontype" type="xs:anyType" />
        <xs:element name="managedclassnames" type="xs:anyType" />
        <xs:element name="mappingfilenames" type="xs:anyType" />
        <xs:element name="GeneratedName" type="xs:anyType" />
        <xs:element name="jta" type="xs:anyType" />
        <xs:element name="nonjta" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="entityprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="resultsetscollabilitytest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlstandardresultsetlimittest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="select_post_comment" type="xs:string" />
          <xs:element name="select_post_comment_with_no_fix" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracleresultsetlimittest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="select_post" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetfetchsizetest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
          <xs:element name="fetchsize" type="xs:anyType" />
          <xs:element name="fetchsizes" type="xs:anyType" />
          <xs:element name="s" type="datasourceprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetlimittest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="select_post_comment" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverresultsetlimittest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="select_post_comment_1" type="xs:string" />
          <xs:element name="select_post_comment_2" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetcursortest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="insert_post_details" type="xs:string" />
          <xs:element name="select_all" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="resultsetcolumnsizetest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="insert_post_details" type="xs:string" />
          <xs:element name="select_all" type="xs:string" />
          <xs:element name="select_id" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresindexselectivitytest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="insert_task" type="xs:string" />
          <xs:element name="entityprovider" type="indexentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="indexentityprovider" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="statementcachepoolabletest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverimplicitstatementcachetest" >
      <xs:complexContent>
       <xs:extension base="abstractsqlserverintegrationtest">
         <xs:sequence>
          <xs:element name="insert_task" type="xs:string" />
          <xs:element name="entityprovider" type="taskentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracleexplicitstatementcachetest" >
      <xs:complexContent>
       <xs:extension base="abstractoraclexeintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="select_post_reviews" type="xs:string" />
          <xs:element name="select_post_reviews_key" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="statementcachetest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracleimplicitstatementcachetest" >
      <xs:complexContent>
       <xs:extension base="abstractoraclexeintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="cockroachdbphenomenatest" >
      <xs:complexContent>
       <xs:extension base="abstractphenomenatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclephenomenatest" >
      <xs:complexContent>
       <xs:extension base="abstractphenomenatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractphenomenatest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="insert_post_details" type="xs:string" />
          <xs:element name="insert_department" type="xs:string" />
          <xs:element name="insert_employee" type="xs:string" />
          <xs:element name="isolationlevelname" type="xs:string" />
          <xs:element name="isolationlevel" type="xs:long" />
          <xs:element name="boblatch" type="xs:anyType" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
          <xs:element name="nextid" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclelinearizabilityphenomenatest" >
      <xs:complexContent>
       <xs:extension base="abstractlinearizabilityphenomenatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractlinearizabilityphenomenatest" >
      <xs:complexContent>
       <xs:extension base="abstractphenomenatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlphenomenatest" >
      <xs:complexContent>
       <xs:extension base="abstractphenomenatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverphenomenatest" >
      <xs:complexContent>
       <xs:extension base="abstractphenomenatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlphenomenatest" >
      <xs:complexContent>
       <xs:extension base="abstractphenomenatest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mvccpostgresqltest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="alicelatch" type="xs:anyType" />
          <xs:element name="boblatch" type="xs:anyType" />
          <xs:element name="endlatch" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqltablelockwithemployeesinfirstdepartmentonlytest" >
      <xs:complexContent>
       <xs:extension base="abstracttablelocktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpredicatelocktest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="wait_millis" type="xs:long" />
          <xs:element name="alicelatch" type="xs:anyType" />
          <xs:element name="boblatch" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstracttablelocktest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="insert_department" type="xs:string" />
          <xs:element name="insert_employee" type="xs:string" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqltablelocktest" >
      <xs:complexContent>
       <xs:extension base="abstracttablelocktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracletablelocktest" >
      <xs:complexContent>
       <xs:extension base="abstracttablelocktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlpredicatelocktest" >
      <xs:complexContent>
       <xs:extension base="abstractpredicatelocktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlservertablelocktest" >
      <xs:complexContent>
       <xs:extension base="abstracttablelocktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclepredicatelocktest" >
      <xs:complexContent>
       <xs:extension base="abstractpredicatelocktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlservertablelockmultipleentriestest" >
      <xs:complexContent>
       <xs:extension base="abstracttablelocktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlsessionadvisorylockstest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqladvisorylockstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlnoadvisorylockstest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqladvisorylockstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlsessiontryadvisorylockstest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqladvisorylockstest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlreadwriteadvisorylockstest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="temp_folder" type="xs:string" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="alicelatch" type="xs:anyType" />
          <xs:element name="boblatch" type="xs:anyType" />
          <xs:element name="documentid" type="xs:long" />
          <xs:element name="doc" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractpostgresqladvisorylockstest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="temp_folder" type="xs:string" />
          <xs:element name="workercount" type="xs:long" />
          <xs:element name="logcount" type="xs:long" />
          <xs:element name="workerlinecount" type="xs:long" />
          <xs:element name="startlatch" type="xs:anyType" />
          <xs:element name="endlatch" type="xs:anyType" />
          <xs:element name="workers" type="xs:anyType" />
          <xs:element name="logs" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqltablelocktest" >
      <xs:complexContent>
       <xs:extension base="abstracttablelocktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlpredicatelocktest" >
      <xs:complexContent>
       <xs:extension base="abstractpredicatelocktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverpredicatelocktest" >
      <xs:complexContent>
       <xs:extension base="abstractpredicatelocktest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracleconnectionreadyonlytransactiontest" >
      <xs:complexContent>
       <xs:extension base="connectionreadyonlytransactiontest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserverconnectionreadyonlytransactiontest" >
      <xs:complexContent>
       <xs:extension base="connectionreadyonlytransactiontest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="connectionreadyonlytransactiontest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="autocommittest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="insert_account" type="xs:string" />
          <xs:element name="entityprovider" type="bankentityprovider" nillable="true" minOccurs="0" />
          <xs:element name="" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracleconnectioncalltest" >
      <xs:complexContent>
       <xs:extension base="abstractoraclexeintegrationtest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="callcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="connectionpoolcalltest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
          <xs:element name="callcount" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclebatchstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractoraclexeintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlbatchstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
          <xs:element name="rewritebatchedstatements" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlgeneratedkeysbatchpreparedstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclegeneratedkeysbatchpreparedstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractoraclexeintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlservergeneratedkeysbatchpreparedstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractsqlserverintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlgeneratedkeysbatchpreparedstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserversequencegeneratedkeysbatchpreparedstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractsequencegeneratedkeysbatchpreparedstatementtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlsequencecalltest" >
      <xs:complexContent>
       <xs:extension base="abstractsequencecalltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclesequencecalltest" >
      <xs:complexContent>
       <xs:extension base="abstractsequencecalltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsequencecalltest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="" type="xs:anyType" />
          <xs:element name="logreporter" type="xs:anyType" />
          <xs:element name="ttl" type="xs:long" />
          <xs:element name="entityprovider" type="sequencebatchentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractsequencegeneratedkeysbatchpreparedstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstracttest">
         <xs:sequence>
          <xs:element name="entityprovider" type="sequencebatchentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sqlserversequencecalltest" >
      <xs:complexContent>
       <xs:extension base="abstractsequencecalltest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oraclesequencegeneratedkeysbatchpreparedstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractsequencegeneratedkeysbatchpreparedstatementtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="postgresqlsequencegeneratedkeysbatchpreparedstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractsequencegeneratedkeysbatchpreparedstatementtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="simplebatchtest" >
      <xs:complexContent>
       <xs:extension base="abstractpostgresqlintegrationtest">
         <xs:sequence>
          <xs:element name="" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nobatchstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractbatchstatementtest">
         <xs:sequence>
          <xs:element name="count" type="xs:long" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbatchstatementtest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="oracledefaultexecutebatchpreparedstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractoraclexeintegrationtest">
         <xs:sequence>
          <xs:element name="insert_post" type="xs:string" />
          <xs:element name="insert_post_comment" type="xs:string" />
          <xs:element name="defaultexecutebatch" type="xs:long" />
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="nobatchpreparedstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractbatchpreparedstatementtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchpreparedstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractbatchpreparedstatementtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractbatchpreparedstatementtest" >
      <xs:complexContent>
       <xs:extension base="datasourceproviderintegrationtest">
         <xs:sequence>
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="batchstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractbatchstatementtest">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="mysqlbatchpreparedstatementtest" >
      <xs:complexContent>
       <xs:extension base="abstractmysqlintegrationtest">
         <xs:sequence>
          <xs:element name="entityprovider" type="blogentityprovider" nillable="true" minOccurs="0" />
          <xs:element name="cacheprepstmts" type="xs:anyType" />
          <xs:element name="useserverprepstmts" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="post" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="title" type="xs:string" />
        <xs:element name="comments" type="postcomment" nillable="true" minOccurs="0" maxOccurs="unbounded" />
        <xs:element name="details" type="postdetails" nillable="true" minOccurs="0" />
        <xs:element name="tags" type="tag" nillable="true" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postdetails" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="createdon" type="xs:dateTime" />
        <xs:element name="createdby" type="xs:string" />
        <xs:element name="GeneratedName" type="post" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="attachment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
        <xs:element name="GeneratedName" type="mediatype" nillable="true" minOccurs="0" />
        <xs:element name="content" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="tag" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="name" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="postcomment" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="GeneratedName" type="post" nillable="true" minOccurs="0" />
        <xs:element name="review" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="mediatype" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="baseentity" >
      <xs:sequence>
        <xs:element name="id" type="xs:long" />
        <xs:element name="version" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="location" >
      <xs:sequence>
        <xs:element name="country" type="xs:string" />
        <xs:element name="city" type="xs:string" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="event" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="" type="location" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="ticket" >
      <xs:sequence>
        <xs:element name="registrationcode" type="xs:string" />
        <xs:element name="price" type="xs:double" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="participant" >
      <xs:complexContent>
       <xs:extension base="baseentity">
         <xs:sequence>
          <xs:element name="" type="ticket" nillable="true" minOccurs="0" />
          <xs:element name="" type="event" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jsonbinarytype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractjsonsqltypedescriptor" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="jsonnodetypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<jsonnode>">
         <xs:sequence>
          <xs:element name="instance" type="jsonnodetypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jsonnodebinarytype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jsontypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<object>">
         <xs:sequence>
          <xs:element name="jsonobjectclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jsonstringtype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jsonbinarysqltypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstractjsonsqltypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="jsonbinarysqltypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jsonstringsqltypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstractjsonsqltypedescriptor">
         <xs:sequence>
          <xs:element name="instance" type="jsonstringsqltypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="jacksonutil" >
      <xs:sequence>
        <xs:element name="object_mapper" type="xs:anyType" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="stringarraytype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="stringarraytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="stringarraytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arraysqltypedescriptor" >
      <xs:sequence>
        <xs:element name="instance" type="arraysqltypedescriptor" nillable="true" minOccurs="0" />
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="intarraytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="intarraytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="intarraytype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="enumarraytype" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="arrayutil" >
      <xs:sequence>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="enumarraytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="">
         <xs:sequence>
          <xs:element name="instance" type="enumarraytypedescriptor" nillable="true" minOccurs="0" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="abstractarraytypedescriptor" >
      <xs:complexContent>
       <xs:extension base="abstracttypedescriptor<t>">
         <xs:sequence>
          <xs:element name="arrayobjectclass" type="xs:anyType" />
         </xs:sequence>
       </xs:extension>
      </xs:complexContent>
   </xs:complexType>
</xs:schema> 