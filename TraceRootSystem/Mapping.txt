ClassDiagram.Class>> Boat =>=>=> RelationalSchema.Table>> boat;
ClassDiagram.Class>> BoatPredict =>=>=> RelationalSchema.Table>> boatpredict;
ClassDiagram.Class>> SensorStatus =>=>=> RelationalSchema.Table>> sensorstatus;
ClassDiagram.Class>> SensorType =>=>=> RelationalSchema.Table>> sensortype;
ClassDiagram.Class>> PipelineSegmentPredict =>=>=> RelationalSchema.Table>> pipelinesegmentpredict;
ClassDiagram.Class>> BoatType =>=>=> RelationalSchema.Table>> boattype;
ClassDiagram.Class>> BoatTrace =>=>=> RelationalSchema.Table>> boattrace;
ClassDiagram.Class>> Pipeline =>=>=> RelationalSchema.Table>> pipeline;
ClassDiagram.Class>> SeaRoute =>=>=> RelationalSchema.Table>> searoute;
ClassDiagram.Class>> RouteSegment =>=>=> RelationalSchema.Table>> routesegment;
ClassDiagram.Class>> PipelineSensor =>=>=> RelationalSchema.Table>> pipelinesensor;
ClassDiagram.Class>> PipelineSegment =>=>=> RelationalSchema.Table>> pipelinesegment;
ClassDiagram.Attribut>> Boat.boatid:String =>=>=> RelationalSchema.Column>> boat.boatid PRIMARY KEY;
ClassDiagram.Attribut>> Boat./*船只类型*/type:String =>=>=> RelationalSchema.Column>> boat./*船只类型*/type;
ClassDiagram.Attribut>> Boat./*当前位置*/presentlocation:String =>=>=> RelationalSchema.Column>> boat./*当前位置*/presentlocation;
ClassDiagram.Attribut>> Boat./*当前船速*/speed:String =>=>=> RelationalSchema.Column>> boat./*当前船速*/speed;
ClassDiagram.Attribut>> Boat./*超速判断，正常为0，超速为1*/overspeedjudging:Integer =>=>=> RelationalSchema.Column>> boat./*超速判断，正常为0，超速为1*/overspeedjudging;
ClassDiagram.Attribut>> Boat./*当前船的方向*/direction:String =>=>=> RelationalSchema.Column>> boat./*当前船的方向*/direction;
ClassDiagram.Attribut>> Boat./*船只状态*/status:String =>=>=> RelationalSchema.Column>> boat./*船只状态*/status;
ClassDiagram.Attribut>> Boat./*船只航线id号*/routeid:String =>=>=> RelationalSchema.Column>> boat./*船只航线id号*/routeid;
ClassDiagram.Attribut>> Boat./*创建时间*/createtime:Date =>=>=> RelationalSchema.Column>> boat./*创建时间*/createtime;
ClassDiagram.Attribut>> Boat./*更新时间*/uptime:Date =>=>=> RelationalSchema.Column>> boat./*更新时间*/uptime;
ClassDiagram.Attribut>> BoatPredict.predictid:String =>=>=> RelationalSchema.Column>> boatpredict.predictid PRIMARY KEY;
ClassDiagram.Attribut>> BoatPredict./*船只编号*/boatid:String =>=>=> RelationalSchema.Column>> boatpredict./*船只编号*/boatid;
ClassDiagram.Attribut>> BoatPredict./*预测到达地点*/predictlocation:String =>=>=> RelationalSchema.Column>> boatpredict./*预测到达地点*/predictlocation;
ClassDiagram.Attribut>> BoatPredict./*预测到达时间*/arrivetime:String =>=>=> RelationalSchema.Column>> boatpredict./*预测到达时间*/arrivetime;
ClassDiagram.Attribut>> BoatPredict./*预测到达该地点的概率*/probability:String =>=>=> RelationalSchema.Column>> boatpredict./*预测到达该地点的概率*/probability;
ClassDiagram.Attribut>> BoatPredict./*创建时间*/createtime:Date =>=>=> RelationalSchema.Column>> boatpredict./*创建时间*/createtime;
ClassDiagram.Attribut>> SensorStatus.statusid:String =>=>=> RelationalSchema.Column>> sensorstatus.statusid PRIMARY KEY;
ClassDiagram.Attribut>> SensorStatus.sensorid:String =>=>=> RelationalSchema.Column>> sensorstatus.sensorid;
ClassDiagram.Attribut>> SensorStatus.//@column(name:String =>=>=> RelationalSchema.Column>> sensorstatus.//@column(name;
ClassDiagram.Attribut>> SensorStatus.value:String =>=>=> RelationalSchema.Column>> sensorstatus.value;
ClassDiagram.Attribut>> SensorStatus./*记录时间*/recordtime:Date =>=>=> RelationalSchema.Column>> sensorstatus./*记录时间*/recordtime;
ClassDiagram.Attribut>> SensorType.typeid:String =>=>=> RelationalSchema.Column>> sensortype.typeid PRIMARY KEY;
ClassDiagram.Attribut>> SensorType.typename:String =>=>=> RelationalSchema.Column>> sensortype.typename;
ClassDiagram.Attribut>> SensorType.lowestvalue:String =>=>=> RelationalSchema.Column>> sensortype.lowestvalue;
ClassDiagram.Attribut>> SensorType.highestvalue:String =>=>=> RelationalSchema.Column>> sensortype.highestvalue;
ClassDiagram.Attribut>> SensorType./*创建时间*/create_time:Date =>=>=> RelationalSchema.Column>> sensortype./*创建时间*/create_time;
ClassDiagram.Attribut>> SensorType./*更新时间*/up_time:Date =>=>=> RelationalSchema.Column>> sensortype./*更新时间*/up_time;
ClassDiagram.Attribut>> PipelineSegmentPredict.predictid:String =>=>=> RelationalSchema.Column>> pipelinesegmentpredict.predictid PRIMARY KEY;
ClassDiagram.Attribut>> PipelineSegmentPredict.segmentid:String =>=>=> RelationalSchema.Column>> pipelinesegmentpredict.segmentid;
ClassDiagram.Attribut>> PipelineSegmentPredict.predictlife:String =>=>=> RelationalSchema.Column>> pipelinesegmentpredict.predictlife;
ClassDiagram.Attribut>> PipelineSegmentPredict./*创建时间*/createtime:Date =>=>=> RelationalSchema.Column>> pipelinesegmentpredict./*创建时间*/createtime;
ClassDiagram.Attribut>> BoatType./*船只种类id*/typeid:String =>=>=> RelationalSchema.Column>> boattype./*船只种类id*/typeid PRIMARY KEY;
ClassDiagram.Attribut>> BoatType./*船只种类名称*/typename:String =>=>=> RelationalSchema.Column>> boattype./*船只种类名称*/typename;
ClassDiagram.Attribut>> BoatType./*创建时间*/createtime:Date =>=>=> RelationalSchema.Column>> boattype./*创建时间*/createtime;
ClassDiagram.Attribut>> BoatType./*更新时间*/uptime:Date =>=>=> RelationalSchema.Column>> boattype./*更新时间*/uptime;
ClassDiagram.Attribut>> BoatTrace./*轨迹编号*/traceid:String =>=>=> RelationalSchema.Column>> boattrace./*轨迹编号*/traceid PRIMARY KEY;
ClassDiagram.Attribut>> BoatTrace./*船只编号*/boatid:String =>=>=> RelationalSchema.Column>> boattrace./*船只编号*/boatid;
ClassDiagram.Attribut>> BoatTrace./*轨迹序列号*/traceserialnumber:String =>=>=> RelationalSchema.Column>> boattrace./*轨迹序列号*/traceserialnumber;
ClassDiagram.Attribut>> BoatTrace./*记录位置*/recordlocation:String =>=>=> RelationalSchema.Column>> boattrace./*记录位置*/recordlocation;
ClassDiagram.Attribut>> BoatTrace./*记录船速*/speed:String =>=>=> RelationalSchema.Column>> boattrace./*记录船速*/speed;
ClassDiagram.Attribut>> BoatTrace./*超速判断，正常为0，超速为1*/overspeedjudging:Integer =>=>=> RelationalSchema.Column>> boattrace./*超速判断，正常为0，超速为1*/overspeedjudging;
ClassDiagram.Attribut>> BoatTrace./*记录船方向*/direction:String =>=>=> RelationalSchema.Column>> boattrace./*记录船方向*/direction;
ClassDiagram.Attribut>> BoatTrace./*船只状态*/status:String =>=>=> RelationalSchema.Column>> boattrace./*船只状态*/status;
ClassDiagram.Attribut>> BoatTrace./*记录时间*/recordtime:Date =>=>=> RelationalSchema.Column>> boattrace./*记录时间*/recordtime;
ClassDiagram.Attribut>> Pipeline.pipeid:String =>=>=> RelationalSchema.Column>> pipeline.pipeid PRIMARY KEY;
ClassDiagram.Attribut>> Pipeline./*管道起点*/source:String =>=>=> RelationalSchema.Column>> pipeline./*管道起点*/source;
ClassDiagram.Attribut>> Pipeline./*管道终点*/destination:String =>=>=> RelationalSchema.Column>> pipeline./*管道终点*/destination;
ClassDiagram.Attribut>> Pipeline./*创建时间*/createtime:Date =>=>=> RelationalSchema.Column>> pipeline./*创建时间*/createtime;
ClassDiagram.Attribut>> Pipeline./*更新时间*/uptime:Date =>=>=> RelationalSchema.Column>> pipeline./*更新时间*/uptime;
ClassDiagram.Attribut>> SeaRoute.//航线idrouteid:String =>=>=> RelationalSchema.Column>> searoute.//航线idrouteid PRIMARY KEY;
ClassDiagram.Attribut>> SeaRoute.//航线状态，默认为启用110status:String =>=>=> RelationalSchema.Column>> searoute.//航线状态，默认为启用110status;
ClassDiagram.Attribut>> SeaRoute.//航线起点source:String =>=>=> RelationalSchema.Column>> searoute.//航线起点source;
ClassDiagram.Attribut>> SeaRoute.//航线终点destination:String =>=>=> RelationalSchema.Column>> searoute.//航线终点destination;
ClassDiagram.Attribut>> SeaRoute./*创建时间*/createtime:Date =>=>=> RelationalSchema.Column>> searoute./*创建时间*/createtime;
ClassDiagram.Attribut>> SeaRoute./*更新时间*/uptime:Date =>=>=> RelationalSchema.Column>> searoute./*更新时间*/uptime;
ClassDiagram.Attribut>> RouteSegment.segmentid:String =>=>=> RelationalSchema.Column>> routesegment.segmentid PRIMARY KEY;
ClassDiagram.Attribut>> RouteSegment./*对应航线id*/routeid:String =>=>=> RelationalSchema.Column>> routesegment./*对应航线id*/routeid;
ClassDiagram.Attribut>> RouteSegment./*航线段的序列号*/segmentserialnumber:Integer =>=>=> RelationalSchema.Column>> routesegment./*航线段的序列号*/segmentserialnumber;
ClassDiagram.Attribut>> RouteSegment./*这一段的起点坐标*/start:String =>=>=> RelationalSchema.Column>> routesegment./*这一段的起点坐标*/start;
ClassDiagram.Attribut>> RouteSegment./*这一段的终点坐标*/end:String =>=>=> RelationalSchema.Column>> routesegment./*这一段的终点坐标*/end;
ClassDiagram.Attribut>> RouteSegment./*航道限速*/limitingspeed:String =>=>=> RelationalSchema.Column>> routesegment./*航道限速*/limitingspeed;
ClassDiagram.Attribut>> RouteSegment./*创建时间*/createtime:Date =>=>=> RelationalSchema.Column>> routesegment./*创建时间*/createtime;
ClassDiagram.Attribut>> RouteSegment./*更新时间*/uptime:Date =>=>=> RelationalSchema.Column>> routesegment./*更新时间*/uptime;
ClassDiagram.Attribut>> PipelineSensor.sensorid:String =>=>=> RelationalSchema.Column>> pipelinesensor.sensorid PRIMARY KEY;
ClassDiagram.Attribut>> PipelineSensor./*对应的管道段id*/segmentid:String =>=>=> RelationalSchema.Column>> pipelinesensor./*对应的管道段id*/segmentid;
ClassDiagram.Attribut>> PipelineSensor./*对应管道id*/pipeid:String =>=>=> RelationalSchema.Column>> pipelinesensor./*对应管道id*/pipeid;
ClassDiagram.Attribut>> PipelineSensor./*传感器类型*/typeid:String =>=>=> RelationalSchema.Column>> pipelinesensor./*传感器类型*/typeid;
ClassDiagram.Attribut>> PipelineSensor./*传感器坐标*/location:String =>=>=> RelationalSchema.Column>> pipelinesensor./*传感器坐标*/location;
ClassDiagram.Attribut>> PipelineSensor./*传感器当前状态，默认状态正常*/presentstatus:String =>=>=> RelationalSchema.Column>> pipelinesensor./*传感器当前状态，默认状态正常*/presentstatus;
ClassDiagram.Attribut>> PipelineSensor./*传感器当前值*/presentvalue:String =>=>=> RelationalSchema.Column>> pipelinesensor./*传感器当前值*/presentvalue;
ClassDiagram.Attribut>> PipelineSensor./*创建时间*/createtime:Date =>=>=> RelationalSchema.Column>> pipelinesensor./*创建时间*/createtime;
ClassDiagram.Attribut>> PipelineSensor./*更新时间*/uptime:Date =>=>=> RelationalSchema.Column>> pipelinesensor./*更新时间*/uptime;
ClassDiagram.Attribut>> PipelineSegment.segmentid:String =>=>=> RelationalSchema.Column>> pipelinesegment.segmentid PRIMARY KEY;
ClassDiagram.Attribut>> PipelineSegment./*对应管道id*/pipeid:String =>=>=> RelationalSchema.Column>> pipelinesegment./*对应管道id*/pipeid;
ClassDiagram.Attribut>> PipelineSegment./*管道段的序列号*/segmentserialnumber:Integer =>=>=> RelationalSchema.Column>> pipelinesegment./*管道段的序列号*/segmentserialnumber;
ClassDiagram.Attribut>> PipelineSegment./*这一段的起点坐标*/start:String =>=>=> RelationalSchema.Column>> pipelinesegment./*这一段的起点坐标*/start;
ClassDiagram.Attribut>> PipelineSegment./*这一段的终点坐标*/end:String =>=>=> RelationalSchema.Column>> pipelinesegment./*这一段的终点坐标*/end;
ClassDiagram.Attribut>> PipelineSegment./*创建时间*/createtime:Date =>=>=> RelationalSchema.Column>> pipelinesegment./*创建时间*/createtime;
ClassDiagram.Attribut>> PipelineSegment./*更新时间*/uptime:Date =>=>=> RelationalSchema.Column>> pipelinesegment./*更新时间*/uptime;
