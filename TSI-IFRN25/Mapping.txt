ClassDiagram.Class>> Venda =>=>=> RelationalSchema.Table>> venda;
ClassDiagram.Class>> Cliente =>=>=> RelationalSchema.Table>> cliente;
ClassDiagram.Class>> Permissao =>=>=> RelationalSchema.Table>> permissao;
ClassDiagram.Class>> Usuario =>=>=> RelationalSchema.Table>> usuario;
ClassDiagram.Class>> Grupo =>=>=> RelationalSchema.Table>> grupo;
ClassDiagram.Class>> Estilo =>=>=> RelationalSchema.Table>> estilo;
ClassDiagram.Class>> ItemVenda =>=>=> RelationalSchema.Table>> itemvenda;
ClassDiagram.Class>> Cidade =>=>=> RelationalSchema.Table>> cidade;
ClassDiagram.Class>> Estado =>=>=> RelationalSchema.Table>> estado;
ClassDiagram.Class>> UsuarioGrupo =>=>=> RelationalSchema.Table>> usuariogrupo;
ClassDiagram.Class>> Cerveja =>=>=> RelationalSchema.Table>> cerveja;
ClassDiagram.Attribut>> Venda.codigo:Long =>=>=> RelationalSchema.Column>> venda.codigo PRIMARY KEY;
ClassDiagram.Attribut>> Venda.datacriacao:LocalDateTime =>=>=> RelationalSchema.Column>> venda.datacriacao;
ClassDiagram.Attribut>> Venda.valorfrete:BigDecimal =>=>=> RelationalSchema.Column>> venda.valorfrete;
ClassDiagram.Attribut>> Venda.valordesconto:BigDecimal =>=>=> RelationalSchema.Column>> venda.valordesconto;
ClassDiagram.Attribut>> Venda.valortotal:BigDecimal =>=>=> RelationalSchema.Column>> venda.valortotal;
ClassDiagram.Attribut>> Venda.observacao:String =>=>=> RelationalSchema.Column>> venda.observacao;
ClassDiagram.Attribut>> Venda.datahoraentrega:LocalDateTime =>=>=> RelationalSchema.Column>> venda.datahoraentrega;
ClassDiagram.Attribut>> Venda.status:StatusVenda =>=>=> RelationalSchema.Column>> venda.status;
ClassDiagram.Attribut>> Venda.uuid:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Venda.dataentrega:LocalDate =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Venda.horarioentrega:LocalTime =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Cliente.serialversionuid:long =>=>=> RelationalSchema.Column>> cliente.serialversionuid;
ClassDiagram.Attribut>> Cliente.codigo:Long =>=>=> RelationalSchema.Column>> cliente.codigo PRIMARY KEY;
ClassDiagram.Attribut>> Cliente.nome:String =>=>=> RelationalSchema.Column>> cliente.nome;
ClassDiagram.Attribut>> Cliente.GeneratedName:TipoPessoa =>=>=> RelationalSchema.Column>> cliente.GeneratedName;
ClassDiagram.Attribut>> Cliente.cpfoucnpj:String =>=>=> RelationalSchema.Column>> cliente.cpfoucnpj;
ClassDiagram.Attribut>> Cliente.//@notblank(message:String =>=>=> RelationalSchema.Column>> cliente.//@notblank(message;
ClassDiagram.Attribut>> Cliente.email:String =>=>=> RelationalSchema.Column>> cliente.email;
ClassDiagram.Attribut>> Cliente.//@valid:Endereco =>=>=> RelationalSchema.Column>> cliente.//@valid;
ClassDiagram.Attribut>> Permissao.serialversionuid:long =>=>=> RelationalSchema.Column>> permissao.serialversionuid;
ClassDiagram.Attribut>> Permissao.codigo:Long =>=>=> RelationalSchema.Column>> permissao.codigo PRIMARY KEY;
ClassDiagram.Attribut>> Permissao.nome:String =>=>=> RelationalSchema.Column>> permissao.nome;
ClassDiagram.Attribut>> Usuario.serialversionuid:long =>=>=> RelationalSchema.Column>> usuario.serialversionuid;
ClassDiagram.Attribut>> Usuario.codigo:Long =>=>=> RelationalSchema.Column>> usuario.codigo PRIMARY KEY;
ClassDiagram.Attribut>> Usuario.nome:String =>=>=> RelationalSchema.Column>> usuario.nome;
ClassDiagram.Attribut>> Usuario.email:String =>=>=> RelationalSchema.Column>> usuario.email;
ClassDiagram.Attribut>> Usuario.senha:String =>=>=> RelationalSchema.Column>> usuario.senha;
ClassDiagram.Attribut>> Usuario.confirmacaosenha:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Usuario.ativo:Boolean =>=>=> RelationalSchema.Column>> usuario.ativo;
ClassDiagram.Attribut>> Usuario.//@notnull(message:LocalDate =>=>=> RelationalSchema.Column>> usuario.//@notnull(message;
ClassDiagram.Attribut>> Grupo.serialversionuid:long =>=>=> RelationalSchema.Column>> grupo.serialversionuid;
ClassDiagram.Attribut>> Grupo.codigo:Long =>=>=> RelationalSchema.Column>> grupo.codigo PRIMARY KEY;
ClassDiagram.Attribut>> Grupo.nome:String =>=>=> RelationalSchema.Column>> grupo.nome;
ClassDiagram.Attribut>> Estilo.serialversionuid:long =>=>=> RelationalSchema.Column>> estilo.serialversionuid;
ClassDiagram.Attribut>> Estilo.codigo:Long =>=>=> RelationalSchema.Column>> estilo.codigo PRIMARY KEY;
ClassDiagram.Attribut>> Estilo.nome:String =>=>=> RelationalSchema.Column>> estilo.nome;
ClassDiagram.Attribut>> ItemVenda.codigo:Long =>=>=> RelationalSchema.Column>> itemvenda.codigo PRIMARY KEY;
ClassDiagram.Attribut>> ItemVenda.quantidade:Integer =>=>=> RelationalSchema.Column>> itemvenda.quantidade;
ClassDiagram.Attribut>> ItemVenda.valorunitario:BigDecimal =>=>=> RelationalSchema.Column>> itemvenda.valorunitario;
ClassDiagram.Attribut>> Cidade.serialversionuid:long =>=>=> RelationalSchema.Column>> cidade.serialversionuid;
ClassDiagram.Attribut>> Cidade.codigo:Long =>=>=> RelationalSchema.Column>> cidade.codigo PRIMARY KEY;
ClassDiagram.Attribut>> Cidade.nome:String =>=>=> RelationalSchema.Column>> cidade.nome;
ClassDiagram.Attribut>> Estado.serialversionuid:long =>=>=> RelationalSchema.Column>> estado.serialversionuid;
ClassDiagram.Attribut>> Estado.codigo:Long =>=>=> RelationalSchema.Column>> estado.codigo PRIMARY KEY;
ClassDiagram.Attribut>> Estado.nome:String =>=>=> RelationalSchema.Column>> estado.nome;
ClassDiagram.Attribut>> Estado.sigla:String =>=>=> RelationalSchema.Column>> estado.sigla;
ClassDiagram.Attribut>> UsuarioGrupo.id:UsuarioGrupoId =>=>=> RelationalSchema.Column>> usuariogrupo.id;
ClassDiagram.Attribut>> Cerveja.serialversionuid:long =>=>=> RelationalSchema.Column>> cerveja.serialversionuid;
ClassDiagram.Attribut>> Cerveja.codigo:Long =>=>=> RelationalSchema.Column>> cerveja.codigo PRIMARY KEY;
ClassDiagram.Attribut>> Cerveja.sku:String =>=>=> RelationalSchema.Column>> cerveja.sku;
ClassDiagram.Attribut>> Cerveja.nome:String =>=>=> RelationalSchema.Column>> cerveja.nome;
ClassDiagram.Attribut>> Cerveja.descricao:String =>=>=> RelationalSchema.Column>> cerveja.descricao;
ClassDiagram.Attribut>> Cerveja.valor:BigDecimal =>=>=> RelationalSchema.Column>> cerveja.valor;
ClassDiagram.Attribut>> Cerveja.teoralcoolico:BigDecimal =>=>=> RelationalSchema.Column>> cerveja.teoralcoolico;
ClassDiagram.Attribut>> Cerveja.comissao:BigDecimal =>=>=> RelationalSchema.Column>> cerveja.comissao;
ClassDiagram.Attribut>> Cerveja.quantidadeestoque:Integer =>=>=> RelationalSchema.Column>> cerveja.quantidadeestoque;
ClassDiagram.Attribut>> Cerveja.GeneratedName:Origem =>=>=> RelationalSchema.Column>> cerveja.GeneratedName;
ClassDiagram.Attribut>> Cerveja.GeneratedName:Sabor =>=>=> RelationalSchema.Column>> cerveja.GeneratedName;
ClassDiagram.Attribut>> Cerveja.foto:String =>=>=> RelationalSchema.Column>> cerveja.foto;
ClassDiagram.Attribut>> Cerveja.contenttype:String =>=>=> RelationalSchema.Column>> cerveja.contenttype;
ClassDiagram.Attribut>> Cerveja.novafoto:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Cerveja.urlfoto:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Cerveja.urlthumbnailfoto:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
Many-To-One relationship from ClassDiagram.Class>>Venda  to ClassDiagram.Class>>cliente represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Venda  to ClassDiagram.Class>>usuario represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Venda  to ClassDiagram.Class>>List<ItemVenda>;
Many-To-Many relationship between ClassDiagram.Class>>Usuario  and ClassDiagram.Class>>list<grupo>: usuario_grupo(codigo_usuario:Usuario [PK] #FK to Usuario,codigo_grupo:list<grupo> [PK] #FK to list<grupo>);
Many-To-Many relationship between ClassDiagram.Class>>Grupo  and ClassDiagram.Class>>list<permissao>: grupo_permissao(codigo_grupo:Grupo [PK] #FK to Grupo,codigo_permissao:list<permissao> [PK] #FK to list<permissao>);
One-To-Many relationship from ClassDiagram.Class>>Estilo  to ClassDiagram.Class>>List<Cerveja>;
Many-To-One relationship from ClassDiagram.Class>>ItemVenda  to ClassDiagram.Class>>cerveja represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>ItemVenda  to ClassDiagram.Class>>venda represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Cidade  to ClassDiagram.Class>>estado represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Cerveja  to ClassDiagram.Class>>estilo represented by ClassDiagram.Atrribute>>GeneratedName;
