ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> AccountRole =>=>=> RelationalSchema.Table>> accountrole;
ClassDiagram.Class>> RolePermission =>=>=> RelationalSchema.Table>> rolepermission;
ClassDiagram.Class>> Permission =>=>=> RelationalSchema.Table>> permission;
ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Attribut>> Account.userid:String =>=>=> RelationalSchema.Column>> account.userid PRIMARY KEY;
ClassDiagram.Attribut>> Account.username:String =>=>=> RelationalSchema.Column>> account.username;
ClassDiagram.Attribut>> Account.email:String =>=>=> RelationalSchema.Column>> account.email;
ClassDiagram.Attribut>> Account.phone:String =>=>=> RelationalSchema.Column>> account.phone;
ClassDiagram.Attribut>> Account.password:String =>=>=> RelationalSchema.Column>> account.password;
ClassDiagram.Attribut>> Account.delflag:Boolean =>=>=> RelationalSchema.Column>> account.delflag;
ClassDiagram.Attribut>> AccountRole.userid:String =>=>=> RelationalSchema.Column>> accountrole.userid PRIMARY KEY;
ClassDiagram.Attribut>> AccountRole.roleid:String =>=>=> RelationalSchema.Column>> accountrole.roleid PRIMARY KEY;
ClassDiagram.Attribut>> RolePermission.roleid:String =>=>=> RelationalSchema.Column>> rolepermission.roleid PRIMARY KEY;
ClassDiagram.Attribut>> RolePermission.permissionid:String =>=>=> RelationalSchema.Column>> rolepermission.permissionid PRIMARY KEY;
ClassDiagram.Attribut>> Permission.permissionid:String =>=>=> RelationalSchema.Column>> permission.permissionid PRIMARY KEY;
ClassDiagram.Attribut>> Permission.permission:String =>=>=> RelationalSchema.Column>> permission.permission;
ClassDiagram.Attribut>> Permission.description:String =>=>=> RelationalSchema.Column>> permission.description;
ClassDiagram.Attribut>> Permission.delflag:Boolean =>=>=> RelationalSchema.Column>> permission.delflag;
ClassDiagram.Attribut>> Role.roleid:String =>=>=> RelationalSchema.Column>> role.roleid PRIMARY KEY;
ClassDiagram.Attribut>> Role.role:String =>=>=> RelationalSchema.Column>> role.role;
ClassDiagram.Attribut>> Role.description:String =>=>=> RelationalSchema.Column>> role.description;
ClassDiagram.Attribut>> Role.delflag:Boolean =>=>=> RelationalSchema.Column>> role.delflag;
Many-To-Many relationship between ClassDiagram.Class>>Account  and ClassDiagram.Class>>list<role>: sys_account_role(user_id:Account [PK] #FK to Account,role_id:list<role> [PK] #FK to list<role>);
Many-To-Many relationship between ClassDiagram.Class>>Permission  and ClassDiagram.Class>>list<role>: sys_role_permission(permission_id:Permission [PK] #FK to Permission,role_id:list<role> [PK] #FK to list<role>);
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>list<permission>: sys_role_permission(role_id:Role [PK] #FK to Role,permission_id:list<permission> [PK] #FK to list<permission>);
Many-To-Many relationship between ClassDiagram.Class>>Role  and ClassDiagram.Class>>list<account>: sys_role_permission(role_id:Role [PK] #FK to Role,permission_id:list<permission> [PK] #FK to list<permission>);sys_account_role(role_id:Role [PK] #FK to Role,user_id:list<account> [PK] #FK to list<account>);
