ClassDiagram.Class>> TypeHolder =>=>=> RelationalSchema.Table>> typeholder;
ClassDiagram.Class>> Animal =>=>=> RelationalSchema.Table>> animal;
ClassDiagram.Class>> Farm =>=>=> RelationalSchema.Table>> farm;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> WebSite =>=>=> RelationalSchema.Table>> website;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> Organisation =>=>=> RelationalSchema.Table>> organisation;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Manager =>=>=> RelationalSchema.Table>> manager;
ClassDiagram.Class>> Qualification =>=>=> RelationalSchema.Table>> qualification;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Coach =>=>=> RelationalSchema.Table>> coach;
ClassDiagram.Class>> Player =>=>=> RelationalSchema.Table>> player;
ClassDiagram.Class>> Manager =>=>=> RelationalSchema.Table>> manager;
ClassDiagram.Class>> QueryTypes =>=>=> RelationalSchema.Table>> querytypes;
ClassDiagram.Class>> Team =>=>=> RelationalSchema.Table>> team;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> MinorProject =>=>=> RelationalSchema.Table>> minorproject;
ClassDiagram.Class>> MajorProject =>=>=> RelationalSchema.Table>> majorproject;
ClassDiagram.Class>> CollectionOwner =>=>=> RelationalSchema.Table>> collectionowner;
ClassDiagram.Class>> C =>=>=> RelationalSchema.Table>> c;
ClassDiagram.Class>> A =>=>=> RelationalSchema.Table>> a;
ClassDiagram.Class>> ProjectOwner =>=>=> RelationalSchema.Table>> projectowner;
ClassDiagram.Class>> ConcreteEntity105 =>=>=> RelationalSchema.Table>> concreteentity105;
ClassDiagram.Class>> JuniorProjectOwner =>=>=> RelationalSchema.Table>> juniorprojectowner;
ClassDiagram.Class>> OtherEntity105 =>=>=> RelationalSchema.Table>> otherentity105;
ClassDiagram.Class>> CollectionElement =>=>=> RelationalSchema.Table>> collectionelement;
ClassDiagram.Class>> SeniorProjectOwner =>=>=> RelationalSchema.Table>> seniorprojectowner;
ClassDiagram.Attribut>> TypeHolder.id:long =>=>=> RelationalSchema.Column>> typeholder.id PRIMARY KEY;
ClassDiagram.Attribut>> TypeHolder.name:String =>=>=> RelationalSchema.Column>> typeholder.name;
ClassDiagram.Attribut>> TypeHolder.details:ComplicatedType =>=>=> RelationalSchema.Column>> typeholder.details;
ClassDiagram.Attribut>> Animal.name:String =>=>=> RelationalSchema.Column>> animal.name PRIMARY KEY;
ClassDiagram.Attribut>> Farm.name:String =>=>=> RelationalSchema.Column>> farm.name PRIMARY KEY;
ClassDiagram.Attribut>> Account.serialversionuid:long =>=>=> RelationalSchema.Column>> account.serialversionuid;
ClassDiagram.Attribut>> Account.//pkifappidid:long =>=>=> RelationalSchema.Column>> account.//pkifappidid PRIMARY KEY;
ClassDiagram.Attribut>> Account.username:String =>=>=> RelationalSchema.Column>> account.username;
ClassDiagram.Attribut>> Account.enabled:boolean =>=>=> RelationalSchema.Column>> account.enabled;
ClassDiagram.Attribut>> WebSite.//pkforappidid:long =>=>=> RelationalSchema.Column>> website.//pkforappidid PRIMARY KEY;
ClassDiagram.Attribut>> WebSite.name:String =>=>=> RelationalSchema.Column>> website.name;
ClassDiagram.Attribut>> WebSite.url:String =>=>=> RelationalSchema.Column>> website.url;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.primarykey:DepartmentPK =>=>=> RelationalSchema.Column>> department.primarykey;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name PRIMARY KEY;
ClassDiagram.Attribut>> Project.budget:long =>=>=> RelationalSchema.Column>> project.budget;
ClassDiagram.Attribut>> Organisation.name:String =>=>=> RelationalSchema.Column>> organisation.name PRIMARY KEY;
ClassDiagram.Attribut>> Organisation.description:String =>=>=> RelationalSchema.Column>> organisation.description;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.serialno:String =>=>=> RelationalSchema.Column>> employee.serialno;
ClassDiagram.Attribut>> Employee.salary:float =>=>=> RelationalSchema.Column>> employee.salary;
ClassDiagram.Attribut>> Employee.salarycurrency:String =>=>=> RelationalSchema.Column>> employee.salarycurrency;
ClassDiagram.Attribut>> Employee.yearsincompany:Integer =>=>=> RelationalSchema.Column>> employee.yearsincompany;
ClassDiagram.Attribut>> Employee./***usedforthequeryingoffields.*/firstname:String =>=>=> RelationalSchema.Column>> employee./***usedforthequeryingoffields.*/firstname;
ClassDiagram.Attribut>> PhoneNumber.//pkwhenusingappidid:long =>=>=> RelationalSchema.Column>> phonenumber.//pkwhenusingappidid PRIMARY KEY;
ClassDiagram.Attribut>> PhoneNumber.name:String =>=>=> RelationalSchema.Column>> phonenumber.name;
ClassDiagram.Attribut>> PhoneNumber.number:String =>=>=> RelationalSchema.Column>> phonenumber.number;
ClassDiagram.Attribut>> Manager.serialversionuid:long =>=>=> RelationalSchema.Column>> manager.serialversionuid;
ClassDiagram.Attribut>> Qualification.serialversionuid:long =>=>=> RelationalSchema.Column>> qualification.serialversionuid;
ClassDiagram.Attribut>> Qualification.name:String =>=>=> RelationalSchema.Column>> qualification.name PRIMARY KEY;
ClassDiagram.Attribut>> Qualification.GeneratedName:Person =>=>=> RelationalSchema.Column>> qualification.GeneratedName;
ClassDiagram.Attribut>> Qualification.GeneratedName:Organisation =>=>=> RelationalSchema.Column>> qualification.GeneratedName;
ClassDiagram.Attribut>> Qualification.GeneratedName:Date =>=>=> RelationalSchema.Column>> qualification.GeneratedName;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.//partofpkwithappidpersonnum:long =>=>=> RelationalSchema.Column>> person.//partofpkwithappidpersonnum PRIMARY KEY;
ClassDiagram.Attribut>> Person.//partofpkwithappidglobalnum:String =>=>=> RelationalSchema.Column>> person.//partofpkwithappidglobalnum PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Person.emailaddress:String =>=>=> RelationalSchema.Column>> person.emailaddress;
ClassDiagram.Attribut>> Person.age:int =>=>=> RelationalSchema.Column>> person.age;
ClassDiagram.Attribut>> Coach.yearsexperience:int =>=>=> RelationalSchema.Column>> coach.yearsexperience;
ClassDiagram.Attribut>> Player.start:Date =>=>=> RelationalSchema.Column>> player.start;
ClassDiagram.Attribut>> Player.datetime:LocalDateTime =>=>=> RelationalSchema.Column>> player.datetime;
ClassDiagram.Attribut>> QueryTypes.id:long =>=>=> RelationalSchema.Column>> querytypes.id PRIMARY KEY;
ClassDiagram.Attribut>> QueryTypes.listofbytearray:List<byte[]> =>=>=> RelationalSchema.Column>> querytypes.listofbytearray;
ClassDiagram.Attribut>> QueryTypes.nonentityserialisable:DummyQueryType<?> =>=>=> RelationalSchema.Column>> querytypes.nonentityserialisable;
ClassDiagram.Attribut>> QueryTypes.validated:String =>=>=> RelationalSchema.Column>> querytypes.validated;
ClassDiagram.Attribut>> Team.id:long =>=>=> RelationalSchema.Column>> team.id PRIMARY KEY;
ClassDiagram.Attribut>> Team.name:String =>=>=> RelationalSchema.Column>> team.name;
ClassDiagram.Attribut>> Team.website:URL =>=>=> RelationalSchema.Column>> team.website;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Project.serialversionuid:long =>=>=> RelationalSchema.Column>> project.serialversionuid;
ClassDiagram.Attribut>> Project.id:Long =>=>=> RelationalSchema.Column>> project.id PRIMARY KEY;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name;
ClassDiagram.Attribut>> MinorProject.serialversionuid:long =>=>=> RelationalSchema.Column>> minorproject.serialversionuid;
ClassDiagram.Attribut>> MajorProject.serialversionuid:long =>=>=> RelationalSchema.Column>> majorproject.serialversionuid;
ClassDiagram.Attribut>> CollectionOwner.id:long =>=>=> RelationalSchema.Column>> collectionowner.id PRIMARY KEY;
ClassDiagram.Attribut>> C.id:Long =>=>=> RelationalSchema.Column>> c.id PRIMARY KEY;
ClassDiagram.Attribut>> C.amount:BigDecimal =>=>=> RelationalSchema.Column>> c.amount;
ClassDiagram.Attribut>> C.currency:String =>=>=> RelationalSchema.Column>> c.currency;
ClassDiagram.Attribut>> A.id:Long =>=>=> RelationalSchema.Column>> a.id PRIMARY KEY;
ClassDiagram.Attribut>> A.name:String =>=>=> RelationalSchema.Column>> a.name;
ClassDiagram.Attribut>> A.GeneratedName:B =>=>=> RelationalSchema.Column>> a.GeneratedName;
ClassDiagram.Attribut>> ProjectOwner.serialversionuid:long =>=>=> RelationalSchema.Column>> projectowner.serialversionuid;
ClassDiagram.Attribut>> ProjectOwner.id:Long =>=>=> RelationalSchema.Column>> projectowner.id PRIMARY KEY;
ClassDiagram.Attribut>> ProjectOwner.name:String =>=>=> RelationalSchema.Column>> projectowner.name;
ClassDiagram.Attribut>> ProjectOwner.currentroject:P =>=>=> RelationalSchema.Column>> projectowner.currentroject;
ClassDiagram.Attribut>> ConcreteEntity105.property:String =>=>=> RelationalSchema.Column>> concreteentity105.property;
ClassDiagram.Attribut>> JuniorProjectOwner.serialversionuid:long =>=>=> RelationalSchema.Column>> juniorprojectowner.serialversionuid;
ClassDiagram.Attribut>> OtherEntity105.id:long =>=>=> RelationalSchema.Column>> otherentity105.id PRIMARY KEY;
ClassDiagram.Attribut>> OtherEntity105.name:String =>=>=> RelationalSchema.Column>> otherentity105.name;
ClassDiagram.Attribut>> CollectionElement.id:long =>=>=> RelationalSchema.Column>> collectionelement.id PRIMARY KEY;
ClassDiagram.Attribut>> SeniorProjectOwner.serialversionuid:long =>=>=> RelationalSchema.Column>> seniorprojectowner.serialversionuid;
Many-To-One relationship from ClassDiagram.Class>>Animal  to ClassDiagram.Class>>Farm represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Farm  to ClassDiagram.Class>>ArrayList<Animal>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Set<Project>;
Many-To-One relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Manager represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Manager represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>Account represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Manager  to ClassDiagram.Class>>Set<Employee>;
One-To-Many relationship from ClassDiagram.Class>>Manager  to ClassDiagram.Class>>Set<Department>;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>Person represented by ClassDiagram.Atrribute>>bestfriend;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>Map<String,PhoneNumber>;
Many-To-One relationship from ClassDiagram.Class>>Player  to ClassDiagram.Class>>Team represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Manager  to ClassDiagram.Class>>Team represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Team  to ClassDiagram.Class>>Manager represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Team  to ClassDiagram.Class>>Set<Player>;
Many-To-One relationship from ClassDiagram.Class>>Project  to ClassDiagram.Class>>po represented by ClassDiagram.Atrribute>>owner;
One-To-One relationship between ClassDiagram.Class>>CollectionOwner  to ClassDiagram.Class>>t represented by ClassDiagram.Atrribute>>elemen;
One-To-Many relationship from ClassDiagram.Class>>CollectionOwner  to ClassDiagram.Class>>Set<T>;
One-To-Many relationship from ClassDiagram.Class>>ProjectOwner  to ClassDiagram.Class>>Set<P>;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Employee  ;
