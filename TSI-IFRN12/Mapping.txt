ClassDiagram.Class>> Role =>=>=> RelationalSchema.Table>> role;
ClassDiagram.Class>> Post =>=>=> RelationalSchema.Table>> post;
ClassDiagram.Class>> Comment =>=>=> RelationalSchema.Table>> comment;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Attribut>> Role.id:Long =>=>=> RelationalSchema.Column>> role.id PRIMARY KEY;
ClassDiagram.Attribut>> Role.role:String =>=>=> RelationalSchema.Column>> role.role;
ClassDiagram.Attribut>> Post.id:Long =>=>=> RelationalSchema.Column>> post.id PRIMARY KEY;
ClassDiagram.Attribut>> Post.title:String =>=>=> RelationalSchema.Column>> post.title;
ClassDiagram.Attribut>> Post.body:String =>=>=> RelationalSchema.Column>> post.body;
ClassDiagram.Attribut>> Post.create:Date =>=>=> RelationalSchema.Column>> post.create;
ClassDiagram.Attribut>> Comment.id:Long =>=>=> RelationalSchema.Column>> comment.id PRIMARY KEY;
ClassDiagram.Attribut>> Comment.body:String =>=>=> RelationalSchema.Column>> comment.body;
ClassDiagram.Attribut>> Comment.create:Date =>=>=> RelationalSchema.Column>> comment.create;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.lastname:String =>=>=> RelationalSchema.Column>> user.lastname;
ClassDiagram.Attribut>> User.active:int =>=>=> RelationalSchema.Column>> user.active;
Many-To-One relationship from ClassDiagram.Class>>Post  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
One-To-Many relationship from ClassDiagram.Class>>Post  to ClassDiagram.Class>>Collection<Comment>;
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>post represented by ClassDiagram.Atrribute>>post_id;
Many-To-One relationship from ClassDiagram.Class>>Comment  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>user_id;
Many-To-Many relationship between ClassDiagram.Class>>User  and ClassDiagram.Class>>collection<role>: user_role(user_id:User [PK] #FK to User,role_id:collection<role> [PK] #FK to collection<role>);
One-To-Many relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>Collection<Post>;
