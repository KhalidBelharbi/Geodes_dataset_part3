ClassDiagram.Class>> MetaField =>=>=> RelationalSchema.Table>> metafield;
ClassDiagram.Class>> MetaFieldGroup =>=>=> RelationalSchema.Table>> metafieldgroup;
ClassDiagram.Class>> ValidationRule =>=>=> RelationalSchema.Table>> validationrule;
ClassDiagram.Class>> MetaFieldValue =>=>=> RelationalSchema.Table>> metafieldvalue;
ClassDiagram.Class>> JsonMetaFieldValue =>=>=> RelationalSchema.Table>> jsonmetafieldvalue;
ClassDiagram.Class>> ListMetaFieldValue =>=>=> RelationalSchema.Table>> listmetafieldvalue;
ClassDiagram.Class>> DateMetaFieldValue =>=>=> RelationalSchema.Table>> datemetafieldvalue;
ClassDiagram.Class>> IntegerMetaFieldValue =>=>=> RelationalSchema.Table>> integermetafieldvalue;
ClassDiagram.Class>> DecimalMetaFieldValue =>=>=> RelationalSchema.Table>> decimalmetafieldvalue;
ClassDiagram.Class>> BooleanMetaFieldValue =>=>=> RelationalSchema.Table>> booleanmetafieldvalue;
ClassDiagram.Class>> StringMetaFieldValue =>=>=> RelationalSchema.Table>> stringmetafieldvalue;
ClassDiagram.Class>> LanguageDTO =>=>=> RelationalSchema.Table>> languagedto;
ClassDiagram.Class>> CurrencyDTO =>=>=> RelationalSchema.Table>> currencydto;
ClassDiagram.Class>> JbillingTable =>=>=> RelationalSchema.Table>> jbillingtable;
ClassDiagram.Class>> InternationalDescriptionDTO =>=>=> RelationalSchema.Table>> internationaldescriptiondto;
ClassDiagram.Class>> AbstractGenericStatus =>=>=> RelationalSchema.Table>> abstractgenericstatus;
ClassDiagram.Class>> CountryDTO =>=>=> RelationalSchema.Table>> countrydto;
ClassDiagram.Class>> EnumerationDTO =>=>=> RelationalSchema.Table>> enumerationdto;
ClassDiagram.Class>> InternationalDescription =>=>=> RelationalSchema.Table>> internationaldescription;
ClassDiagram.Class>> CurrencyExchangeDTO =>=>=> RelationalSchema.Table>> currencyexchangedto;
ClassDiagram.Class>> EnumerationValueDTO =>=>=> RelationalSchema.Table>> enumerationvaluedto;
ClassDiagram.Attribut>> MetaField.serialversionuid:long =>=>=> RelationalSchema.Column>> metafield.serialversionuid;
ClassDiagram.Attribut>> MetaField.id:int =>=>=> RelationalSchema.Column>> metafield.id PRIMARY KEY;
ClassDiagram.Attribut>> MetaField.entityid:Integer =>=>=> RelationalSchema.Column>> metafield.entityid;
ClassDiagram.Attribut>> MetaField.name:String =>=>=> RelationalSchema.Column>> metafield.name;
ClassDiagram.Attribut>> MetaField.GeneratedName:EntityType =>=>=> RelationalSchema.Column>> metafield.GeneratedName;
ClassDiagram.Attribut>> MetaField.GeneratedName:DataType =>=>=> RelationalSchema.Column>> metafield.GeneratedName;
ClassDiagram.Attribut>> MetaField.disabled:boolean =>=>=> RelationalSchema.Column>> metafield.disabled;
ClassDiagram.Attribut>> MetaField.mandatory:boolean =>=>=> RelationalSchema.Column>> metafield.mandatory;
ClassDiagram.Attribut>> MetaField.displayorder:Integer =>=>=> RelationalSchema.Column>> metafield.displayorder;
ClassDiagram.Attribut>> MetaField.datatableid:Integer =>=>=> RelationalSchema.Column>> metafield.datatableid;
ClassDiagram.Attribut>> MetaField.helpdescription:String =>=>=> RelationalSchema.Column>> metafield.helpdescription;
ClassDiagram.Attribut>> MetaField.helpcontenturl:String =>=>=> RelationalSchema.Column>> metafield.helpcontenturl;
ClassDiagram.Attribut>> MetaField.GeneratedName:ValidationRule =>=>=> RelationalSchema.Column>> metafield.GeneratedName;
ClassDiagram.Attribut>> MetaField.//indicatewhetherthemetafieldisaprimaryfieldandcanbeusedforcreationofmetafieldgroupsandforproviding//ameta-fieldstobepopulatedfortheentitytypetheybelongto//metafieldscreatedfromtheconfiguration-metafieldmenuwillbeconsideredasprimarymetafieldsbydefault.//allotherdynamicmetafieldscreatedontheflyinthesystem(example:accountinformationtype,productcategory)willnotbeconsideredasprimaryprimary:Boolean =>=>=> RelationalSchema.Column>> metafield.//indicatewhetherthemetafieldisaprimaryfieldandcanbeusedforcreationofmetafieldgroupsandforproviding//ameta-fieldstobepopulatedfortheentitytypetheybelongto//metafieldscreatedfromtheconfiguration-metafieldmenuwillbeconsideredasprimarymetafieldsbydefault.//allotherdynamicmetafieldscreatedontheflyinthesystem(example:accountinformationtype,productcategory)willnotbeconsideredasprimaryprimary;
ClassDiagram.Attribut>> MetaField.fieldusage:MetaFieldType =>=>=> RelationalSchema.Column>> metafield.fieldusage;
ClassDiagram.Attribut>> MetaField.versionnum:Integer =>=>=> RelationalSchema.Column>> metafield.versionnum;
ClassDiagram.Attribut>> MetaField.filename:String =>=>=> RelationalSchema.Column>> metafield.filename;
ClassDiagram.Attribut>> MetaFieldGroup.serialversionuid:long =>=>=> RelationalSchema.Column>> metafieldgroup.serialversionuid;
ClassDiagram.Attribut>> MetaFieldGroup.id:int =>=>=> RelationalSchema.Column>> metafieldgroup.id PRIMARY KEY;
ClassDiagram.Attribut>> MetaFieldGroup.created:Date =>=>=> RelationalSchema.Column>> metafieldgroup.created;
ClassDiagram.Attribut>> MetaFieldGroup.upd:Date =>=>=> RelationalSchema.Column>> metafieldgroup.upd;
ClassDiagram.Attribut>> MetaFieldGroup.entityid:Integer =>=>=> RelationalSchema.Column>> metafieldgroup.entityid;
ClassDiagram.Attribut>> MetaFieldGroup.displayorder:Integer =>=>=> RelationalSchema.Column>> metafieldgroup.displayorder;
ClassDiagram.Attribut>> MetaFieldGroup.GeneratedName:EntityType =>=>=> RelationalSchema.Column>> metafieldgroup.GeneratedName;
ClassDiagram.Attribut>> MetaFieldGroup.versionnum:Integer =>=>=> RelationalSchema.Column>> metafieldgroup.versionnum;
ClassDiagram.Attribut>> ValidationRule.error_msg_label:String =>=>=> RelationalSchema.Column>> validationrule.error_msg_label;
ClassDiagram.Attribut>> ValidationRule.id:int =>=>=> RelationalSchema.Column>> validationrule.id PRIMARY KEY;
ClassDiagram.Attribut>> ValidationRule.ruletype:ValidationRuleType =>=>=> RelationalSchema.Column>> validationrule.ruletype;
ClassDiagram.Attribut>> ValidationRule.ruleattributes:SortedMap<String,String> =>=>=> RelationalSchema.Column>> validationrule.ruleattributes;
ClassDiagram.Attribut>> ValidationRule.enabled:boolean =>=>=> RelationalSchema.Column>> validationrule.enabled;
ClassDiagram.Attribut>> ValidationRule.errors:Map<Integer,String> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> ValidationRule.versionnum:Integer =>=>=> RelationalSchema.Column>> validationrule.versionnum;
ClassDiagram.Attribut>> MetaFieldValue.id:Integer =>=>=> RelationalSchema.Column>> metafieldvalue.id PRIMARY KEY;
ClassDiagram.Attribut>> JsonMetaFieldValue.log:FormatLogger =>=>=> RelationalSchema.Column>> jsonmetafieldvalue.log;
ClassDiagram.Attribut>> JsonMetaFieldValue.json:String =>=>=> RelationalSchema.Column>> jsonmetafieldvalue.json;
ClassDiagram.Attribut>> ListMetaFieldValue.value:List<String> =>=>=> RelationalSchema.Column>> listmetafieldvalue.value;
ClassDiagram.Attribut>> DateMetaFieldValue.value:Date =>=>=> RelationalSchema.Column>> datemetafieldvalue.value;
ClassDiagram.Attribut>> IntegerMetaFieldValue.value:Integer =>=>=> RelationalSchema.Column>> integermetafieldvalue.value;
ClassDiagram.Attribut>> DecimalMetaFieldValue.value:BigDecimal =>=>=> RelationalSchema.Column>> decimalmetafieldvalue.value;
ClassDiagram.Attribut>> BooleanMetaFieldValue.value:Boolean =>=>=> RelationalSchema.Column>> booleanmetafieldvalue.value;
ClassDiagram.Attribut>> StringMetaFieldValue.value:String =>=>=> RelationalSchema.Column>> stringmetafieldvalue.value;
ClassDiagram.Attribut>> LanguageDTO.english_language_id:int =>=>=> RelationalSchema.Column>> languagedto.english_language_id;
ClassDiagram.Attribut>> LanguageDTO.id:int =>=>=> RelationalSchema.Column>> languagedto.id PRIMARY KEY;
ClassDiagram.Attribut>> LanguageDTO.code:String =>=>=> RelationalSchema.Column>> languagedto.code;
ClassDiagram.Attribut>> LanguageDTO.description:String =>=>=> RelationalSchema.Column>> languagedto.description;
ClassDiagram.Attribut>> CurrencyDTO.id:int =>=>=> RelationalSchema.Column>> currencydto.id PRIMARY KEY;
ClassDiagram.Attribut>> CurrencyDTO.symbol:String =>=>=> RelationalSchema.Column>> currencydto.symbol;
ClassDiagram.Attribut>> CurrencyDTO.code:String =>=>=> RelationalSchema.Column>> currencydto.code;
ClassDiagram.Attribut>> CurrencyDTO.countrycode:String =>=>=> RelationalSchema.Column>> currencydto.countrycode;
ClassDiagram.Attribut>> CurrencyDTO.entities_1:Set<Integer> =>=>=> RelationalSchema.Column>> currencydto.entities_1;
ClassDiagram.Attribut>> CurrencyDTO.versionnum:Integer =>=>=> RelationalSchema.Column>> currencydto.versionnum;
ClassDiagram.Attribut>> CurrencyDTO.//fromexname:String =>=>=> RelationalSchema.Column>> currencydto.//fromexname;
ClassDiagram.Attribut>> CurrencyDTO.inuse:Boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CurrencyDTO.//willbeconvertedtofloatrate:String =>=>=> RelationalSchema.Column>> currencydto.//willbeconvertedtofloatrate;
ClassDiagram.Attribut>> CurrencyDTO.sysrate:BigDecimal =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> JbillingTable.id:int =>=>=> RelationalSchema.Column>> jbillingtable.id PRIMARY KEY;
ClassDiagram.Attribut>> JbillingTable.name:String =>=>=> RelationalSchema.Column>> jbillingtable.name;
ClassDiagram.Attribut>> InternationalDescriptionDTO.id:InternationalDescriptionId =>=>=> RelationalSchema.Column>> internationaldescriptiondto.id;
ClassDiagram.Attribut>> InternationalDescriptionDTO.content:String =>=>=> RelationalSchema.Column>> internationaldescriptiondto.content;
ClassDiagram.Attribut>> AbstractGenericStatus.id:int =>=>=> RelationalSchema.Column>> abstractgenericstatus.id;
ClassDiagram.Attribut>> AbstractGenericStatus.statusvalue:Integer =>=>=> RelationalSchema.Column>> abstractgenericstatus.statusvalue;
ClassDiagram.Attribut>> AbstractGenericStatus.order:Integer =>=>=> RelationalSchema.Column>> abstractgenericstatus.order;
ClassDiagram.Attribut>> CountryDTO.id:int =>=>=> RelationalSchema.Column>> countrydto.id PRIMARY KEY;
ClassDiagram.Attribut>> CountryDTO.code:String =>=>=> RelationalSchema.Column>> countrydto.code;
ClassDiagram.Attribut>> EnumerationDTO.id:int =>=>=> RelationalSchema.Column>> enumerationdto.id PRIMARY KEY;
ClassDiagram.Attribut>> EnumerationDTO.name:String =>=>=> RelationalSchema.Column>> enumerationdto.name;
ClassDiagram.Attribut>> EnumerationDTO.entityid:Integer =>=>=> RelationalSchema.Column>> enumerationdto.entityid;
ClassDiagram.Attribut>> EnumerationDTO.versionnum:int =>=>=> RelationalSchema.Column>> enumerationdto.versionnum;
ClassDiagram.Attribut>> InternationalDescription.id:InternationalDescriptionId =>=>=> RelationalSchema.Column>> internationaldescription.id;
ClassDiagram.Attribut>> InternationalDescription.content:String =>=>=> RelationalSchema.Column>> internationaldescription.content;
ClassDiagram.Attribut>> CurrencyExchangeDTO.id:int =>=>=> RelationalSchema.Column>> currencyexchangedto.id PRIMARY KEY;
ClassDiagram.Attribut>> CurrencyExchangeDTO.GeneratedName:CurrencyDTO =>=>=> RelationalSchema.Column>> currencyexchangedto.GeneratedName;
ClassDiagram.Attribut>> CurrencyExchangeDTO.entityid:Integer =>=>=> RelationalSchema.Column>> currencyexchangedto.entityid;
ClassDiagram.Attribut>> CurrencyExchangeDTO.rate:BigDecimal =>=>=> RelationalSchema.Column>> currencyexchangedto.rate;
ClassDiagram.Attribut>> CurrencyExchangeDTO.validsince:Date =>=>=> RelationalSchema.Column>> currencyexchangedto.validsince;
ClassDiagram.Attribut>> CurrencyExchangeDTO.createtime:Date =>=>=> RelationalSchema.Column>> currencyexchangedto.createtime;
ClassDiagram.Attribut>> CurrencyExchangeDTO.versionnum:int =>=>=> RelationalSchema.Column>> currencyexchangedto.versionnum;
ClassDiagram.Attribut>> EnumerationValueDTO.id:int =>=>=> RelationalSchema.Column>> enumerationvaluedto.id PRIMARY KEY;
ClassDiagram.Attribut>> EnumerationValueDTO.value:String =>=>=> RelationalSchema.Column>> enumerationvaluedto.value;
ClassDiagram.Attribut>> EnumerationValueDTO.versionnum:int =>=>=> RelationalSchema.Column>> enumerationvaluedto.versionnum;
One-To-One relationship between ClassDiagram.Class>>MetaField  to ClassDiagram.Class>>MetaField represented by ClassDiagram.Atrribute>>defaultvalue;
One-To-Many relationship from ClassDiagram.Class>>MetaField  to ClassDiagram.Class>>Set<MetaField>;
Many-To-Many relationship between ClassDiagram.Class>>MetaFieldGroup  and ClassDiagram.Class>>MetaField: metafield_group_meta_field_map(metafield_group_id:MetaFieldGroup [PK] #FK to MetaFieldGroup,meta_field_value_id:MetaField [PK] #FK to MetaField);
Many-To-One relationship from ClassDiagram.Class>>MetaFieldValue  to ClassDiagram.Class>>MetaField represented by ClassDiagram.Atrribute>>field;
One-To-Many relationship from ClassDiagram.Class>>CurrencyDTO  to ClassDiagram.Class>>Set<CurrencyExchangeDTO>;
One-To-Many relationship from ClassDiagram.Class>>EnumerationDTO  to ClassDiagram.Class>>List<EnumerationValueDTO>;
Many-To-One relationship from ClassDiagram.Class>>EnumerationValueDTO  to ClassDiagram.Class>>enumerationdto represented by ClassDiagram.Atrribute>>enumeration;
