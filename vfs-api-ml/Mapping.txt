ClassDiagram.Class>> Payment =>=>=> RelationalSchema.Table>> payment;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Category =>=>=> RelationalSchema.Table>> category;
ClassDiagram.Class>> Product =>=>=> RelationalSchema.Table>> product;
ClassDiagram.Class>> Purchase =>=>=> RelationalSchema.Table>> purchase;
ClassDiagram.Class>> Opinion =>=>=> RelationalSchema.Table>> opinion;
ClassDiagram.Attribut>> Payment.id:Long =>=>=> RelationalSchema.Column>> payment.id PRIMARY KEY;
ClassDiagram.Attribut>> Payment.createat:LocalDateTime =>=>=> RelationalSchema.Column>> payment.createat;
ClassDiagram.Attribut>> Payment.code:String =>=>=> RelationalSchema.Column>> payment.code;
ClassDiagram.Attribut>> Payment.status:PaymentStatus =>=>=> RelationalSchema.Column>> payment.status;
ClassDiagram.Attribut>> User.id:Long =>=>=> RelationalSchema.Column>> user.id PRIMARY KEY;
ClassDiagram.Attribut>> User.login:String =>=>=> RelationalSchema.Column>> user.login;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.createat:LocalDateTime =>=>=> RelationalSchema.Column>> user.createat;
ClassDiagram.Attribut>> Category.id:Long =>=>=> RelationalSchema.Column>> category.id PRIMARY KEY;
ClassDiagram.Attribut>> Category.name:String =>=>=> RelationalSchema.Column>> category.name;
ClassDiagram.Attribut>> Product.id:Long =>=>=> RelationalSchema.Column>> product.id PRIMARY KEY;
ClassDiagram.Attribut>> Product.createat:LocalDateTime =>=>=> RelationalSchema.Column>> product.createat;
ClassDiagram.Attribut>> Product.name:String =>=>=> RelationalSchema.Column>> product.name;
ClassDiagram.Attribut>> Product.description:String =>=>=> RelationalSchema.Column>> product.description;
ClassDiagram.Attribut>> Product.features:List<Feature> =>=>=> RelationalSchema.Column>> product.features;
ClassDiagram.Attribut>> Product.price:BigDecimal =>=>=> RelationalSchema.Column>> product.price;
ClassDiagram.Attribut>> Product.quantity:Integer =>=>=> RelationalSchema.Column>> product.quantity;
ClassDiagram.Attribut>> Product.images:Set<String> =>=>=> RelationalSchema.Column>> product.images;
ClassDiagram.Attribut>> Product.questions:List<Question> =>=>=> RelationalSchema.Column>> product.questions;
ClassDiagram.Attribut>> Purchase.id:Long =>=>=> RelationalSchema.Column>> purchase.id PRIMARY KEY;
ClassDiagram.Attribut>> Purchase.quantity:Integer =>=>=> RelationalSchema.Column>> purchase.quantity;
ClassDiagram.Attribut>> Purchase.gateway:PaymentGateway =>=>=> RelationalSchema.Column>> purchase.gateway;
ClassDiagram.Attribut>> Opinion.id:Long =>=>=> RelationalSchema.Column>> opinion.id PRIMARY KEY;
ClassDiagram.Attribut>> Opinion.title:String =>=>=> RelationalSchema.Column>> opinion.title;
ClassDiagram.Attribut>> Opinion.description:String =>=>=> RelationalSchema.Column>> opinion.description;
ClassDiagram.Attribut>> Opinion.evaluation:Integer =>=>=> RelationalSchema.Column>> opinion.evaluation;
Many-To-One relationship from ClassDiagram.Class>>Payment  to ClassDiagram.Class>>purchase represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Category  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>category represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Product  to ClassDiagram.Class>>List<Opinion>;
Many-To-One relationship from ClassDiagram.Class>>Purchase  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Purchase  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>buyer;
One-To-Many relationship from ClassDiagram.Class>>Purchase  to ClassDiagram.Class>>Set<Payment>;
Many-To-One relationship from ClassDiagram.Class>>Opinion  to ClassDiagram.Class>>product represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Opinion  to ClassDiagram.Class>>user represented by ClassDiagram.Atrribute>>GeneratedName;
