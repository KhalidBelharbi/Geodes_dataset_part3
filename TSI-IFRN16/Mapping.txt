ClassDiagram.Class>> ContactRepository =>=>=> RelationalSchema.Table>> contactrepository;
ClassDiagram.Class>> CardConsumeDetailed =>=>=> RelationalSchema.Table>> cardconsumedetailed;
ClassDiagram.Class>> MovementClassTotal =>=>=> RelationalSchema.Table>> movementclasstotal;
ClassDiagram.Class>> OpenPeriodResult =>=>=> RelationalSchema.Table>> openperiodresult;
ClassDiagram.Class>> OpenPeriodResume =>=>=> RelationalSchema.Table>> openperiodresume;
ClassDiagram.Class>> DailyUse =>=>=> RelationalSchema.Table>> dailyuse;
ClassDiagram.Class>> UseByMovementClass =>=>=> RelationalSchema.Table>> usebymovementclass;
ClassDiagram.Class>> CostCenterTotal =>=>=> RelationalSchema.Table>> costcentertotal;
ClassDiagram.Class>> PeriodResult =>=>=> RelationalSchema.Table>> periodresult;
ClassDiagram.Class>> CardConsume =>=>=> RelationalSchema.Table>> cardconsume;
ClassDiagram.Class>> UseByCostCenter =>=>=> RelationalSchema.Table>> usebycostcenter;
ClassDiagram.Class>> CreditCardInvoice =>=>=> RelationalSchema.Table>> creditcardinvoice;
ClassDiagram.Class>> PeriodMovement =>=>=> RelationalSchema.Table>> periodmovement;
ClassDiagram.Class>> Launch =>=>=> RelationalSchema.Table>> launch;
ClassDiagram.Class>> Movement =>=>=> RelationalSchema.Table>> movement;
ClassDiagram.Class>> FixedMovement =>=>=> RelationalSchema.Table>> fixedmovement;
ClassDiagram.Class>> Payment =>=>=> RelationalSchema.Table>> payment;
ClassDiagram.Class>> Transference =>=>=> RelationalSchema.Table>> transference;
ClassDiagram.Class>> Closing =>=>=> RelationalSchema.Table>> closing;
ClassDiagram.Class>> WalletBalance =>=>=> RelationalSchema.Table>> walletbalance;
ClassDiagram.Class>> Apportionment =>=>=> RelationalSchema.Table>> apportionment;
ClassDiagram.Class>> Configuration =>=>=> RelationalSchema.Table>> configuration;
ClassDiagram.Class>> Authorization =>=>=> RelationalSchema.Table>> authorization;
ClassDiagram.Class>> Group =>=>=> RelationalSchema.Table>> group;
ClassDiagram.Class>> Profile =>=>=> RelationalSchema.Table>> profile;
ClassDiagram.Class>> User =>=>=> RelationalSchema.Table>> user;
ClassDiagram.Class>> Grant =>=>=> RelationalSchema.Table>> grant;
ClassDiagram.Class>> Revision =>=>=> RelationalSchema.Table>> revision;
ClassDiagram.Class>> Card =>=>=> RelationalSchema.Table>> card;
ClassDiagram.Class>> Telephone =>=>=> RelationalSchema.Table>> telephone;
ClassDiagram.Class>> MovementClass =>=>=> RelationalSchema.Table>> movementclass;
ClassDiagram.Class>> FinancialPeriod =>=>=> RelationalSchema.Table>> financialperiod;
ClassDiagram.Class>> Wallet =>=>=> RelationalSchema.Table>> wallet;
ClassDiagram.Class>> Vehicle =>=>=> RelationalSchema.Table>> vehicle;
ClassDiagram.Class>> CostCenter =>=>=> RelationalSchema.Table>> costcenter;
ClassDiagram.Class>> Contact =>=>=> RelationalSchema.Table>> contact;
ClassDiagram.Class>> Fuel =>=>=> RelationalSchema.Table>> fuel;
ClassDiagram.Class>> Refueling =>=>=> RelationalSchema.Table>> refueling;
ClassDiagram.Attribut>> CardConsumeDetailed.cardid:Long =>=>=> RelationalSchema.Column>> cardconsumedetailed.cardid;
ClassDiagram.Attribut>> CardConsumeDetailed.costcenter:String =>=>=> RelationalSchema.Column>> cardconsumedetailed.costcenter;
ClassDiagram.Attribut>> CardConsumeDetailed.movementclass:String =>=>=> RelationalSchema.Column>> cardconsumedetailed.movementclass;
ClassDiagram.Attribut>> CardConsumeDetailed.value:BigDecimal =>=>=> RelationalSchema.Column>> cardconsumedetailed.value;
ClassDiagram.Attribut>> MovementClassTotal.financialperiodid:Long =>=>=> RelationalSchema.Column>> movementclasstotal.financialperiodid;
ClassDiagram.Attribut>> MovementClassTotal.financialperiod:String =>=>=> RelationalSchema.Column>> movementclasstotal.financialperiod;
ClassDiagram.Attribut>> MovementClassTotal.direction:MovementClassType =>=>=> RelationalSchema.Column>> movementclasstotal.direction;
ClassDiagram.Attribut>> MovementClassTotal.costcenterid:Long =>=>=> RelationalSchema.Column>> movementclasstotal.costcenterid;
ClassDiagram.Attribut>> MovementClassTotal.costcenter:String =>=>=> RelationalSchema.Column>> movementclasstotal.costcenter;
ClassDiagram.Attribut>> MovementClassTotal.costcenter:Color =>=>=> RelationalSchema.Column>> movementclasstotal.costcenter;
ClassDiagram.Attribut>> MovementClassTotal.movementclassid:Long =>=>=> RelationalSchema.Column>> movementclasstotal.movementclassid;
ClassDiagram.Attribut>> MovementClassTotal.movementclass:Long =>=>=> RelationalSchema.Column>> movementclasstotal.movementclass;
ClassDiagram.Attribut>> MovementClassTotal.totalvalue:BigDecimal =>=>=> RelationalSchema.Column>> movementclasstotal.totalvalue;
ClassDiagram.Attribut>> OpenPeriodResult.financialperiodid:Long =>=>=> RelationalSchema.Column>> openperiodresult.financialperiodid;
ClassDiagram.Attribut>> OpenPeriodResult.financialperiod:String =>=>=> RelationalSchema.Column>> openperiodresult.financialperiod;
ClassDiagram.Attribut>> OpenPeriodResult.expired:boolean =>=>=> RelationalSchema.Column>> openperiodresult.expired;
ClassDiagram.Attribut>> OpenPeriodResult.revenues:BigDecimal =>=>=> RelationalSchema.Column>> openperiodresult.revenues;
ClassDiagram.Attribut>> OpenPeriodResult.expenses:BigDecimal =>=>=> RelationalSchema.Column>> openperiodresult.expenses;
ClassDiagram.Attribut>> OpenPeriodResult.balance:BigDecimal =>=>=> RelationalSchema.Column>> openperiodresult.balance;
ClassDiagram.Attribut>> OpenPeriodResume.revenues:BigDecimal =>=>=> RelationalSchema.Column>> openperiodresume.revenues;
ClassDiagram.Attribut>> OpenPeriodResume.expenses:BigDecimal =>=>=> RelationalSchema.Column>> openperiodresume.expenses;
ClassDiagram.Attribut>> OpenPeriodResume.cashexpenses:BigDecimal =>=>=> RelationalSchema.Column>> openperiodresume.cashexpenses;
ClassDiagram.Attribut>> OpenPeriodResume.creditcardexpenses:BigDecimal =>=>=> RelationalSchema.Column>> openperiodresume.creditcardexpenses;
ClassDiagram.Attribut>> OpenPeriodResume.debitcardexpenses:BigDecimal =>=>=> RelationalSchema.Column>> openperiodresume.debitcardexpenses;
ClassDiagram.Attribut>> OpenPeriodResume.movementsopen:BigDecimal =>=>=> RelationalSchema.Column>> openperiodresume.movementsopen;
ClassDiagram.Attribut>> OpenPeriodResume.balance:BigDecimal =>=>=> RelationalSchema.Column>> openperiodresume.balance;
ClassDiagram.Attribut>> OpenPeriodResume.creditcardgoal:BigDecimal =>=>=> RelationalSchema.Column>> openperiodresume.creditcardgoal;
ClassDiagram.Attribut>> OpenPeriodResume.expensesgoal:BigDecimal =>=>=> RelationalSchema.Column>> openperiodresume.expensesgoal;
ClassDiagram.Attribut>> OpenPeriodResume.revenuesgoal:BigDecimal =>=>=> RelationalSchema.Column>> openperiodresume.revenuesgoal;
ClassDiagram.Attribut>> OpenPeriodResume.accumulated:BigDecimal =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> DailyUse.financialperiodid:Long =>=>=> RelationalSchema.Column>> dailyuse.financialperiodid;
ClassDiagram.Attribut>> DailyUse.financialperiod:String =>=>=> RelationalSchema.Column>> dailyuse.financialperiod;
ClassDiagram.Attribut>> DailyUse.paymentdate:LocalDate =>=>=> RelationalSchema.Column>> dailyuse.paymentdate;
ClassDiagram.Attribut>> DailyUse.direction:MovementClassType =>=>=> RelationalSchema.Column>> dailyuse.direction;
ClassDiagram.Attribut>> DailyUse.value:BigDecimal =>=>=> RelationalSchema.Column>> dailyuse.value;
ClassDiagram.Attribut>> UseByMovementClass.financialperiodid:Long =>=>=> RelationalSchema.Column>> usebymovementclass.financialperiodid;
ClassDiagram.Attribut>> UseByMovementClass.financialperiod:String =>=>=> RelationalSchema.Column>> usebymovementclass.financialperiod;
ClassDiagram.Attribut>> UseByMovementClass.costcenter:Color =>=>=> RelationalSchema.Column>> usebymovementclass.costcenter;
ClassDiagram.Attribut>> UseByMovementClass.costcenterid:Long =>=>=> RelationalSchema.Column>> usebymovementclass.costcenterid;
ClassDiagram.Attribut>> UseByMovementClass.costcenter:String =>=>=> RelationalSchema.Column>> usebymovementclass.costcenter;
ClassDiagram.Attribut>> UseByMovementClass.movementclassid:Long =>=>=> RelationalSchema.Column>> usebymovementclass.movementclassid;
ClassDiagram.Attribut>> UseByMovementClass.movementclass:String =>=>=> RelationalSchema.Column>> usebymovementclass.movementclass;
ClassDiagram.Attribut>> UseByMovementClass.direction:MovementClassType =>=>=> RelationalSchema.Column>> usebymovementclass.direction;
ClassDiagram.Attribut>> UseByMovementClass.value:BigDecimal =>=>=> RelationalSchema.Column>> usebymovementclass.value;
ClassDiagram.Attribut>> CostCenterTotal.direction:MovementClassType =>=>=> RelationalSchema.Column>> costcentertotal.direction;
ClassDiagram.Attribut>> CostCenterTotal.costcenterid:Long =>=>=> RelationalSchema.Column>> costcentertotal.costcenterid;
ClassDiagram.Attribut>> CostCenterTotal.costcenter:String =>=>=> RelationalSchema.Column>> costcentertotal.costcenter;
ClassDiagram.Attribut>> CostCenterTotal.costcenter:Color =>=>=> RelationalSchema.Column>> costcentertotal.costcenter;
ClassDiagram.Attribut>> CostCenterTotal.value:BigDecimal =>=>=> RelationalSchema.Column>> costcentertotal.value;
ClassDiagram.Attribut>> PeriodResult.financialperiodid:Long =>=>=> RelationalSchema.Column>> periodresult.financialperiodid;
ClassDiagram.Attribut>> PeriodResult.financialperiod:String =>=>=> RelationalSchema.Column>> periodresult.financialperiod;
ClassDiagram.Attribut>> PeriodResult.revenues:BigDecimal =>=>=> RelationalSchema.Column>> periodresult.revenues;
ClassDiagram.Attribut>> PeriodResult.expenses:BigDecimal =>=>=> RelationalSchema.Column>> periodresult.expenses;
ClassDiagram.Attribut>> PeriodResult.balance:BigDecimal =>=>=> RelationalSchema.Column>> periodresult.balance;
ClassDiagram.Attribut>> CardConsume.cardid:Long =>=>=> RelationalSchema.Column>> cardconsume.cardid;
ClassDiagram.Attribut>> CardConsume.costcenter:Color =>=>=> RelationalSchema.Column>> cardconsume.costcenter;
ClassDiagram.Attribut>> CardConsume.costcenter:String =>=>=> RelationalSchema.Column>> cardconsume.costcenter;
ClassDiagram.Attribut>> CardConsume.value:BigDecimal =>=>=> RelationalSchema.Column>> cardconsume.value;
ClassDiagram.Attribut>> UseByCostCenter.financialperiodid:Long =>=>=> RelationalSchema.Column>> usebycostcenter.financialperiodid;
ClassDiagram.Attribut>> UseByCostCenter.financialperiod:String =>=>=> RelationalSchema.Column>> usebycostcenter.financialperiod;
ClassDiagram.Attribut>> UseByCostCenter.costcenter:Color =>=>=> RelationalSchema.Column>> usebycostcenter.costcenter;
ClassDiagram.Attribut>> UseByCostCenter.costcenter:String =>=>=> RelationalSchema.Column>> usebycostcenter.costcenter;
ClassDiagram.Attribut>> UseByCostCenter.direction:MovementClassType =>=>=> RelationalSchema.Column>> usebycostcenter.direction;
ClassDiagram.Attribut>> UseByCostCenter.value:BigDecimal =>=>=> RelationalSchema.Column>> usebycostcenter.value;
ClassDiagram.Attribut>> CreditCardInvoice.identification:String =>=>=> RelationalSchema.Column>> creditcardinvoice.identification;
ClassDiagram.Attribut>> CreditCardInvoice.totalvalue:BigDecimal =>=>=> RelationalSchema.Column>> creditcardinvoice.totalvalue;
ClassDiagram.Attribut>> CreditCardInvoice.duedate:LocalDate =>=>=> RelationalSchema.Column>> creditcardinvoice.duedate;
ClassDiagram.Attribut>> CreditCardInvoice.closingdate:LocalDate =>=>=> RelationalSchema.Column>> creditcardinvoice.closingdate;
ClassDiagram.Attribut>> CreditCardInvoice.paymentdate:LocalDate =>=>=> RelationalSchema.Column>> creditcardinvoice.paymentdate;
ClassDiagram.Attribut>> CreditCardInvoice.GeneratedName:InvoiceState =>=>=> RelationalSchema.Column>> creditcardinvoice.GeneratedName;
ClassDiagram.Attribut>> PeriodMovement.duedate:LocalDate =>=>=> RelationalSchema.Column>> periodmovement.duedate;
ClassDiagram.Attribut>> PeriodMovement.GeneratedName:PeriodMovementState =>=>=> RelationalSchema.Column>> periodmovement.GeneratedName;
ClassDiagram.Attribut>> PeriodMovement.GeneratedName:PeriodMovementType =>=>=> RelationalSchema.Column>> periodmovement.GeneratedName;
ClassDiagram.Attribut>> PeriodMovement./***usedatthecreditcardinvoicetomarkthemovementandhelptheusertochecktheinvoice*/checked:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Launch.code:String =>=>=> RelationalSchema.Column>> launch.code;
ClassDiagram.Attribut>> Launch.quotenumber:Integer =>=>=> RelationalSchema.Column>> launch.quotenumber;
ClassDiagram.Attribut>> Movement.code:String =>=>=> RelationalSchema.Column>> movement.code;
ClassDiagram.Attribut>> Movement.identification:String =>=>=> RelationalSchema.Column>> movement.identification;
ClassDiagram.Attribut>> Movement.description:String =>=>=> RelationalSchema.Column>> movement.description;
ClassDiagram.Attribut>> Movement.value:BigDecimal =>=>=> RelationalSchema.Column>> movement.value;
ClassDiagram.Attribut>> Movement.deletedapportionments:Set<Apportionment> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> FixedMovement.totalquotes:Integer =>=>=> RelationalSchema.Column>> fixedmovement.totalquotes;
ClassDiagram.Attribut>> FixedMovement.startingquote:Integer =>=>=> RelationalSchema.Column>> fixedmovement.startingquote;
ClassDiagram.Attribut>> FixedMovement.actualquote:Integer =>=>=> RelationalSchema.Column>> fixedmovement.actualquote;
ClassDiagram.Attribut>> FixedMovement.autolaunch:boolean =>=>=> RelationalSchema.Column>> fixedmovement.autolaunch;
ClassDiagram.Attribut>> FixedMovement.undetermined:boolean =>=>=> RelationalSchema.Column>> fixedmovement.undetermined;
ClassDiagram.Attribut>> FixedMovement.startdate:LocalDate =>=>=> RelationalSchema.Column>> fixedmovement.startdate;
ClassDiagram.Attribut>> FixedMovement.GeneratedName:FixedMovementState =>=>=> RelationalSchema.Column>> fixedmovement.GeneratedName;
ClassDiagram.Attribut>> FixedMovement.alreadylaunched:boolean =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Payment.paidon:LocalDate =>=>=> RelationalSchema.Column>> payment.paidon;
ClassDiagram.Attribut>> Payment.discount:BigDecimal =>=>=> RelationalSchema.Column>> payment.discount;
ClassDiagram.Attribut>> Payment.paidvalue:BigDecimal =>=>=> RelationalSchema.Column>> payment.paidvalue;
ClassDiagram.Attribut>> Payment.GeneratedName:PaymentMethod =>=>=> RelationalSchema.Column>> payment.GeneratedName;
ClassDiagram.Attribut>> Transference.value:BigDecimal =>=>=> RelationalSchema.Column>> transference.value;
ClassDiagram.Attribut>> Transference.transferdate:LocalDate =>=>=> RelationalSchema.Column>> transference.transferdate;
ClassDiagram.Attribut>> Transference.description:String =>=>=> RelationalSchema.Column>> transference.description;
ClassDiagram.Attribut>> Closing.revenues:BigDecimal =>=>=> RelationalSchema.Column>> closing.revenues;
ClassDiagram.Attribut>> Closing.expenses:BigDecimal =>=>=> RelationalSchema.Column>> closing.expenses;
ClassDiagram.Attribut>> Closing.creditcardexpenses:BigDecimal =>=>=> RelationalSchema.Column>> closing.creditcardexpenses;
ClassDiagram.Attribut>> Closing.debitcardexpenses:BigDecimal =>=>=> RelationalSchema.Column>> closing.debitcardexpenses;
ClassDiagram.Attribut>> Closing.cashexpenses:BigDecimal =>=>=> RelationalSchema.Column>> closing.cashexpenses;
ClassDiagram.Attribut>> Closing.balance:BigDecimal =>=>=> RelationalSchema.Column>> closing.balance;
ClassDiagram.Attribut>> Closing.accumulated:BigDecimal =>=>=> RelationalSchema.Column>> closing.accumulated;
ClassDiagram.Attribut>> Closing.closingdate:LocalDate =>=>=> RelationalSchema.Column>> closing.closingdate;
ClassDiagram.Attribut>> WalletBalance.actualbalance:BigDecimal =>=>=> RelationalSchema.Column>> walletbalance.actualbalance;
ClassDiagram.Attribut>> WalletBalance.oldbalance:BigDecimal =>=>=> RelationalSchema.Column>> walletbalance.oldbalance;
ClassDiagram.Attribut>> WalletBalance.transactionvalue:BigDecimal =>=>=> RelationalSchema.Column>> walletbalance.transactionvalue;
ClassDiagram.Attribut>> WalletBalance.movementcode:String =>=>=> RelationalSchema.Column>> walletbalance.movementcode;
ClassDiagram.Attribut>> WalletBalance.observations:String =>=>=> RelationalSchema.Column>> walletbalance.observations;
ClassDiagram.Attribut>> WalletBalance.movementdatetime:LocalDateTime =>=>=> RelationalSchema.Column>> walletbalance.movementdatetime;
ClassDiagram.Attribut>> WalletBalance.GeneratedName:BalanceType =>=>=> RelationalSchema.Column>> walletbalance.GeneratedName;
ClassDiagram.Attribut>> WalletBalance.GeneratedName:ReasonType =>=>=> RelationalSchema.Column>> walletbalance.GeneratedName;
ClassDiagram.Attribut>> Apportionment.code:String =>=>=> RelationalSchema.Column>> apportionment.code;
ClassDiagram.Attribut>> Apportionment.value:BigDecimal =>=>=> RelationalSchema.Column>> apportionment.value;
ClassDiagram.Attribut>> Authorization.functionality:String =>=>=> RelationalSchema.Column>> authorization.functionality;
ClassDiagram.Attribut>> Authorization.permission:String =>=>=> RelationalSchema.Column>> authorization.permission;
ClassDiagram.Attribut>> Group.name:String =>=>=> RelationalSchema.Column>> group.name;
ClassDiagram.Attribut>> Group.active:boolean =>=>=> RelationalSchema.Column>> group.active;
ClassDiagram.Attribut>> Profile.activetheme:ThemeType =>=>=> RelationalSchema.Column>> profile.activetheme;
ClassDiagram.Attribut>> Profile.userdarksidebar:boolean =>=>=> RelationalSchema.Column>> profile.userdarksidebar;
ClassDiagram.Attribut>> Profile.showwalletbalances:boolean =>=>=> RelationalSchema.Column>> profile.showwalletbalances;
ClassDiagram.Attribut>> User.name:String =>=>=> RelationalSchema.Column>> user.name;
ClassDiagram.Attribut>> User.email:String =>=>=> RelationalSchema.Column>> user.email;
ClassDiagram.Attribut>> User.username:String =>=>=> RelationalSchema.Column>> user.username;
ClassDiagram.Attribut>> User.password:String =>=>=> RelationalSchema.Column>> user.password;
ClassDiagram.Attribut>> User.active:boolean =>=>=> RelationalSchema.Column>> user.active;
ClassDiagram.Attribut>> User.GeneratedName:StoreType =>=>=> RelationalSchema.Column>> user.GeneratedName;
ClassDiagram.Attribut>> User.passwordconfirmation:String =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Revision.id:Long =>=>=> RelationalSchema.Column>> revision.id PRIMARY KEY;
ClassDiagram.Attribut>> Revision.createdon:Date =>=>=> RelationalSchema.Column>> revision.createdon;
ClassDiagram.Attribut>> Revision.createdby:String =>=>=> RelationalSchema.Column>> revision.createdby;
ClassDiagram.Attribut>> Card.name:String =>=>=> RelationalSchema.Column>> card.name;
ClassDiagram.Attribut>> Card.number:String =>=>=> RelationalSchema.Column>> card.number;
ClassDiagram.Attribut>> Card.flag:String =>=>=> RelationalSchema.Column>> card.flag;
ClassDiagram.Attribut>> Card.creditlimit:BigDecimal =>=>=> RelationalSchema.Column>> card.creditlimit;
ClassDiagram.Attribut>> Card.expirationday:Integer =>=>=> RelationalSchema.Column>> card.expirationday;
ClassDiagram.Attribut>> Card.owner:String =>=>=> RelationalSchema.Column>> card.owner;
ClassDiagram.Attribut>> Card.active:boolean =>=>=> RelationalSchema.Column>> card.active;
ClassDiagram.Attribut>> Card.GeneratedName:CardType =>=>=> RelationalSchema.Column>> card.GeneratedName;
ClassDiagram.Attribut>> Telephone.number:String =>=>=> RelationalSchema.Column>> telephone.number;
ClassDiagram.Attribut>> Telephone.GeneratedName:NumberType =>=>=> RelationalSchema.Column>> telephone.GeneratedName;
ClassDiagram.Attribut>> MovementClass.name:String =>=>=> RelationalSchema.Column>> movementclass.name;
ClassDiagram.Attribut>> MovementClass.budget:BigDecimal =>=>=> RelationalSchema.Column>> movementclass.budget;
ClassDiagram.Attribut>> MovementClass.active:boolean =>=>=> RelationalSchema.Column>> movementclass.active;
ClassDiagram.Attribut>> MovementClass.GeneratedName:MovementClassType =>=>=> RelationalSchema.Column>> movementclass.GeneratedName;
ClassDiagram.Attribut>> MovementClass.totalmovements:BigDecimal =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> FinancialPeriod.identification:String =>=>=> RelationalSchema.Column>> financialperiod.identification;
ClassDiagram.Attribut>> FinancialPeriod.creditcardgoal:BigDecimal =>=>=> RelationalSchema.Column>> financialperiod.creditcardgoal;
ClassDiagram.Attribut>> FinancialPeriod.expensesgoal:BigDecimal =>=>=> RelationalSchema.Column>> financialperiod.expensesgoal;
ClassDiagram.Attribut>> FinancialPeriod.revenuesgoal:BigDecimal =>=>=> RelationalSchema.Column>> financialperiod.revenuesgoal;
ClassDiagram.Attribut>> FinancialPeriod.start:LocalDate =>=>=> RelationalSchema.Column>> financialperiod.start;
ClassDiagram.Attribut>> FinancialPeriod.end:LocalDate =>=>=> RelationalSchema.Column>> financialperiod.end;
ClassDiagram.Attribut>> FinancialPeriod.closed:boolean =>=>=> RelationalSchema.Column>> financialperiod.closed;
ClassDiagram.Attribut>> FinancialPeriod.expired:boolean =>=>=> RelationalSchema.Column>> financialperiod.expired;
ClassDiagram.Attribut>> Wallet.name:String =>=>=> RelationalSchema.Column>> wallet.name;
ClassDiagram.Attribut>> Wallet.bank:String =>=>=> RelationalSchema.Column>> wallet.bank;
ClassDiagram.Attribut>> Wallet.agency:String =>=>=> RelationalSchema.Column>> wallet.agency;
ClassDiagram.Attribut>> Wallet.account:String =>=>=> RelationalSchema.Column>> wallet.account;
ClassDiagram.Attribut>> Wallet.digit:String =>=>=> RelationalSchema.Column>> wallet.digit;
ClassDiagram.Attribut>> Wallet.description:String =>=>=> RelationalSchema.Column>> wallet.description;
ClassDiagram.Attribut>> Wallet.actualbalance:BigDecimal =>=>=> RelationalSchema.Column>> wallet.actualbalance;
ClassDiagram.Attribut>> Wallet.active:boolean =>=>=> RelationalSchema.Column>> wallet.active;
ClassDiagram.Attribut>> Wallet.GeneratedName:WalletType =>=>=> RelationalSchema.Column>> wallet.GeneratedName;
ClassDiagram.Attribut>> Vehicle.identification:String =>=>=> RelationalSchema.Column>> vehicle.identification;
ClassDiagram.Attribut>> Vehicle.brand:String =>=>=> RelationalSchema.Column>> vehicle.brand;
ClassDiagram.Attribut>> Vehicle.model:String =>=>=> RelationalSchema.Column>> vehicle.model;
ClassDiagram.Attribut>> Vehicle.licenseplate:String =>=>=> RelationalSchema.Column>> vehicle.licenseplate;
ClassDiagram.Attribut>> Vehicle.modelyear:Integer =>=>=> RelationalSchema.Column>> vehicle.modelyear;
ClassDiagram.Attribut>> Vehicle.manufacturingyear:Integer =>=>=> RelationalSchema.Column>> vehicle.manufacturingyear;
ClassDiagram.Attribut>> Vehicle.odometer:Long =>=>=> RelationalSchema.Column>> vehicle.odometer;
ClassDiagram.Attribut>> Vehicle.fuelcapacity:Integer =>=>=> RelationalSchema.Column>> vehicle.fuelcapacity;
ClassDiagram.Attribut>> Vehicle.active:boolean =>=>=> RelationalSchema.Column>> vehicle.active;
ClassDiagram.Attribut>> Vehicle.GeneratedName:VehicleType =>=>=> RelationalSchema.Column>> vehicle.GeneratedName;
ClassDiagram.Attribut>> CostCenter.name:String =>=>=> RelationalSchema.Column>> costcenter.name;
ClassDiagram.Attribut>> CostCenter.GeneratedName:Color =>=>=> RelationalSchema.Column>> costcenter.GeneratedName;
ClassDiagram.Attribut>> CostCenter.expensesbudget:BigDecimal =>=>=> RelationalSchema.Column>> costcenter.expensesbudget;
ClassDiagram.Attribut>> CostCenter.revenuesbudget:BigDecimal =>=>=> RelationalSchema.Column>> costcenter.revenuesbudget;
ClassDiagram.Attribut>> CostCenter.description:String =>=>=> RelationalSchema.Column>> costcenter.description;
ClassDiagram.Attribut>> CostCenter.active:boolean =>=>=> RelationalSchema.Column>> costcenter.active;
ClassDiagram.Attribut>> CostCenter.percentage:BigDecimal =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> CostCenter.totalmovements:BigDecimal =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Contact.code:String =>=>=> RelationalSchema.Column>> contact.code;
ClassDiagram.Attribut>> Contact.name:String =>=>=> RelationalSchema.Column>> contact.name;
ClassDiagram.Attribut>> Contact.document:String =>=>=> RelationalSchema.Column>> contact.document;
ClassDiagram.Attribut>> Contact.birthdate:LocalDate =>=>=> RelationalSchema.Column>> contact.birthdate;
ClassDiagram.Attribut>> Contact.otherinformation:String =>=>=> RelationalSchema.Column>> contact.otherinformation;
ClassDiagram.Attribut>> Contact.zipcode:String =>=>=> RelationalSchema.Column>> contact.zipcode;
ClassDiagram.Attribut>> Contact.street:String =>=>=> RelationalSchema.Column>> contact.street;
ClassDiagram.Attribut>> Contact.number:String =>=>=> RelationalSchema.Column>> contact.number;
ClassDiagram.Attribut>> Contact.complement:String =>=>=> RelationalSchema.Column>> contact.complement;
ClassDiagram.Attribut>> Contact.neighborhood:String =>=>=> RelationalSchema.Column>> contact.neighborhood;
ClassDiagram.Attribut>> Contact.province:String =>=>=> RelationalSchema.Column>> contact.province;
ClassDiagram.Attribut>> Contact.city:String =>=>=> RelationalSchema.Column>> contact.city;
ClassDiagram.Attribut>> Contact.email:String =>=>=> RelationalSchema.Column>> contact.email;
ClassDiagram.Attribut>> Contact.active:boolean =>=>=> RelationalSchema.Column>> contact.active;
ClassDiagram.Attribut>> Contact.GeneratedName:ContactType =>=>=> RelationalSchema.Column>> contact.GeneratedName;
ClassDiagram.Attribut>> Contact.deletedtelephones:List<Telephone> =>=>=> NOT MAPPED -Explanation: Transient Field ;
ClassDiagram.Attribut>> Fuel.liters:BigDecimal =>=>=> RelationalSchema.Column>> fuel.liters;
ClassDiagram.Attribut>> Fuel.valueperliter:BigDecimal =>=>=> RelationalSchema.Column>> fuel.valueperliter;
ClassDiagram.Attribut>> Fuel.GeneratedName:FuelType =>=>=> RelationalSchema.Column>> fuel.GeneratedName;
ClassDiagram.Attribut>> Refueling.code:String =>=>=> RelationalSchema.Column>> refueling.code;
ClassDiagram.Attribut>> Refueling.accounted:boolean =>=>=> RelationalSchema.Column>> refueling.accounted;
ClassDiagram.Attribut>> Refueling.accountedby:String =>=>=> RelationalSchema.Column>> refueling.accountedby;
ClassDiagram.Attribut>> Refueling.firstrefueling:boolean =>=>=> RelationalSchema.Column>> refueling.firstrefueling;
ClassDiagram.Attribut>> Refueling.fulltank:boolean =>=>=> RelationalSchema.Column>> refueling.fulltank;
ClassDiagram.Attribut>> Refueling.odometer:Long =>=>=> RelationalSchema.Column>> refueling.odometer;
ClassDiagram.Attribut>> Refueling.distance:Long =>=>=> RelationalSchema.Column>> refueling.distance;
ClassDiagram.Attribut>> Refueling.averageconsumption:BigDecimal =>=>=> RelationalSchema.Column>> refueling.averageconsumption;
ClassDiagram.Attribut>> Refueling.liters:BigDecimal =>=>=> RelationalSchema.Column>> refueling.liters;
ClassDiagram.Attribut>> Refueling.cost:BigDecimal =>=>=> RelationalSchema.Column>> refueling.cost;
ClassDiagram.Attribut>> Refueling.costperliter:BigDecimal =>=>=> RelationalSchema.Column>> refueling.costperliter;
ClassDiagram.Attribut>> Refueling.place:String =>=>=> RelationalSchema.Column>> refueling.place;
ClassDiagram.Attribut>> Refueling.eventdate:LocalDate =>=>=> RelationalSchema.Column>> refueling.eventdate;
Many-To-One relationship from ClassDiagram.Class>>CreditCardInvoice  to ClassDiagram.Class>>card represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CreditCardInvoice  to ClassDiagram.Class>>financialperiod represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>CreditCardInvoice  to ClassDiagram.Class>>periodmovement represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>CreditCardInvoice  to ClassDiagram.Class>>List<PeriodMovement>;
One-To-One relationship between ClassDiagram.Class>>PeriodMovement  to ClassDiagram.Class>>payment represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>PeriodMovement  to ClassDiagram.Class>>creditcardinvoice represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>PeriodMovement  to ClassDiagram.Class>>financialperiod represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Launch  to ClassDiagram.Class>>financialperiod represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Launch  to ClassDiagram.Class>>fixedmovement represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Launch  to ClassDiagram.Class>>periodmovement represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Movement  to ClassDiagram.Class>>contact represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Movement  to ClassDiagram.Class>>Set<Apportionment>;
Many-To-One relationship from ClassDiagram.Class>>Payment  to ClassDiagram.Class>>card represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Payment  to ClassDiagram.Class>>wallet represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Transference  to ClassDiagram.Class>>wallet represented by ClassDiagram.Atrribute>>origin;
Many-To-One relationship from ClassDiagram.Class>>Transference  to ClassDiagram.Class>>wallet represented by ClassDiagram.Atrribute>>destination;
One-To-One relationship between ClassDiagram.Class>>Closing  to ClassDiagram.Class>>financialperiod represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>WalletBalance  to ClassDiagram.Class>>wallet represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Apportionment  to ClassDiagram.Class>>movement represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Apportionment  to ClassDiagram.Class>>costcenter represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Apportionment  to ClassDiagram.Class>>movementclass represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Configuration  to ClassDiagram.Class>>movementclass represented by ClassDiagram.Atrribute>>creditcardclass;
Many-To-One relationship from ClassDiagram.Class>>Group  to ClassDiagram.Class>>group represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>Group  to ClassDiagram.Class>>List<Grant>;
One-To-One relationship between ClassDiagram.Class>>User  to ClassDiagram.Class>>profile represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>User  to ClassDiagram.Class>>group represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Grant  to ClassDiagram.Class>>group represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Grant  to ClassDiagram.Class>>authorization represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Card  to ClassDiagram.Class>>wallet represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Telephone  to ClassDiagram.Class>>contact represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>MovementClass  to ClassDiagram.Class>>costcenter represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>FinancialPeriod  to ClassDiagram.Class>>closing represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Vehicle  to ClassDiagram.Class>>costcenter represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CostCenter  to ClassDiagram.Class>>costcenter represented by ClassDiagram.Atrribute>>parent;
One-To-Many relationship from ClassDiagram.Class>>Contact  to ClassDiagram.Class>>List<Telephone>;
Many-To-One relationship from ClassDiagram.Class>>Fuel  to ClassDiagram.Class>>refueling represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Refueling  to ClassDiagram.Class>>periodmovement represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Refueling  to ClassDiagram.Class>>vehicle represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Refueling  to ClassDiagram.Class>>movementclass represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Refueling  to ClassDiagram.Class>>financialperiod represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Refueling  to ClassDiagram.Class>>List<Fuel>;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>Movement   Descriminator>>discriminator_value: String ;
