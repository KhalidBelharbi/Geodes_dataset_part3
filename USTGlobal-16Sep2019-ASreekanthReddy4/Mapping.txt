ClassDiagram.Class>> Pensil =>=>=> RelationalSchema.Table>> pensil;
ClassDiagram.Class>> PensilBox =>=>=> RelationalSchema.Table>> pensilbox;
ClassDiagram.Class>> VoterCard =>=>=> RelationalSchema.Table>> votercard;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> ProductInfo =>=>=> RelationalSchema.Table>> productinfo;
ClassDiagram.Class>> Student =>=>=> RelationalSchema.Table>> student;
ClassDiagram.Class>> Course =>=>=> RelationalSchema.Table>> course;
ClassDiagram.Attribut>> Pensil.pid:int =>=>=> RelationalSchema.Column>> pensil.pid PRIMARY KEY;
ClassDiagram.Attribut>> Pensil.color:String =>=>=> RelationalSchema.Column>> pensil.color;
ClassDiagram.Attribut>> PensilBox.bid:int =>=>=> RelationalSchema.Column>> pensilbox.bid PRIMARY KEY;
ClassDiagram.Attribut>> PensilBox.bname:String =>=>=> RelationalSchema.Column>> pensilbox.bname;
ClassDiagram.Attribut>> VoterCard.vid:int =>=>=> RelationalSchema.Column>> votercard.vid PRIMARY KEY;
ClassDiagram.Attribut>> VoterCard.name:String =>=>=> RelationalSchema.Column>> votercard.name;
ClassDiagram.Attribut>> Person.pid:int =>=>=> RelationalSchema.Column>> person.pid PRIMARY KEY;
ClassDiagram.Attribut>> Person.pname:String =>=>=> RelationalSchema.Column>> person.pname;
ClassDiagram.Attribut>> ProductInfo.pid:int =>=>=> RelationalSchema.Column>> productinfo.pid PRIMARY KEY;
ClassDiagram.Attribut>> ProductInfo.pname:String =>=>=> RelationalSchema.Column>> productinfo.pname;
ClassDiagram.Attribut>> ProductInfo.quantity:int =>=>=> RelationalSchema.Column>> productinfo.quantity;
ClassDiagram.Attribut>> Student.sid:int =>=>=> RelationalSchema.Column>> student.sid PRIMARY KEY;
ClassDiagram.Attribut>> Student.sname:String =>=>=> RelationalSchema.Column>> student.sname;
ClassDiagram.Attribut>> Course.cid:int =>=>=> RelationalSchema.Column>> course.cid PRIMARY KEY;
ClassDiagram.Attribut>> Course.name:String =>=>=> RelationalSchema.Column>> course.name;
Many-To-One relationship from ClassDiagram.Class>>Pensil  to ClassDiagram.Class>>Pensil represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>PensilBox  to ClassDiagram.Class>>List<Pensil>;
One-To-One relationship between ClassDiagram.Class>>VoterCard  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>votercard represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-Many relationship between ClassDiagram.Class>>Student  and ClassDiagram.Class>>list<course>: student_course(sid:Student [PK] #FK to Student,cid:list<course> [PK] #FK to list<course>);
