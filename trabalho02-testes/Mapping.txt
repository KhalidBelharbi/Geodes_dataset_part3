ClassDiagram.Class>> Usuario =>=>=> RelationalSchema.Table>> usuario;
ClassDiagram.Class>> Cartao =>=>=> RelationalSchema.Table>> cartao;
ClassDiagram.Class>> Regra =>=>=> RelationalSchema.Table>> regra;
ClassDiagram.Class>> Cliente =>=>=> RelationalSchema.Table>> cliente;
ClassDiagram.Class>> Transacao =>=>=> RelationalSchema.Table>> transacao;
ClassDiagram.Attribut>> Usuario.serialversionuid:long =>=>=> RelationalSchema.Column>> usuario.serialversionuid;
ClassDiagram.Attribut>> Usuario.id:int =>=>=> RelationalSchema.Column>> usuario.id PRIMARY KEY;
ClassDiagram.Attribut>> Usuario.nome:String =>=>=> RelationalSchema.Column>> usuario.nome;
ClassDiagram.Attribut>> Usuario.cpf:String =>=>=> RelationalSchema.Column>> usuario.cpf;
ClassDiagram.Attribut>> Usuario.senha:String =>=>=> RelationalSchema.Column>> usuario.senha;
ClassDiagram.Attribut>> Usuario.ativo:boolean =>=>=> RelationalSchema.Column>> usuario.ativo;
ClassDiagram.Attribut>> Cartao.serialversionuid:long =>=>=> RelationalSchema.Column>> cartao.serialversionuid;
ClassDiagram.Attribut>> Cartao.id:int =>=>=> RelationalSchema.Column>> cartao.id PRIMARY KEY;
ClassDiagram.Attribut>> Cartao.numero:String =>=>=> RelationalSchema.Column>> cartao.numero;
ClassDiagram.Attribut>> Cartao.datavalidade:Date =>=>=> RelationalSchema.Column>> cartao.datavalidade;
ClassDiagram.Attribut>> Cartao.bloqueado:boolean =>=>=> RelationalSchema.Column>> cartao.bloqueado;
ClassDiagram.Attribut>> Cartao.dataatualizacao:Date =>=>=> RelationalSchema.Column>> cartao.dataatualizacao;
ClassDiagram.Attribut>> Regra.serialversionuid:long =>=>=> RelationalSchema.Column>> regra.serialversionuid;
ClassDiagram.Attribut>> Regra.id:int =>=>=> RelationalSchema.Column>> regra.id PRIMARY KEY;
ClassDiagram.Attribut>> Regra.nome:String =>=>=> RelationalSchema.Column>> regra.nome;
ClassDiagram.Attribut>> Regra.descricao:String =>=>=> RelationalSchema.Column>> regra.descricao;
ClassDiagram.Attribut>> Regra.ativo:boolean =>=>=> RelationalSchema.Column>> regra.ativo;
ClassDiagram.Attribut>> Cliente.serialversionuid:long =>=>=> RelationalSchema.Column>> cliente.serialversionuid;
ClassDiagram.Attribut>> Cliente.id:int =>=>=> RelationalSchema.Column>> cliente.id PRIMARY KEY;
ClassDiagram.Attribut>> Cliente.nome:String =>=>=> RelationalSchema.Column>> cliente.nome;
ClassDiagram.Attribut>> Cliente.cpf:String =>=>=> RelationalSchema.Column>> cliente.cpf;
ClassDiagram.Attribut>> Cliente.uf:String =>=>=> RelationalSchema.Column>> cliente.uf;
ClassDiagram.Attribut>> Cliente.dataatualizacao:Date =>=>=> RelationalSchema.Column>> cliente.dataatualizacao;
ClassDiagram.Attribut>> Transacao.serialversionuid:long =>=>=> RelationalSchema.Column>> transacao.serialversionuid;
ClassDiagram.Attribut>> Transacao.id:int =>=>=> RelationalSchema.Column>> transacao.id PRIMARY KEY;
ClassDiagram.Attribut>> Transacao.datatransacao:Date =>=>=> RelationalSchema.Column>> transacao.datatransacao;
ClassDiagram.Attribut>> Transacao.cnpj:String =>=>=> RelationalSchema.Column>> transacao.cnpj;
ClassDiagram.Attribut>> Transacao.valor:Double =>=>=> RelationalSchema.Column>> transacao.valor;
ClassDiagram.Attribut>> Transacao.qdtparcelas:int =>=>=> RelationalSchema.Column>> transacao.qdtparcelas;
ClassDiagram.Attribut>> Transacao.juros:Double =>=>=> RelationalSchema.Column>> transacao.juros;
Many-To-Many relationship between ClassDiagram.Class>>Usuario  and ClassDiagram.Class>>list<regra>: usuario_regra(usuario_id:Usuario [PK] #FK to Usuario,regra_id:list<regra> [PK] #FK to list<regra>);
Many-To-One relationship from ClassDiagram.Class>>Cartao  to ClassDiagram.Class>>cliente represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-Many relationship from ClassDiagram.Class>>Cartao  to ClassDiagram.Class>>List<Transacao>;
One-To-Many relationship from ClassDiagram.Class>>Cliente  to ClassDiagram.Class>>List<Cartao>;
Many-To-One relationship from ClassDiagram.Class>>Transacao  to ClassDiagram.Class>>cartao represented by ClassDiagram.Atrribute>>GeneratedName;
