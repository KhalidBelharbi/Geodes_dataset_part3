ClassDiagram.Class>> Invoice =>=>=> RelationalSchema.Table>> invoice;
ClassDiagram.Class>> MobileAccessory =>=>=> RelationalSchema.Table>> mobileaccessory;
ClassDiagram.Class>> MobilePlan =>=>=> RelationalSchema.Table>> mobileplan;
ClassDiagram.Class>> PlanOffer =>=>=> RelationalSchema.Table>> planoffer;
ClassDiagram.Class>> Customer =>=>=> RelationalSchema.Table>> customer;
ClassDiagram.Class>> MobilePhone =>=>=> RelationalSchema.Table>> mobilephone;
ClassDiagram.Class>> Image =>=>=> RelationalSchema.Table>> image;
ClassDiagram.Class>> AppUser =>=>=> RelationalSchema.Table>> appuser;
ClassDiagram.Attribut>> Invoice.planid:Long =>=>=> RelationalSchema.Column>> invoice.planid;
ClassDiagram.Attribut>> Invoice.custid:Long =>=>=> RelationalSchema.Column>> invoice.custid;
ClassDiagram.Attribut>> Invoice.discount:Long =>=>=> RelationalSchema.Column>> invoice.discount;
ClassDiagram.Attribut>> Invoice.totalamt:Long =>=>=> RelationalSchema.Column>> invoice.totalamt;
ClassDiagram.Attribut>> Invoice.netamt:Long =>=>=> RelationalSchema.Column>> invoice.netamt;
ClassDiagram.Attribut>> Invoice.paymethod:String =>=>=> RelationalSchema.Column>> invoice.paymethod;
ClassDiagram.Attribut>> Invoice.active:Boolean =>=>=> RelationalSchema.Column>> invoice.active;
ClassDiagram.Attribut>> MobileAccessory.price:int =>=>=> RelationalSchema.Column>> mobileaccessory.price;
ClassDiagram.Attribut>> MobileAccessory.active:int =>=>=> RelationalSchema.Column>> mobileaccessory.active;
ClassDiagram.Attribut>> MobileAccessory.pricecurr:String =>=>=> RelationalSchema.Column>> mobileaccessory.pricecurr;
ClassDiagram.Attribut>> MobileAccessory.imageid:Long =>=>=> RelationalSchema.Column>> mobileaccessory.imageid;
ClassDiagram.Attribut>> MobilePlan.roidata:String =>=>=> RelationalSchema.Column>> mobileplan.roidata;
ClassDiagram.Attribut>> MobilePlan.roifreecall:String =>=>=> RelationalSchema.Column>> mobileplan.roifreecall;
ClassDiagram.Attribut>> MobilePlan.roifreetext:String =>=>=> RelationalSchema.Column>> mobileplan.roifreetext;
ClassDiagram.Attribut>> MobilePlan.eudata:String =>=>=> RelationalSchema.Column>> mobileplan.eudata;
ClassDiagram.Attribut>> MobilePlan.eufreecall:String =>=>=> RelationalSchema.Column>> mobileplan.eufreecall;
ClassDiagram.Attribut>> MobilePlan.eufreetext:String =>=>=> RelationalSchema.Column>> mobileplan.eufreetext;
ClassDiagram.Attribut>> MobilePlan.ukdata:String =>=>=> RelationalSchema.Column>> mobileplan.ukdata;
ClassDiagram.Attribut>> MobilePlan.ukfreecall:String =>=>=> RelationalSchema.Column>> mobileplan.ukfreecall;
ClassDiagram.Attribut>> MobilePlan.ukfreetext:String =>=>=> RelationalSchema.Column>> mobileplan.ukfreetext;
ClassDiagram.Attribut>> MobilePlan.intdata:String =>=>=> RelationalSchema.Column>> mobileplan.intdata;
ClassDiagram.Attribut>> MobilePlan.intfreecall:String =>=>=> RelationalSchema.Column>> mobileplan.intfreecall;
ClassDiagram.Attribut>> MobilePlan.intfreetext:String =>=>=> RelationalSchema.Column>> mobileplan.intfreetext;
ClassDiagram.Attribut>> MobilePlan.canadaroaming:String =>=>=> RelationalSchema.Column>> mobileplan.canadaroaming;
ClassDiagram.Attribut>> MobilePlan.usaroaming:String =>=>=> RelationalSchema.Column>> mobileplan.usaroaming;
ClassDiagram.Attribut>> MobilePlan.reward:String =>=>=> RelationalSchema.Column>> mobileplan.reward;
ClassDiagram.Attribut>> MobilePlan.contract:String =>=>=> RelationalSchema.Column>> mobileplan.contract;
ClassDiagram.Attribut>> MobilePlan.discount:String =>=>=> RelationalSchema.Column>> mobileplan.discount;
ClassDiagram.Attribut>> MobilePlan.price:int =>=>=> RelationalSchema.Column>> mobileplan.price;
ClassDiagram.Attribut>> MobilePlan.pricecurr:String =>=>=> RelationalSchema.Column>> mobileplan.pricecurr;
ClassDiagram.Attribut>> MobilePlan.active:int =>=>=> RelationalSchema.Column>> mobileplan.active;
ClassDiagram.Attribut>> PlanOffer.valueperc:int =>=>=> RelationalSchema.Column>> planoffer.valueperc;
ClassDiagram.Attribut>> PlanOffer.valuefixed:int =>=>=> RelationalSchema.Column>> planoffer.valuefixed;
ClassDiagram.Attribut>> PlanOffer.active:int =>=>=> RelationalSchema.Column>> planoffer.active;
ClassDiagram.Attribut>> Customer.id:Long =>=>=> RelationalSchema.Column>> customer.id PRIMARY KEY;
ClassDiagram.Attribut>> Customer.firstname:String =>=>=> RelationalSchema.Column>> customer.firstname;
ClassDiagram.Attribut>> Customer.middlename:String =>=>=> RelationalSchema.Column>> customer.middlename;
ClassDiagram.Attribut>> Customer.lastname:String =>=>=> RelationalSchema.Column>> customer.lastname;
ClassDiagram.Attribut>> Customer.address1:String =>=>=> RelationalSchema.Column>> customer.address1;
ClassDiagram.Attribut>> Customer.address2:String =>=>=> RelationalSchema.Column>> customer.address2;
ClassDiagram.Attribut>> Customer.address3:String =>=>=> RelationalSchema.Column>> customer.address3;
ClassDiagram.Attribut>> Customer.county:String =>=>=> RelationalSchema.Column>> customer.county;
ClassDiagram.Attribut>> Customer.country:String =>=>=> RelationalSchema.Column>> customer.country;
ClassDiagram.Attribut>> Customer.planstart:String =>=>=> RelationalSchema.Column>> customer.planstart;
ClassDiagram.Attribut>> Customer.planend:String =>=>=> RelationalSchema.Column>> customer.planend;
ClassDiagram.Attribut>> Customer.homephone:String =>=>=> RelationalSchema.Column>> customer.homephone;
ClassDiagram.Attribut>> Customer.mobilephone:String =>=>=> RelationalSchema.Column>> customer.mobilephone;
ClassDiagram.Attribut>> Customer.email:String =>=>=> RelationalSchema.Column>> customer.email;
ClassDiagram.Attribut>> Customer.email2:String =>=>=> RelationalSchema.Column>> customer.email2;
ClassDiagram.Attribut>> Customer.active:Boolean =>=>=> RelationalSchema.Column>> customer.active;
ClassDiagram.Attribut>> MobilePhone.model:String =>=>=> RelationalSchema.Column>> mobilephone.model;
ClassDiagram.Attribut>> MobilePhone.memory:String =>=>=> RelationalSchema.Column>> mobilephone.memory;
ClassDiagram.Attribut>> MobilePhone.storage:String =>=>=> RelationalSchema.Column>> mobilephone.storage;
ClassDiagram.Attribut>> MobilePhone.color:String =>=>=> RelationalSchema.Column>> mobilephone.color;
ClassDiagram.Attribut>> MobilePhone.network:String =>=>=> RelationalSchema.Column>> mobilephone.network;
ClassDiagram.Attribut>> MobilePhone.display:String =>=>=> RelationalSchema.Column>> mobilephone.display;
ClassDiagram.Attribut>> MobilePhone.maincamera:String =>=>=> RelationalSchema.Column>> mobilephone.maincamera;
ClassDiagram.Attribut>> MobilePhone.frontcamera:String =>=>=> RelationalSchema.Column>> mobilephone.frontcamera;
ClassDiagram.Attribut>> MobilePhone.os:String =>=>=> RelationalSchema.Column>> mobilephone.os;
ClassDiagram.Attribut>> MobilePhone.price:int =>=>=> RelationalSchema.Column>> mobilephone.price;
ClassDiagram.Attribut>> MobilePhone.pricecurr:String =>=>=> RelationalSchema.Column>> mobilephone.pricecurr;
ClassDiagram.Attribut>> MobilePhone.active:int =>=>=> RelationalSchema.Column>> mobilephone.active;
ClassDiagram.Attribut>> MobilePhone.imageid:Long =>=>=> RelationalSchema.Column>> mobilephone.imageid;
ClassDiagram.Attribut>> Image.image:byte =>=>=> RelationalSchema.Column>> image.image;
ClassDiagram.Attribut>> AppUser.id:Long =>=>=> RelationalSchema.Column>> appuser.id PRIMARY KEY;
ClassDiagram.Attribut>> AppUser.login:String =>=>=> RelationalSchema.Column>> appuser.login;
ClassDiagram.Attribut>> AppUser.password:String =>=>=> RelationalSchema.Column>> appuser.password;
ClassDiagram.Attribut>> AppUser.createonly:String =>=>=> RelationalSchema.Column>> appuser.createonly;
ClassDiagram.Attribut>> AppUser.readonly:String =>=>=> RelationalSchema.Column>> appuser.readonly;
ClassDiagram.Attribut>> AppUser.updateonly:String =>=>=> RelationalSchema.Column>> appuser.updateonly;
ClassDiagram.Attribut>> AppUser.active:Boolean =>=>=> RelationalSchema.Column>> appuser.active;
Many-To-Many relationship between ClassDiagram.Class>>MobilePlan  and ClassDiagram.Class>>list<mobilephone>: plan_phone(plan_id:MobilePlan [PK] #FK to MobilePlan,phone_id:list<mobilephone> [PK] #FK to list<mobilephone>);
Many-To-Many relationship between ClassDiagram.Class>>MobilePlan  and ClassDiagram.Class>>list<planoffer>: plan_phone(plan_id:MobilePlan [PK] #FK to MobilePlan,phone_id:list<mobilephone> [PK] #FK to list<mobilephone>);plan_offer(plan_id:MobilePlan [PK] #FK to MobilePlan,offer_id:list<planoffer> [PK] #FK to list<planoffer>);
null: plan_phone(plan_id:MobilePlan [PK] #FK to MobilePlan,phone_id:list<mobilephone> [PK] #FK to list<mobilephone>);plan_offer(plan_id:MobilePlan [PK] #FK to MobilePlan,offer_id:list<planoffer> [PK] #FK to list<planoffer>);
One-To-Many relationship from ClassDiagram.Class>>Customer  to ClassDiagram.Class>>List<Invoice>;
Many-To-Many relationship between ClassDiagram.Class>>Customer  and ClassDiagram.Class>>list<mobileplan>: customer_plan(cust_id:Customer [PK] #FK to Customer,plan_id:list<mobileplan> [PK] #FK to list<mobileplan>);
Many-To-Many relationship between ClassDiagram.Class>>MobilePhone  and ClassDiagram.Class>>list<mobileaccessory>: phone_accessory(phone_id:MobilePhone [PK] #FK to MobilePhone,accessory_id:list<mobileaccessory> [PK] #FK to list<mobileaccessory>);
