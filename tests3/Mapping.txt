ClassDiagram.Class>> InheritC =>=>=> RelationalSchema.Table>> inheritc;
ClassDiagram.Class>> InheritA1 =>=>=> RelationalSchema.Table>> inherita1;
ClassDiagram.Class>> InheritA2a =>=>=> RelationalSchema.Table>> inherita2a;
ClassDiagram.Class>> InheritB1 =>=>=> RelationalSchema.Table>> inheritb1;
ClassDiagram.Class>> InheritC1 =>=>=> RelationalSchema.Table>> inheritc1;
ClassDiagram.Class>> InheritB =>=>=> RelationalSchema.Table>> inheritb;
ClassDiagram.Class>> InheritA2 =>=>=> RelationalSchema.Table>> inherita2;
ClassDiagram.Class>> InheritC2 =>=>=> RelationalSchema.Table>> inheritc2;
ClassDiagram.Class>> InheritA =>=>=> RelationalSchema.Table>> inherita;
ClassDiagram.Class>> InheritB2 =>=>=> RelationalSchema.Table>> inheritb2;
ClassDiagram.Class>> CollectionHolder1 =>=>=> RelationalSchema.Table>> collectionholder1;
ClassDiagram.Class>> CollectionHolder1Element =>=>=> RelationalSchema.Table>> collectionholder1element;
ClassDiagram.Class>> MapHolder1Value =>=>=> RelationalSchema.Table>> mapholder1value;
ClassDiagram.Class>> MapHolder1 =>=>=> RelationalSchema.Table>> mapholder1;
ClassDiagram.Class>> MapHolder1Key =>=>=> RelationalSchema.Table>> mapholder1key;
ClassDiagram.Class>> QueryTypeHolder =>=>=> RelationalSchema.Table>> querytypeholder;
ClassDiagram.Class>> EmbeddedCollectionOwner =>=>=> RelationalSchema.Table>> embeddedcollectionowner;
ClassDiagram.Class>> EmbeddedPCOwner =>=>=> RelationalSchema.Table>> embeddedpcowner;
ClassDiagram.Class>> EmbeddedMapOwner =>=>=> RelationalSchema.Table>> embeddedmapowner;
ClassDiagram.Class>> LoginAccount =>=>=> RelationalSchema.Table>> loginaccount;
ClassDiagram.Class>> Login =>=>=> RelationalSchema.Table>> login;
ClassDiagram.Class>> TypeHolder =>=>=> RelationalSchema.Table>> typeholder;
ClassDiagram.Class>> DateHolder =>=>=> RelationalSchema.Table>> dateholder;
ClassDiagram.Class>> CarRental =>=>=> RelationalSchema.Table>> carrental;
ClassDiagram.Class>> HireCar =>=>=> RelationalSchema.Table>> hirecar;
ClassDiagram.Class>> Account =>=>=> RelationalSchema.Table>> account;
ClassDiagram.Class>> Person =>=>=> RelationalSchema.Table>> person;
ClassDiagram.Class>> PhoneNumber =>=>=> RelationalSchema.Table>> phonenumber;
ClassDiagram.Class>> Project =>=>=> RelationalSchema.Table>> project;
ClassDiagram.Class>> Manager =>=>=> RelationalSchema.Table>> manager;
ClassDiagram.Class>> Department =>=>=> RelationalSchema.Table>> department;
ClassDiagram.Class>> Employee =>=>=> RelationalSchema.Table>> employee;
ClassDiagram.Attribut>> InheritC.id:long =>=>=> RelationalSchema.Column>> inheritc.id PRIMARY KEY;
ClassDiagram.Attribut>> InheritC.name:String =>=>=> RelationalSchema.Column>> inheritc.name;
ClassDiagram.Attribut>> InheritA1.name1:String =>=>=> RelationalSchema.Column>> inherita1.name1;
ClassDiagram.Attribut>> InheritA2a.name2a:String =>=>=> RelationalSchema.Column>> inherita2a.name2a;
ClassDiagram.Attribut>> InheritB1.name1:String =>=>=> RelationalSchema.Column>> inheritb1.name1;
ClassDiagram.Attribut>> InheritC1.name1:String =>=>=> RelationalSchema.Column>> inheritc1.name1;
ClassDiagram.Attribut>> InheritB.id:long =>=>=> RelationalSchema.Column>> inheritb.id PRIMARY KEY;
ClassDiagram.Attribut>> InheritB.name:String =>=>=> RelationalSchema.Column>> inheritb.name;
ClassDiagram.Attribut>> InheritA2.name2:String =>=>=> RelationalSchema.Column>> inherita2.name2;
ClassDiagram.Attribut>> InheritC2.name2:String =>=>=> RelationalSchema.Column>> inheritc2.name2;
ClassDiagram.Attribut>> InheritA.id:long =>=>=> RelationalSchema.Column>> inherita.id PRIMARY KEY;
ClassDiagram.Attribut>> InheritA.name:String =>=>=> RelationalSchema.Column>> inherita.name;
ClassDiagram.Attribut>> InheritB2.name2:String =>=>=> RelationalSchema.Column>> inheritb2.name2;
ClassDiagram.Attribut>> CollectionHolder1.id:long =>=>=> RelationalSchema.Column>> collectionholder1.id PRIMARY KEY;
ClassDiagram.Attribut>> CollectionHolder1.//elementcollectionwithdefinednamingscollbasic1:Collection<String> =>=>=> RelationalSchema.Column>> collectionholder1.//elementcollectionwithdefinednamingscollbasic1;
ClassDiagram.Attribut>> CollectionHolder1.//elementcollectionwithdefaultnamingscollbasic2:Collection<String> =>=>=> RelationalSchema.Column>> collectionholder1.//elementcollectionwithdefaultnamingscollbasic2;
ClassDiagram.Attribut>> CollectionHolder1Element.id:long =>=>=> RelationalSchema.Column>> collectionholder1element.id PRIMARY KEY;
ClassDiagram.Attribut>> CollectionHolder1Element.name:String =>=>=> RelationalSchema.Column>> collectionholder1element.name;
ClassDiagram.Attribut>> MapHolder1Value.id:long =>=>=> RelationalSchema.Column>> mapholder1value.id PRIMARY KEY;
ClassDiagram.Attribut>> MapHolder1Value.name:String =>=>=> RelationalSchema.Column>> mapholder1value.name;
ClassDiagram.Attribut>> MapHolder1.id:long =>=>=> RelationalSchema.Column>> mapholder1.id PRIMARY KEY;
ClassDiagram.Attribut>> MapHolder1.properties:Map<String,String> =>=>=> RelationalSchema.Column>> mapholder1.properties;
ClassDiagram.Attribut>> MapHolder1.properties2:Map<String,String> =>=>=> RelationalSchema.Column>> mapholder1.properties2;
ClassDiagram.Attribut>> MapHolder1Key.id:long =>=>=> RelationalSchema.Column>> mapholder1key.id PRIMARY KEY;
ClassDiagram.Attribut>> MapHolder1Key.name:String =>=>=> RelationalSchema.Column>> mapholder1key.name;
ClassDiagram.Attribut>> QueryTypeHolder.id:long =>=>=> RelationalSchema.Column>> querytypeholder.id PRIMARY KEY;
ClassDiagram.Attribut>> QueryTypeHolder.value:double =>=>=> RelationalSchema.Column>> querytypeholder.value;
ClassDiagram.Attribut>> QueryTypeHolder.value:long =>=>=> RelationalSchema.Column>> querytypeholder.value;
ClassDiagram.Attribut>> QueryTypeHolder.value:String =>=>=> RelationalSchema.Column>> querytypeholder.value;
ClassDiagram.Attribut>> EmbeddedCollectionOwner.id:long =>=>=> RelationalSchema.Column>> embeddedcollectionowner.id PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedCollectionOwner.collembedded:Set<EmbeddedCollElement> =>=>=> RelationalSchema.Column>> embeddedcollectionowner.collembedded;
ClassDiagram.Attribut>> EmbeddedCollectionOwner.collembeddedoverride:Set<EmbeddedCollElement> =>=>=> RelationalSchema.Column>> embeddedcollectionowner.collembeddedoverride;
ClassDiagram.Attribut>> EmbeddedPCOwner.id:long =>=>=> RelationalSchema.Column>> embeddedpcowner.id PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedPCOwner.pcembedded:EmbeddedPC =>=>=> RelationalSchema.Column>> embeddedpcowner.pcembedded;
ClassDiagram.Attribut>> EmbeddedPCOwner.pcembeddedoverride:EmbeddedPC =>=>=> RelationalSchema.Column>> embeddedpcowner.pcembeddedoverride;
ClassDiagram.Attribut>> EmbeddedMapOwner.id:long =>=>=> RelationalSchema.Column>> embeddedmapowner.id PRIMARY KEY;
ClassDiagram.Attribut>> EmbeddedMapOwner.mapembeddedvalue:Map<String,EmbeddedMapValue> =>=>=> RelationalSchema.Column>> embeddedmapowner.mapembeddedvalue;
ClassDiagram.Attribut>> EmbeddedMapOwner.mapembeddedvalueoverride:Map<String,EmbeddedMapValue> =>=>=> RelationalSchema.Column>> embeddedmapowner.mapembeddedvalueoverride;
ClassDiagram.Attribut>> EmbeddedMapOwner.mapembeddedkey:Map<EmbeddedMapKey,String> =>=>=> RelationalSchema.Column>> embeddedmapowner.mapembeddedkey;
ClassDiagram.Attribut>> EmbeddedMapOwner.mapembeddedkeyoverride:Map<EmbeddedMapKey,String> =>=>=> RelationalSchema.Column>> embeddedmapowner.mapembeddedkeyoverride;
ClassDiagram.Attribut>> LoginAccount.id:long =>=>=> RelationalSchema.Column>> loginaccount.id PRIMARY KEY;
ClassDiagram.Attribut>> LoginAccount.firstname:String =>=>=> RelationalSchema.Column>> loginaccount.firstname;
ClassDiagram.Attribut>> LoginAccount.lastname:String =>=>=> RelationalSchema.Column>> loginaccount.lastname;
ClassDiagram.Attribut>> Login.id:long =>=>=> RelationalSchema.Column>> login.id PRIMARY KEY;
ClassDiagram.Attribut>> Login.username:String =>=>=> RelationalSchema.Column>> login.username;
ClassDiagram.Attribut>> Login.password:String =>=>=> RelationalSchema.Column>> login.password;
ClassDiagram.Attribut>> TypeHolder.//pkwhenusingappidid:long =>=>=> RelationalSchema.Column>> typeholder.//pkwhenusingappidid PRIMARY KEY;
ClassDiagram.Attribut>> TypeHolder.1:String =>=>=> RelationalSchema.Column>> typeholder.1;
ClassDiagram.Attribut>> TypeHolder.2:String =>=>=> RelationalSchema.Column>> typeholder.2;
ClassDiagram.Attribut>> TypeHolder.1:char =>=>=> RelationalSchema.Column>> typeholder.1;
ClassDiagram.Attribut>> DateHolder.id:long =>=>=> RelationalSchema.Column>> dateholder.id PRIMARY KEY;
ClassDiagram.Attribut>> DateHolder.datefield:java.util.Date =>=>=> RelationalSchema.Column>> dateholder.datefield;
ClassDiagram.Attribut>> DateHolder.datefield2:java.util.Date =>=>=> RelationalSchema.Column>> dateholder.datefield2;
ClassDiagram.Attribut>> CarRental.customerid:long =>=>=> RelationalSchema.Column>> carrental.customerid PRIMARY KEY;
ClassDiagram.Attribut>> CarRental.start:Date =>=>=> RelationalSchema.Column>> carrental.start;
ClassDiagram.Attribut>> CarRental.end:Date =>=>=> RelationalSchema.Column>> carrental.end;
ClassDiagram.Attribut>> HireCar.registrationid:long =>=>=> RelationalSchema.Column>> hirecar.registrationid PRIMARY KEY;
ClassDiagram.Attribut>> HireCar.make:String =>=>=> RelationalSchema.Column>> hirecar.make;
ClassDiagram.Attribut>> HireCar.model:String =>=>=> RelationalSchema.Column>> hirecar.model;
ClassDiagram.Attribut>> Account.serialversionuid:long =>=>=> RelationalSchema.Column>> account.serialversionuid;
ClassDiagram.Attribut>> Account.//pkifappidid:long =>=>=> RelationalSchema.Column>> account.//pkifappidid PRIMARY KEY;
ClassDiagram.Attribut>> Account.username:String =>=>=> RelationalSchema.Column>> account.username;
ClassDiagram.Attribut>> Account.enabled:boolean =>=>=> RelationalSchema.Column>> account.enabled;
ClassDiagram.Attribut>> Person.serialversionuid:long =>=>=> RelationalSchema.Column>> person.serialversionuid;
ClassDiagram.Attribut>> Person.//partofpkwithappidpersonnum:long =>=>=> RelationalSchema.Column>> person.//partofpkwithappidpersonnum PRIMARY KEY;
ClassDiagram.Attribut>> Person.//partofpkwithappidglobalnum:String =>=>=> RelationalSchema.Column>> person.//partofpkwithappidglobalnum PRIMARY KEY;
ClassDiagram.Attribut>> Person.firstname:String =>=>=> RelationalSchema.Column>> person.firstname;
ClassDiagram.Attribut>> Person.lastname:String =>=>=> RelationalSchema.Column>> person.lastname;
ClassDiagram.Attribut>> Person.emailaddress:String =>=>=> RelationalSchema.Column>> person.emailaddress;
ClassDiagram.Attribut>> Person.age:int =>=>=> RelationalSchema.Column>> person.age;
ClassDiagram.Attribut>> PhoneNumber.//pkwhenusingappidid:long =>=>=> RelationalSchema.Column>> phonenumber.//pkwhenusingappidid PRIMARY KEY;
ClassDiagram.Attribut>> PhoneNumber.name:String =>=>=> RelationalSchema.Column>> phonenumber.name;
ClassDiagram.Attribut>> PhoneNumber.number:String =>=>=> RelationalSchema.Column>> phonenumber.number;
ClassDiagram.Attribut>> Project.name:String =>=>=> RelationalSchema.Column>> project.name PRIMARY KEY;
ClassDiagram.Attribut>> Project.budget:long =>=>=> RelationalSchema.Column>> project.budget;
ClassDiagram.Attribut>> Manager.serialversionuid:long =>=>=> RelationalSchema.Column>> manager.serialversionuid;
ClassDiagram.Attribut>> Department.serialversionuid:long =>=>=> RelationalSchema.Column>> department.serialversionuid;
ClassDiagram.Attribut>> Department.primarykey:DepartmentPK =>=>=> RelationalSchema.Column>> department.primarykey;
ClassDiagram.Attribut>> Department.name:String =>=>=> RelationalSchema.Column>> department.name;
ClassDiagram.Attribut>> Employee.serialversionuid:long =>=>=> RelationalSchema.Column>> employee.serialversionuid;
ClassDiagram.Attribut>> Employee.serialno:String =>=>=> RelationalSchema.Column>> employee.serialno;
ClassDiagram.Attribut>> Employee.salary:float =>=>=> RelationalSchema.Column>> employee.salary;
ClassDiagram.Attribut>> Employee.salarycurrency:String =>=>=> RelationalSchema.Column>> employee.salarycurrency;
ClassDiagram.Attribut>> Employee.yearsincompany:Integer =>=>=> RelationalSchema.Column>> employee.yearsincompany;
ClassDiagram.Attribut>> Employee./***usedforthequeryingoffields.*/firstname:String =>=>=> RelationalSchema.Column>> employee./***usedforthequeryingoffields.*/firstname;
One-To-Many relationship from ClassDiagram.Class>>CollectionHolder1  to ClassDiagram.Class>>Collection<CollectionHolder1Element>;
One-To-Many relationship from ClassDiagram.Class>>CollectionHolder1  to ClassDiagram.Class>>Collection<CollectionHolder1Element>;
One-To-Many relationship from ClassDiagram.Class>>MapHolder1  to ClassDiagram.Class>>Map<MapHolder1Key,MapHolder1Value>;
One-To-Many relationship from ClassDiagram.Class>>MapHolder1  to ClassDiagram.Class>>Map<MapHolder1Key,MapHolder1Value>;
One-To-One relationship between ClassDiagram.Class>>LoginAccount  to ClassDiagram.Class>>Login represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>CarRental  to ClassDiagram.Class>>hirecar represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Person  to ClassDiagram.Class>>person represented by ClassDiagram.Atrribute>>bestfriend;
One-To-Many relationship from ClassDiagram.Class>>Person  to ClassDiagram.Class>>Map<String,PhoneNumber>;
One-To-Many relationship from ClassDiagram.Class>>Manager  to ClassDiagram.Class>>Set<Employee>;
One-To-Many relationship from ClassDiagram.Class>>Manager  to ClassDiagram.Class>>Set<Department>;
One-To-Many relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>Set<Project>;
Many-To-One relationship from ClassDiagram.Class>>Department  to ClassDiagram.Class>>manager represented by ClassDiagram.Atrribute>>GeneratedName;
Many-To-One relationship from ClassDiagram.Class>>Employee  to ClassDiagram.Class>>manager represented by ClassDiagram.Atrribute>>GeneratedName;
One-To-One relationship between ClassDiagram.Class>>Employee  to ClassDiagram.Class>>account represented by ClassDiagram.Atrribute>>GeneratedName;
Inheritance based on SINGLE-TABLE strategy (PUSH-UP): ROOT>>InheritC  ;
Inheritance based on Table-Per-Class strategy (PUSH-DOWN): ROOT>>InheritB  SubClass>>InheritC1 SubClass>>InheritC2 ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>InheritA  ;
Inheritance based on JOINED strategy (DISTINCTION): ROOT>>Employee  ;
